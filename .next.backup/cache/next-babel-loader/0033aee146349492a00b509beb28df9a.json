{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Stack, Button, FormControl, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, useColorMode } from '@chakra-ui/core';\nimport { HStack, VStack } from '@chakra-ui/react';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed';\nexport default function Find() {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: pagePosition,\n    1: setPagePosition\n  } = useState(Number(query.start) || 0);\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    0: vaults,\n    1: setVaults\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    loaded: true\n  });\n  const {\n    0: loadingApi,\n    1: setLoadingApi\n  } = useState(false);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(query.address);\n  const {\n    0: experimental,\n    1: setExperimental\n  } = useState(query.experimental);\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    0: shouldFetchData,\n    1: setShouldFetchData\n  } = useState(false);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: q,\n    1: setQ\n  } = useState(query.q);\n  const {\n    0: temp_q,\n    1: setTempQ\n  } = useState(q || '');\n  const {\n    0: network,\n    1: setNetwork\n  } = useState(query.network || null);\n  const {\n    0: searchType,\n    1: setSearchType\n  } = useState(\"filter\");\n  const {\n    0: balanceChecks,\n    1: setBalanceChecks\n  } = useState([]);\n  const PAGE_SIZE = 20;\n\n  const getVaults = async () => {\n    console.log('getting vaults');\n\n    try {\n      const response = await fetch(EMBLEM_API + '/find/' + searchType + '?start=' + offset + '&size=' + PAGE_SIZE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          \"metadata\": {\n            \"name\": q,\n            \"description\": q\n          }\n        })\n      });\n      let jsonData = await response.json(); // if (jsonData) {\n      //   jsonData = jsonData.filter(item=>{return item.live && !item.claimedBy})\n      // }\n\n      console.log('------ vaults', jsonData);\n      jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true);\n      setVaults(vaults.concat(jsonData));\n      setState({\n        loaded: true\n      });\n      setLoadingApi(false);\n    } catch (error) {}\n  };\n\n  const fetchData = async () => {\n    console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n    setOffset(offset + PAGE_SIZE);\n    setShouldFetchData(true);\n  };\n\n  const {\n    0: acct,\n    1: setAcct\n  } = useState('');\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n  const {\n    0: chain,\n    1: setChain\n  } = useState(chainId);\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(() => {\n    if (shouldFetchData) {\n      console.log('here 1');\n      setShouldFetchData(false);\n      setLoadingApi(true);\n      getVaults();\n    } else {\n      console.log('no fetch');\n    }\n  }, [shouldFetchData]);\n  useEffect(() => {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2');\n      setShouldFetchData(true); // getVaults()\n    } else {\n      console.log('no fetch', q, vaults);\n    }\n  }, [q, vaults]);\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(item => item !== target));\n    } else {\n      setBalanceChecks(balanceChecks.concat(target));\n    }\n\n    console.log('balance checks', balanceChecks);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }) : '', __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    id: \"search-query\",\n    width: \"45%\",\n    \"aria-describedby\": \"search-query-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    maxLength: 42,\n    value: temp_q,\n    onChange: e => setTempQ(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    m: 2,\n    onClick: () => {\n      setOffset(0);\n      setState({\n        loaded: false\n      });\n      setVaults([]);\n      setQ(temp_q);\n      let loc = location.href.split('?')[0] + \"?q=\" + temp_q + \"&network=\" + network;\n      window.history.pushState(temp_q, 'Title', loc);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Search\"), __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    onChange: e => {\n      setSearchType(e.target.value);\n    },\n    defaultValue: searchType,\n    value: searchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, __jsx(Radio, {\n    isChecked: searchType == \"filter\" ? true : false,\n    value: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"Filter (AND)\"), __jsx(Radio, {\n    isChecked: searchType == \"or\" ? true : false,\n    value: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Search (OR)\"))), __jsx(FormHelperText, {\n    id: \"search-query-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, balanceChecks.length > 0 ? searchType == \"filter\" ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, \"And\") : balanceChecks.map((check, index) => {\n    return __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 32\n      }\n    }, index == 0 ? 'Search Vault Balances for' : 'for the ', check == \"name\" ? __jsx(VStack, {\n      mt: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 43\n      }\n    }, \"Asset name of \", temp_q, \" \")) : check == \"coin\" ? 'Blockchain ' : check == \"project\" ? \"Project\" : null, \" \", temp_q, \" \", balanceChecks.length - 1 == index ? null : 'or');\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"Balance Filters\"))), __jsx(CheckboxGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    value: \"name\",\n    onChange: e => {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Asset Name\"), __jsx(Checkbox, {\n    value: \"coin\",\n    onChange: e => {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, \"Blockchain\"), __jsx(Checkbox, {\n    value: \"project\",\n    onChange: e => {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \"Project\")))))), q ? __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, vaults.length ? vaults.map((vault, index) => {\n    let pieces = location.pathname.split('/');\n    pieces.pop();\n    let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    const flexSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    const redirect = function () {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    return __jsx(Box, _extends({\n      className: \"NFT newest\",\n      key: index\n    }, flexSettings, {\n      onClick: redirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      pl: 2,\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, vault.name, !vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, __jsx(Embed, {\n      className: \"d-block w-100 NFT-newest-image\",\n      url: vault.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    })), __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, vault.status == 'claimed' ? __jsx(Text, {\n      color: \"green.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 52\n      }\n    }, \"CLAIMED\") : null, __jsx(Text, {\n      fontSize: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"Id: \", vault.tokenId)));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, \"CREATE ONE HERE!\")))) : null);\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx"],"names":["Box","Flex","Text","Link","Stack","Button","FormControl","Checkbox","CheckboxGroup","Radio","RadioGroup","Input","FormHelperText","useColorMode","HStack","VStack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","InfiniteScroll","Embed","Find","query","pagePosition","setPagePosition","Number","start","account","chainId","vaults","setVaults","state","setState","loaded","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","hasMore","setHasMore","offset","setOffset","q","setQ","temp_q","setTempQ","network","setNetwork","searchType","setSearchType","balanceChecks","setBalanceChecks","PAGE_SIZE","getVaults","console","log","response","fetch","method","headers","service","body","JSON","stringify","jsonData","json","length","concat","error","fetchData","acct","setAcct","chain","setChain","addOrRemoveBalanceFilter","target","includes","filter","item","e","value","loc","location","href","split","window","history","pushState","map","check","index","textAlign","vault","pieces","pathname","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","name","private","totalValue","image"],"mappings":"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","sourcesContent":["// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, Select, useColorMode } from '@chakra-ui/core'\nimport {HStack, VStack } from '@chakra-ui/react'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n\nexport default function Find() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const [q, setQ] = useState(query.q)\n  const [temp_q, setTempQ] = useState(q || '')\n  const [network, setNetwork] = useState(query.network || null)\n  const [searchType, setSearchType] = useState(\"filter\")\n  const [balanceChecks, setBalanceChecks] = useState([])\n\n  const PAGE_SIZE = 20\n\n  const getVaults = async () => {    \n    console.log('getting vaults')\n    try {\n      const response = await fetch(EMBLEM_API + '/find/'+searchType+'?start='+offset+'&size='+PAGE_SIZE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          \"metadata\": {\n            \"name\": q,\n            \"description\": q\n          }\n        })\n      })\n      let jsonData = await response.json()\n      // if (jsonData) {\n      //   jsonData = jsonData.filter(item=>{return item.live && !item.claimedBy})\n      // }\n      console.log('------ vaults', jsonData)\n      jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true)\n      setVaults(vaults.concat(jsonData))\n      setState({ loaded: true })\n      setLoadingApi(false)\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }  \n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {      \n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {    \n    if (shouldFetchData) {\n      console.log('here 1')\n      setShouldFetchData(false)\n      setLoadingApi(true)\n      getVaults()\n    } else {\n      console.log('no fetch')\n    }\n  }, [shouldFetchData])\n\n  useEffect(() => {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2')\n      setShouldFetchData(true)\n      // getVaults()\n    } else {\n      console.log('no fetch', q, vaults)\n    }\n  }, [q, vaults])\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(item => item !== target))\n    } else {\n      setBalanceChecks(balanceChecks.concat(target))\n    }\n    console.log('balance checks',balanceChecks)\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n      {/* <Flex className=\"wtf\" width=\"100%\" align=\"center\" justifyContent=\"center\" > */}\n        <FormControl isRequired>\n          <Flex align=\"center\" justifyContent=\"center\" flexWrap=\"wrap\">\n            <Input\n              type=\"text\"\n              id=\"search-query\"\n              width='45%'\n              aria-describedby=\"search-query-helper-text\"\n              placeholder=\"0xdeadbeef\"\n              maxLength={42}\n              value={temp_q}\n              onChange={(e) =>\n                setTempQ(e.target.value)\n              }\n            />\n            <Button\n              m={2}\n              onClick={() => {\n                setOffset(0)\n                setState({ loaded: false })\n                setVaults([])                \n                setQ(temp_q)\n                let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n                window.history.pushState(temp_q, 'Title', loc);\n              }}\n            >Search\n            </Button>\n            <Stack align=\"center\" w=\"100%\" mt={3}>\n              {/* <Select w=\"45%\" placeholder=\"All Networks\" value={network}\n                onChange={(e)=>{\n                  setNetwork(e.target.value)\n                  console.log(e.target.value)\n                }}\n              >\n                <option value=\"matic\">Matic</option>\n                <option value=\"xdai\">xDai</option>\n                <option value=\"bsc\">Binance Smart Chain</option>\n                <option value=\"mainnet\">Ethereum Mainnet</option>\n                <option value=\"rinkeby\">Ethereum Rinkeby</option>\n              </Select> */}\n              <RadioGroup onChange={(e)=>{ setSearchType(e.target.value) }} defaultValue={searchType} value={searchType}>\n                <Stack spacing={4} direction=\"row\">                \n                  <Radio isChecked={searchType == \"filter\"? true : false} value=\"filter\">Filter (AND)</Radio>\n                  <Radio isChecked={searchType == \"or\"? true : false} value=\"or\">Search (OR)</Radio>\n                </Stack>\n              </RadioGroup>\n\n              <FormHelperText id=\"search-query-helper-text\">\n                <HStack>\n                  {balanceChecks.length > 0 ? (\n                    searchType == \"filter\" ? (\n                      <Text>And</Text>\n                    ) : (\n                      balanceChecks.map((check, index)=>{\n                        return <Text>{index == 0 ? ('Search Vault Balances for') : ('for the ')} \n                        {check == \"name\" ? (\n                          <VStack mt={10}><Text>Asset name of {temp_q} </Text></VStack>\n                        ): \n                        check == \"coin\" ? ('Blockchain '): check == \"project\" ? (\"Project\") : null} {temp_q} {((balanceChecks.length -1) == index) ? null : ('or')}</Text>\n                      })\n                    )\n                  ) : (\n                    <Text>Balance Filters</Text>\n                  ) }\n                </HStack>\n              </FormHelperText>\n\n              <CheckboxGroup>\n                <HStack>\n                  <Checkbox value=\"name\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Asset Name</Checkbox>\n                  <Checkbox value=\"coin\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Blockchain</Checkbox>\n                  <Checkbox value=\"project\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Project</Checkbox>\n                </HStack>\n              </CheckboxGroup>\n\n            </Stack>\n          </Flex>\n          \n          {/* <FormHelperText id=\"search-query-helper-text\">\n            Search for Emblem Vaults by: Name, Description, Type, Contents\n          </FormHelperText> */}\n        </FormControl>\n      {/* </Flex> */}\n      {q? (\n        <InfiniteScroll                \n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={fetchData}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b> \n            </p>\n          }\n        >\n          <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n            {vaults.length ? (\n              vaults.map((vault, index) => {\n                let pieces = location.pathname.split('/')\n                pieces.pop()\n                let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n                const flexSettings = {\n                  flex: '1',\n                  minW: '200px',\n                  maxW: '200px',\n                  borderWidth: '1px',\n                  // color: 'white',\n                  mx: '6',\n                  mb: '6',\n                  rounded: 'lg',\n                  overflow: 'hidden',\n                  borderColor: vault.status == 'claimed' ? 'green !important' : '',\n                  cursor: 'pointer',\n                }\n                const redirect = function () {\n                  setLoadingApi(true)\n                  location.href = url\n                }\n                return (\n                  <Box className=\"NFT newest\" key={index} {...flexSettings} onClick={redirect}>\n                    <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>\n                      {vault.name}\n                      {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                    </Text>\n                    <Stack align=\"center\">\n                      <Embed className=\"d-block w-100 NFT-newest-image\" url={vault.image}/>\n                    </Stack>\n                    <Box d=\"flex\" alignItems=\"baseline\">\n                      \n                    </Box>\n                    \n                    <Stack align=\"center\" mt={3}>\n                      {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                      <Text fontSize=\"xs\">Id: {vault.tokenId}</Text>\n                    </Stack>\n                  </Box>\n                )\n              })\n              \n            ) : (\n              <Text>\n                YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n                <Link color=\"#638cd8\" href=\"../create\">\n                  CREATE ONE HERE!\n                </Link>\n              </Text>\n            )}\n            \n          </Flex>\n        </InfiniteScroll>\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}