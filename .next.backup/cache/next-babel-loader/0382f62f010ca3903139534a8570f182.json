{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useLayoutEffect, useRef } from 'react';\nimport { Input } from '@chakra-ui/core';\nimport { escapeRegExp } from '../utils';\nvar REGEX = RegExp(\"^\\\\d*(?:\\\\\\\\[.])?\\\\d*$\"); // match escaped \".\" characters in a non-capturing group\n\nexport default function AmountInput(_ref) {\n  var controlled = _ref.controlled,\n      isInvalid = _ref.isInvalid,\n      isDisabled = _ref.isDisabled,\n      value = _ref.value,\n      _onChange = _ref.onChange;\n  var ref = useRef(null);\n  useLayoutEffect(function () {\n    if (ref.current) ref.current.size = Math.max(1, value.length);\n  });\n  return __jsx(Input, {\n    ref: ref,\n    value: value,\n    onChange: function onChange(event) {\n      // if the user is typing, interpret commas as decimal separators and replace them with periods\n      var value = event.target.value.replace(/,/g, !controlled ? '' : '.');\n\n      if (value === '' || REGEX.test(escapeRegExp(value))) {\n        _onChange(value);\n      }\n    } // chakra options\n    ,\n    isDisabled: isDisabled,\n    _disabled: {\n      opacity: 0.4,\n      cursor: 'not-allowed'\n    },\n    isInvalid: isInvalid,\n    borderColor: !isInvalid ? 'transparent !important' : undefined,\n    isRequired: true,\n    variant: \"flushed\",\n    fontSize: \"3xl\",\n    textAlign: \"center\" // universal input options\n    ,\n    inputMode: \"decimal\",\n    title: \"Token Amount\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\" // text-specific options\n    ,\n    type: \"text\",\n    placeholder: \"0\",\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}