{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\nimport { Generic } from './embed/Generic';\nimport Youtube from './embed/Youtube';\nimport Vimeo from './embed/Vimeo';\n\nvar getIPFSImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(hash) {\n    var responce, jsonData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gateway.ipfs.io/ipfs/' + hash, {\n              method: 'GET',\n              headers: {// redirect:'follow'\n              }\n            });\n\n          case 2:\n            responce = _context.sent;\n            _context.next = 5;\n            return responce.text();\n\n          case 5:\n            jsonData = _context.sent;\n\n            if (!jsonData.includes(\"data:image\")) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", jsonData);\n\n          case 10:\n            return _context.abrupt(\"return\", 'https://gateway.ipfs.io/ipfs/' + hash);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIPFSImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport var Embed = /*#__PURE__*/function (_Component) {\n  _inherits(Embed, _Component);\n\n  var _super = _createSuper(Embed);\n\n  function Embed() {\n    _classCallCheck(this, Embed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Embed, [{\n    key: \"render\",\n    value: function render() {\n      var url = this.props.url || \"\";\n      var classIdentifier = getRandomInt(999999999);\n      url = url.replace(\"&framed=true\", \"\");\n\n      if (url.includes('ipfs://')) {\n        getIPFSImage(url.replace('ipfs://', '')).then(function (result) {\n          if (result.includes('data:image')) {\n            var preview = document.querySelector('img.' + classIdentifier);\n            preview.src = result;\n            url = result;\n          }\n        });\n        url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/');\n      }\n\n      return __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }) : url.includes('clara.io/') ? __jsx(Clara, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }) : url.includes('audius.co/') ? __jsx(Audius, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }) : url.includes('youtube.com') ? __jsx(Youtube, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }) : url.includes('vimeo.com') ? __jsx(Vimeo, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') || url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') || url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? __jsx(Image, {\n        p: \"20px\",\n        h: \"100%\",\n        className: (this.props.className || \"d-block w-100\") + \" \" + classIdentifier,\n        src: url,\n        width: \"250px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }) : __jsx(Generic, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Embed;\n}(Component);\nexport default Embed;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx"],"names":["React","Component","Image","SketchFab","ShaderToy","Bandcamp","SoundCloud","Clyp","Sketchup","Clara","MyMiniFactory","Audius","Generic","Youtube","Vimeo","getIPFSImage","hash","fetch","method","headers","responce","text","jsonData","includes","getRandomInt","max","Math","floor","random","Embed","url","props","classIdentifier","replace","then","result","preview","document","querySelector","src","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validImage } from '../utils'\nimport { Image } from '@chakra-ui/core'\nimport SketchFab from './embed/SketchFab'\nimport ShaderToy from './embed/ShaderToy'\nimport Bandcamp from './embed/Bandcamp'\nimport SoundCloud from './embed/SoundCloud'\nimport Clyp from './embed/Clyp'\nimport Sketchup from './embed/Sketchup'\nimport Clara from './embed/Clara'\nimport MyMiniFactory from './embed/MyMiniFactory'\nimport { Audius } from './embed/Audius'\nimport { Generic } from './embed/Generic'\nimport Youtube from './embed/Youtube'\nimport Vimeo from './embed/Vimeo'\n\ntype EmbedProps = {\n  url: string,\n  className?: string\n}\n\nconst getIPFSImage = async function(hash){\n  // alert(0)\n  const responce = await fetch('https://gateway.ipfs.io/ipfs/'+hash, {\n    method: 'GET',\n    headers: {\n      // redirect:'follow'\n    },\n  })\n  let jsonData = await responce.text()\n  // setVaultImage(jsonData) \n  // const preview = document.querySelector('img.d-block') as HTMLImageElement\n  if (jsonData.includes(\"data:image\")) {\n    // preview.src = jsonData\n    return jsonData\n  } else {\n    // preview.src = 'https://gateway.ipfs.io/ipfs/'+hash\n    return 'https://gateway.ipfs.io/ipfs/'+hash\n  }\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport class Embed extends Component<EmbedProps> {\n  render() {\n    let url = this.props.url || \"\"\n    let classIdentifier = getRandomInt(999999999)\n    url = url.replace(\"&framed=true\", \"\")\n    if (url.includes('ipfs://')) {\n      getIPFSImage(url.replace('ipfs://','')).then((result)=>{\n        if (result.includes('data:image')) {\n          const preview = document.querySelector('img.'+classIdentifier) as HTMLImageElement\n          preview.src = result\n          url = result\n        }\n      })\n    url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')      \n    }\n    return (\n      <>\n        {url.includes('sketchfab.com/') ? (\n          <SketchFab\n            url={url}\n          />\n        ) : url.includes('shadertoy.com/') ? (\n          <ShaderToy\n            url={url}\n          />\n        ) : url.includes('bandcamp.com/') ? (\n          <Bandcamp\n            url={url}\n          />\n        ) : url.includes('soundcloud.com/') ? (\n          <SoundCloud\n            url={url}\n          />\n        ) : url.includes('clyp.it/') ? (\n          <Clyp\n            url={url}\n          />\n        ) : url.includes('sketchup.com/') ? (\n          <Sketchup\n            url={url}\n          />\n        ) : url.includes('clara.io/') ? (\n          <Clara\n            url={url}\n          />\n        ) : url.includes('myminifactory.com/') ? (\n          <MyMiniFactory\n            url={url}\n          />\n        ) : url.includes('audius.co/') ? (\n          <Audius\n            url={url}\n          />\n        ) : url.includes('youtube.com') ? (\n          <Youtube\n            url={url}\n          />\n        ) : url.includes('vimeo.com') ? (\n          <Vimeo\n            url={url}\n          />\n        ) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') ||  url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') ||  url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? (\n              <Image\n                p={\"20px\"}\n                h={\"100%\"}\n                className={(this.props.className || \"d-block w-100\") + \" \"+classIdentifier}\n                src={url}\n                width=\"250px\"\n              />\n        ) : (\n          <Generic\n            url={url}\n          />\n        )\n          }\n      </>\n    )\n  }\n}\n\nexport default Embed\n"]},"metadata":{},"sourceType":"module"}