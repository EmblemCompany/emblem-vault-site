{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TokenLogo.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { Image, Icon } from '@chakra-ui/core';\nimport { WETH } from '@uniswap/sdk';\nlet BROKEN = {};\nexport default function TokenLogo({\n  token,\n  size\n}) {\n  var _BROKEN$token$chainId;\n\n  let src;\n\n  if (token.equals(WETH[token.chainId])) {\n    src = 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png';\n  } else if (token.name === \"Circuits of Value\") {\n    src = \"https://raw.githubusercontent.com/EmblemCompany/Coval-Site/master/public/coval-logo.png\"; //\"https://circuitsofvalue.com/public/coval-logo.png\"\n  } else {\n    src = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`;\n  }\n\n  const {\n    1: setDummy\n  } = useState(0);\n\n  if (!((_BROKEN$token$chainId = BROKEN[token.chainId]) !== null && _BROKEN$token$chainId !== void 0 && _BROKEN$token$chainId[token.address])) {\n    return __jsx(Image, {\n      src: src,\n      minHeight: size,\n      maxHeight: size,\n      maxWidth: size,\n      minWidth: size,\n      objectFit: \"contain\",\n      onError: () => {\n        var _BROKEN;\n\n        BROKEN = _objectSpread(_objectSpread({}, BROKEN), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_BROKEN = BROKEN) === null || _BROKEN === void 0 ? void 0 : _BROKEN[token.chainId]), {}, {\n            [token.address]: true\n          })\n        });\n        setDummy(dummy => dummy + 1);\n      },\n      ignoreFallback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return __jsx(Icon, {\n      width: size,\n      height: size,\n      name: \"question-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n}\nlet SWATCHES = {};\nexport function TokenLogoColor({\n  token,\n  children\n}) {\n  var _BROKEN$token$chainId3, _SWATCHES$token$chain2;\n\n  const {\n    1: setDummy\n  } = useState(0);\n  useEffect(() => {\n    var _BROKEN$token$chainId2, _SWATCHES$token$chain;\n\n    if (!!token && !token.equals(WETH[token.chainId]) && !((_BROKEN$token$chainId2 = BROKEN[token.chainId]) !== null && _BROKEN$token$chainId2 !== void 0 && _BROKEN$token$chainId2[token.address]) && !((_SWATCHES$token$chain = SWATCHES[token.chainId]) !== null && _SWATCHES$token$chain !== void 0 && _SWATCHES$token$chain[token.address])) {\n      let stale = false;\n      import('node-vibrant').then(({\n        default: Vibrant\n      }) => Vibrant.from(`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`).getPalette().then(palette => {\n        var _SWATCHES;\n\n        SWATCHES = _objectSpread(_objectSpread({}, SWATCHES), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_SWATCHES = SWATCHES) === null || _SWATCHES === void 0 ? void 0 : _SWATCHES[token.chainId]), {}, {\n            [token.address]: palette.Vibrant\n          })\n        });\n\n        if (!stale) {\n          setDummy(dummy => dummy + 1);\n        }\n      }).catch(() => {\n        var _BROKEN2;\n\n        BROKEN = _objectSpread(_objectSpread({}, BROKEN), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_BROKEN2 = BROKEN) === null || _BROKEN2 === void 0 ? void 0 : _BROKEN2[token.chainId]), {}, {\n            [token.address]: true\n          })\n        });\n\n        if (!stale) {\n          setDummy(dummy => dummy + 1);\n        }\n      }));\n      return () => {\n        stale = true;\n      };\n    }\n  }, [token]);\n  return children(!token ? undefined : !((_BROKEN$token$chainId3 = BROKEN[token.chainId]) !== null && _BROKEN$token$chainId3 !== void 0 && _BROKEN$token$chainId3[token.address]) ? (_SWATCHES$token$chain2 = SWATCHES[token.chainId]) === null || _SWATCHES$token$chain2 === void 0 ? void 0 : _SWATCHES$token$chain2[token.address] : undefined);\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TokenLogo.tsx"],"names":["useState","useEffect","Image","Icon","WETH","BROKEN","TokenLogo","token","size","src","equals","chainId","name","address","setDummy","dummy","SWATCHES","TokenLogoColor","children","stale","then","default","Vibrant","from","getPalette","palette","catch","undefined"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Image, Icon } from '@chakra-ui/core'\nimport { Token, WETH } from '@uniswap/sdk'\n\nlet BROKEN: { [chainId: number]: { [address: string]: boolean } } = {}\n\nexport default function TokenLogo({ token, size }: { token: Token; size: string }): JSX.Element {\n  let src: string\n  if (token.equals(WETH[token.chainId])) {\n    src =\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png'\n  } else if(token.name === \"Circuits of Value\") {\n    src = \"https://raw.githubusercontent.com/EmblemCompany/Coval-Site/master/public/coval-logo.png\"//\"https://circuitsofvalue.com/public/coval-logo.png\"\n  }\n  else {\n    src = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n  }\n\n  const [, setDummy] = useState(0)\n\n  if (!BROKEN[token.chainId]?.[token.address]) {\n    return (\n      <Image\n        src={src}\n        minHeight={size}\n        maxHeight={size}\n        maxWidth={size}\n        minWidth={size}\n        objectFit=\"contain\"\n        onError={(): void => {\n          BROKEN = {\n            ...BROKEN,\n            [token.chainId]: {\n              ...BROKEN?.[token.chainId],\n              [token.address]: true,\n            },\n          }\n          setDummy((dummy) => dummy + 1)\n        }}\n        ignoreFallback\n      />\n    )\n  } else {\n    return <Icon width={size} height={size} name=\"question-outline\" />\n  }\n}\n\ntype Swatch = { hex: string } | null\nlet SWATCHES: { [chainId: number]: { [address: string]: Swatch | undefined } } = {}\n\nexport function TokenLogoColor({\n  token,\n  children,\n}: {\n  token?: Token\n  children: (swatch: undefined | Swatch) => JSX.Element\n}): JSX.Element {\n  const [, setDummy] = useState(0)\n\n  useEffect(() => {\n    if (\n      !!token &&\n      !token.equals(WETH[token.chainId]) &&\n      !BROKEN[token.chainId]?.[token.address] &&\n      !SWATCHES[token.chainId]?.[token.address]\n    ) {\n      let stale = false\n\n      import('node-vibrant').then(({ default: Vibrant }) =>\n        Vibrant.from(\n          `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n        )\n          .getPalette()\n          .then((palette) => {\n            SWATCHES = {\n              ...SWATCHES,\n              [token.chainId]: {\n                ...SWATCHES?.[token.chainId],\n                [token.address]: palette.Vibrant,\n              },\n            }\n            if (!stale) {\n              setDummy((dummy) => dummy + 1)\n            }\n          })\n          .catch(() => {\n            BROKEN = {\n              ...BROKEN,\n              [token.chainId]: {\n                ...BROKEN?.[token.chainId],\n                [token.address]: true,\n              },\n            }\n            if (!stale) {\n              setDummy((dummy) => dummy + 1)\n            }\n          })\n      )\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [token])\n\n  return children(\n    !token ? undefined : !BROKEN[token.chainId]?.[token.address] ? SWATCHES[token.chainId]?.[token.address] : undefined\n  )\n}\n"]},"metadata":{},"sourceType":"module"}