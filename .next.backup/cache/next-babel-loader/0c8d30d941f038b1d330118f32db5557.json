{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Admin.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Stack, Button } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useState } from 'react';\nimport { VStack, Divider } from '@chakra-ui/react';\nimport { contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nimport { Contract } from '@ethersproject/contracts';\nexport default function Admin() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useState = useState({\n    loaded: true\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingApi = _useState2[0],\n      setLoadingApi = _useState2[1];\n\n  var _useState3 = useState([]),\n      stats = _useState3[0],\n      setStats = _useState3[1];\n\n  var _useState4 = useState(query.address || null),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(0),\n      offset = _useState5[0],\n      setOffset = _useState5[1];\n\n  var _useState6 = useState(10),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(address ? true : false),\n      shouldFetchData = _useState7[0],\n      setShouldFetchData = _useState7[1];\n\n  var _useState8 = useState(true),\n      hasMore = _useState8[0],\n      setHasMore = _useState8[1];\n\n  var _useState9 = useState(false),\n      buttonDisabled = _useState9[0],\n      setButtonDisabled = _useState9[1];\n\n  var _useState10 = useState([]),\n      factories = _useState10[0],\n      setFactories = _useState10[1];\n\n  var _useState11 = useState([]),\n      factoryTypes = _useState11[0],\n      setFactoryTypes = _useState11[1];\n\n  var handlerContract = useContract(contractAddresses.vaultHandlerV8[chainId], contractAddresses.vaultHandlerV8Abi, true);\n\n  // useEffect(() => {\n  //   if (state.loaded == false && !loadingApi && address) {\n  //     setLoadingApi(false)\n  //     // getPnL()\n  //   }\n  // }, [])\n  // useEffect(() => {\n  //   if (shouldFetchData && address) {\n  //     console.log(\"Should load api after setting consts\", offset)\n  //     setShouldFetchData(false)\n  //     // getPnL()\n  //   } else {\n  //     console.log(\"wtf\")\n  //   }\n  // }, [shouldFetchData, offset])\n  // const fetchDataForLazyLoad = async () =>{    \n  //   console.log('setting new offset to', offset+limit)\n  //   setOffset(offset+limit)\n  //   setShouldFetchData(true)\n  // }\n  var HandleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoadingApi(true);\n              GetContracts();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function HandleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function GetContracts() {\n    return _GetContracts.apply(this, arguments);\n  }\n\n  function _GetContracts() {\n    _GetContracts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var factories, factoryInfo;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return handlerContract.getAllRegisteredContractsOfType(8);\n\n            case 2:\n              factories = _context2.sent;\n              _context2.next = 5;\n              return getFactoryInto(factories, 0, []);\n\n            case 5:\n              factoryInfo = _context2.sent;\n              console.log(\"factoryInfo\", factoryInfo);\n              setFactories(factoryInfo);\n              setLoadingApi(false);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _GetContracts.apply(this, arguments);\n  }\n\n  function getFactoryInto(_x, _x2, _x3) {\n    return _getFactoryInto.apply(this, arguments);\n  }\n\n  function _getFactoryInto() {\n    _getFactoryInto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(factories, index, values) {\n      var factory, factoryContract, factoryType, factoryClones, detailedClones;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              factory = factories[index];\n              factoryContract = getFactoryContract(factory);\n              _context3.next = 4;\n              return factoryContract.factoryType();\n\n            case 4:\n              factoryType = _context3.sent;\n              _context3.next = 7;\n              return factoryContract.getClones();\n\n            case 7:\n              factoryClones = _context3.sent;\n              _context3.next = 10;\n              return getCloneInto(factoryClones, 0, factoryType, []);\n\n            case 10:\n              detailedClones = _context3.sent;\n              values.push({\n                type: factoryType,\n                address: factory,\n                clones: detailedClones\n              });\n\n              if (!(index + 1 == factories.length)) {\n                _context3.next = 16;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", values);\n\n            case 16:\n              return _context3.abrupt(\"return\", getFactoryInto(factories, index + 1, values));\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getFactoryInto.apply(this, arguments);\n  }\n\n  function getCloneInto(_x4, _x5, _x6, _x7) {\n    return _getCloneInto.apply(this, arguments);\n  }\n\n  function _getCloneInto() {\n    _getCloneInto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(clones, index, cloneType, values) {\n      var clone, cloneContract, cloneOwner, cloneName;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              clone = clones[index];\n              cloneContract = getCloneContract(clone, cloneType);\n              _context4.next = 4;\n              return cloneContract.owner();\n\n            case 4:\n              cloneOwner = _context4.sent;\n              _context4.next = 7;\n              return cloneContract.name();\n\n            case 7:\n              cloneName = _context4.sent;\n              console.log(\"cloneName\", cloneName);\n              values.push({\n                address: clones[index],\n                owner: cloneOwner,\n                name: cloneName\n              });\n\n              if (!(index + 1 == clones.length)) {\n                _context4.next = 14;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", values);\n\n            case 14:\n              return _context4.abrupt(\"return\", getCloneInto(clones, index + 1, cloneType, values));\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _getCloneInto.apply(this, arguments);\n  }\n\n  function getCloneContract(address, cloneType) {\n    var abi;\n\n    switch (cloneType) {\n      case \"ERC20\":\n        abi = contractAddresses.erc20Abi;\n        break;\n\n      case \"ERC721\":\n        abi = contractAddresses.erc721Abi;\n        break;\n\n      case \"ERC1155\":\n        abi = contractAddresses.erc1155Abi;\n        break;\n    }\n\n    return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n  }\n\n  function getFactoryContract(address) {\n    return new Contract(address, contractAddresses.clonableFactoryAbi, library.getSigner(account).connectUnchecked());\n  }\n\n  var mockData = {\n    \"handler\": \"0x5B8189BCC7565C03C98994b5D7BfbeB1a4296FfE\"\n  };\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: HandleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Click\"), factories.length > 0 ? factories.map(function (factory, index) {\n    return __jsx(VStack, {\n      key: \"factory-\" + index,\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      w: \"100%\",\n      \"min-width\": \"40px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      w: \"100%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, factory.type, \" Factory: \", factory.address), factory.clones.map(function (clone) {\n      return __jsx(React.Fragment, null, __jsx(Text, {\n        key: clone.address,\n        ml: 12,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }\n      }, factory.type, \" : \", clone.address, \" : Name \", clone.name), __jsx(Divider, {\n        orientation: \"horizontal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }\n      }));\n    }), __jsx(Divider, {\n      orientation: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    })));\n  }) : null)));\n}\n\n_s(Admin, \"bDosR2wua4OySgP8oBZ+EqR/Cb4=\", false, function () {\n  return [useRouter, useWeb3React, useContract];\n});\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Admin.tsx"],"names":["Box","Flex","Text","Stack","Button","Loader","Refreshing","useRouter","useWeb3React","useState","VStack","Divider","contractAddresses","useContract","Contract","Admin","query","account","chainId","library","loaded","state","setState","loadingApi","setLoadingApi","stats","setStats","address","setAddress","offset","setOffset","limit","setLimit","shouldFetchData","setShouldFetchData","hasMore","setHasMore","buttonDisabled","setButtonDisabled","factories","setFactories","factoryTypes","setFactoryTypes","handlerContract","vaultHandlerV8","vaultHandlerV8Abi","HandleClick","GetContracts","getAllRegisteredContractsOfType","getFactoryInto","factoryInfo","console","log","index","values","factory","factoryContract","getFactoryContract","factoryType","getClones","factoryClones","getCloneInto","detailedClones","push","type","clones","length","cloneType","clone","cloneContract","getCloneContract","owner","cloneOwner","name","cloneName","abi","erc20Abi","erc721Abi","erc1155Abi","getSigner","connectUnchecked","clonableFactoryAbi","mockData","map"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {HStack, VStack, Circle, Divider } from '@chakra-ui/react'\nimport { EMBLEM_API, BURN_ADDRESS, ZERO_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\n\nimport { Contract } from '@ethersproject/contracts'\n\nexport default function Admin() {\n  const { query } = useRouter()\n  const { account, chainId, library } = useWeb3React()\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState([])\n  const [address, setAddress] = useState(query.address || null)\n  const [offset, setOffset] = useState(0)\n  const [limit, setLimit] = useState(10)\n  const [shouldFetchData, setShouldFetchData] = useState(address? true: false)\n  const [hasMore, setHasMore] = useState(true)\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n\n  const [factories, setFactories] = useState([])\n  const [factoryTypes, setFactoryTypes] = useState([])\n\n  const handlerContract = useContract(contractAddresses.vaultHandlerV8[chainId], contractAddresses.vaultHandlerV8Abi, true)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  // useEffect(() => {\n  //   if (state.loaded == false && !loadingApi && address) {\n  //     setLoadingApi(false)\n  //     // getPnL()\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   if (shouldFetchData && address) {\n  //     console.log(\"Should load api after setting consts\", offset)\n  //     setShouldFetchData(false)\n  //     // getPnL()\n  //   } else {\n  //     console.log(\"wtf\")\n  //   }\n  // }, [shouldFetchData, offset])\n\n  // const fetchDataForLazyLoad = async () =>{    \n  //   console.log('setting new offset to', offset+limit)\n  //   setOffset(offset+limit)\n  //   setShouldFetchData(true)\n  // }\n\n  const HandleClick = async()=>{\n    setLoadingApi(true)\n    GetContracts()\n  }\n\n  async function GetContracts() {\n    let factories = await handlerContract.getAllRegisteredContractsOfType(8)\n    let factoryInfo = await getFactoryInto(factories, 0, [])\n    console.log(\"factoryInfo\", factoryInfo)\n    setFactories(factoryInfo)\n    setLoadingApi(false)\n  }\n\n  async function getFactoryInto(factories, index, values) {\n    let factory = factories[index]\n    let factoryContract = getFactoryContract(factory)\n    let factoryType = await factoryContract.factoryType()\n    let factoryClones = await factoryContract.getClones()\n    let detailedClones = await getCloneInto(factoryClones, 0, factoryType, [])\n    \n    values.push({type: factoryType, address: factory, clones: detailedClones})\n\n    if (index+1 == factories.length) {\n      return values\n    } else {\n      return getFactoryInto(factories, index +1, values)\n    }\n  }\n\n  async function getCloneInto(clones, index, cloneType, values) {\n    let clone = clones[index]\n    let cloneContract = getCloneContract(clone, cloneType)\n    let cloneOwner = await cloneContract.owner()\n    let cloneName = await cloneContract.name()\n    console.log(\"cloneName\", cloneName)\n    values.push({address: clones[index], owner: cloneOwner, name: cloneName})\n\n    if (index+1 == clones.length) {\n      return values\n    } else {\n      return getCloneInto(clones, index +1, cloneType, values)\n    }\n  }\n\n  function getCloneContract(address, cloneType) {\n    let abi\n    switch(cloneType) {\n      case \"ERC20\":\n        abi = contractAddresses.erc20Abi\n        break;\n      case \"ERC721\":\n        abi = contractAddresses.erc721Abi\n        break;\n      case \"ERC1155\":\n        abi = contractAddresses.erc1155Abi\n        break;\n    }\n    return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n  }\n\n  function getFactoryContract(address) {\n    return new Contract(address, contractAddresses.clonableFactoryAbi, library.getSigner(account).connectUnchecked())\n  }\n\n  const mockData = {\n    \"handler\": \"0x5B8189BCC7565C03C98994b5D7BfbeB1a4296FfE\"\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\" w={\"100%\"}>\n        \n        <Button onClick={HandleClick}>Click</Button>\n\n        {factories.length > 0? (\n          factories.map((factory, index)=>{\n            return (\n              <VStack key={\"factory-\"+index} p={2} >\n                <Box w=\"100%\" min-width=\"40px\">     \n                  <Text w=\"100%\">{factory.type} Factory: {factory.address}</Text>\n                  {factory.clones.map( clone=>{\n                      return (\n                        <>\n                          <Text key={clone.address} ml={12}>{factory.type} : {clone.address} : Name {clone.name}</Text>\n                          <Divider orientation=\"horizontal\" />\n                        </>\n                      )\n                    }\n                  )}\n                  <Divider orientation=\"horizontal\" />\n                </Box>\n              </VStack>\n            )\n          })\n          \n        ) : null}\n       </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}