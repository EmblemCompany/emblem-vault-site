{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _permitGatherers;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ChainId } from '@uniswap/sdk';\nimport { splitSignature, hexDataSlice } from '@ethersproject/bytes';\nimport { PERMIT_AND_CALL_ADDRESS, MAX_UINT256 } from './constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { id } from '@ethersproject/hash';\nimport { defaultAbiCoder } from '@ethersproject/abi';\nvar EIP712Domain = [{\n  name: 'name',\n  type: 'string'\n}, {\n  name: 'version',\n  type: 'string'\n}, {\n  name: 'chainId',\n  type: 'uint256'\n}, {\n  name: 'verifyingContract',\n  type: 'address'\n}];\n\nvar DAIPermitGatherer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address, deadline, _, token, library) {\n    var Permit, domain, DAI, nonce, message, inputs;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Permit = [{\n              name: 'holder',\n              type: 'address'\n            }, {\n              name: 'spender',\n              type: 'address'\n            }, {\n              name: 'nonce',\n              type: 'uint256'\n            }, {\n              name: 'expiry',\n              type: 'uint256'\n            }, {\n              name: 'allowed',\n              type: 'bool'\n            }];\n            domain = {\n              name: 'Dai Stablecoin',\n              version: '1'\n            };\n            DAI = new Contract(token.address, ['function nonces(address holder) view returns (uint256 nonce)'], library);\n            _context.next = 5;\n            return DAI.nonces(address);\n\n          case 5:\n            nonce = _context.sent;\n            _context.t0 = address;\n            _context.t1 = PERMIT_AND_CALL_ADDRESS;\n            _context.next = 10;\n            return Promise.resolve(nonce.toNumber())[\"catch\"](function () {\n              return nonce.toString();\n            });\n\n          case 10:\n            _context.t2 = _context.sent;\n            _context.t3 = deadline;\n            message = {\n              holder: _context.t0,\n              spender: _context.t1,\n              nonce: _context.t2,\n              expiry: _context.t3,\n              allowed: true\n            };\n            inputs = ['address', 'address', 'uint256', 'uint256', 'bool', 'uint8', 'bytes32', 'bytes32'];\n            return _context.abrupt(\"return\", {\n              types: {\n                EIP712Domain: EIP712Domain,\n                Permit: Permit\n              },\n              domain: domain,\n              message: message,\n              permitSelector: hexDataSlice(id(\"permit(\".concat(inputs.join(','), \")\")), 0, 4),\n              getPermitData: function getPermitData(_ref2) {\n                var v = _ref2.v,\n                    r = _ref2.r,\n                    s = _ref2.s;\n                return defaultAbiCoder.encode(inputs, [address, PERMIT_AND_CALL_ADDRESS, nonce, deadline, true, v, r, s]);\n              }\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function DAIPermitGatherer(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = DAIPermitGatherer;\n\nvar USDCPermitGatherer = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address, deadline, _, token, library) {\n    var Permit, domain, USDC, nonce, value, message, inputs;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Permit = [{\n              name: 'owner',\n              type: 'address'\n            }, {\n              name: 'spender',\n              type: 'address'\n            }, {\n              name: 'value',\n              type: 'uint256'\n            }, {\n              name: 'nonce',\n              type: 'uint256'\n            }, {\n              name: 'deadline',\n              type: 'uint256'\n            }];\n            domain = {\n              name: 'USD Coin',\n              version: '2'\n            };\n            USDC = new Contract(token.address, ['function nonces(address owner) view returns (uint256 nonce)'], library);\n            _context2.next = 5;\n            return USDC.nonces(address);\n\n          case 5:\n            nonce = _context2.sent;\n            value = \"0x\".concat(MAX_UINT256.toString(16));\n            _context2.t0 = address;\n            _context2.t1 = PERMIT_AND_CALL_ADDRESS;\n            _context2.t2 = value;\n            _context2.next = 12;\n            return Promise.resolve(nonce.toNumber())[\"catch\"](function () {\n              return nonce.toString();\n            });\n\n          case 12:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = deadline;\n            message = {\n              owner: _context2.t0,\n              spender: _context2.t1,\n              value: _context2.t2,\n              nonce: _context2.t3,\n              deadline: _context2.t4\n            };\n            inputs = ['address', 'address', 'uint256', 'uint256', 'uint8', 'bytes32', 'bytes32'];\n            return _context2.abrupt(\"return\", {\n              types: {\n                EIP712Domain: EIP712Domain,\n                Permit: Permit\n              },\n              domain: domain,\n              message: message,\n              permitSelector: hexDataSlice(id(\"permit(\".concat(inputs.join(','), \")\")), 0, 4),\n              getPermitData: function getPermitData(_ref4) {\n                var v = _ref4.v,\n                    r = _ref4.r,\n                    s = _ref4.s;\n                return defaultAbiCoder.encode(inputs, [address, PERMIT_AND_CALL_ADDRESS, value, deadline, v, r, s]);\n              }\n            });\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function USDCPermitGatherer(_x6, _x7, _x8, _x9, _x10) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n_c2 = USDCPermitGatherer;\nvar permitGatherers = (_permitGatherers = {}, _defineProperty(_permitGatherers, ChainId.MAINNET, {\n  '0x6B175474E89094C44Da98b954EedeAC495271d0F': DAIPermitGatherer,\n  '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48': USDCPermitGatherer\n}), _defineProperty(_permitGatherers, ChainId.KOVAN, {\n  '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa': DAIPermitGatherer\n}), _permitGatherers);\nexport function canPermit(token) {\n  var _permitGatherers$toke;\n\n  return !token ? false : !!((_permitGatherers$toke = permitGatherers[token.chainId]) === null || _permitGatherers$toke === void 0 ? void 0 : _permitGatherers$toke[token.address]);\n}\nexport function gatherPermit(_x11, _x12, _x13, _x14, _x15) {\n  return _gatherPermit.apply(this, arguments);\n}\n\nfunction _gatherPermit() {\n  _gatherPermit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address, deadline, approveMax, token, library) {\n    var _yield$permitGatherer, permitSelector, getPermitData, domain, data, signature;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return permitGatherers[token.chainId][token.address](address, deadline, approveMax, token, library);\n\n          case 2:\n            _yield$permitGatherer = _context3.sent;\n            permitSelector = _yield$permitGatherer.permitSelector;\n            getPermitData = _yield$permitGatherer.getPermitData;\n            domain = _yield$permitGatherer.domain;\n            data = _objectWithoutProperties(_yield$permitGatherer, [\"permitSelector\", \"getPermitData\", \"domain\"]);\n            _context3.next = 9;\n            return library.send('eth_signTypedData_v4', [address, JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n              domain: _objectSpread(_objectSpread({}, domain), {}, {\n                chainId: token.chainId,\n                verifyingContract: token.address\n              }),\n              primaryType: 'Permit'\n            }))]).then(splitSignature);\n\n          case 9:\n            signature = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              permitSelector: permitSelector,\n              permitData: getPermitData(signature)\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _gatherPermit.apply(this, arguments);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DAIPermitGatherer\");\n$RefreshReg$(_c2, \"USDCPermitGatherer\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/permits.ts"],"names":["ChainId","splitSignature","hexDataSlice","PERMIT_AND_CALL_ADDRESS","MAX_UINT256","Contract","id","defaultAbiCoder","EIP712Domain","name","type","DAIPermitGatherer","address","deadline","_","token","library","Permit","domain","version","DAI","nonces","nonce","Promise","resolve","toNumber","toString","message","holder","spender","expiry","allowed","inputs","types","permitSelector","join","getPermitData","v","r","s","encode","USDCPermitGatherer","USDC","value","owner","permitGatherers","MAINNET","KOVAN","canPermit","chainId","gatherPermit","approveMax","data","send","JSON","stringify","verifyingContract","primaryType","then","signature","permitData"],"mappings":"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","sourcesContent":["import { ChainId, Token } from '@uniswap/sdk'\nimport { Signature, splitSignature, hexDataSlice } from '@ethersproject/bytes'\nimport { PERMIT_AND_CALL_ADDRESS, MAX_UINT256 } from './constants'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { Contract } from '@ethersproject/contracts'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { id } from '@ethersproject/hash'\nimport { defaultAbiCoder } from '@ethersproject/abi'\n\ninterface eth_signTypedData_v4 {\n  types: {\n    EIP712Domain: { name: string; type: string }[]\n    Permit: { name: string; type: string }[]\n  }\n  domain: {\n    name: string\n    version: string\n  }\n  message: {\n    [key: string]: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n}\n\nexport interface Permit {\n  permitSelector: string\n  permitData: string\n}\n\ninterface PermitGathererReturn extends eth_signTypedData_v4 {\n  permitSelector: Permit['permitSelector']\n  getPermitData: (signature: Signature) => Permit['permitData']\n}\n\ntype PermitGathererFunction = (\n  address: string,\n  deadline: number,\n  approveMax: boolean,\n  token: Token,\n  library: Web3Provider\n) => Promise<PermitGathererReturn>\n\nconst EIP712Domain = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst DAIPermitGatherer: PermitGathererFunction = async (address, deadline, _, token, library) => {\n  const Permit = [\n    { name: 'holder', type: 'address' },\n    { name: 'spender', type: 'address' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'expiry', type: 'uint256' },\n    { name: 'allowed', type: 'bool' },\n  ]\n  const domain = {\n    name: 'Dai Stablecoin',\n    version: '1',\n  }\n  const DAI = new Contract(token.address, ['function nonces(address holder) view returns (uint256 nonce)'], library)\n  const nonce: BigNumber = await DAI.nonces(address)\n  const message = {\n    holder: address,\n    spender: PERMIT_AND_CALL_ADDRESS,\n    nonce: await Promise.resolve(nonce.toNumber()).catch(() => nonce.toString()),\n    expiry: deadline,\n    allowed: true,\n  }\n  const inputs = ['address', 'address', 'uint256', 'uint256', 'bool', 'uint8', 'bytes32', 'bytes32']\n  return {\n    types: {\n      EIP712Domain,\n      Permit,\n    },\n    domain,\n    message,\n    permitSelector: hexDataSlice(id(`permit(${inputs.join(',')})`), 0, 4),\n    getPermitData: ({ v, r, s }) =>\n      defaultAbiCoder.encode(inputs, [address, PERMIT_AND_CALL_ADDRESS, nonce, deadline, true, v, r, s]),\n  }\n}\n\nconst USDCPermitGatherer: PermitGathererFunction = async (address, deadline, _, token, library) => {\n  const Permit = [\n    { name: 'owner', type: 'address' },\n    { name: 'spender', type: 'address' },\n    { name: 'value', type: 'uint256' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'deadline', type: 'uint256' },\n  ]\n  const domain = {\n    name: 'USD Coin',\n    version: '2',\n  }\n  const USDC = new Contract(token.address, ['function nonces(address owner) view returns (uint256 nonce)'], library)\n  const nonce: BigNumber = await USDC.nonces(address)\n  const value = `0x${MAX_UINT256.toString(16)}`\n  const message = {\n    owner: address,\n    spender: PERMIT_AND_CALL_ADDRESS,\n    value,\n    nonce: await Promise.resolve(nonce.toNumber()).catch(() => nonce.toString()),\n    deadline,\n  }\n  const inputs = ['address', 'address', 'uint256', 'uint256', 'uint8', 'bytes32', 'bytes32']\n  return {\n    types: {\n      EIP712Domain,\n      Permit,\n    },\n    domain,\n    message,\n    permitSelector: hexDataSlice(id(`permit(${inputs.join(',')})`), 0, 4),\n    getPermitData: ({ v, r, s }) =>\n      defaultAbiCoder.encode(inputs, [address, PERMIT_AND_CALL_ADDRESS, value, deadline, v, r, s]),\n  }\n}\n\nconst permitGatherers: { [chainId: number]: { [tokenAddress: string]: PermitGathererFunction } } = {\n  [ChainId.MAINNET]: {\n    '0x6B175474E89094C44Da98b954EedeAC495271d0F': DAIPermitGatherer,\n    '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48': USDCPermitGatherer,\n  },\n  [ChainId.KOVAN]: {\n    '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa': DAIPermitGatherer,\n  },\n}\n\nexport function canPermit(token?: Token): boolean {\n  return !token ? false : !!permitGatherers[token.chainId]?.[token.address]\n}\n\nexport async function gatherPermit(\n  address: string,\n  deadline: number,\n  approveMax: boolean,\n  token: Token,\n  library: Web3Provider\n): Promise<Permit> {\n  const { permitSelector, getPermitData, domain, ...data } = await permitGatherers[token.chainId][token.address](\n    address,\n    deadline,\n    approveMax,\n    token,\n    library\n  )\n\n  const signature = await library\n    .send('eth_signTypedData_v4', [\n      address,\n      JSON.stringify({\n        ...data,\n        domain: {\n          ...domain,\n          chainId: token.chainId,\n          verifyingContract: token.address,\n        },\n        primaryType: 'Permit',\n      }),\n    ])\n    .then(splitSignature)\n\n  return {\n    permitSelector,\n    permitData: getPermitData(signature),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}