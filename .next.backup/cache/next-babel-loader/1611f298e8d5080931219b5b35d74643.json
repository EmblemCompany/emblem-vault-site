{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nimport { Button, Spinner, IconButton, ButtonGroup } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTransactions } from '../context';\nimport { shortenHex, ExplorerTXType, formatEtherscanLink } from '../utils';\nexport function TransactionToast({\n  hash,\n  onComplete\n}) {\n  const {\n    library,\n    chainId\n  } = useWeb3React();\n  const [, {\n    removeTransaction\n  }] = useTransactions();\n  const {\n    0: confirmed,\n    1: setConfirmed\n  } = useState();\n  useEffect(() => {\n    if (library) {\n      let mounted = true;\n      library.waitForTransaction(hash).then(receipt => {\n        if (mounted) {\n          if (onComplete) {\n            onComplete();\n          }\n\n          setConfirmed(receipt.status === 1 ? true : false);\n        }\n      });\n      return () => {\n        mounted = false;\n      };\n    }\n  }, [library, hash]);\n  return __jsx(ButtonGroup, {\n    spacing: 0\n  }, __jsx(Button, _extends({\n    as: \"a\",\n    variantColor: typeof confirmed === 'boolean' ? confirmed ? 'green' : 'red' : 'blue',\n    leftIcon: typeof confirmed === 'boolean' ? confirmed ? 'check-circle' : 'warning' : () => __jsx(Spinner, {\n      size: \"sm\",\n      mr: \"0.5rem\",\n      ml: \"-0.25rem\"\n    }),\n    rightIcon: \"external-link\",\n    style: {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }, {\n    href: formatEtherscanLink(ExplorerTXType.Transaction, [chainId, hash]),\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }), shortenHex(hash, 2)), __jsx(IconButton, {\n    icon: \"close\",\n    variantColor: typeof confirmed === 'boolean' ? confirmed ? 'green' : 'red' : 'blue',\n    \"aria-label\": \"Close\",\n    style: {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    borderLeft: \"1px solid white\",\n    onClick: () => {\n      removeTransaction(chainId, hash);\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}