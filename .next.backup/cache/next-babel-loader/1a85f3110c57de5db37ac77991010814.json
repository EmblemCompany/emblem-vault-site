{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Image, Stack, Button, Input } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nexport default function PnL() {\n  const {\n    query\n  } = useRouter();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    loaded: true\n  });\n  const {\n    0: loadingApi,\n    1: setLoadingApi\n  } = useState(false);\n  const {\n    0: stats,\n    1: setStats\n  } = useState([]);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(query.address || null);\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(10);\n  const {\n    0: shouldFetchData,\n    1: setShouldFetchData\n  } = useState(address ? true : false);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: buttonDisabled,\n    1: setButtonDisabled\n  } = useState(false);\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi && address) {\n      setLoadingApi(false);\n      getPnL();\n    }\n  }, []);\n  useEffect(() => {\n    if (shouldFetchData && address) {\n      console.log(\"Should load api after setting consts\", offset);\n      setShouldFetchData(false);\n      getPnL();\n    } else {\n      console.log(\"wtf\");\n    }\n  }, [shouldFetchData, offset]);\n\n  const fetchData = async () => {\n    console.log('setting new offset to', offset + limit);\n    setOffset(offset + limit);\n    setShouldFetchData(true);\n  };\n\n  const getPnL = async () => {\n    setButtonDisabled(true);\n    console.log(\"getting logs\");\n    fetch('https://api.emblemvault.io/s:osautomate/offer/' + address + '?limit=' + limit + '&offset=' + offset, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false); // setState({ loaded: true })\n\n      let jsonData = await response.json();\n      setStats(stats.concat(jsonData.intelligences));\n      setButtonDisabled(false);\n      console.log(jsonData);\n\n      if (jsonData.intelligences.length == 0) {\n        setHasMore(false);\n      }\n    });\n  };\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(HStack, {\n    w: \"20%\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    placeholder: \"Address: 0x...\",\n    w: \"100%\",\n    onChange: e => {\n      setAddress(e.target.value);\n    },\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    isDisabled: buttonDisabled,\n    onClick: () => {\n      setShouldFetchData(true);\n      setStats([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Generate\")), buttonDisabled ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }\n  }) : '', stats.length > 0 ? __jsx(React.Fragment, null, __jsx(InfiniteScroll, {\n    borderWidth: 1,\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: stats.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, stats.map((item, index) => {\n    return __jsx(React.Fragment, null, __jsx(HStack, {\n      key: \"container-\" + index,\n      p: 2,\n      m: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, __jsx(Box, {\n      className: \"coin-image-container\",\n      m: 2,\n      \"min-width\": \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, item.image ? __jsx(Image, {\n      width: \"40px\",\n      src: item.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }) : __jsx(Circle, {\n      size: \"40px\",\n      bg: \"gray\",\n      color: \"white\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, item.collection[0])), __jsx(VStack, {\n      p: \"10px\",\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, __jsx(HStack, {\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      float: \"left\",\n      width: \"100%\",\n      fontWeight: \"bold\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, item.collection, \" : \", item.name ? item.name : '#' + item.tokenId)), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"15%\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Purchased for \", item.totalCost, \" \\u039E\"), __jsx(Text, {\n      width: \"25%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, item.offerAmount > 0 ? 'Best Offer: ' + item.offerAmount.toFixed(4) + ' Ξ' : 'No Offers'), __jsx(Text, {\n      width: \"25%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, item.forSale ? 'For Sale: ' + item.salePrice + ' Ξ' : 'Not for sale'), __jsx(Text, {\n      width: \"15%\",\n      \"text-align\": \"center\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Floor: \", item.floor, \" \\u039E\")), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"15%\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }), __jsx(Text, {\n      width: \"20%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, item.offerPnL ? 'Offer / Cost △ : ' + (item.offerPnL || 0).toFixed(4) + ' Ξ' : ''), __jsx(Text, {\n      width: \"20%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, item.forSale ? 'If Sold Profit: ' + item.salePnL.toFixed(4) + ' Ξ' : ''), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    })), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"15%\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }), __jsx(Text, {\n      width: \"20%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, item.offerVsFloor ? 'Offer / Floor △: ' + item.offerVsFloor.toFixed(4) + ' Ξ' : ''), __jsx(Text, {\n      width: \"20%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, item.forSale ? 'Sale / Floor △: ' + item.saleVsFloor.toFixed(4) + ' Ξ' : ''), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    })))));\n  }))) : null)));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx"],"names":["Box","Flex","Text","Image","Stack","Button","Input","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","InfiniteScroll","HStack","VStack","Circle","PnL","query","account","chainId","state","setState","loaded","loadingApi","setLoadingApi","stats","setStats","address","setAddress","offset","setOffset","limit","setLimit","shouldFetchData","setShouldFetchData","hasMore","setHasMore","buttonDisabled","setButtonDisabled","getPnL","console","log","fetchData","fetch","method","headers","then","response","jsonData","json","concat","intelligences","length","e","target","value","textAlign","map","item","index","image","collection","name","tokenId","totalCost","offerAmount","toFixed","forSale","salePrice","floor","offerPnL","salePnL","offerVsFloor","saleVsFloor"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {HStack, VStack, Circle, Divider } from '@chakra-ui/react'\n\nexport default function PnL() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState([])\n  const [address, setAddress] = useState(query.address || null)\n  const [offset, setOffset] = useState(0)\n  const [limit, setLimit] = useState(10)\n  const [shouldFetchData, setShouldFetchData] = useState(address? true: false)\n  const [hasMore, setHasMore] = useState(true)\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi && address) {\n      setLoadingApi(false)\n      getPnL()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (shouldFetchData && address) {\n      console.log(\"Should load api after setting consts\", offset)\n      setShouldFetchData(false)\n      getPnL()\n    } else {\n      console.log(\"wtf\")\n    }\n  }, [shouldFetchData, offset])\n\n  const fetchData = async() =>{    \n    console.log('setting new offset to', offset+limit)\n    setOffset(offset+limit)\n    setShouldFetchData(true)\n  }\n\n  const getPnL = async() =>{\n    setButtonDisabled(true)\n    console.log(\"getting logs\")\n    fetch('https://api.emblemvault.io/s:osautomate/offer/'+address+'?limit='+limit+'&offset='+offset, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false)\n      // setState({ loaded: true })\n      let jsonData = await response.json()\n      setStats(stats.concat(jsonData.intelligences))\n      setButtonDisabled(false)\n      console.log(jsonData)\n      if (jsonData.intelligences.length == 0) {\n        setHasMore(false)\n      }\n    })\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\" w={\"100%\"}>\n          <HStack w={\"20%\"} mt={2}>\n            <Input placeholder=\"Address: 0x...\" w={\"100%\"} onChange={(e)=>{ setAddress(e.target.value) }} value={address}></Input>\n            <Button isDisabled={buttonDisabled} onClick={()=>{ setShouldFetchData(true); setStats([])}} >Generate</Button>\n          </HStack>\n          {buttonDisabled? <Refreshing /> : ''}\n          \n          {stats.length > 0? (\n            <>\n              {/* <Text>Total Offers in USD: ${stats.offers.toFixed(2)}</Text>\n              <Text>Total Number of offers: ${stats.offerCount.toFixed(2)}</Text> */}\n              <InfiniteScroll\n                borderWidth={1}\n                className=\"infinite-scroll\"\n                scrollableTarget=\"shannon-container\"\n                // height={200}\n                dataLength={stats.length} //This is important field to render the next data\n                next={fetchData}\n                hasMore={hasMore}\n                loader={<Refreshing />}\n                endMessage={\n                  <p style={{ textAlign: 'center' }}>\n                    <b>Yay! You have seen it all</b> \n                  </p>\n                }\n              >\n                {stats.map((item, index)=>{\n                  return (\n                    <>                      \n                      <HStack key={\"container-\"+index} p={2} m={5} >\n                        <Box className=\"coin-image-container\" m={2} min-width=\"40px\">\n                          { item.image ? (\n                            <Image width=\"40px\" src={item.image}></Image>\n                          ) : (\n                            <Circle size=\"40px\" bg=\"gray\" color=\"white\" isTruncated>\n                              {item.collection[0]}\n                            </Circle>\n                          ) }\n                        </Box>\n                        <VStack p=\"10px\" w=\"100%\">\n                          <HStack w=\"100%\">\n                            <Text float=\"left\" width=\"100%\" fontWeight=\"bold\" isTruncated={true}>\n                              {item.collection} : {item.name? item.name : '#'+item.tokenId}\n                            </Text>\n                          </HStack>\n                          <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n                            <Text position=\"relative\" fontSize=\"xs\" width=\"15%\" color=\"gray\">\n                              Purchased for {item.totalCost} Ξ\n                            </Text>                           \n                            <Text width=\"25%\" fontSize=\"xs\" right=\"40px\">\n                              {item.offerAmount > 0 ? ('Best Offer: ' + item.offerAmount.toFixed(4) + ' Ξ') : 'No Offers'}\n                            </Text>                            \n                            <Text width=\"25%\" fontSize=\"xs\" right=\"40px\">\n                              {item.forSale ? ('For Sale: ' + item.salePrice + ' Ξ') : 'Not for sale' }\n                            </Text>\n                            <Text width=\"15%\" text-align=\"center\" fontSize=\"xs\" right=\"40px\">\n                              Floor: {item.floor} Ξ\n                            </Text>\n                          </HStack>\n                          <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n                            <Text position=\"relative\" fontSize=\"xs\" width=\"15%\" color=\"gray\">\n                             \n                            </Text>                           \n                            <Text width=\"20%\" fontSize=\"xs\" right=\"40px\">\n                              {item.offerPnL ? ('Offer / Cost △ : ' + (item.offerPnL || 0).toFixed(4) + ' Ξ') : '' }\n                            </Text>\n                            <Text width=\"20%\" fontSize=\"xs\" right=\"40px\">\n                              {item.forSale ? ('If Sold Profit: ' + item.salePnL.toFixed(4) + ' Ξ') : '' }\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              \n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              \n                            </Text>\n                          </HStack>\n                          <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n                            <Text position=\"relative\" fontSize=\"xs\" width=\"15%\" color=\"gray\">\n                             \n                            </Text>                           \n                            <Text width=\"20%\" fontSize=\"xs\" right=\"40px\">\n                              {item.offerVsFloor ? ('Offer / Floor △: ' + item.offerVsFloor.toFixed(4) + ' Ξ') : '' }\n                            </Text>\n                            <Text width=\"20%\" fontSize=\"xs\" right=\"40px\">\n                              {item.forSale ? ('Sale / Floor △: ' + item.saleVsFloor.toFixed(4) + ' Ξ') : '' }\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              \n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              \n                            </Text>\n                          </HStack>\n                        </VStack> \n                                               \n                      </HStack>\n                      \n                    </>\n                  )\n                })}\n              </InfiniteScroll>\n            </>\n          ) : null }\n        </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}