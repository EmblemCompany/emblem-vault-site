{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/context.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState, useEffect, useMemo, useCallback } from 'react';\nimport { Token } from '@uniswap/sdk';\nimport { DEFAULT_APPROVE_MAX, DEFAULT_DEADLINE, DEFAULT_SLIPPAGE } from './constants';\nvar LocalStorageKeys;\n\n(function (LocalStorageKeys) {\n  LocalStorageKeys[\"Version\"] = \"version\";\n  LocalStorageKeys[\"ApproveMax\"] = \"approveMax\";\n  LocalStorageKeys[\"Deadline\"] = \"deadline\";\n  LocalStorageKeys[\"Slippage\"] = \"slippage\";\n  LocalStorageKeys[\"Transactions\"] = \"transactions\";\n  LocalStorageKeys[\"Tokens\"] = \"tokens\";\n})(LocalStorageKeys || (LocalStorageKeys = {}));\n\nconst NO_VERSION = -1;\nconst CURRENT_VERSION = 0;\n\nfunction useLocalStorage(key, defaultValue, overrideLookup = false, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n{\n  serialize,\n  deserialize\n} = {\n  serialize: toSerialize => toSerialize,\n  deserialize: toDeserialize => toDeserialize\n}) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => {\n    if (overrideLookup) {\n      return defaultValue;\n    } else {\n      try {\n        var _deserialize;\n\n        const item = window.localStorage.getItem(key);\n        return item === null ? defaultValue : (_deserialize = deserialize(JSON.parse(item))) !== null && _deserialize !== void 0 ? _deserialize : defaultValue;\n      } catch {\n        return defaultValue;\n      }\n    }\n  });\n  useEffect(() => {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(serialize(value)));\n    } catch {}\n  }, [key, serialize, value]);\n  return [value, setValue];\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction serializeTokens(tokens) {\n  return tokens.map(token => ({\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  }));\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction deserializeTokens(serializedTokens) {\n  return serializedTokens.map(serializedToken => new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name));\n}\n\nconst HypertextContext = createContext([{}, {}]); // eslint-disable-line @typescript-eslint/no-explicit-any\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction useHypertextContext() {\n  return useContext(HypertextContext);\n}\n\nexport default function Provider({\n  children\n}) {\n  // global state\n  const {\n    0: firstToken,\n    1: setFirstToken\n  } = useState();\n  const {\n    0: secondToken,\n    1: setSecondToken\n  } = useState();\n  const {\n    0: showUSD,\n    1: setShowUSD\n  } = useState(false); // versioning\n\n  const [version, setVersion] = useLocalStorage(LocalStorageKeys.Version, NO_VERSION); // after it's been used to sychronously + selectively override localstorage keys, bump the version as soon as we can\n\n  useEffect(() => {\n    setVersion(CURRENT_VERSION);\n  }, [setVersion]); // global localstorage state\n\n  const {\n    0: noLayout,\n    1: setNoLayout\n  } = useState(false);\n  const [approveMax, setApproveMax] = useLocalStorage(LocalStorageKeys.ApproveMax, DEFAULT_APPROVE_MAX);\n  const [deadline, setDeadline] = useLocalStorage(LocalStorageKeys.Deadline, DEFAULT_DEADLINE);\n  const [slippage, setSlippage] = useLocalStorage(LocalStorageKeys.Slippage, DEFAULT_SLIPPAGE);\n  const [transactions, setTransactions] = useLocalStorage(LocalStorageKeys.Transactions, [], version < 0 ? true : false // pre-version0 localstorage transactions didn't include chainId and must be overriden\n  );\n  const [tokens, setTokens] = useLocalStorage(LocalStorageKeys.Tokens, [], false, {\n    serialize: serializeTokens,\n    deserialize: deserializeTokens\n  });\n  return __jsx(HypertextContext.Provider, {\n    value: useMemo(() => [{\n      firstToken,\n      secondToken,\n      showUSD,\n      approveMax,\n      deadline,\n      slippage,\n      transactions,\n      tokens,\n      noLayout\n    }, {\n      setFirstToken,\n      setSecondToken,\n      setShowUSD,\n      setApproveMax,\n      setDeadline,\n      setSlippage,\n      setTransactions,\n      setTokens,\n      setNoLayout\n    }], [firstToken, secondToken, showUSD, approveMax, deadline, slippage, transactions, tokens, noLayout, setFirstToken, setSecondToken, setShowUSD, setApproveMax, setDeadline, setSlippage, setTransactions, setTokens, setNoLayout]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useFirstToken() {\n  const [{\n    firstToken\n  }, {\n    setFirstToken\n  }] = useHypertextContext();\n  return [firstToken, setFirstToken];\n}\nexport function useSecondToken() {\n  const [{\n    secondToken\n  }, {\n    setSecondToken\n  }] = useHypertextContext();\n  return [secondToken, setSecondToken];\n}\nexport function useShowUSD() {\n  const [{\n    showUSD\n  }, {\n    setShowUSD\n  }] = useHypertextContext();\n  return [showUSD, setShowUSD];\n}\nexport function useApproveMax() {\n  const [{\n    approveMax\n  }, {\n    setApproveMax\n  }] = useHypertextContext();\n  const toggleApproveMax = useCallback(() => {\n    setApproveMax(!approveMax);\n  }, [approveMax, setApproveMax]);\n  return [approveMax, toggleApproveMax];\n}\nexport function useDeadline() {\n  const [{\n    deadline\n  }, {\n    setDeadline\n  }] = useHypertextContext();\n  return [deadline, setDeadline];\n}\nexport function useSlippage() {\n  const [{\n    slippage\n  }, {\n    setSlippage\n  }] = useHypertextContext();\n  return [slippage, setSlippage];\n}\nexport function useNoLayout() {\n  const [{\n    noLayout\n  }, {\n    setNoLayout\n  }] = useHypertextContext();\n  console.log(\"Grrrr\", noLayout);\n  const toggleNoLayout = useCallback(() => {\n    setNoLayout(!noLayout);\n  }, [noLayout, setNoLayout]);\n  return [noLayout, toggleNoLayout];\n}\nexport function useTransactions() {\n  const [{\n    transactions\n  }, {\n    setTransactions\n  }] = useHypertextContext();\n  const addTransaction = useCallback((chainId, hash) => {\n    setTransactions(transactions => transactions.filter(transaction => !(transaction.chainId === chainId && transaction.hash === hash)).concat([{\n      chainId,\n      hash\n    }]));\n  }, [setTransactions]);\n  const removeTransaction = useCallback((chainId, hash) => {\n    setTransactions(transactions => transactions.filter(transaction => !(transaction.chainId === chainId && transaction.hash === hash)));\n  }, [setTransactions]);\n  return [transactions, {\n    addTransaction,\n    removeTransaction\n  }];\n}\nexport function useLocalStorageTokens() {\n  const [{\n    tokens\n  }, {\n    setTokens\n  }] = useHypertextContext();\n  const addToken = useCallback(async token => {\n    setTokens(tokens => tokens.filter(currentToken => !currentToken.equals(token)).concat([token]));\n  }, [setTokens]);\n  const removeToken = useCallback(token => {\n    setTokens(tokens => tokens.filter(currentToken => !currentToken.equals(token)));\n  }, [setTokens]);\n  return [tokens, {\n    addToken,\n    removeToken\n  }];\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/context.tsx"],"names":["createContext","useContext","useState","useEffect","useMemo","useCallback","Token","DEFAULT_APPROVE_MAX","DEFAULT_DEADLINE","DEFAULT_SLIPPAGE","LocalStorageKeys","NO_VERSION","CURRENT_VERSION","useLocalStorage","key","defaultValue","overrideLookup","serialize","deserialize","toSerialize","toDeserialize","value","setValue","item","window","localStorage","getItem","JSON","parse","setItem","stringify","serializeTokens","tokens","map","token","chainId","address","decimals","symbol","name","deserializeTokens","serializedTokens","serializedToken","HypertextContext","useHypertextContext","Provider","children","firstToken","setFirstToken","secondToken","setSecondToken","showUSD","setShowUSD","version","setVersion","Version","noLayout","setNoLayout","approveMax","setApproveMax","ApproveMax","deadline","setDeadline","Deadline","slippage","setSlippage","Slippage","transactions","setTransactions","Transactions","setTokens","Tokens","useFirstToken","useSecondToken","useShowUSD","useApproveMax","toggleApproveMax","useDeadline","useSlippage","useNoLayout","console","log","toggleNoLayout","useTransactions","addTransaction","hash","filter","transaction","concat","removeTransaction","useLocalStorageTokens","addToken","currentToken","equals","removeToken"],"mappings":"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","sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  ReactNode,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { Token } from '@uniswap/sdk'\n\nimport { DEFAULT_APPROVE_MAX, DEFAULT_DEADLINE, DEFAULT_SLIPPAGE } from './constants'\n\nenum LocalStorageKeys {\n  Version = 'version',\n  ApproveMax = 'approveMax',\n  Deadline = 'deadline',\n  Slippage = 'slippage',\n  Transactions = 'transactions',\n  Tokens = 'tokens',\n}\n\nconst NO_VERSION = -1\nconst CURRENT_VERSION = 0\n\nfunction useLocalStorage<T, S = T>(\n  key: LocalStorageKeys,\n  defaultValue: T,\n  overrideLookup = false,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  { serialize, deserialize }: { serialize: (toSerialize: T) => S; deserialize: (toDeserialize: S) => T } = {\n    serialize: (toSerialize): S => (toSerialize as unknown) as S,\n    deserialize: (toDeserialize): T => (toDeserialize as unknown) as T,\n  }\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() => {\n    if (overrideLookup) {\n      return defaultValue\n    } else {\n      try {\n        const item = window.localStorage.getItem(key)\n        return item === null ? defaultValue : deserialize(JSON.parse(item)) ?? defaultValue\n      } catch {\n        return defaultValue\n      }\n    }\n  })\n\n  useEffect(() => {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(serialize(value)))\n    } catch {}\n  }, [key, serialize, value])\n\n  return [value, setValue]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeTokens(\n  tokens: Token[]\n): { chainId: number; address: string; decimals: number; symbol?: string; name?: string }[] {\n  return tokens.map((token) => ({\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }))\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeTokens(serializedTokens: ReturnType<typeof serializeTokens>): Token[] {\n  return serializedTokens.map(\n    (serializedToken) =>\n      new Token(\n        serializedToken.chainId,\n        serializedToken.address,\n        serializedToken.decimals,\n        serializedToken.symbol,\n        serializedToken.name\n      )\n  )\n}\n\ninterface Transaction {\n  chainId: number\n  hash: string\n}\n\nconst HypertextContext = createContext<\n  [\n    {\n      firstToken: Token | undefined\n      secondToken: Token | undefined\n      showUSD: boolean\n      approveMax: boolean\n      deadline: number\n      slippage: number\n      transactions: Transaction[]\n      tokens: Token[]\n      noLayout: boolean\n    },\n    {\n      setFirstToken: Dispatch<SetStateAction<Token | undefined>>\n      setSecondToken: Dispatch<SetStateAction<Token | undefined>>\n      setShowUSD: Dispatch<SetStateAction<boolean>>\n      setApproveMax: Dispatch<SetStateAction<boolean>>\n      setDeadline: Dispatch<SetStateAction<number>>\n      setSlippage: Dispatch<SetStateAction<number>>\n      setTransactions: Dispatch<SetStateAction<Transaction[]>>\n      setTokens: Dispatch<SetStateAction<Token[]>>\n      setNoLayout: Dispatch<SetStateAction<boolean>>\n    }\n  ]\n>([{}, {}] as any) // eslint-disable-line @typescript-eslint/no-explicit-any\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useHypertextContext() {\n  return useContext(HypertextContext)\n}\n\nexport default function Provider({ children }: { children: ReactNode }): JSX.Element {\n  // global state\n  const [firstToken, setFirstToken] = useState<Token | undefined>()\n  const [secondToken, setSecondToken] = useState<Token | undefined>()\n  const [showUSD, setShowUSD] = useState<boolean>(false)\n\n  // versioning\n  const [version, setVersion] = useLocalStorage<number>(LocalStorageKeys.Version, NO_VERSION)\n  // after it's been used to sychronously + selectively override localstorage keys, bump the version as soon as we can\n  useEffect(() => {\n    setVersion(CURRENT_VERSION)\n  }, [setVersion])\n\n  // global localstorage state\n  const [noLayout, setNoLayout] = useState<boolean>(false)\n  const [approveMax, setApproveMax] = useLocalStorage<boolean>(LocalStorageKeys.ApproveMax, DEFAULT_APPROVE_MAX)\n  const [deadline, setDeadline] = useLocalStorage<number>(LocalStorageKeys.Deadline, DEFAULT_DEADLINE)\n  const [slippage, setSlippage] = useLocalStorage<number>(LocalStorageKeys.Slippage, DEFAULT_SLIPPAGE)\n  const [transactions, setTransactions] = useLocalStorage<Transaction[]>(\n    LocalStorageKeys.Transactions,\n    [],\n    version < 0 ? true : false // pre-version0 localstorage transactions didn't include chainId and must be overriden\n  )\n  const [tokens, setTokens] = useLocalStorage<Token[], ReturnType<typeof serializeTokens>>(\n    LocalStorageKeys.Tokens,\n    [],\n    false,\n    {\n      serialize: serializeTokens,\n      deserialize: deserializeTokens,\n    }\n  )\n\n  return (\n    <HypertextContext.Provider\n      value={useMemo(\n        () => [\n          { firstToken, secondToken, showUSD, approveMax, deadline, slippage, transactions, tokens, noLayout },\n          {\n            setFirstToken,\n            setSecondToken,\n            setShowUSD,\n            setApproveMax,\n            setDeadline,\n            setSlippage,\n            setTransactions,\n            setTokens,\n            setNoLayout,\n          },\n        ],\n        [\n          firstToken,\n          secondToken,\n          showUSD,\n          approveMax,\n          deadline,\n          slippage,\n          transactions,\n          tokens,\n          noLayout,\n          setFirstToken,\n          setSecondToken,\n          setShowUSD,\n          setApproveMax,\n          setDeadline,\n          setSlippage,\n          setTransactions,\n          setTokens,\n          setNoLayout,\n        ]\n      )}\n    >\n      {children}\n    </HypertextContext.Provider>\n  )\n}\n\nexport function useFirstToken(): [Token | undefined, ReturnType<typeof useHypertextContext>[1]['setFirstToken']] {\n  const [{ firstToken }, { setFirstToken }] = useHypertextContext()\n  return [firstToken, setFirstToken]\n}\n\nexport function useSecondToken(): [Token | undefined, ReturnType<typeof useHypertextContext>[1]['setSecondToken']] {\n  const [{ secondToken }, { setSecondToken }] = useHypertextContext()\n  return [secondToken, setSecondToken]\n}\n\nexport function useShowUSD(): [boolean, ReturnType<typeof useHypertextContext>[1]['setShowUSD']] {\n  const [{ showUSD }, { setShowUSD }] = useHypertextContext()\n  return [showUSD, setShowUSD]\n}\n\nexport function useApproveMax(): [boolean, () => void] {\n  const [{ approveMax }, { setApproveMax }] = useHypertextContext()\n  const toggleApproveMax = useCallback(() => {\n    setApproveMax(!approveMax)\n  }, [approveMax, setApproveMax])\n  return [approveMax, toggleApproveMax]\n}\n\nexport function useDeadline(): [number, ReturnType<typeof useHypertextContext>[1]['setDeadline']] {\n  const [{ deadline }, { setDeadline }] = useHypertextContext()\n  return [deadline, setDeadline]\n}\n\nexport function useSlippage(): [number, ReturnType<typeof useHypertextContext>[1]['setSlippage']] {\n  const [{ slippage }, { setSlippage }] = useHypertextContext()\n  return [slippage, setSlippage]\n}\n\nexport function useNoLayout(): [boolean, () => void] {\n  \n  const [{ noLayout }, { setNoLayout }] = useHypertextContext()\n  console.log(\"Grrrr\", noLayout)\n  const toggleNoLayout = useCallback(() => {\n    setNoLayout(!noLayout)\n  }, [noLayout, setNoLayout])\n  return [noLayout, toggleNoLayout]\n}\n\nexport function useTransactions(): [\n  Transaction[],\n  {\n    addTransaction: (chainId: number, hash: string) => void\n    removeTransaction: (chainId: number, hash: string) => void\n  }\n] {\n  const [{ transactions }, { setTransactions }] = useHypertextContext()\n\n  const addTransaction = useCallback(\n    (chainId: number, hash: string) => {\n      setTransactions((transactions) =>\n        transactions\n          .filter((transaction) => !(transaction.chainId === chainId && transaction.hash === hash))\n          .concat([{ chainId, hash }])\n      )\n    },\n    [setTransactions]\n  )\n  const removeTransaction = useCallback(\n    (chainId: number, hash: string) => {\n      setTransactions((transactions) =>\n        transactions.filter((transaction) => !(transaction.chainId === chainId && transaction.hash === hash))\n      )\n    },\n    [setTransactions]\n  )\n\n  return [transactions, { addTransaction, removeTransaction }]\n}\n\nexport function useLocalStorageTokens(): [\n  Token[],\n  {\n    addToken: (token: Token) => void\n    removeToken: (token: Token) => void\n  }\n] {\n  const [{ tokens }, { setTokens }] = useHypertextContext()\n\n  const addToken = useCallback(\n    async (token: Token) => {\n      setTokens((tokens) => tokens.filter((currentToken) => !currentToken.equals(token)).concat([token]))\n    },\n    [setTokens]\n  )\n\n  const removeToken = useCallback(\n    (token: Token) => {\n      setTokens((tokens) => tokens.filter((currentToken) => !currentToken.equals(token)))\n    },\n    [setTokens]\n  )\n\n  return [tokens, { addToken, removeToken }]\n}\n"]},"metadata":{},"sourceType":"module"}