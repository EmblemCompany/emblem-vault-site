{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/BatchAdd.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, Stack, FormHelperText, FormControl, FormLabel, Input, Button, Box } from '@chakra-ui/core';\nimport { useState } from 'react';\nexport default function BatchAdd() {\n  _s();\n\n  var _useState = useState(\"\"),\n      batchName = _useState[0],\n      setBatchName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      imageBaseUrl = _useState2[0],\n      setImageBaseUrl = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      inscriptionBaseUrl = _useState3[0],\n      setInscriptionBaseUrl = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      addressType = _useState4[0],\n      setAddressType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      titleTemplate = _useState5[0],\n      setTitleTemplate = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      descriptionTemplate = _useState6[0],\n      setDescriptionTemplate = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      total = _useState7[0],\n      setTotal = _useState7[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var serializedForm = JSON.stringify({\n      batchName: batchName,\n      imageBaseUrl: imageBaseUrl,\n      inscriptionBaseUrl: inscriptionBaseUrl,\n      addressType: addressType,\n      titleTemplate: titleTemplate,\n      descriptionTemplate: descriptionTemplate,\n      total: total\n    });\n    console.log(serializedForm);\n  };\n\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    padding: \"25px\",\n    spacing: \"2rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"batch-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Batch Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"batch-name\",\n    \"aria-describedby\": \"batch-name-text\",\n    value: batchName,\n    onChange: function onChange(e) {\n      return setBatchName(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"batch-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Give it a unique name for this batch.\")), __jsx(FormControl, {\n    margin: \"55px\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"image-base-url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Image Base Url\"), __jsx(Input, {\n    type: \"text\",\n    id: \"image-base-url\",\n    \"aria-describedby\": \"image-base-url-text\",\n    value: imageBaseUrl,\n    onChange: function onChange(e) {\n      return setImageBaseUrl(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"image-base-url-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Enter the base url for the images in this batch.\")), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"inscription-base-url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Inscription Base Url\"), __jsx(Input, {\n    type: \"text\",\n    id: \"inscription-base-url\",\n    \"aria-describedby\": \"inscription-base-url-text\",\n    value: inscriptionBaseUrl,\n    onChange: function onChange(e) {\n      return setInscriptionBaseUrl(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"inscription-base-url-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Enter the base url for the inscriptions in this batch.\")), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"address-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Address Type\"), __jsx(Input, {\n    type: \"text\",\n    id: \"address-type\",\n    \"aria-describedby\": \"address-type-text\",\n    value: addressType,\n    onChange: function onChange(e) {\n      return setAddressType(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"address-type-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Enter the address type for the items in this batch.\")), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"title-template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Title Template\"), __jsx(Input, {\n    type: \"text\",\n    id: \"title-template\",\n    \"aria-describedby\": \"title-template-text\",\n    value: titleTemplate,\n    onChange: function onChange(e) {\n      return setTitleTemplate(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"title-template-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Enter the title template for the items in this batch.\")), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"description-template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Description Template\"), __jsx(Input, {\n    type: \"text\",\n    id: \"description-template\",\n    \"aria-describedby\": \"description-template-text\",\n    value: descriptionTemplate,\n    onChange: function onChange(e) {\n      return setDescriptionTemplate(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"description-template-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Enter the description template for the items in this batch.\")), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Total\"), __jsx(Input, {\n    type: \"number\",\n    id: \"total\",\n    \"aria-describedby\": \"total-text\",\n    value: total,\n    onChange: function onChange(e) {\n      return setTotal(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), __jsx(FormHelperText, {\n    id: \"total-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Enter the total number of items in this batch.\"))), __jsx(Button, {\n    variantColor: \"green\",\n    mt: 4,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Submit\"))));\n}\n\n_s(BatchAdd, \"m/P+HnOD6v2hso652zNjc9xwzUc=\");\n\n_c = BatchAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"BatchAdd\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/BatchAdd.tsx"],"names":["Flex","Stack","FormHelperText","FormControl","FormLabel","Input","Button","Box","useState","BatchAdd","batchName","setBatchName","imageBaseUrl","setImageBaseUrl","inscriptionBaseUrl","setInscriptionBaseUrl","addressType","setAddressType","titleTemplate","setTitleTemplate","descriptionTemplate","setDescriptionTemplate","total","setTotal","handleSubmit","event","preventDefault","serializedForm","JSON","stringify","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { Flex, Text, Stack, FormHelperText, FormControl, FormLabel, Input, Button, Box} from '@chakra-ui/core'\nimport { useState } from 'react';\n\n\nexport default function BatchAdd() {\n\n  const [batchName, setBatchName] = useState(\"\");\n  const [imageBaseUrl, setImageBaseUrl] = useState(\"\");\n  const [inscriptionBaseUrl, setInscriptionBaseUrl] = useState(\"\");\n  const [addressType, setAddressType] = useState(\"\");\n  const [titleTemplate, setTitleTemplate] = useState(\"\");\n  const [descriptionTemplate, setDescriptionTemplate] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const serializedForm = JSON.stringify({\n      batchName,\n      imageBaseUrl,\n      inscriptionBaseUrl,\n      addressType,\n      titleTemplate,\n      descriptionTemplate,\n      total\n    });\n    console.log(serializedForm);\n  };\n\n  return (  \n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n    <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n    \n        <form onSubmit={handleSubmit}>\n      <Stack direction=\"row\" align=\"flex-start\" padding=\"25px\" spacing=\"2rem\" flexWrap=\"wrap\" shouldWrapChildren>\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"batch-name\">Batch Name</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"batch-name\"\n            aria-describedby=\"batch-name-text\"\n            value={batchName}\n            onChange={(e) => setBatchName(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"batch-name-text\">Give it a unique name for this batch.</FormHelperText>\n        </FormControl>\n        \n        <FormControl margin=\"55px\" isRequired>\n          <FormLabel htmlFor=\"image-base-url\">Image Base Url</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"image-base-url\"\n            aria-describedby=\"image-base-url-text\"\n            value={imageBaseUrl}\n            onChange={(e) => setImageBaseUrl(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"image-base-url-text\">\n            Enter the base url for the images in this batch.\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"inscription-base-url\">Inscription Base Url</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"inscription-base-url\"\n            aria-describedby=\"inscription-base-url-text\"\n            value={inscriptionBaseUrl}\n            onChange={(e) => setInscriptionBaseUrl(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"inscription-base-url-text\">\n            Enter the base url for the inscriptions in this batch.\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"address-type\">Address Type</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"address-type\"\n            aria-describedby=\"address-type-text\"\n            value={addressType}\n            onChange={(e) => setAddressType(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"address-type-text\">\n            Enter the address type for the items in this batch.\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"title-template\">Title Template</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"title-template\"\n            aria-describedby=\"title-template-text\"\n            value={titleTemplate}\n            onChange={(e) => setTitleTemplate(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"title-template-text\">\n            Enter the title template for the items in this batch.\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"description-template\">Description Template</FormLabel>\n          <Input\n            type=\"text\"\n            id=\"description-template\"\n            aria-describedby=\"description-template-text\"\n            value={descriptionTemplate}\n            onChange={(e) => setDescriptionTemplate(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"description-template-text\">\n            Enter the description template for the items in this batch.\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel htmlFor=\"total\">Total</FormLabel>\n          <Input\n            type=\"number\"\n            id=\"total\"\n            aria-describedby=\"total-text\"\n            value={total}\n            onChange={(e) => setTotal(e.target.value)}\n            autoComplete=\"off\"\n          />\n          <FormHelperText id=\"total-text\">\n            Enter the total number of items in this batch.\n          </FormHelperText>\n        </FormControl>\n      </Stack>\n\n      <Button variantColor=\"green\" mt={4} type=\"submit\">\n        Submit\n      </Button>\n        </form>\n      </Box>\n   </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}