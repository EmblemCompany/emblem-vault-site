{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Flex } from '@chakra-ui/core';\nimport { Contract } from '@ethersproject/contracts';\n\nconst getContract = (address, abi, library, account) => {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nasync function checkApproval(handler, spending, library, account, amount, cb) {\n  if (amount > 0) {\n    let spendingContract = getContract(spending.address, spending.abi, library, account);\n    spendingContract.allowance(account, handler.address).then(allowance => {\n      return cb(allowance > amount);\n    });\n  }\n\n  return cb(false);\n}\n\nexport class Approval extends Component {\n  render() {\n    let handler = this.props.handler;\n    let spending = this.props.spending;\n    let amount = this.props.amount;\n    let label = this.props.label;\n    let library = this.props.library;\n    let account = this.props.account;\n    return checkApproval(handler, spending, library, account, amount, approved => {\n      return approved ? __jsx(React.Fragment, null) : __jsx(Flex, {\n        w: \"100%\",\n        flexWrap: \"wrap\",\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        backgroundColor: \"#02b402\",\n        color: \"black !important\",\n        fontWeight: \"bold !important\",\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, label));\n    });\n  }\n\n}\nexport default Approval;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","Component","Button","Flex","Contract","getContract","address","abi","library","account","getSigner","connectUnchecked","checkApproval","handler","spending","amount","cb","spendingContract","allowance","then","Approval","render","props","label","approved"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAMEC,MANF,EAOEC,IAPF,QASO,iBATP;AAYA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,KAAwC;AAC1D,SAAO,IAAIL,QAAJ,CAAaE,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAIA,eAAeC,aAAf,CAA6BC,OAA7B,EAAqEC,QAArE,EAA8GN,OAA9G,EAA4HC,OAA5H,EAA0IM,MAA1I,EAA0JC,EAA1J,EAAmK;AACjK,MAAID,MAAM,GAAG,CAAb,EAAgB;AACd,QAAIE,gBAAgB,GAAGZ,WAAW,CAACS,QAAQ,CAACR,OAAV,EAAmBQ,QAAQ,CAACP,GAA5B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAlC;AACAQ,IAAAA,gBAAgB,CAACC,SAAjB,CAA2BT,OAA3B,EAAoCI,OAAO,CAACP,OAA5C,EAAqDa,IAArD,CAA2DD,SAAD,IAAoB;AAC5E,aAAOF,EAAE,CAACE,SAAS,GAAGH,MAAb,CAAT;AACD,KAFD;AAGD;;AACD,SAAOC,EAAE,CAAC,KAAD,CAAT;AACD;;AAWD,OAAO,MAAMI,QAAN,SAAuBnB,SAAvB,CAAkD;AACvDoB,EAAAA,MAAM,GAAG;AACP,QAAIR,OAAO,GAAG,KAAKS,KAAL,CAAWT,OAAzB;AACA,QAAIC,QAAQ,GAAG,KAAKQ,KAAL,CAAWR,QAA1B;AACA,QAAIC,MAAM,GAAG,KAAKO,KAAL,CAAWP,MAAxB;AACA,QAAIQ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIf,OAAO,GAAG,KAAKc,KAAL,CAAWd,OAAzB;AACA,QAAIC,OAAO,GAAG,KAAKa,KAAL,CAAWb,OAAzB;AACA,WAAOG,aAAa,CAACC,OAAD,EAAUC,QAAV,EAAoBN,OAApB,EAA6BC,OAA7B,EAAsCM,MAAtC,EAA+CS,QAAD,IAAY;AAC5E,aAAOA,QAAQ,GACb,2BADa,GAGb,MAAC,IAAD;AAAM,QAAA,CAAC,EAAC,MAAR;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,eAAe,EAAE,SAAzB;AAAoC,QAAA,KAAK,EAAE,kBAA3C;AAA+D,QAAA,UAAU,EAAE,iBAA3E;AAA8F,QAAA,KAAK,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KADH,CADF,CAHF;AASD,KAVmB,CAApB;AAWD;;AAnBsD;AAsBzD,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\nasync function checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, library: any, account: any, amount: number, cb: any) {\n  if (amount > 0) {\n    let spendingContract = getContract(spending.address, spending.abi, library, account)\n    spendingContract.allowance(account, handler.address).then((allowance: any) => {\n      return cb(allowance > amount)\n    })    \n  }\n  return cb(false)\n}\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  library: any,\n  account: any,\n}\n\nexport class Approval extends Component<AttributesProps> {\n  render() {\n    let handler = this.props.handler\n    let spending = this.props.spending\n    let amount = this.props.amount\n    let label = this.props.label\n    let library = this.props.library\n    let account = this.props.account\n    return checkApproval(handler, spending, library, account, amount, (approved)=>{\n      return approved? (\n        <></>\n      ) : (\n        <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n          <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n            {label}\n          </Button>\n        </Flex>\n      )\n    })    \n  }\n}\n\nexport default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}