{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TradeControls.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Box, Button, Select } from '@chakra-ui/core';\nimport { contractAddresses } from '../constants';\nimport { TransactionToast } from './TransactionToast';\n\nvar _useState = useState(null),\n    offeringTokenId = _useState[0],\n    setOfferingTokenId = _useState[1];\n\nvar _useState2 = useState(null),\n    offeringTokenAllowed = _useState2[0],\n    setOfferingTokenAllowed = _useState2[1];\n\nvar _useState3 = useState(null),\n    acceptingOfferingIndex = _useState3[0],\n    setAcceptingOfferIndex = _useState3[1];\n\nvar _useState4 = useState(null),\n    acceptingTokenAllowed = _useState4[0],\n    setAcceptingTokenAllowed = _useState4[1];\n\nvar _useState5 = useState(null),\n    acceptingTokenId = _useState5[0],\n    setAcceptingTokenId = _useState5[1];\n\nvar _useState6 = useState(null),\n    hash = _useState6[0],\n    setHash = _useState6[1];\n\nexport var TradeControls = /*#__PURE__*/function (_Component) {\n  _inherits(TradeControls, _Component);\n\n  var _super = _createSuper(TradeControls);\n\n  function TradeControls(props) {\n    _classCallCheck(this, TradeControls);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TradeControls, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      function checkOfferingAllowance(_x) {\n        return _checkOfferingAllowance.apply(this, arguments);\n      }\n\n      function _checkOfferingAllowance() {\n        _checkOfferingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenId) {\n          var allowed;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return this.props.nftContract.getApproved(tokenId);\n\n                case 2:\n                  allowed = _context.sent;\n                  setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n        return _checkOfferingAllowance.apply(this, arguments);\n      }\n\n      function checkAcceptingAllowance(_x2) {\n        return _checkAcceptingAllowance.apply(this, arguments);\n      }\n\n      function _checkAcceptingAllowance() {\n        _checkAcceptingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenId) {\n          var allowed;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return this.props.nftContract.getApproved(tokenId);\n\n                case 2:\n                  allowed = _context2.sent;\n                  setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n        return _checkAcceptingAllowance.apply(this, arguments);\n      }\n\n      var approveOffer = function approveOffer(tokenId) {\n        // debugger\n        console.log(\"checking offer for\", tokenId);\n\n        _this.props.nftContract.approve(contractAddresses.nftrade[_this.props.chainId], tokenId && typeof tokenId === \"string\" ? tokenId : offeringTokenId).then(function (_ref) {\n          var hash = _ref.hash;\n          setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var makeOffer = function makeOffer(tokenId) {\n        ;\n\n        _this.props.tradeContract.addOffer(contractAddresses.emblemVault[_this.props.chainId], offeringTokenId, contractAddresses.emblemVault[chainId], tokenId).then(function (_ref2) {\n          var hash = _ref2.hash;\n          setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var acceptOffer = function acceptOffer() {\n        ;\n\n        _this.props.tradeContract.acceptOffer(contractAddresses.emblemVault[_this.props.chainId], acceptingTokenId, Number(acceptingOfferingIndex)).then(function (_ref3) {\n          var hash = _ref3.hash;\n          setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var rejectOffer = function rejectOffer() {\n        ;\n\n        _this.props.tradeContract.rejectOffer(contractAddresses.emblemVault[_this.props.chainId], acceptingTokenId, Number(acceptingOfferingIndex)).then(function (_ref4) {\n          var hash = _ref4.hash;\n          setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var flexSettings = {\n        flex: '1',\n        minW: '300px',\n        maxW: '300px',\n        borderWidth: '1px',\n        color: 'white',\n        mx: '6',\n        mb: '6',\n        rounded: 'lg',\n        overflow: 'hidden',\n        borderColor: this.props.vault.status == 'claimed' ? 'green !important' : '',\n        cursor: 'pointer'\n      };\n      return __jsx(Box, _extends({}, flexSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }), !this.props.vault.mine ? __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"94%\",\n        placeholder: \"Offer NFT\",\n        onChange: function onChange(e) {\n          var tokenId = e.target.value; // console.log(e.target.value)\n\n          setOfferingTokenId(tokenId);\n          checkOfferingAllowance(tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 35\n        }\n      }, this.props.myVaults.map(function (vault, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: _this.props.vault.tokenId,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 20\n          }\n        }, vault.name);\n      })) : __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"94%\",\n        placeholder: \"Offers\",\n        onChange: function onChange(e) {\n          var index = e.target.value;\n          console.log(e.target.value);\n          setAcceptingOfferIndex(index);\n          setAcceptingTokenId(_this.props.vault.tokenId);\n          checkAcceptingAllowance(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, this.props.vault.offers.map(function (offer, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 22\n          }\n        }, Number(offer.tokenId));\n      })), offeringTokenId && !this.props.vault.mine ? offeringTokenAllowed ? __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          makeOffer(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 77\n        }\n      }, \"Make Offer\") : __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: approveOffer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 34\n        }\n      }, \"Approve\") : null, acceptingOfferingIndex && this.props.vault.mine ? acceptingTokenAllowed ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          acceptOffer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 84\n        }\n      }, \"Accept Offer\") : __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          approveOffer(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 36\n        }\n      }, \"Approve\") : null, acceptingOfferingIndex && this.props.vault.mine ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          rejectOffer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 60\n        }\n      }, \"Reject Offer\") : null, hash ? __jsx(TransactionToast, {\n        hash: hash,\n        onComplete: function onComplete() {\n          setHash(null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }) : null);\n    }\n  }]);\n\n  return TradeControls;\n}(Component);\nexport default TradeControls;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TradeControls.tsx"],"names":["React","Component","useState","Box","Button","Select","contractAddresses","TransactionToast","offeringTokenId","setOfferingTokenId","offeringTokenAllowed","setOfferingTokenAllowed","acceptingOfferingIndex","setAcceptingOfferIndex","acceptingTokenAllowed","setAcceptingTokenAllowed","acceptingTokenId","setAcceptingTokenId","hash","setHash","TradeControls","props","checkOfferingAllowance","tokenId","nftContract","getApproved","allowed","checkAcceptingAllowance","approveOffer","console","log","approve","nftrade","chainId","then","makeOffer","tradeContract","addOffer","emblemVault","acceptOffer","Number","rejectOffer","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","borderColor","vault","status","cursor","mine","e","target","value","myVaults","map","index","name","offers","offer"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Input, FormHelperText, Select } from '@chakra-ui/core'\nimport { Contract } from '@ethersproject/contracts';\nimport { contractAddresses } from '../constants';\nimport { TransactionToast } from './TransactionToast';\n\nconst [offeringTokenId, setOfferingTokenId] = useState(null)\nconst [offeringTokenAllowed, setOfferingTokenAllowed] = useState(null)\nconst [acceptingOfferingIndex, setAcceptingOfferIndex] = useState(null)\nconst [acceptingTokenAllowed, setAcceptingTokenAllowed] = useState(null)\nconst [acceptingTokenId, setAcceptingTokenId] = useState(null)\nconst [hash, setHash] = useState(null)\n\ntype Vault = {\n  name: string,\n  tokenId: string\n}\ntype PropSettings = {\n  vault: {\n    mine: boolean,\n    status: string,\n    tokenId: string,\n    name: string,\n    offers: Array<Vault>\n  },\n  myVaults: Array<Vault>,\n  nftContract: Contract,\n  tradeContract: Contract,\n  chainId: number\n}\n\n\n\nexport class TradeControls extends Component<PropSettings> {\n\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    \n\n    async function checkOfferingAllowance(tokenId) {\n      let allowed = await this.props.nftContract.getApproved(tokenId)\n      setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n    }\n\n    async function checkAcceptingAllowance(tokenId) {\n      let allowed = await this.props.nftContract.getApproved(tokenId)\n      setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n    }\n\n    const approveOffer = (tokenId) => {\n      // debugger\n      console.log(\"checking offer for\", tokenId)\n        ; (this.props.nftContract as Contract)\n          .approve(contractAddresses.nftrade[this.props.chainId], (tokenId && typeof tokenId === \"string\" ? tokenId : offeringTokenId))\n          .then(({ hash }: { hash: string }) => {\n            setHash(hash)\n          })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const makeOffer = (tokenId) => {\n      ; (this.props.tradeContract as Contract)\n        .addOffer(contractAddresses.emblemVault[this.props.chainId], offeringTokenId, contractAddresses.emblemVault[chainId], tokenId)\n        .then(({ hash }: { hash: string }) => {\n          setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const acceptOffer = () => {\n      ; (this.props.tradeContract as Contract)\n        .acceptOffer(contractAddresses.emblemVault[this.props.chainId], acceptingTokenId, Number(acceptingOfferingIndex))\n        .then(({ hash }: { hash: string }) => {\n          setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const rejectOffer = () => {\n      ; (this.props.tradeContract as Contract)\n        .rejectOffer(contractAddresses.emblemVault[this.props.chainId], acceptingTokenId, Number(acceptingOfferingIndex))\n        .then(({ hash }: { hash: string }) => {\n          setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const flexSettings = {\n      flex: '1',\n      minW: '300px',\n      maxW: '300px',\n      borderWidth: '1px',\n      color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: this.props.vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer',\n    }\n    return (\n      <Box {...flexSettings}>\n        {!this.props.vault.mine ? <Select p={2} m={2} w=\"94%\" placeholder=\"Offer NFT\" onChange={e => {\n          let tokenId = e.target.value; // console.log(e.target.value)\n\n          setOfferingTokenId(tokenId);\n          checkOfferingAllowance(tokenId);\n        }}>\n          {this.props.myVaults.map((vault, index) => {\n            return <option key={index} value={this.props.vault.tokenId}>{vault.name}</option>;\n          })}\n        </Select> : <Select p={2} m={2} w=\"94%\" placeholder=\"Offers\" onChange={e => {\n          let index = e.target.value;\n          console.log(e.target.value);\n          setAcceptingOfferIndex(index);\n          setAcceptingTokenId(this.props.vault.tokenId);\n          checkAcceptingAllowance(this.props.vault.tokenId);\n        }}>\n            {this.props.vault.offers.map((offer, index) => {\n              return <option key={index} value={index}>{Number(offer.tokenId)}</option>;\n            })}\n          </Select>}\n        {offeringTokenId && !this.props.vault.mine ? offeringTokenAllowed ? <Button m={2} onClick={() => {\n          makeOffer(this.props.vault.tokenId);\n        }}>Make Offer</Button> : <Button m={2} w=\"94%\" onClick={approveOffer}>Approve</Button> : null}\n        {acceptingOfferingIndex && this.props.vault.mine ? acceptingTokenAllowed ? <Button m={2} w=\"94%\" onClick={() => {\n          acceptOffer();\n        }}>Accept Offer</Button> : <Button m={2} onClick={() => {\n          approveOffer(this.props.vault.tokenId);\n        }}>Approve</Button> : null}\n        {acceptingOfferingIndex && this.props.vault.mine ? <Button m={2} w=\"94%\" onClick={() => {\n          rejectOffer();\n        }}>Reject Offer</Button> : null}\n        {hash ? (\n      <TransactionToast\n          hash={hash}\n          onComplete={() => {\n            setHash(null)\n          }}\n        />\n      ): null }\n      </Box>\n    );\n  }\n}\nexport default TradeControls"]},"metadata":{},"sourceType":"module"}