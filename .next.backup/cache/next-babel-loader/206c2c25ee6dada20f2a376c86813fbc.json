{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Image } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nexport default function VaultList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      vaults = _React$useState2[0],\n      setVaults = _React$useState2[1];\n\n  var validImage = function validImage(data) {\n    if (data.includes('http')) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.emblemvault.io/vaults/' + account, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'service': 'evmetadata',\n                  'chainId': chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context.sent;\n              _context.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context.sent;\n              setVaults(jsonData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVaults();\n  }, []);\n  return __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, vaults.length ? vaults.map(function (vault) {\n    var url = './vault/?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: \"1\",\n      minW: \"300px\",\n      maxW: \"300px\",\n      borderWidth: \"1px\",\n      color: \"white\",\n      mx: \"6\",\n      mb: \"6\",\n      rounded: \"lg\",\n      overflow: \"hidden\"\n    };\n\n    var redirect = function redirect() {\n      alert(0);\n    };\n\n    return __jsx(Box, _extends({}, flexSettings, {\n      onClick: _this.redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, vault.name), __jsx(Image, {\n      src: validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\",\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), vault.values.length ? vault.values.map(function (coin) {\n      return __jsx(Text, {\n        key: coin.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, coin.balance, \" \", coin.name);\n    }) : __jsx(Text, {\n      as: \"h2\",\n      textAlign: \"center\",\n      w: \"100%\",\n      p: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"Nothing in here! Fill 'er up!\"));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS. \", \" \", __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"CREATE ONE HERE!\")));\n}\n\n_s(VaultList, \"159Y1YZHaM8GnKfFlxW8WZvvM5o=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = VaultList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VaultList\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx"],"names":["Box","Flex","Text","Link","Image","useWeb3React","React","useEffect","VaultList","props","account","chainId","useState","vaults","setVaults","validImage","data","includes","getVaults","fetch","method","headers","toString","responce","json","jsonData","length","map","vault","url","tokenId","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","redirect","alert","name","image","values","coin","balance"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Grid,\n  Text,\n  Link,\n  Image,\n  SimpleGrid\n} from \"@chakra-ui/core\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from \"react\";\n\nexport default function VaultList(props: any) {\n\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = React.useState([])\n  const validImage = function (data) {\n    if (data.includes('http')) {\n      return true\n    } else {\n      return false\n    }\n  }\n  const getVaults = async () => {\n    // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n    const responce = await fetch('https://api.emblemvault.io/vaults/' + account, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'service': 'evmetadata',\n        'chainId': chainId.toString()\n      },\n    })\n    const jsonData = await responce.json()\n    setVaults(jsonData)\n  }\n\n  useEffect(() => {\n    getVaults()\n  }, [])\n\n  return (\n    <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\">\n      {vaults.length ? vaults.map((vault) => {\n        var url = './vault/?id=' + vault.tokenId\n        const flexSettings = {\n          flex: \"1\",\n          minW: \"300px\",\n          maxW: \"300px\",\n          borderWidth: \"1px\",\n          color: \"white\",\n          mx: \"6\",\n          mb: \"6\",\n          rounded: \"lg\",\n          overflow: \"hidden\"\n        };\n        const redirect = function(){\n          alert(0)\n        }\n        return (\n          <Box {...flexSettings} onClick={this.redirect} >\n            <Text fontWeight=\"semibold\" textAlign=\"center\">{vault.name}</Text>\n            <Image src={validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\"} p={2} />\n            {\n              vault.values.length\n                ? vault.values.map((coin) => {\n                  return (\n                    <Text key={coin.name}>\n                      {coin.balance} {coin.name}\n                    </Text>\n                  )\n                })\n                : <Text as=\"h2\" textAlign=\"center\" w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n            }\n          </Box>\n        )\n      })\n        :\n        <Text>\n          YOU DON'T SEEM TO HAVE ANY VAULTS. {\" \"}\n          <Link color=\"#638cd8\" href=\"../create\">\n            CREATE ONE HERE!\n            </Link>\n        </Text>\n      }\n    </Flex>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}