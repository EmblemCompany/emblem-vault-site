{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\nimport { Generic } from './embed/Generic';\nimport Youtube from './embed/Youtube';\nimport Vimeo from './embed/Vimeo';\n\nvar getIPFSImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(hash) {\n    var responce, jsonData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gateway.ipfs.io/ipfs/' + hash, {\n              method: 'GET',\n              headers: {// redirect:'follow'\n              }\n            });\n\n          case 2:\n            responce = _context.sent;\n            _context.next = 5;\n            return responce.text();\n\n          case 5:\n            jsonData = _context.sent;\n\n            if (!jsonData.includes(\"data:image\")) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", jsonData);\n\n          case 10:\n            return _context.abrupt(\"return\", 'https://gateway.ipfs.io/ipfs/' + hash);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIPFSImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var Embed = /*#__PURE__*/function (_Component) {\n  _inherits(Embed, _Component);\n\n  var _super = _createSuper(Embed);\n\n  function Embed() {\n    _classCallCheck(this, Embed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Embed, [{\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = this.props.url || \"\";\n\n                if (!url.includes('ipfs://')) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.t0 = console;\n                _context2.next = 5;\n                return getIPFSImage(url.replace('ipfs://', ''));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n\n                _context2.t0.log.call(_context2.t0, _context2.t1);\n\n                console.log(url);\n                url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/');\n                console.log(url);\n\n              case 10:\n                return _context2.abrupt(\"return\", __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 11\n                  }\n                }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 11\n                  }\n                }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 11\n                  }\n                }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 11\n                  }\n                }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 11\n                  }\n                }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 11\n                  }\n                }) : url.includes('clara.io/') ? __jsx(Clara, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 11\n                  }\n                }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 11\n                  }\n                }) : url.includes('audius.co/') ? __jsx(Audius, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 11\n                  }\n                }) : url.includes('youtube.com') ? __jsx(Youtube, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 11\n                  }\n                }) : url.includes('vimeo.com') ? __jsx(Vimeo, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 11\n                  }\n                }) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') || url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') || url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? __jsx(Image, {\n                  p: \"20px\",\n                  h: \"100%\",\n                  className: this.props.className || \"d-block w-100\",\n                  src: url,\n                  width: \"250px\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 15\n                  }\n                }) : __jsx(Generic, {\n                  url: url,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 11\n                  }\n                })));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Embed;\n}(Component);\nexport default Embed;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx"],"names":["React","Component","Image","SketchFab","ShaderToy","Bandcamp","SoundCloud","Clyp","Sketchup","Clara","MyMiniFactory","Audius","Generic","Youtube","Vimeo","getIPFSImage","hash","fetch","method","headers","responce","text","jsonData","includes","Embed","url","props","console","replace","log","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validImage } from '../utils'\nimport { Image } from '@chakra-ui/core'\nimport SketchFab from './embed/SketchFab'\nimport ShaderToy from './embed/ShaderToy'\nimport Bandcamp from './embed/Bandcamp'\nimport SoundCloud from './embed/SoundCloud'\nimport Clyp from './embed/Clyp'\nimport Sketchup from './embed/Sketchup'\nimport Clara from './embed/Clara'\nimport MyMiniFactory from './embed/MyMiniFactory'\nimport { Audius } from './embed/Audius'\nimport { Generic } from './embed/Generic'\nimport Youtube from './embed/Youtube'\nimport Vimeo from './embed/Vimeo'\n\ntype EmbedProps = {\n  url: string,\n  className?: string\n}\n\nconst getIPFSImage = async function(hash){\n  // alert(0)\n  const responce = await fetch('https://gateway.ipfs.io/ipfs/'+hash, {\n    method: 'GET',\n    headers: {\n      // redirect:'follow'\n    },\n  })\n  let jsonData = await responce.text()\n  // setVaultImage(jsonData) \n  // const preview = document.querySelector('img.d-block') as HTMLImageElement\n  if (jsonData.includes(\"data:image\")) {\n    // preview.src = jsonData\n    return jsonData\n  } else {\n    // preview.src = 'https://gateway.ipfs.io/ipfs/'+hash\n    return 'https://gateway.ipfs.io/ipfs/'+hash\n  }\n}\n\nexport class Embed extends Component<EmbedProps> {\n  async render() {\n    let url = this.props.url || \"\"\n    if (url.includes('ipfs://')) {\n      console.log(await getIPFSImage(url.replace('ipfs://','')))\n      console.log(url)\n      url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')\n      console.log(url)\n      \n    }\n    return (\n      <>\n        {url.includes('sketchfab.com/') ? (\n          <SketchFab\n            url={url}\n          />\n        ) : url.includes('shadertoy.com/') ? (\n          <ShaderToy\n            url={url}\n          />\n        ) : url.includes('bandcamp.com/') ? (\n          <Bandcamp\n            url={url}\n          />\n        ) : url.includes('soundcloud.com/') ? (\n          <SoundCloud\n            url={url}\n          />\n        ) : url.includes('clyp.it/') ? (\n          <Clyp\n            url={url}\n          />\n        ) : url.includes('sketchup.com/') ? (\n          <Sketchup\n            url={url}\n          />\n        ) : url.includes('clara.io/') ? (\n          <Clara\n            url={url}\n          />\n        ) : url.includes('myminifactory.com/') ? (\n          <MyMiniFactory\n            url={url}\n          />\n        ) : url.includes('audius.co/') ? (\n          <Audius\n            url={url}\n          />\n        ) : url.includes('youtube.com') ? (\n          <Youtube\n            url={url}\n          />\n        ) : url.includes('vimeo.com') ? (\n          <Vimeo\n            url={url}\n          />\n        ) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') ||  url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') ||  url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? (\n              <Image\n                p={\"20px\"}\n                h={\"100%\"}\n                className={this.props.className || \"d-block w-100\"}\n                src={url}\n                width=\"250px\"\n              />\n        ) : (\n          <Generic\n            url={url}\n          />\n        )\n          }\n      </>\n    )\n  }\n}\n\nexport default Embed\n"]},"metadata":{},"sourceType":"module"}