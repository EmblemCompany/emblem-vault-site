{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Image, Text, Link } from '@chakra-ui/core';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nimport { validImage } from '../../utils';\nexport var CoinBalance = /*#__PURE__*/function (_Component) {\n  _inherits(CoinBalance, _Component);\n\n  var _super = _createSuper(CoinBalance);\n\n  function CoinBalance() {\n    _classCallCheck(this, CoinBalance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CoinBalance, [{\n    key: \"render\",\n    value: function render() {\n      var coin = this.props.coin;\n      return __jsx(HStack, {\n        w: \"300px\",\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, __jsx(Box, {\n        className: \"coin-image-container\",\n        w: \"100%\",\n        \"min-width\": \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }) : __jsx(Circle, {\n        size: \"40px\",\n        bg: \"gray\",\n        color: \"white\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, coin.symbol ? coin.symbol.toLowerCase() : coin.name)), __jsx(VStack, {\n        p: \"10px\",\n        w: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, __jsx(HStack, {\n        w: \"300px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, __jsx(Text, {\n        \"float\": \"left\",\n        fontWeight: \"bold\",\n        color: \"white\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, coin.name), __jsx(Text, {\n        \"float\": \"right\",\n        textAlign: \"right\",\n        fontWeight: \"bold\",\n        color: \"lightgreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, \"$\", coin && coin.price ? Number(coin.price.toFixed(2)).toLocaleString() : 0)), __jsx(HStack, {\n        w: \"100%\",\n        mt: 0,\n        spacing: \"4px\",\n        className: \"coin-display-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(Text, {\n        position: \"relative\",\n        fontSize: \"xs\",\n        left: \"-10px\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, coin && coin.balance ? Number(coin.balance.toFixed(3)).toLocaleString() : null, \" \", (coin.symbol ? coin.symbol : coin.name) + \" \", coin.type == 'nft' && coin.external_url ? __jsx(Link, {\n        href: coin.external_url,\n        isExternal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"View NFT\") : null), __jsx(Text, {\n        fontSize: \"xs\",\n        right: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, coin.coin.toLowerCase(), \" chain\"))));\n    }\n  }]);\n\n  return CoinBalance;\n}(Component);\nexport default CoinBalance;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx"],"names":["React","Component","Box","Image","Text","Link","HStack","VStack","Circle","validImage","CoinBalance","coin","props","address","toLowerCase","symbol","name","price","Number","toFixed","toLocaleString","colorMode","balance","type","external_url"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,IAJF,QAMO,iBANP;AAQA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAAQC,UAAR,QAA0B,aAA1B;AAkBA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,aACE,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,OAAV;AAAkB,QAAA,CAAC,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,CAAC,EAAC,MAAxC;AAA+C,qBAAU,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,OAAL,IAAgBJ,UAAU,CAAC,0CAAwCE,IAAI,CAACE,OAA7C,GAAqD,MAAtD,CAA1B,GACC,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,GAAG,EAAE,0CAAwCF,IAAI,CAACE,OAA7C,GAAqD,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAEGF,IAAI,CAACA,IAAL,IAAaF,UAAU,CAAC,0CAAwCE,IAAI,CAACA,IAAL,CAAUG,WAAV,EAAxC,GAAgE,MAAjE,CAAvB,GACF,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,GAAG,EAAE,0CAAwCH,IAAI,CAACA,IAAL,CAAUG,WAAV,EAAxC,GAAgE,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAGF,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAA8B,QAAA,KAAK,EAAC,OAApC;AAA4C,QAAA,WAAW,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,MAAL,GAAaJ,IAAI,CAACI,MAAL,CAAYD,WAAZ,EAAb,GAAwCH,IAAI,CAACK,IADhD,CANJ,CADJ,EAaI,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,CAAC,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,iBAAM,MAAZ;AAAmB,QAAA,UAAU,EAAC,MAA9B;AAAqC,QAAA,KAAK,EAAC,OAA3C;AAAmD,QAAA,WAAW,EAAE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuEL,IAAI,CAACK,IAA5E,CADF,EAEE,MAAC,IAAD;AAAM,iBAAM,OAAZ;AAAoB,QAAA,SAAS,EAAC,OAA9B;AAAsC,QAAA,UAAU,EAAC,MAAjD;AAAyD,QAAA,KAAK,EAAC,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+EL,IAAI,IAAIA,IAAI,CAACM,KAAb,GAAoBC,MAAM,CAACP,IAAI,CAACM,KAAL,CAAWE,OAAX,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,cAA9B,EAApB,GAAoE,CAAnJ,CAFF,CADF,EAKE,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAwB,QAAA,OAAO,EAAC,KAAhC;AAAsC,QAAA,SAAS,EAAG,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,QAAQ,EAAC,IAAnC;AAAwC,QAAA,IAAI,EAAC,OAA7C;AAAqD,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,IAAI,IAAIA,IAAI,CAACW,OAAb,GAAuBJ,MAAM,CAACP,IAAI,CAACW,OAAL,CAAaH,OAAb,CAAqB,CAArB,CAAD,CAAN,CAAgCC,cAAhC,EAAvB,GAAyE,IAD5E,OACmF,CAACT,IAAI,CAACI,MAAL,GAAaJ,IAAI,CAACI,MAAlB,GAA2BJ,IAAI,CAACK,IAAjC,IAAyC,GAD5H,EAEGL,IAAI,CAACY,IAAL,IAAa,KAAb,IAAsBZ,IAAI,CAACa,YAA3B,GACC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEb,IAAI,CAACa,YAAjB;AAA+B,QAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAIG,IANN,CADF,EASE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,IAAf;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCb,IAAI,CAACA,IAAL,CAAUG,WAAV,EAAlC,WATF,CALF,CAbJ,CADF;AAiCD;AApCH;;AAAA;AAAA,EAAiCb,SAAjC;AAuCA,eAAeS,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport {validImage } from '../../utils'\n\ntype CoinDetails = {\n  address: string,\n  coin: string,\n  name: string,\n  symbol: string,\n  type: string,\n  external_url: string,\n  balance: number,\n  price: number\n}\n\ntype CoinBalanceProps = {\n  coin: CoinDetails,\n  colorMode: string\n}\n\nexport class CoinBalance extends Component<CoinBalanceProps> {\n  render() {\n    let coin = this.props.coin\n    return (\n      <HStack w=\"300px\" p={2} >\n          <Box className=\"coin-image-container\" w=\"100%\" min-width=\"40px\">                                \n            {coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\") ? (\n              <Image width=\"40px\" src={\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\"}></Image>\n            ) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\")? (\n              <Image width=\"40px\" src={\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\"}></Image>\n            ) : (\n              <Circle size=\"40px\" bg=\"gray\" color=\"white\" isTruncated>\n                {coin.symbol? coin.symbol.toLowerCase(): coin.name}\n              </Circle>\n            )}\n          </Box>\n          \n          <VStack p=\"10px\" w=\"100%\">\n            <HStack w=\"300px\">\n              <Text float=\"left\" fontWeight=\"bold\" color=\"white\" isTruncated={true}>{coin.name}</Text>\n              <Text float=\"right\" textAlign=\"right\" fontWeight=\"bold\"  color=\"lightgreen\" >${coin && coin.price? Number(coin.price.toFixed(2)).toLocaleString(): 0  }</Text>\n            </HStack>\n            <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n              <Text position=\"relative\" fontSize=\"xs\" left=\"-10px\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"}>\n                {coin && coin.balance ? Number(coin.balance.toFixed(3)).toLocaleString(): null} {(coin.symbol? coin.symbol : coin.name) + \" \"} \n                {coin.type == 'nft' && coin.external_url ? (\n                  <Link href={coin.external_url} isExternal>\n                    View NFT\n                  </Link>\n                ) : null}\n              </Text>\n              <Text fontSize=\"xs\" right=\"40px\">{coin.coin.toLowerCase()} chain</Text>\n            </HStack>\n          </VStack>\n        </HStack>\n    )\n  }\n}\n\nexport default CoinBalance\n"]},"metadata":{},"sourceType":"module"}