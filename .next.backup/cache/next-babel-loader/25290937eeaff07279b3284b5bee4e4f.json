{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Image, Text, Link } from '@chakra-ui/core';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nimport { validImage } from '../../utils';\nexport var CoinBalance = /*#__PURE__*/function (_Component) {\n  _inherits(CoinBalance, _Component);\n\n  var _super = _createSuper(CoinBalance);\n\n  function CoinBalance() {\n    _classCallCheck(this, CoinBalance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CoinBalance, [{\n    key: \"render\",\n    value: function render() {\n      var coin = this.props.coin;\n      var mine = this.props.mine;\n      var onRenew = this.props.onRenew;\n      return __jsx(HStack, {\n        key: coin.name,\n        w: \"300px\",\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, __jsx(Box, {\n        className: \"coin-image-container\",\n        w: \"100%\",\n        \"min-width\": \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, coin.image ? __jsx(Image, {\n        className: \"NFT-image-small\",\n        width: \"40px\",\n        src: coin.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }) : coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }) : __jsx(Circle, {\n        size: \"40px\",\n        bg: \"gray\",\n        color: \"white\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, coin.symbol ? coin.symbol.toLowerCase() : coin.name)), __jsx(VStack, {\n        p: \"10px\",\n        w: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, __jsx(HStack, {\n        w: \"300px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, __jsx(Text, {\n        \"float\": \"left\",\n        width: \"50%\",\n        fontWeight: \"bold\",\n        color: this.props.colorMode == \"dark\" ? \"white\" : \"black\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, coin.name), __jsx(Text, {\n        \"float\": \"right\",\n        width: \"40%\",\n        textAlign: \"right\",\n        fontWeight: \"bold\",\n        color: this.props.colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"$\", coin && coin.price && coin.price > 0 ? Number(coin.price.toFixed(2)).toLocaleString() : 0)), __jsx(HStack, {\n        w: \"100%\",\n        mt: 0,\n        spacing: \"4px\",\n        className: \"coin-display-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, __jsx(Text, {\n        position: \"relative\",\n        fontSize: \"xs\",\n        width: \"50%\",\n        left: \"-10px\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, coin && coin.balance ? Number(Number(coin.balance).toFixed(3)).toLocaleString() : null, \" \", (coin.symbol ? coin.symbol : coin.project ? coin.project : coin.name) + \" \"), __jsx(Text, {\n        width: \"45%\",\n        textAlign: \"right\",\n        fontSize: \"xs\",\n        right: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, coin.coin.toLowerCase(), \" chain\")), __jsx(HStack, {\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, coin.type == 'nft' && coin.external_url ? __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        href: coin.external_url,\n        isExternal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, \"View NFT\") : null, coin.coin.toLowerCase() == 'nmc' && mine && coin.type == 'nft' ? __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        onClick: function onClick() {\n          onRenew(coin.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"Renew\") : null)));\n    }\n  }]);\n\n  return CoinBalance;\n}(Component);\nexport default CoinBalance;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx"],"names":["React","Component","Box","Image","Text","Link","HStack","VStack","Circle","validImage","CoinBalance","coin","props","mine","onRenew","name","image","address","toLowerCase","symbol","colorMode","price","Number","toFixed","toLocaleString","balance","project","type","external_url"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,IAJF,QAOO,iBAPP;AASA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAAQC,UAAR,QAA0B,aAA1B;AAwBA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,UAAIE,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,UAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAzB;AACA,aACE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAEH,IAAI,CAACI,IAAlB;AAAwB,QAAA,CAAC,EAAC,OAA1B;AAAkC,QAAA,CAAC,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,CAAC,EAAC,MAAxC;AAA+C,qBAAU,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEJ,IAAI,CAACK,KAAL,GACE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,KAAK,EAAC,MAAzC;AAAgD,QAAA,GAAG,EAAEL,IAAI,CAACK,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGAL,IAAI,CAACM,OAAL,IAAgBR,UAAU,CAAC,0CAAwCE,IAAI,CAACM,OAA7C,GAAqD,MAAtD,CAA1B,GACE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,GAAG,EAAE,0CAAwCN,IAAI,CAACM,OAA7C,GAAqD,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAEIN,IAAI,CAACA,IAAL,IAAaF,UAAU,CAAC,0CAAwCE,IAAI,CAACA,IAAL,CAAUO,WAAV,EAAxC,GAAgE,MAAjE,CAAvB,GACF,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,GAAG,EAAE,0CAAwCP,IAAI,CAACA,IAAL,CAAUO,WAAV,EAAxC,GAAgE,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAGF,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAA8B,QAAA,KAAK,EAAC,OAApC;AAA4C,QAAA,WAAW,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IAAI,CAACQ,MAAL,GAAaR,IAAI,CAACQ,MAAL,CAAYD,WAAZ,EAAb,GAAwCP,IAAI,CAACI,IADhD,CAVJ,CADJ,EAiBI,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,CAAC,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,iBAAM,MAAZ;AAAmB,QAAA,KAAK,EAAC,KAAzB;AAA+B,QAAA,UAAU,EAAC,MAA1C;AAAiD,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,SAAX,IAAsB,MAAtB,GAA8B,OAA9B,GAAuC,OAA/F;AAAwG,QAAA,WAAW,EAAE,IAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,IAAI,CAACI,IADR,CADF,EAIE,MAAC,IAAD;AAAM,iBAAM,OAAZ;AAAoB,QAAA,KAAK,EAAC,KAA1B;AAAgC,QAAA,SAAS,EAAC,OAA1C;AAAkD,QAAA,UAAU,EAAC,MAA7D;AAAoE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,SAAX,IAAsB,MAAtB,GAA8B,YAA9B,GAA4C,aAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACIT,IAAI,IAAIA,IAAI,CAACU,KAAb,IAAsBV,IAAI,CAACU,KAAL,GAAa,CAAnC,GAAuCC,MAAM,CAACX,IAAI,CAACU,KAAL,CAAWE,OAAX,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,cAA9B,EAAvC,GAAuF,CAD3F,CAJF,CADF,EASE,MAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,MAAV;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAwB,QAAA,OAAO,EAAC,KAAhC;AAAsC,QAAA,SAAS,EAAG,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,QAAQ,EAAC,IAAnC;AAAwC,QAAA,KAAK,EAAC,KAA9C;AAAoD,QAAA,IAAI,EAAC,OAAzD;AAAiE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWQ,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,IAAI,IAAIA,IAAI,CAACc,OAAb,GACDH,MAAM,CAACA,MAAM,CAACX,IAAI,CAACc,OAAN,CAAN,CAAqBF,OAArB,CAA6B,CAA7B,CAAD,CAAN,CAAwCC,cAAxC,EADC,GAC0D,IAF7D,OAEoE,CAACb,IAAI,CAACQ,MAAL,GAAaR,IAAI,CAACQ,MAAlB,GAA2BR,IAAI,CAACe,OAAL,GAAcf,IAAI,CAACe,OAAnB,GAA4Bf,IAAI,CAACI,IAA7D,IAAqE,GAFzI,CADF,EAKE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC,KAAZ;AAAkB,QAAA,SAAS,EAAC,OAA5B;AAAoC,QAAA,QAAQ,EAAC,IAA7C;AAAkD,QAAA,KAAK,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACA,IAAL,CAAUO,WAAV,EADH,WALF,CATF,EAkBE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IAAI,CAACgB,IAAL,IAAa,KAAb,IAAsBhB,IAAI,CAACiB,YAA3B,GACG,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWQ,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAArF;AAA6F,QAAA,IAAI,EAAET,IAAI,CAACiB,YAAxG;AAAsH,QAAA,UAAU,MAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,GAIK,IALR,EAMGjB,IAAI,CAACA,IAAL,CAAUO,WAAV,MAA2B,KAA3B,IAAoCL,IAApC,IAA4CF,IAAI,CAACgB,IAAL,IAAa,KAAzD,GACC,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWQ,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAArF;AAA6F,QAAA,OAAO,EAAE,mBAAI;AAACN,UAAAA,OAAO,CAACH,IAAI,CAACI,IAAN,CAAP;AAAmB,SAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAEG,IARN,CAlBF,CAjBJ,CADF;AAiDD;AAtDH;;AAAA;AAAA,EAAiCd,SAAjC;AAyDA,eAAeS,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport {validImage } from '../../utils'\n\ntype CoinDetails = {\n  address: string,\n  coin: string,\n  name: string,\n  symbol: string,\n  type: string,\n  external_url: string,\n  balance: number,\n  price: number,\n  project?: string,\n  projectLogo?: string,\n  projectUrl?: string,\n  image?: string\n}\n\ntype CoinBalanceProps = {\n  coin: CoinDetails,\n  colorMode: string,\n  mine: boolean,\n  onRenew: Function\n}\n\nexport class CoinBalance extends Component<CoinBalanceProps> {\n  render() {\n    let coin = this.props.coin\n    let mine = this.props.mine\n    let onRenew = this.props.onRenew\n    return (\n      <HStack key={coin.name} w=\"300px\" p={2} >\n          <Box className=\"coin-image-container\" w=\"100%\" min-width=\"40px\">                                \n            {\n            coin.image ? (\n              <Image className=\"NFT-image-small\" width=\"40px\" src={coin.image}></Image>\n            ) :\n            coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\") ? (\n              <Image width=\"40px\" src={\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\"}></Image>\n            ) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\")? (\n              <Image width=\"40px\" src={\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\"}></Image>\n            ) : (\n              <Circle size=\"40px\" bg=\"gray\" color=\"white\" isTruncated>\n                {coin.symbol? coin.symbol.toLowerCase(): coin.name}\n              </Circle>\n            )}\n          </Box>\n          \n          <VStack p=\"10px\" w=\"100%\">\n            <HStack w=\"300px\">\n              <Text float=\"left\" width=\"50%\" fontWeight=\"bold\" color={this.props.colorMode==\"dark\"? \"white\": \"black\"} isTruncated={true}>\n                {coin.name}\n              </Text>\n              <Text float=\"right\" width=\"40%\" textAlign=\"right\" fontWeight=\"bold\" color={this.props.colorMode==\"dark\"? \"lightgreen\": \"forestgreen\"} >\n                ${coin && coin.price && coin.price > 0 ? Number(coin.price.toFixed(2)).toLocaleString(): 0  }\n              </Text>\n            </HStack>\n            <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n              <Text position=\"relative\" fontSize=\"xs\" width=\"50%\" left=\"-10px\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"}>\n                {coin && coin.balance ? \n                Number(Number(coin.balance).toFixed(3)).toLocaleString() : null} {(coin.symbol? coin.symbol : coin.project? coin.project: coin.name) + \" \"} \n              </Text>              \n              <Text width=\"45%\" textAlign=\"right\" fontSize=\"xs\" right=\"40px\">\n                {coin.coin.toLowerCase()} chain\n              </Text>\n            </HStack>\n            <HStack width=\"100%\">\n              {coin.type == 'nft' && coin.external_url ? (\n                  <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} href={coin.external_url} isExternal>\n                    View NFT\n                  </Link>\n                ) : null}\n              {coin.coin.toLowerCase() == 'nmc' && mine && coin.type == 'nft' ? (\n                <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} onClick={()=>{onRenew(coin.name)}}>Renew</Link>\n              ) : null}\n            </HStack>\n          </VStack>\n        </HStack>\n    )\n  }\n}\n\nexport default CoinBalance\n"]},"metadata":{},"sourceType":"module"}