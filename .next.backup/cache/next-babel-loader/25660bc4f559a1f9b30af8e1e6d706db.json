{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Text, Box, Flex, Button, ButtonGroup, Divider, Select, Image, Input } from '@chakra-ui/core';\nimport { useRouter } from 'next/router';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { curatedContracts, curatedAssets, EMBLEM_V2_API, ORD_API } from '../constants';\nimport { Checkbox } from '@material-ui/core';\nlet tokenId = null;\nexport default function CreateCurated(props) {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: tabIndex,\n    1: setTabIndex\n  } = useState(0);\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    0: vaultAddress,\n    1: setVaultAddress\n  } = useState(account || '');\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    loaded: true,\n    private: false\n  });\n  const {\n    0: targetAsset,\n    1: setTargetAsset\n  } = useState({\n    name: '',\n    image: ''\n  });\n  const {\n    0: targetContract,\n    1: setTargetContract\n  } = useState({\n    name: '',\n    chain: '',\n    image: data => {\n      return '';\n    },\n    allowed: data => {\n      return false;\n    },\n    allowedName: data => {\n      return false;\n    },\n    placeholder: () => {\n      return '';\n    },\n    loading: () => {\n      return '';\n    },\n    loadTypes: []\n  });\n  const {\n    0: enableCurated,\n    1: setEnableCurated\n  } = useState(query.curated == 't');\n  const {\n    0: mintDisabled,\n    1: setMintDisabled\n  } = useState(true);\n  const {\n    0: curatedError,\n    1: setCuratedError\n  } = useState('');\n  const {\n    0: curatedContentType,\n    1: setCuratedContentType\n  } = useState('');\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false); // blank vault\n\n  const {\n    0: acceptedTos,\n    1: setAcceptedTos\n  } = useState(false); // ToS\n\n  const {\n    0: showTos,\n    1: setShowTos\n  } = useState(true); // ToS\n\n  const checkTOS = () => {\n    let tosMemory = localStorage.getItem('tos') == 'true';\n\n    if (!tosMemory) {\n      setAcceptedTos(false);\n      setShowTos(true);\n    } else {\n      setAcceptedTos(true);\n      setShowTos(false);\n    }\n  };\n\n  const handleTOSCheck = e => {\n    setAcceptedTos(e.target.checked);\n    localStorage.setItem('tos', e.target.checked);\n  };\n\n  const checkMintDisabled = () => {\n    console.log('disable me', !acceptedTos, mintDisabled, !acceptedTos || mintDisabled);\n    return !acceptedTos || mintDisabled;\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      private: state.private\n    });\n    let body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      chainId: chainId,\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    };\n    let apiSuffix = '/create-curated';\n    fetch(EMBLEM_V2_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      body: JSON.stringify(body)\n    }).then(async function (response) {\n      setState({\n        loaded: true,\n        private: state.private\n      });\n      let body = await response.json();\n      tokenId = body.data.tokenId || body.data.targetContract.tokenId;\n      setTimeout(() => {\n        location.href = location.origin + '/nft2?id=' + tokenId;\n      }, 500);\n    });\n  };\n\n  function getOrdinalRecord(num, cb) {\n    fetch(ORD_API + 'num/' + num, {\n      method: 'GET'\n    }).then(async function (response) {\n      let body = await response.json();\n      return cb(body.data[0]);\n    });\n  }\n\n  const {\n    0: acct,\n    1: setAcct\n  } = useState('');\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n      checkTOS();\n    }\n  }, [account, acct]);\n  let typingTimer;\n\n  function handleKeyUpNameInput(e) {\n    clearTimeout(typingTimer);\n    console.log(e.target.value);\n    typingTimer = setTimeout(() => {\n      let name = `${targetContract.name} ${e.target.value}`;\n\n      if (targetContract.allowedName(name)) {\n        setCuratedError('');\n        getOrdinalRecord(e.target.value, ordRecord => {\n          setCuratedContentType(ordRecord ? ordRecord.content_type : \"\");\n\n          if (targetContract.allowed(ordRecord)) {\n            setCuratedError('');\n            setMintDisabled(false);\n            setTargetAsset({\n              name: name,\n              image: targetContract.image(ordRecord)\n            });\n          } else {\n            setCuratedContentType(\"\");\n            setCuratedError(ordRecord ? `JSON/BRC-20 inscriptions not allowed` : 'Not a valid #');\n            setMintDisabled(true);\n            setTargetAsset({\n              name: '',\n              image: targetContract.placeholder()\n            });\n          }\n        });\n      } else {\n        setCuratedContentType(\"\");\n        setCuratedError('Invalid format: example (-1337)');\n        setMintDisabled(true);\n        setTargetAsset({\n          name: '',\n          image: ''\n        });\n      }\n    }, 1000);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: index => setTabIndex(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Create Curated Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }\n  }), __jsx(FormLabel, {\n    htmlFor: \"project-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 27\n    }\n  }, \"Choose Curated Collection\"), __jsx(Select, {\n    id: \"project-selector\",\n    w: \"100%\",\n    value: targetContract.name,\n    onChange: e => {\n      let contractData = curatedContracts.filter(item => {\n        return item.name == e.target.value;\n      })[0];\n      console.log('------', contractData);\n      setTargetContract(contractData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"---Choose Project---\"), curatedContracts.map(project => {\n    return enableCurated || project.name == 'Emblem Test' || project.name == 'Rare Pepe' || project.name == 'Cursed Ordinal' || project.name == 'Ethscription' ? __jsx(\"option\", {\n      value: project.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, project.name) : null;\n  })), targetContract.name && targetContract[\"_type\"] !== 'erc721' ? __jsx(Select, {\n    id: \"asset-selector\",\n    w: \"100%\",\n    value: targetAsset.name,\n    onChange: e => {\n      setMintDisabled(false);\n      setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(item => {\n        return item.name == e.target.value;\n      })[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 31\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, \"---Choose One---\"), curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(asset => {\n    return __jsx(\"option\", {\n      value: asset.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, asset.name);\n  }) : null) : targetContract.name && targetContract[\"_type\"] == 'erc721' ? __jsx(React.Fragment, null, targetContract.loadTypes.includes('input') ? __jsx(Input, {\n    isDisabled: checked,\n    onKeyUp: e => {\n      handleKeyUpNameInput(e);\n    },\n    w: \"100%\",\n    placeholder: `${targetContract.name} Number (-1337)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 35\n    }\n  }) : null, targetContract.loadTypes.includes('empty') ? __jsx(Box, {\n    my: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 35\n    }\n  }, __jsx(Checkbox, {\n    checked: checked,\n    onChange: e => {\n      if (e.target.checked) {\n        setTargetAsset({\n          name: \"Loading...\",\n          image: targetContract.loading()\n        });\n        setCuratedError('');\n        setCuratedContentType('');\n        setMintDisabled(false);\n        setChecked(true);\n      } else {\n        setTargetAsset({\n          name: '',\n          image: ''\n        });\n        setMintDisabled(true);\n        setChecked(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }), \"Inscription number unknown.\") : null, __jsx(React.Fragment, null, curatedError), __jsx(React.Fragment, null, curatedContentType)) : null, targetAsset.image ? __jsx(Image, {\n    p: \"20px\",\n    h: \"100%\",\n    className: \"d-block w-100\",\n    src: curatedContentType == 'text/plain;charset=utf-8' ? targetContract.placeholder() : targetAsset.image,\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 35\n    }\n  }) : null)))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, \"No Wallet Connected!\") : __jsx(Button, {\n    isDisabled: checkMintDisabled(),\n    onClick: e => {\n      handleSubmit(e);\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, \"Create \", targetContract.name.toString(), \" Vault\"))), showTos ? __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 23\n    }\n  }, __jsx(Checkbox, {\n    onClick: handleTOSCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 34\n    }\n  }), \"Agree to \", __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 79\n    }\n  }, \"Terms of Service\"))) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }, \"Terms of Service\")))))))));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx"],"names":["FormControl","FormLabel","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Text","Box","Flex","Button","ButtonGroup","Divider","Select","Image","Input","useRouter","Loader","useWeb3React","useEffect","useState","curatedContracts","curatedAssets","EMBLEM_V2_API","ORD_API","Checkbox","tokenId","CreateCurated","props","query","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","state","setState","loaded","private","targetAsset","setTargetAsset","name","image","targetContract","setTargetContract","chain","data","allowed","allowedName","placeholder","loading","loadTypes","enableCurated","setEnableCurated","curated","mintDisabled","setMintDisabled","curatedError","setCuratedError","curatedContentType","setCuratedContentType","checked","setChecked","acceptedTos","setAcceptedTos","showTos","setShowTos","checkTOS","tosMemory","localStorage","getItem","handleTOSCheck","e","target","setItem","checkMintDisabled","console","log","handleSubmit","evt","preventDefault","body","fromAddress","toAddress","experimental","apiSuffix","fetch","method","headers","service","JSON","stringify","then","response","json","setTimeout","location","href","origin","getOrdinalRecord","num","cb","acct","setAcct","typingTimer","handleKeyUpNameInput","clearTimeout","value","ordRecord","content_type","index","contractData","filter","item","map","project","asset","includes","toString"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Text,\n  Box,\n  Flex,\n  Button,\n  ButtonGroup,\n  Divider,\n  Select,\n  Image,\n  Input\n} from '@chakra-ui/core'\nimport { useRouter } from 'next/router'\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API, curatedContracts, curatedAssets, EMBLEM_V2_API, ORD_API } from '../constants'\nimport { Checkbox } from '@material-ui/core'\n\nlet tokenId = null\n\nexport default function CreateCurated(props: any) {\n  const { query } = useRouter()\n  const [tabIndex, setTabIndex] = useState(0)\n  const {account, chainId } = useWeb3React()\n  const [vaultAddress, setVaultAddress] = useState(account || '')\n  const [state, setState] = useState({ loaded: true, private: false })\n  const [targetAsset, setTargetAsset] = useState({name: '', image: ''})\n  const [targetContract, setTargetContract] = useState({name: '', chain: '', image:(data)=>{return ''}, allowed: (data)=>{return false}, allowedName: (data)=>{return false}, placeholder: ()=>{return ''}, loading: ()=>{return ''}, loadTypes: []})\n  const [enableCurated, setEnableCurated] = useState(query.curated == 't')\n  const [mintDisabled, setMintDisabled] = useState(true)\n  const [curatedError, setCuratedError] = useState('')\n  const [curatedContentType, setCuratedContentType] = useState('')\n  const [checked, setChecked] = useState(false) // blank vault\n  const [acceptedTos, setAcceptedTos] = useState(false) // ToS\n  const [showTos, setShowTos] = useState(true) // ToS\n\n  const checkTOS = ()=>{\n    let tosMemory = localStorage.getItem('tos') == 'true'\n    if (!tosMemory) {\n      setAcceptedTos(false)\n      setShowTos(true)\n    } else {\n      setAcceptedTos(true)\n      setShowTos(false)\n    }\n  }\n\n  const handleTOSCheck = (e)=>{\n    setAcceptedTos(e.target.checked)\n    localStorage.setItem('tos', e.target.checked)\n  }\n\n  const checkMintDisabled = ()=>{\n    console.log('disable me', !acceptedTos, mintDisabled, !acceptedTos || mintDisabled)\n    return !acceptedTos || mintDisabled\n  }\n  \n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n\n    setState({ loaded: false, private: state.private })\n    let body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      chainId: chainId,\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    }\n    let apiSuffix = '/create-curated'\n    fetch(EMBLEM_V2_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n      body: JSON.stringify(body),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      tokenId = body.data.tokenId || body.data.targetContract.tokenId\n      setTimeout(() => {\n        location.href = location.origin + '/nft2?id=' + tokenId\n      }, 500)\n    })\n  }\n\n  function getOrdinalRecord(num, cb){\n    fetch(ORD_API + 'num/' + num, {\n      method: 'GET',\n    }).then(async function (response) {\n      let body = await response.json()\n      return cb(body.data[0])\n    })    \n  }\n\n  const [acct, setAcct] = useState('')\n\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n      checkTOS()\n    }\n  }, [account, acct])\n\n  let typingTimer;\n\n  function handleKeyUpNameInput(e){\n    clearTimeout(typingTimer)\n    console.log(e.target.value)\n    typingTimer = setTimeout(() => {\n      let name = `${targetContract.name} ${e.target.value}`\n      if (targetContract.allowedName(name)) {\n        setCuratedError('')\n        getOrdinalRecord(e.target.value, (ordRecord)=>{\n          setCuratedContentType(ordRecord? ordRecord.content_type: \"\")\n          if (targetContract.allowed(ordRecord)){\n            setCuratedError('')            \n            setMintDisabled(false)\n            setTargetAsset({name: name, image: targetContract.image(ordRecord)})\n          } else {\n            setCuratedContentType(\"\")\n            setCuratedError(ordRecord? `JSON/BRC-20 inscriptions not allowed`: 'Not a valid #')\n            setMintDisabled(true)\n            setTargetAsset({name: '', image: targetContract.placeholder()})\n          }\n        })        \n      } else {\n        setCuratedContentType(\"\")\n        setCuratedError('Invalid format: example (-1337)')\n        setMintDisabled(true)\n        setTargetAsset({name: '', image: ''})\n      }      \n    }, 1000)\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Create Curated Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      \n                      <Box p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Stack align=\"center\" p={1}>\n                          <Divider />\n                          <FormLabel htmlFor=\"project-selector\">Choose Curated Collection</FormLabel>\n                          <Select id=\"project-selector\" w=\"100%\" value={targetContract.name}\n                            onChange={(e)=>{\n                              let contractData:any = curatedContracts.filter(item=>{return item.name == e.target.value})[0]\n                              console.log('------', contractData)\n                              setTargetContract(contractData)\n                            }}\n                          >\n                            <option value=\"\" >---Choose Project---</option>\n                            {curatedContracts.map(project=>{\n                              \n                              return enableCurated || project.name == 'Emblem Test' || project.name == 'Rare Pepe' || project.name == 'Cursed Ordinal' || project.name == 'Ethscription'? (\n                                <option value={project.name} >{project.name}</option>\n                              ) : null\n                            })}\n                            \n                          </Select>\n                          {targetContract.name && targetContract[\"_type\"] !== 'erc721' ? (\n                              <Select id=\"asset-selector\" w=\"100%\" value={targetAsset.name}\n                                onChange={(e)=>{\n                                  setMintDisabled(false)\n                                  setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(item=>{return item.name == e.target.value})[0])\n                                }}\n                              >\n                                <option value=\"\" >---Choose One---</option>\n                                {curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(asset=>{\n                                  return (\n                                    <option value={asset.name} >{asset.name}</option>\n                                  )\n                                }): null}\n                                \n                              </Select>\n                            ) : targetContract.name && targetContract[\"_type\"] == 'erc721'? (\n                              <>\n                                {targetContract.loadTypes.includes('input')? ( \n                                  <Input isDisabled={checked} onKeyUp={(e)=>{ handleKeyUpNameInput(e)}}  w=\"100%\" placeholder={`${targetContract.name} Number (-1337)`} ></Input>\n                                ): null}\n                                {targetContract.loadTypes.includes('empty')? ( \n                                  <Box my={3}>\n                                    <Checkbox \n                                      checked={checked}\n                                      onChange={(e)=>{\n                                        if (e.target.checked) {\n                                        setTargetAsset({name: \"Loading...\", image: targetContract.loading()})\n                                        setCuratedError('')\n                                        setCuratedContentType('')\n                                        setMintDisabled(false)\n                                        setChecked(true)\n                                        } else {\n                                          setTargetAsset({name: '', image: ''})\n                                          setMintDisabled(true)\n                                          setChecked(false)\n                                        }\n                                      }}\n                                    />\n                                    Inscription number unknown.\n                                  </Box>\n                                ): null}\n                                <>{curatedError}</>\n                                <>{curatedContentType}</>\n                              </>\n                            ):null}\n                            \n                            {targetAsset.image? (\n                                  <Image\n                                    p={\"20px\"}\n                                    h={\"100%\"}\n                                    className={\"d-block w-100\"}\n                                    src={curatedContentType == 'text/plain;charset=utf-8'? targetContract.placeholder() : targetAsset.image}\n                                    width=\"250px\"\n                                  />\n                                ): null}\n                        </Stack>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n                  {/* <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    {targetAsset.name? (\n                      <Text>Confirm: {targetAsset.name.toString()}</Text>\n                    ): null}\n                    \n                  </Stack> */}\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    \n                    <ButtonGroup spacing={4}>\n                      {!account ? (\n                        <Button isDisabled type=\"submit\">\n                          No Wallet Connected!\n                        </Button>\n                      ) : (\n                        <Button\n                        isDisabled={checkMintDisabled()}\n                          onClick={(e)=>{                            \n                            handleSubmit(e)\n                          }} \n                          type=\"submit\">\n                          Create {targetContract.name.toString()} Vault\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                    \n                  </Stack>\n                  { showTos ? (\n                    <Stack>\n                      <FormLabel><Checkbox onClick={handleTOSCheck}/>Agree to <a href=\"\">Terms of Service</a></FormLabel>\n                    </Stack>\n                  ): (\n                    <Text><a href=\"\">Terms of Service</a></Text>\n                  )}\n                </Stack>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}