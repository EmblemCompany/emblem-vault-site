{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { abi as HandlerABI } from './abi/handler.json';\nimport { abi as SalesABI } from './abi/sales.json';\nimport { abi as CovalABI } from './abi/coval.json';\nimport { abi as EmblemABI } from './abi/emblem.json';\nimport { abi as NftradeABI } from './abi/nftrade.json';\nimport { abi as ClaimedABI } from './abi/claimed.json';\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json';\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json';\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json';\nimport { abi as ERC721 } from './abi/EmblemVault.json';\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json';\nexport const BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nexport const COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nexport const isIPFS = process.env.IPFS === 'true';\nexport const isServerSide = true;\nconst {\n  API_OVERLOAD\n} = process.env;\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport const DEFAULT_APPROVE_MAX = true;\nexport const DEFAULT_DEADLINE = 60 * 20;\nexport const DEFAULT_SLIPPAGE = 50;\nexport const GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nexport const ZERO = JSBI.BigInt(0);\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const curatedTokens = [{\n  name: \"Rare Pepe\",\n  4: \"0x29a2D689dEefE9FD1eaDAe1511200c4d96E29427\"\n}, {\n  name: \"EMBLEM TEST\",\n  4: \"0x125355e3A87CB49ABD798bD96E7C5dA6F509cD09\"\n}];\nexport const contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0xedb9e7d618dddc081bd56014ea3842c67628b015',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0fd1082e83d6a3b8349caced12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xFd2E9C4F9820F475aE9d3C26B612e1be69FEC8F9'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\"\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155\n};\nexport const BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180';\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const EMBLEM_API = 'http://localhost:3001'; //API_OVERLOAD? API_OVERLOAD :'https://api.emblemvault.io' //\n\nexport let QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nexport const ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/constants.ts"],"names":["JSBI","abi","HandlerABI","SalesABI","CovalABI","EmblemABI","NftradeABI","ClaimedABI","VaultHandlerV8","ClonableFactory","ERC20","ERC721","ERC1155","BG","light","dark","COLOR","isIPFS","process","env","IPFS","isServerSide","API_OVERLOAD","ADDRESS_ZERO","DEFAULT_APPROVE_MAX","DEFAULT_DEADLINE","DEFAULT_SLIPPAGE","GAS_LIMIT_WHEN_MOCKING","ROUTER_ADDRESS","PERMIT_AND_CALL_ADDRESS","ZERO","BigInt","MAX_UINT256","curatedTokens","name","contractAddresses","salesFactory","salesAbi","vaultHandler","vaultHandlerAbi","emblemVault","emblemAbi","coval","covalAbi","nftrade","nftradeAbi","claimed","claimedAbi","vaultHandlerV8","vaultHandlerV8Abi","clonableFactoryAbi","erc20Abi","erc721Abi","erc1155Abi","BURN_ADDRESS","ZERO_ADDRESS","EMBLEM_API","QueryParameters","ERC20_BYTES32","constant","inputs","outputs","internalType","type","payable","stateMutability"],"mappings":"AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,GAAG,IAAIC,UAAhB,QAAkC,oBAAlC;AACA,SAASD,GAAG,IAAIE,QAAhB,QAAgC,kBAAhC;AACA,SAASF,GAAG,IAAIG,QAAhB,QAAgC,kBAAhC;AACA,SAASH,GAAG,IAAII,SAAhB,QAAiC,mBAAjC;AACA,SAASJ,GAAG,IAAIK,UAAhB,QAAkC,oBAAlC;AACA,SAASL,GAAG,IAAIM,UAAhB,QAAkC,oBAAlC;AACA,SAASN,GAAG,IAAIO,cAAhB,QAAsC,2BAAtC;AACA,SAASP,GAAG,IAAIQ,eAAhB,QAAuC,4BAAvC;AACA,SAASR,GAAG,IAAIS,KAAhB,QAA6B,wCAA7B;AACA,SAAST,GAAG,IAAIU,MAAhB,QAA8B,wBAA9B;AACA,SAASV,GAAG,IAAIW,OAAhB,QAA+B,8BAA/B;AAEA,OAAO,MAAMC,EAAE,GAAG;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,IAAI,EAAE;AAA1B,CAAX;AACP,OAAO,MAAMC,KAAK,GAAG;AAAEF,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAAd;AAEP,OAAO,MAAME,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,KAAqB,MAApC;AACP,OAAO,MAAMC,YAAY,OAAlB;AACP,MAAM;AAAEC,EAAAA;AAAF,IAAmBJ,OAAO,CAACC,GAAjC;AAEA,OAAO,MAAMI,YAAY,GAAG,4CAArB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,IAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,KAAK,EAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,EAAzB;AAEP,OAAO,MAAMC,sBAAsB,GAAG,MAA/B,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,4CAAvB,C,CACP;;AACA,OAAO,MAAMC,uBAAuB,GAAG,4CAAhC;AACP,OAAO,MAAMC,IAAI,GAAG9B,IAAI,CAAC+B,MAAL,CAAY,CAAZ,CAAb;AACP,OAAO,MAAMC,WAAW,GAAGhC,IAAI,CAAC+B,MAAL,CAAY,oEAAZ,CAApB;AAEP,OAAO,MAAME,aAAa,GAAG,CAC3B;AACEC,EAAAA,IAAI,EAAE,WADR;AAEE,KAAG;AAFL,CAD2B,EAK3B;AACEA,EAAAA,IAAI,EAAE,aADR;AAEE,KAAG;AAFL,CAL2B,CAAtB;AAUP,OAAO,MAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,YAAY,EAAE;AACZ,OAAG;AADS,GADiB;AAI/BC,EAAAA,QAAQ,EAAElC,QAJqB;AAK/BmC,EAAAA,YAAY,EAAE;AACZ,OAAG,4CADS;AAEZ,OAAG,4CAFS;AAGZ,WAAO,4CAHK;AAIZ,SAAK,4CAJO;AAKZ,SAAK,4CALO;AAMZ,QAAI,4CANQ;AAOZ,SAAK,4CAPO;AAQZ,UAAM;AARM,GALiB;AAe/BC,EAAAA,eAAe,EAAErC,UAfc;AAgB/BsC,EAAAA,WAAW,EAAE;AACX,OAAG,4CADQ;AAEX,OAAG,4CAFQ;AAGX,WAAO,4CAHI;AAIX,SAAK,4CAJM;AAKX,SAAK,4CALM;AAMX,QAAI,4CANO;AAOX,SAAK,4CAPM;AAQX,UAAM;AARK,GAhBkB;AA0B/BC,EAAAA,SAAS,EAAEpC,SA1BoB;AA2B/BqC,EAAAA,KAAK,EAAE;AACL,OAAG,4CADE;AAEL,OAAG,4CAFE;AAGL,WAAO,4CAHF;AAIL,SAAK,4CAJA;AAKL,SAAK,4CALA;AAML,QAAI,4CANC;AAOL,SAAK,4CAPA;AAQL,UAAM;AARD,GA3BwB;AAqC/BC,EAAAA,QAAQ,EAAEvC,QArCqB;AAsC/BwC,EAAAA,OAAO,EAAE;AACP,SAAK;AADE,GAtCsB;AAyC/BC,EAAAA,UAAU,EAAEvC,UAzCmB;AA0C/BwC,EAAAA,OAAO,EAAE;AACP,OAAG;AADI,GA1CsB;AA6C/BC,EAAAA,UAAU,EAAExC,UA7CmB;AA8C/ByC,EAAAA,cAAc,EAAE;AACd,OAAG,4CADW;AAEd,UAAM;AAFQ,GA9Ce;AAkD/BC,EAAAA,iBAAiB,EAAEzC,cAlDY;AAmD/B0C,EAAAA,kBAAkB,EAAEzC,eAnDW;AAoD/B0C,EAAAA,QAAQ,EAAEzC,KApDqB;AAqD/B0C,EAAAA,SAAS,EAAEzC,MArDoB;AAsD/B0C,EAAAA,UAAU,EAAEzC;AAtDmB,CAA1B;AA0DP,OAAO,MAAM0C,YAAY,GAAG,4CAArB;AACP,OAAO,MAAMC,YAAY,GAAG,4CAArB;AACP,OAAO,MAAMC,UAAU,GAAG,uBAAnB,C,CAA0C;;AAEjD,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAMZ,OAAO,MAAMC,aAAa,GAAG,CAC3B;AACEC,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,MAAM,EAAE,EAFV;AAGE1B,EAAAA,IAAI,EAAE,MAHR;AAIE2B,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2B5B,IAAAA,IAAI,EAAE,EAAjC;AAAqC6B,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAJX;AAKEC,EAAAA,OAAO,EAAE,KALX;AAMEC,EAAAA,eAAe,EAAE,MANnB;AAOEF,EAAAA,IAAI,EAAE;AAPR,CAD2B,EAU3B;AACEJ,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,MAAM,EAAE,EAFV;AAGE1B,EAAAA,IAAI,EAAE,QAHR;AAIE2B,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2B5B,IAAAA,IAAI,EAAE,EAAjC;AAAqC6B,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAJX;AAKEC,EAAAA,OAAO,EAAE,KALX;AAMEC,EAAAA,eAAe,EAAE,MANnB;AAOEF,EAAAA,IAAI,EAAE;AAPR,CAV2B,CAAtB","sourcesContent":["import { JSBI } from '@uniswap/sdk'\nimport { abi as HandlerABI } from './abi/handler.json'\nimport { abi as SalesABI } from './abi/sales.json'\nimport { abi as CovalABI } from './abi/coval.json'\nimport { abi as EmblemABI } from './abi/emblem.json'\nimport { abi as NftradeABI } from './abi/nftrade.json'\nimport { abi as ClaimedABI } from './abi/claimed.json'\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json'\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json'\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json'\nimport { abi as ERC721 } from './abi/EmblemVault.json'\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json'\n\nexport const BG = { light: 'gray.50', dark: 'gray.900' }\nexport const COLOR = { light: 'black', dark: 'white' }\n\nexport const isIPFS = process.env.IPFS === 'true'\nexport const isServerSide = typeof window === 'undefined'\nconst { API_OVERLOAD } = process.env;\n\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n\nexport const DEFAULT_APPROVE_MAX = true\nexport const DEFAULT_DEADLINE = 60 * 20\nexport const DEFAULT_SLIPPAGE = 50\n\nexport const GAS_LIMIT_WHEN_MOCKING = 500000\n\n// https://uniswap.org/docs/v2/smart-contracts/router02/\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n// https://github.com/NoahZinsmeister/permit-and-call\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B'\nexport const ZERO = JSBI.BigInt(0)\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport const curatedTokens = [\n  {\n    name: \"Rare Pepe\",\n    4: \"0x29a2D689dEefE9FD1eaDAe1511200c4d96E29427\"\n  },\n  {\n    name: \"EMBLEM TEST\",\n    4: \"0x125355e3A87CB49ABD798bD96E7C5dA6F509cD09\"\n  }\n]\nexport const contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0xedb9e7d618dddc081bd56014ea3842c67628b015',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0fd1082e83d6a3b8349caced12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xFd2E9C4F9820F475aE9d3C26B612e1be69FEC8F9'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\"\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155,\n\n}\n\nexport const BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180'\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\"\nexport const EMBLEM_API = 'http://localhost:3001'//API_OVERLOAD? API_OVERLOAD :'https://api.emblemvault.io' //\n\nexport enum QueryParameters {\n  INPUT = 'input',\n  OUTPUT = 'output',\n  CHAIN = 'chain',\n}\n\nexport const ERC20_BYTES32 = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n]\n"]},"metadata":{},"sourceType":"module"}