{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Image, Text, Link } from '@chakra-ui/core';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nimport { validImage } from '../../utils';\nexport class CoinBalance extends Component {\n  render() {\n    let coin = this.props.coin;\n    let mine = this.props.mine;\n    return __jsx(HStack, {\n      key: coin.name,\n      w: \"300px\",\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(Box, {\n      className: \"coin-image-container\",\n      w: \"100%\",\n      \"min-width\": \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, coin.image ? __jsx(Image, {\n      className: \"NFT-image-small\",\n      width: \"40px\",\n      src: coin.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }) : coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\") ? __jsx(Image, {\n      width: \"40px\",\n      src: \"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\") ? __jsx(Image, {\n      width: \"40px\",\n      src: \"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }) : __jsx(Circle, {\n      size: \"40px\",\n      bg: \"gray\",\n      color: \"white\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, coin.symbol ? coin.symbol.toLowerCase() : coin.name)), __jsx(VStack, {\n      p: \"10px\",\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(HStack, {\n      w: \"300px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      float: \"left\",\n      width: \"50%\",\n      fontWeight: \"bold\",\n      color: this.props.colorMode == \"dark\" ? \"white\" : \"black\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, coin.name), __jsx(Text, {\n      float: \"right\",\n      width: \"40%\",\n      textAlign: \"right\",\n      fontWeight: \"bold\",\n      color: this.props.colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"$\", coin && coin.price && coin.price > 0 ? Number(coin.price.toFixed(2)).toLocaleString() : 0)), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"50%\",\n      left: \"-10px\",\n      color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, coin && coin.balance ? Number(Number(coin.balance).toFixed(3)).toLocaleString() : null, \" \", (coin.symbol ? coin.symbol : coin.project ? coin.project : coin.name) + \" \"), __jsx(Text, {\n      width: \"45%\",\n      textAlign: \"right\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, coin.coin.toLowerCase(), \" chain\")), __jsx(HStack, {\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, coin.type == 'nft' && coin.external_url ? __jsx(Link, {\n      className: \"view-nft-link\",\n      color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n      href: coin.external_url,\n      isExternal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"View NFT\") : null, coin.coin.toLowerCase() == 'nmc' && mine && coin.type == 'nft' ? __jsx(Link, {\n      className: \"view-nft-link\",\n      color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n      onClick: () => {\n        console.log(\"RENEW\", coin.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Renew\") : null)));\n  }\n\n}\nexport default CoinBalance;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/CoinBalance.tsx"],"names":["React","Component","Box","Image","Text","Link","HStack","VStack","Circle","validImage","CoinBalance","render","coin","props","mine","name","image","address","toLowerCase","symbol","colorMode","price","Number","toFixed","toLocaleString","balance","project","type","external_url","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport {validImage } from '../../utils'\n\ntype CoinDetails = {\n  address: string,\n  coin: string,\n  name: string,\n  symbol: string,\n  type: string,\n  external_url: string,\n  balance: number,\n  price: number,\n  project?: string,\n  projectLogo?: string,\n  projectUrl?: string,\n  image?: string\n}\n\ntype CoinBalanceProps = {\n  coin: CoinDetails,\n  colorMode: string,\n  mine: boolean,\n  onRenew: Function\n}\n\nexport class CoinBalance extends Component<CoinBalanceProps> {\n  render() {\n    let coin = this.props.coin\n    let mine = this.props.mine\n    return (\n      <HStack key={coin.name} w=\"300px\" p={2} >\n          <Box className=\"coin-image-container\" w=\"100%\" min-width=\"40px\">                                \n            {\n            coin.image ? (\n              <Image className=\"NFT-image-small\" width=\"40px\" src={coin.image}></Image>\n            ) :\n            coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\") ? (\n              <Image width=\"40px\" src={\"https://token-icons.s3.amazonaws.com/\"+coin.address+\".png\"}></Image>\n            ) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\")? (\n              <Image width=\"40px\" src={\"https://s3.amazonaws.com/token-icons/\"+coin.coin.toLowerCase()+\".png\"}></Image>\n            ) : (\n              <Circle size=\"40px\" bg=\"gray\" color=\"white\" isTruncated>\n                {coin.symbol? coin.symbol.toLowerCase(): coin.name}\n              </Circle>\n            )}\n          </Box>\n          \n          <VStack p=\"10px\" w=\"100%\">\n            <HStack w=\"300px\">\n              <Text float=\"left\" width=\"50%\" fontWeight=\"bold\" color={this.props.colorMode==\"dark\"? \"white\": \"black\"} isTruncated={true}>\n                {coin.name}\n              </Text>\n              <Text float=\"right\" width=\"40%\" textAlign=\"right\" fontWeight=\"bold\" color={this.props.colorMode==\"dark\"? \"lightgreen\": \"forestgreen\"} >\n                ${coin && coin.price && coin.price > 0 ? Number(coin.price.toFixed(2)).toLocaleString(): 0  }\n              </Text>\n            </HStack>\n            <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n              <Text position=\"relative\" fontSize=\"xs\" width=\"50%\" left=\"-10px\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"}>\n                {coin && coin.balance ? \n                Number(Number(coin.balance).toFixed(3)).toLocaleString() : null} {(coin.symbol? coin.symbol : coin.project? coin.project: coin.name) + \" \"} \n              </Text>              \n              <Text width=\"45%\" textAlign=\"right\" fontSize=\"xs\" right=\"40px\">\n                {coin.coin.toLowerCase()} chain\n              </Text>\n            </HStack>\n            <HStack width=\"100%\">\n              {coin.type == 'nft' && coin.external_url ? (\n                  <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} href={coin.external_url} isExternal>\n                    View NFT\n                  </Link>\n                ) : null}\n              {coin.coin.toLowerCase() == 'nmc' && mine && coin.type == 'nft' ? (\n                <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} onClick={()=>{console.log(\"RENEW\", coin.name)}}>Renew</Link>\n              ) : null}\n            </HStack>\n          </VStack>\n        </HStack>\n    )\n  }\n}\n\nexport default CoinBalance\n"]},"metadata":{},"sourceType":"module"}