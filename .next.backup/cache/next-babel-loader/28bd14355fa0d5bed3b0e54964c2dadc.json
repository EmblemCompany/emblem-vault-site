{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, Button, ButtonGroup, Divider, useDisclosure, Select, Image } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { EMBLEM_API, curatedContracts, curatedAssets } from '../constants';\nvar tokenId,\n    cipherTextHash,\n    nonce,\n    signature = null;\nvar mintPassword = null;\nexport default function CreateCurated(props) {\n  _s();\n\n  var _this = this;\n\n  // modal\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(''),\n      modalResult = _useState2[0],\n      setModalResult = _useState2[1];\n\n  var _useState3 = useState(true),\n      showEditorButton = _useState3[0],\n      setShowEditorButton = _useState3[1];\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onToggle = _useDisclosure.onToggle;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState4 = useState(0),\n      tabIndex = _useState4[0],\n      setTabIndex = _useState4[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState5 = useState(account || ''),\n      vaultAddress = _useState5[0],\n      setVaultAddress = _useState5[1];\n\n  var _useState6 = useState('Public'),\n      vaultPubPriv = _useState6[0],\n      setVaultPubPriv = _useState6[1];\n\n  var _useState7 = useState(''),\n      vaultName = _useState7[0],\n      setVaultName = _useState7[1];\n\n  var _useState8 = useState(''),\n      vaultDesc = _useState8[0],\n      setVaultDesc = _useState8[1];\n\n  var _useState9 = useState(''),\n      vaultImage = _useState9[0],\n      setVaultImage = _useState9[1];\n\n  var _useState10 = useState(''),\n      ownedImage = _useState10[0],\n      setOwnedImage = _useState10[1];\n\n  var _useState11 = useState(''),\n      password = _useState11[0],\n      setPassword = _useState11[1]; // const [service, setService] = useState('')\n\n\n  var _useState12 = useState(false),\n      isCovalApproved = _useState12[0],\n      setIsCovalApproved = _useState12[1];\n\n  var _useState13 = useState({\n    loaded: true,\n    \"private\": false\n  }),\n      state = _useState13[0],\n      setState = _useState13[1];\n\n  var _useState14 = useState(null),\n      hash = _useState14[0],\n      setHash = _useState14[1]; // const [cipherTextHash, setCipherTextHash] = useState(null)\n  // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n  // const [nonce, setNonce] = useState(null)\n  // const [signature, setSignature] = useState(null)\n\n\n  var _useState15 = useState(true),\n      experimental = _useState15[0],\n      setExperimental = _useState15[1];\n\n  var _useState16 = useState(false),\n      showPreVaultMsg = _useState16[0],\n      setShowPreVaultMsg = _useState16[1];\n\n  var _useState17 = useState(false),\n      showMakingVaultMsg = _useState17[0],\n      setShowMakingVaultMsg = _useState17[1];\n\n  var _useState18 = useState(null),\n      decimals = _useState18[0],\n      setDecimals = _useState18[1];\n\n  var _useState19 = useState(null),\n      allowance = _useState19[0],\n      setAllowance = _useState19[1];\n\n  var _useState20 = useState(null),\n      balance = _useState20[0],\n      setBalance = _useState20[1];\n\n  var _useState21 = useState(null),\n      price = _useState21[0],\n      setPrice = _useState21[1];\n\n  var _useState22 = useState(false),\n      creating = _useState22[0],\n      setCreating = _useState22[1];\n\n  var _useState23 = useState(false),\n      approving = _useState23[0],\n      setApproving = _useState23[1];\n\n  var _useState24 = useState(''),\n      vaultKey = _useState24[0],\n      setVaultKey = _useState24[1];\n\n  var _useState25 = useState(''),\n      vaultValue = _useState25[0],\n      setVaultValue = _useState25[1];\n\n  var _useState26 = useState(false),\n      showEmbed = _useState26[0],\n      setShowEmbed = _useState26[1];\n\n  var _useState27 = useState({\n    name: '',\n    image: ''\n  }),\n      targetAsset = _useState27[0],\n      setTargetAsset = _useState27[1];\n\n  var _useState28 = useState({\n    name: '',\n    chain: ''\n  }),\n      targetContract = _useState28[0],\n      setTargetContract = _useState28[1];\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    var body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      ownedImage: ownedImage,\n      image: vaultImage,\n      chainId: chainId,\n      \"private\": state[\"private\"],\n      password: password || '',\n      values: [],\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    };\n\n    if (vaultKey && vaultValue) {\n      body.values.push({\n        \"key\": vaultKey,\n        value: vaultValue\n      });\n    }\n\n    console.log(JSON.stringify(body));\n    var apiSuffix = '/mint-curated'; //(chainId == 137 || chainId == 1) ? '/mint3' : '/mint'\n\n    fetch(EMBLEM_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body)\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context.sent;\n                tokenId = body.data.tokenId; // console.log(body.data.nonce, body.data.signature, body.data.cipherTextHash)\n                // if (chainId === 137 || chainId == 1) {\n\n                nonce = body.data.nonce;\n                signature = body.data.signature;\n                cipherTextHash = body.data.cipherTextHash; // fireMetaMask()\n                // alert(\"Minting has been disabled temporarily while we work with Opensea to solve a bug where new vaults are not showing. Mint ONLY if you don't plan on using Opensea\")\n\n                setShowPreVaultMsg(false);\n                setTimeout(function () {\n                  checkLiveliness(tokenId, function () {\n                    location.href = location.origin + '/nft2?id=' + tokenId;\n                  });\n                }, 500); // } else {\n                //   mintPassword = body.password\n                //   setHash(body.data.tx)\n                //   setShowPreVaultMsg(true)\n                // }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('#preview');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n\n    if (inputelement.files[0].size > 5000000) {\n      delete inputelement.files;\n      return alert('File too large');\n    } else {// alert('under')\n    }\n\n    reader.addEventListener('load', function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n      setShowEditorButton(true);\n      setModalResult('');\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  var _useState29 = useState(''),\n      acct = _useState29[0],\n      setAcct = _useState29[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  useEffect(function () {\n    account && chainId ? getContractStates() : null;\n  });\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Create Curated Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 27\n    }\n  }), __jsx(FormLabel, {\n    htmlFor: \"project-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 27\n    }\n  }, \"Choose Curated Collection\"), __jsx(Select, {\n    id: \"project-selector\",\n    w: \"100%\",\n    value: targetContract.name,\n    onChange: function onChange(e) {\n      var contractData = curatedContracts.filter(function (item) {\n        return item.name == e.target.value;\n      })[0];\n      setTargetContract(contractData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 27\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, \"---Choose Project---\"), curatedContracts.map(function (project) {\n    return __jsx(\"option\", {\n      value: project.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, project.name);\n  })), targetContract.name ? __jsx(Select, {\n    id: \"asset-selector\",\n    w: \"100%\",\n    value: targetAsset.name,\n    onChange: function onChange(e) {\n      setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(function (item) {\n        return item.name == e.target.value;\n      })[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 31\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, \"---Choose One---\"), curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(function (asset) {\n    return __jsx(\"option\", {\n      value: asset.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, asset.name);\n  }) : null) : null, targetAsset.name ? __jsx(Image, {\n    p: \"20px\",\n    h: \"100%\",\n    className: \"d-block w-100\",\n    src: targetAsset.image,\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 35\n    }\n  }) : null)))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"No Wallet Connected!\") : __jsx(Button, {\n    onClick: function onClick(e) {\n      handleSubmit(e);\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, \"Create Vault\"))))))))));\n}\n\n_s(CreateCurated, \"DsEP4Z5aT7WF7lH7cwQ5M7NDEFk=\", false, function () {\n  return [useDisclosure, useRouter, useWeb3React];\n});\n\n_c = CreateCurated;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCurated\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx"],"names":["FormControl","FormLabel","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","Button","ButtonGroup","Divider","useDisclosure","Select","Image","Loader","useWeb3React","useEffect","useState","useRouter","EMBLEM_API","curatedContracts","curatedAssets","tokenId","cipherTextHash","nonce","signature","mintPassword","CreateCurated","props","modalVisible","setModalVisible","modalResult","setModalResult","showEditorButton","setShowEditorButton","isOpen","onToggle","query","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","ownedImage","setOwnedImage","password","setPassword","isCovalApproved","setIsCovalApproved","loaded","state","setState","hash","setHash","experimental","setExperimental","showPreVaultMsg","setShowPreVaultMsg","showMakingVaultMsg","setShowMakingVaultMsg","decimals","setDecimals","allowance","setAllowance","balance","setBalance","price","setPrice","creating","setCreating","approving","setApproving","vaultKey","setVaultKey","vaultValue","setVaultValue","showEmbed","setShowEmbed","name","image","targetAsset","setTargetAsset","chain","targetContract","setTargetContract","handleSubmit","evt","preventDefault","body","fromAddress","toAddress","description","values","push","value","console","log","JSON","stringify","apiSuffix","fetch","method","headers","service","then","response","json","data","setTimeout","checkLiveliness","location","href","origin","previewFile","preview","document","querySelector","inputelement","reader","FileReader","files","size","alert","addEventListener","src","result","toString","readAsDataURL","acct","setAcct","getContractStates","index","e","contractData","filter","item","target","map","project","asset"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  Input,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex,\n  RadioGroup,\n  Radio,\n  Textarea,\n  Button,\n  ButtonGroup,\n  Text,\n  Divider,\n  Alert,\n  AlertIcon,\n  Collapse,\n  useDisclosure,\n  Select,\n  Image\n} from '@chakra-ui/core'\n\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API, contractAddresses, curatedContracts, curatedAssets } from '../constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { useContract } from '../hooks'\nimport { isETHAddress } from '../utils'\nimport Embed from './Embed'\n\n\nlet tokenId, cipherTextHash, nonce, signature = null\nlet mintPassword = null\n\nexport default function CreateCurated(props: any) {\n  // modal\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalResult, setModalResult] = useState('');\n  const [showEditorButton, setShowEditorButton] = useState(true);\n\n  const { isOpen, onToggle } = useDisclosure()\n  const { query } = useRouter()\n  const [tabIndex, setTabIndex] = useState(0)\n  const { account, chainId } = useWeb3React()\n  const [vaultAddress, setVaultAddress] = useState(account || '')\n  const [vaultPubPriv, setVaultPubPriv] = useState('Public')\n  const [vaultName, setVaultName] = useState('')\n  const [vaultDesc, setVaultDesc] = useState('')\n  const [vaultImage, setVaultImage] = useState('')\n  const [ownedImage, setOwnedImage] = useState('')\n  const [password, setPassword] = useState('')\n  // const [service, setService] = useState('')\n  const [isCovalApproved, setIsCovalApproved] = useState(false)\n  const [state, setState] = useState({ loaded: true, private: false })\n  const [hash, setHash] = useState(null)\n  // const [cipherTextHash, setCipherTextHash] = useState(null)\n  // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n  // const [nonce, setNonce] = useState(null)\n  // const [signature, setSignature] = useState(null)\n  const [experimental, setExperimental] = useState(true)\n  const [showPreVaultMsg, setShowPreVaultMsg] = useState(false)\n  const [showMakingVaultMsg, setShowMakingVaultMsg] = useState(false)\n  const [decimals, setDecimals] = useState(null)\n  const [allowance, setAllowance] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [price, setPrice] = useState(null)\n  const [creating, setCreating] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [vaultKey, setVaultKey] = useState('')  \n  const [vaultValue, setVaultValue] = useState('')\n \n  const [showEmbed, setShowEmbed] = useState(false)\n\n  const [targetAsset, setTargetAsset] = useState({name: '', image: ''})\n  const [targetContract, setTargetContract] = useState({name: '', chain: ''})\n  \n\n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n\n    setState({ loaded: false, private: state.private })\n    let body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      ownedImage: ownedImage,\n      image: vaultImage,\n      chainId: chainId,\n      private: state.private,\n      password: password || '',\n      values: [],\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    }\n    if (vaultKey && vaultValue) {\n      body.values.push({\"key\": vaultKey, value: vaultValue})\n    }\n    console.log(JSON.stringify(body))\n    let apiSuffix = '/mint-curated' //(chainId == 137 || chainId == 1) ? '/mint3' : '/mint'\n    fetch(EMBLEM_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      tokenId = body.data.tokenId\n      // console.log(body.data.nonce, body.data.signature, body.data.cipherTextHash)\n      // if (chainId === 137 || chainId == 1) {\n        nonce = body.data.nonce\n        signature = body.data.signature\n        cipherTextHash = body.data.cipherTextHash\n        // fireMetaMask()\n        // alert(\"Minting has been disabled temporarily while we work with Opensea to solve a bug where new vaults are not showing. Mint ONLY if you don't plan on using Opensea\")\n        setShowPreVaultMsg(false)\n        setTimeout(() => {\n        checkLiveliness(tokenId, ()=>{\n          location.href = location.origin + '/nft2?id=' + tokenId\n        })\n      }, 500)\n      // } else {\n      //   mintPassword = body.password\n      //   setHash(body.data.tx)\n      //   setShowPreVaultMsg(true)\n      // }\n    })\n  }\n\n  function previewFile() {\n    const preview = document.querySelector('#preview') as HTMLImageElement\n    const inputelement = document.querySelector('input[type=file]') as HTMLInputElement //.files[0];\n    const reader = new FileReader()\n    if (inputelement.files[0].size > 5000000) {\n      delete inputelement.files\n      return alert('File too large')\n    } else {\n      // alert('under')\n    }\n    reader.addEventListener(\n      'load',\n      function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || ''\n        if (preview) setVaultImage(preview.src)\n        setShowEditorButton(true)\n        setModalResult('')\n      },\n      false\n    )\n\n    if (inputelement.files) {\n\n      \n      reader.readAsDataURL(inputelement.files[0])\n    }\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n    }\n  }, [account, acct])\n\n  useEffect(() => {\n    account && chainId ? getContractStates() : null\n  })\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Create Curated Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      \n                      <Box p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Stack align=\"center\" p={1}>\n                          <Divider />\n                          <FormLabel htmlFor=\"project-selector\">Choose Curated Collection</FormLabel>\n                          <Select id=\"project-selector\" w=\"100%\" value={targetContract.name}\n                            onChange={(e)=>{\n                              let contractData:any = curatedContracts.filter(item=>{return item.name == e.target.value})[0]\n                              setTargetContract(contractData)\n                            }}\n                          >\n                            <option value=\"\" >---Choose Project---</option>\n                            {curatedContracts.map(project=>{\n                              return (\n                                <option value={project.name} >{project.name}</option>\n                              )\n                            })}\n                            \n                          </Select>\n                          {targetContract.name ? (\n                              <Select id=\"asset-selector\" w=\"100%\" value={targetAsset.name}\n                                onChange={(e)=>{\n                                  setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(item=>{return item.name == e.target.value})[0])\n                                }}\n                              >\n                                <option value=\"\" >---Choose One---</option>\n                                {curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(asset=>{\n                                  return (\n                                    <option value={asset.name} >{asset.name}</option>\n                                  )\n                                }): null}\n                                \n                              </Select>\n                            ) : null}\n                            {targetAsset.name? (\n                                  <Image\n                                    p={\"20px\"}\n                                    h={\"100%\"}\n                                    className={\"d-block w-100\"}\n                                    src={targetAsset.image}\n                                    width=\"250px\"\n                                  />\n                                ): null}\n                        </Stack>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      {!account ? (\n                        <Button isDisabled type=\"submit\">\n                          No Wallet Connected!\n                        </Button>\n                      ) : (\n                        <Button onClick={(e)=>{handleSubmit(e)}} type=\"submit\">\n                          Create Vault\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Stack>\n\n                </Stack>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}