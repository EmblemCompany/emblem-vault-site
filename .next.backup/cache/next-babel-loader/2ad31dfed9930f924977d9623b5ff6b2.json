{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/embed/NFTSlideshow.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Container from 'react-bootstrap/Container';\nimport { Box, Stack } from '@chakra-ui/core';\nimport Embed from '../Embed';\nexport var NFTSlideshow = /*#__PURE__*/function (_Component) {\n  _inherits(NFTSlideshow, _Component);\n\n  var _super = _createSuper(NFTSlideshow);\n\n  function NFTSlideshow() {\n    _classCallCheck(this, NFTSlideshow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NFTSlideshow, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var items = [{\n        image: this.props.image,\n        name: this.props.name,\n        type: \"nft\"\n      }];\n      items = items.concat(this.props.items);\n      items = items.filter(function (item) {\n        return item.image !== \"\" && item.type == \"nft\";\n      });\n      console.log(\"items\", items);\n      return __jsx(Container, {\n        className: \"p-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(Carousel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, items.map(function (item, index) {\n        return __jsx(Carousel.Item, {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }, __jsx(Stack, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }\n        }, __jsx(Box, {\n          style: \"text-align:center;\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, __jsx(Embed, {\n          url: item.image,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }\n        })), __jsx(Box, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, __jsx(Carousel.Caption, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }\n        }, __jsx(\"h3\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }, item.name)))));\n      })));\n    }\n  }]);\n\n  return NFTSlideshow;\n}(Component);\n;\nexport default NFTSlideshow;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/embed/NFTSlideshow.tsx"],"names":["React","Component","Carousel","Container","Box","Stack","Embed","NFTSlideshow","items","image","props","name","type","concat","filter","item","console","log","map","index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAAQC,GAAR,EAAaC,KAAb,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAgBA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEW;AAAA;;AACP,UAAIC,KAAK,GAAG,CAAC;AAACC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAnB;AAA0BE,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAA3C;AAAiDC,QAAAA,IAAI,EAAE;AAAvD,OAAD,CAAZ;AACAJ,MAAAA,KAAK,GAAGA,KAAK,CAACK,MAAN,CAAa,KAAKH,KAAL,CAAWF,KAAxB,CAAR;AACAA,MAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAa,UAAAC,IAAI,EAAE;AAAC,eAAOA,IAAI,CAACN,KAAL,KAAe,EAAf,IAAqBM,IAAI,CAACH,IAAL,IAAa,KAAzC;AAA+C,OAAnE,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;AACA,aACI,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACU,GAAN,CAAU,UAACH,IAAD,EAAOI,KAAP,EAAe;AACxB,eACE,MAAC,QAAD,CAAU,IAAV;AAAe,UAAA,GAAG,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,MAAC,KAAD;AAAO,UAAA,GAAG,EAAEJ,IAAI,CAACN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EASE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACJ,IAAV,CADF,CADF,CATF,CADF,CADF;AAoBD,OArBA,CADH,CADF,CADJ;AA4BD;AAnCH;;AAAA;AAAA,EAAkCV,SAAlC;AAoCC;AAED,eAAeM,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Carousel from 'react-bootstrap/Carousel';\nimport Container from 'react-bootstrap/Container';\nimport {Box, Stack} from '@chakra-ui/core'\nimport Embed from '../Embed'\ntype ImageProp = {\n  image: string,\n  description: string,\n  name: string,\n  type: string\n}\n\ntype NFTSlideshowProps = {\n  name: string,\n  image: string,\n  items: Array<ImageProp>,\n  properties: Object\n}\n\n\nexport class NFTSlideshow extends Component<NFTSlideshowProps> {\n  \n  render() {\n    let items = [{image: this.props.image, name: this.props.name, type: \"nft\"}]\n    items = items.concat(this.props.items)\n    items = items.filter(item=>{return item.image !== \"\" && item.type == \"nft\"})\n    console.log(\"items\", items)\n    return (\n        <Container className=\"p-3\">\n          <Carousel>\n            {items.map((item, index)=>{\n              return (\n                <Carousel.Item key={index}>\n                  <Stack>\n                    <Box style=\"text-align:center;\">\n                      {/* <img\n                        className=\"d-block w-100\"\n                        src={item.image}\n                        alt=\"First slide\"\n                      /> */}\n                      <Embed url={item.image}/>\n                    </Box>\n                    <Box>\n                      <Carousel.Caption>\n                        <h3>{item.name}</h3>\n                        {/* <p>{item.description}</p> */}\n                      </Carousel.Caption>\n                    </Box>\n                  </Stack>\n                </Carousel.Item>   \n              )\n            })}                     \n          </Carousel>\n        </Container>\n    );\n  }\n};\n\nexport default NFTSlideshow;"]},"metadata":{},"sourceType":"module"}