{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { Image, Icon } from '@chakra-ui/core';\nimport { WETH } from '@uniswap/sdk';\nlet BROKEN = {};\nexport default function TokenLogo({\n  token,\n  size\n}) {\n  var _BROKEN$token$chainId;\n\n  let src;\n\n  if (token.equals(WETH[token.chainId])) {\n    src = 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png';\n  } else if (token.name === \"Circuits of Value\") {\n    src = \"https://circuitsofvalue.com/public/coval-logo.png\";\n  } else {\n    src = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`;\n  }\n\n  const {\n    1: setDummy\n  } = useState(0);\n\n  if (!((_BROKEN$token$chainId = BROKEN[token.chainId]) === null || _BROKEN$token$chainId === void 0 ? void 0 : _BROKEN$token$chainId[token.address])) {\n    return __jsx(Image, {\n      src: src,\n      minHeight: size,\n      maxHeight: size,\n      maxWidth: size,\n      minWidth: size,\n      objectFit: \"contain\",\n      onError: () => {\n        var _BROKEN;\n\n        BROKEN = _objectSpread(_objectSpread({}, BROKEN), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_BROKEN = BROKEN) === null || _BROKEN === void 0 ? void 0 : _BROKEN[token.chainId]), {}, {\n            [token.address]: true\n          })\n        });\n        setDummy(dummy => dummy + 1);\n      },\n      ignoreFallback: true\n    });\n  } else {\n    return __jsx(Icon, {\n      width: size,\n      height: size,\n      name: \"question-outline\"\n    });\n  }\n}\nlet SWATCHES = {};\nexport function TokenLogoColor({\n  token,\n  children\n}) {\n  var _BROKEN$token$chainId3, _SWATCHES$token$chain2;\n\n  const {\n    1: setDummy\n  } = useState(0);\n  useEffect(() => {\n    var _BROKEN$token$chainId2, _SWATCHES$token$chain;\n\n    if (!!token && !token.equals(WETH[token.chainId]) && !((_BROKEN$token$chainId2 = BROKEN[token.chainId]) === null || _BROKEN$token$chainId2 === void 0 ? void 0 : _BROKEN$token$chainId2[token.address]) && !((_SWATCHES$token$chain = SWATCHES[token.chainId]) === null || _SWATCHES$token$chain === void 0 ? void 0 : _SWATCHES$token$chain[token.address])) {\n      let stale = false;\n      import('node-vibrant').then(({\n        default: Vibrant\n      }) => Vibrant.from(`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`).getPalette().then(palette => {\n        var _SWATCHES;\n\n        SWATCHES = _objectSpread(_objectSpread({}, SWATCHES), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_SWATCHES = SWATCHES) === null || _SWATCHES === void 0 ? void 0 : _SWATCHES[token.chainId]), {}, {\n            [token.address]: palette.Vibrant\n          })\n        });\n\n        if (!stale) {\n          setDummy(dummy => dummy + 1);\n        }\n      }).catch(() => {\n        var _BROKEN2;\n\n        BROKEN = _objectSpread(_objectSpread({}, BROKEN), {}, {\n          [token.chainId]: _objectSpread(_objectSpread({}, (_BROKEN2 = BROKEN) === null || _BROKEN2 === void 0 ? void 0 : _BROKEN2[token.chainId]), {}, {\n            [token.address]: true\n          })\n        });\n\n        if (!stale) {\n          setDummy(dummy => dummy + 1);\n        }\n      }));\n      return () => {\n        stale = true;\n      };\n    }\n  }, [token]);\n  return children(!token ? undefined : !((_BROKEN$token$chainId3 = BROKEN[token.chainId]) === null || _BROKEN$token$chainId3 === void 0 ? void 0 : _BROKEN$token$chainId3[token.address]) ? (_SWATCHES$token$chain2 = SWATCHES[token.chainId]) === null || _SWATCHES$token$chain2 === void 0 ? void 0 : _SWATCHES$token$chain2[token.address] : undefined);\n}","map":null,"metadata":{},"sourceType":"module"}