{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { validImage } from '../utils';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\nimport { Generic } from './embed/Generic';\nimport Youtube from './embed/Youtube';\nimport Vimeo from './embed/Vimeo';\nexport var Embed = /*#__PURE__*/function (_Component) {\n  _inherits(Embed, _Component);\n\n  var _super = _createSuper(Embed);\n\n  function Embed() {\n    _classCallCheck(this, Embed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Embed, [{\n    key: \"render\",\n    value: function render() {\n      var url = this.props.url || \"\";\n\n      if (url.includes(\"ipfs://\")) {\n        var hash = url.replace(\"ipfs://\", \"\");\n        setTimeout(function () {\n          getIPFSImage(hash);\n        }, 1000);\n        url = url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n      }\n\n      var embed = __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }) : url.includes('clara.io/') ? __jsx(Clara, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }) : url.includes('audius.co/') ? __jsx(Audius, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }) : url.includes('youtube.com') ? __jsx(Youtube, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }) : url.includes('vimeo.com') ? __jsx(Vimeo, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }) : url.includes('ipfs.io') ? __jsx(Image, {\n        p: \"20px\",\n        h: \"100%\",\n        className: this.props.className || \"d-block w-100\",\n        src: url,\n        width: \"250px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') || url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') || url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? __jsx(Image, {\n        p: \"20px\",\n        h: \"100%\",\n        className: this.props.className || \"d-block w-100\",\n        src: validImage(url) ? url : 'https://circuitsofvalue.com/public/coval-logo.png',\n        width: \"250px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }) : __jsx(Generic, {\n        url: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }));\n\n      return embed;\n    }\n  }]);\n\n  return Embed;\n}(Component);\n\nvar getIPFSImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(hash) {\n    var responce, jsonData, img, preview;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gateway.ipfs.io/ipfs/' + hash, {\n              method: 'GET'\n            });\n\n          case 2:\n            responce = _context.sent;\n            _context.next = 5;\n            return responce.text();\n\n          case 5:\n            jsonData = _context.sent;\n\n            if (jsonData.includes('data:image')) {\n              img = Buffer.from(jsonData);\n              preview = document.querySelector('img.d-block');\n              preview.src = img.toString();\n              console.log(jsonData);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIPFSImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Embed;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx"],"names":["React","Component","validImage","Image","SketchFab","ShaderToy","Bandcamp","SoundCloud","Clyp","Sketchup","Clara","MyMiniFactory","Audius","Generic","Youtube","Vimeo","Embed","url","props","includes","hash","replace","setTimeout","getIPFSImage","embed","className","fetch","method","responce","text","jsonData","img","Buffer","from","preview","document","querySelector","src","toString","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validImage } from '../utils'\nimport { Image } from '@chakra-ui/core'\nimport SketchFab from './embed/SketchFab'\nimport ShaderToy from './embed/ShaderToy'\nimport Bandcamp from './embed/Bandcamp'\nimport SoundCloud from './embed/SoundCloud'\nimport Clyp from './embed/Clyp'\nimport Sketchup from './embed/Sketchup'\nimport Clara from './embed/Clara'\nimport MyMiniFactory from './embed/MyMiniFactory'\nimport { Audius } from './embed/Audius'\nimport { Generic } from './embed/Generic'\nimport Youtube from './embed/Youtube'\nimport Vimeo from './embed/Vimeo'\n\ntype EmbedProps = {\n  url: string,\n  className?: string\n}\n\nexport class Embed extends Component<EmbedProps> {\n  render() {\n    let url = this.props.url || \"\"\n    if (url.includes(\"ipfs://\")) {\n      let hash = url.replace(\"ipfs://\",\"\")\n    setTimeout(()=>{\n      getIPFSImage(hash)\n    }, 1000)\n    url = url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\")\n  }    \n    let embed = (\n      <>\n        {url.includes('sketchfab.com/') ? (\n          <SketchFab\n            url={url}\n          />\n        ) : url.includes('shadertoy.com/') ? (\n          <ShaderToy\n            url={url}\n          />\n        ) : url.includes('bandcamp.com/') ? (\n          <Bandcamp\n            url={url}\n          />\n        ) : url.includes('soundcloud.com/') ? (\n          <SoundCloud\n            url={url}\n          />\n        ) : url.includes('clyp.it/') ? (\n          <Clyp\n            url={url}\n          />\n        ) : url.includes('sketchup.com/') ? (\n          <Sketchup\n            url={url}\n          />\n        ) : url.includes('clara.io/') ? (\n          <Clara\n            url={url}\n          />\n        ) : url.includes('myminifactory.com/') ? (\n          <MyMiniFactory\n            url={url}\n          />\n        ) : url.includes('audius.co/') ? (\n          <Audius\n            url={url}\n          />\n        ) : url.includes('youtube.com') ? (\n          <Youtube\n            url={url}\n          />\n        ) : url.includes('vimeo.com') ? (\n          <Vimeo\n            url={url}\n          />\n        ) : url.includes('ipfs.io') ? (\n          <Image\n            p={\"20px\"}\n            h={\"100%\"}\n            className={this.props.className || \"d-block w-100\"}\n            src={url}\n            width=\"250px\"\n          />\n        ): url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') ||  url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') ||  url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? (\n          <Image\n            p={\"20px\"}\n            h={\"100%\"}\n            className={this.props.className || \"d-block w-100\"}\n            src={validImage(url) ? url : 'https://circuitsofvalue.com/public/coval-logo.png'}\n            width=\"250px\"\n          />\n        ) : (\n              <Generic\n                url={url}\n              />\n            )\n              }\n          </>\n    )\n    return embed\n  }\n}\nconst getIPFSImage = async function(hash){\n  const responce = await fetch('https://gateway.ipfs.io/ipfs/'+hash, {\n    method: 'GET',\n  })\n  let jsonData = await responce.text()\n  if (jsonData.includes('data:image')){\n    let img = Buffer.from(jsonData)\n    const preview = document.querySelector('img.d-block') as HTMLImageElement \n    preview.src = img.toString()\n    console.log(jsonData) \n  }\n}\n\nexport default Embed\n"]},"metadata":{},"sourceType":"module"}