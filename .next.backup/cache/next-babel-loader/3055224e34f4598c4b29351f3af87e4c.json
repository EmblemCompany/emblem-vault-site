{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { abi as HandlerABI } from './abi/handler.json';\nimport { abi as SalesABI } from './abi/sales.json';\nimport { abi as CovalABI } from './abi/coval.json';\nimport { abi as EmblemABI } from './abi/emblem.json';\nimport { abi as NftradeABI } from './abi/nftrade.json';\nimport { abi as ClaimedABI } from './abi/claimed.json';\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json';\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json';\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json';\nimport { abi as ERC721 } from './abi/EmblemVault.json';\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json';\nimport xcpJson from './curated/xcp.json';\nexport const BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nexport const COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nexport const isIPFS = process.env.IPFS === 'true';\nexport const isServerSide = true;\nconst {\n  API_OVERLOAD\n} = process.env;\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport const DEFAULT_APPROVE_MAX = true;\nexport const DEFAULT_DEADLINE = 60 * 20;\nexport const DEFAULT_SLIPPAGE = 50;\nexport const GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nexport const ZERO = JSBI.BigInt(0);\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const curatedContracts = [{\n  name: \"Rare Pepe\",\n  4: \"0x29a2D689dEefE9FD1eaDAe1511200c4d96E29427\",\n  \"chain\": \"xcp\"\n}, {\n  name: \"Emblem Test\",\n  4: \"0x125355e3A87CB49ABD798bD96E7C5dA6F509cD09\",\n  \"chain\": \"xcp\"\n} // {\n//   name: \"Age of Chains\",\n//   4: \"0x0000000000000000000000000000000000000000\",\n//   \"chain\": \"xcp\"\n// },\n// {\n//   name: \"Age of Rust\",\n//   4: \"0x00000000000000000000000000000000000000000\",\n//   \"chain\": \"xcp\"\n// },\n// {\n//   name: \"AtOMo\",\n//   4: \"0x00000000000000000000000000000000000000000\",\n//   chain: \"xcp\"\n// }\n];\nexport const curatedAssets = {\n  xcp: xcpJson\n};\nexport const contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0xedb9e7d618dddc081bd56014ea3842c67628b015',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0fd1082e83d6a3b8349caced12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xFd2E9C4F9820F475aE9d3C26B612e1be69FEC8F9',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135'\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155\n};\nexport const BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180';\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const EMBLEM_API = API_OVERLOAD ? API_OVERLOAD : 'https://api.emblemvault.io'; // 'http://localhost:3001' //\n\nexport let QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nexport const ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];","map":null,"metadata":{},"sourceType":"module"}