{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup, Text } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from 'react';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API, contractAddresses } from '../constants';\nimport { Notify } from './Notify';\nimport { useContract } from '../hooks';\nexport default function Create(props) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabIndex = _React$useState2[0],\n      setTabIndex = _React$useState2[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState3 = React.useState(account || ''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      vaultAddress = _React$useState4[0],\n      setVaultAddress = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Public'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vaultPubPriv = _React$useState6[0],\n      setVaultPubPriv = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      vaultName = _React$useState8[0],\n      setVaultName = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      vaultDesc = _React$useState10[0],\n      setVaultDesc = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      vaultImage = _React$useState12[0],\n      setVaultImage = _React$useState12[1];\n\n  var _React$useState13 = React.useState(''),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      password = _React$useState14[0],\n      setPassword = _React$useState14[1];\n\n  var _React$useState15 = React.useState(''),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      service = _React$useState16[0],\n      setService = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      isCovalApproved = _React$useState18[0],\n      setIsCovalApproved = _React$useState18[1];\n\n  var _React$useState19 = React.useState({\n    loaded: true,\n    \"private\": false\n  }),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      state = _React$useState20[0],\n      setState = _React$useState20[1];\n\n  var _React$useState21 = React.useState(null),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      hash = _React$useState22[0],\n      setHash = _React$useState22[1];\n\n  var _React$useState23 = React.useState(null),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      tokenId = _React$useState24[0],\n      setTokenId = _React$useState24[1];\n\n  var _React$useState25 = React.useState(null),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      mintPassword = _React$useState26[0],\n      setMintPassword = _React$useState26[1];\n\n  var _React$useState27 = React.useState(false),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      showNotify = _React$useState28[0],\n      setShowNotify = _React$useState28[1];\n\n  var handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true);\n  var covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true);\n\n  var handleApprove = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var balance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return covalContract.allowance(contractAddresses.vaultHandler[chainId], contractAddresses.coval[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 2:\n              balance = _context.sent;\n              console.log(balance);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleApprove() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fireMetaMask = function fireMetaMask() {\n    handlerContract.buyWithPaymentOnly(vaultAddress, tokenId, mintPassword).then(function (_ref2) {\n      var hash = _ref2.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      }\n    });\n  };\n\n  var getTokenAllowance = function getTokenAllowance(contract, token) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(owner, spender) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", contract.allowance(owner, token).then(function (balance) {\n                  return balance.toString();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  };\n\n  var approveCovalFlow = function approveCovalFlow() {\n    alert('Approve?');\n    setIsCovalApproved(true);\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        service: service\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        fromAddress: account,\n        toAddress: vaultAddress,\n        description: vaultDesc,\n        name: vaultName,\n        image: vaultImage,\n        chainId: chainId,\n        \"private\": state[\"private\"],\n        password: password || ''\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context3.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context3.sent;\n                setHash(body.data.tx);\n                setTokenId(body.data.tokenId);\n                setMintPassword(body.password);\n                setShowNotify(true);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('img');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  var _React$useState29 = React.useState(''),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      acct = _React$useState30[0],\n      setAcct = _React$useState30[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Make\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"My\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    value: vaultAddress,\n    onChange: function onChange(e) {\n      return setVaultAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: function onChange(e) {\n      setVaultPubPriv(e.target.value);\n      setState({\n        loaded: state.loaded,\n        \"private\": e.target.value === 'Private'\n      });\n      console.log('Private', e.target.value === 'Private');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, __jsx(Radio, {\n    value: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"Do you want people to be able to see the contents?\")), state[\"private\"] ? __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }), __jsx(FormHelperText, {\n    id: \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, \"This password will be used to encrypt and decrypt the contents of this vault\")) : ''), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, \"Next\"), __jsx(Button, {\n    onClick: function onClick() {\n      return handleApprove();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, \"Test Approve\")))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    value: vaultName,\n    onChange: function onChange(e) {\n      return setVaultName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, \"Give it some love so you can find it later.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 23\n    }\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    value: vaultDesc,\n    onChange: function onChange(e) {\n      return setVaultDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }, \"Add some fluffy text to tell people what the point is!\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 23\n    }\n  }, \"Next\"))))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, \"Vault Image\"), __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: function onChange() {\n      return previewFile();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 31\n    }\n  }), __jsx(\"img\", {\n    src: \"\",\n    width: \"200\",\n    alt: \"Image preview...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  })))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 23\n    }\n  }, \"API password:\"), __jsx(Input, {\n    type: \"password\",\n    id: \"service\",\n    \"aria-describedby\": \"service\",\n    onChange: function onChange(e) {\n      return setService(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 23\n    }\n  }))), isCovalApproved ? __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 23\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, \"Creating a vault spends 1337 Coval from your wallet\"))) : null, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, \"Back\"), !account ? __jsx(Button, {\n    isDisabled: true,\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"No Wallet Connected!\") : !vaultAddress || !vaultName || !vaultDesc ? __jsx(Button, {\n    isDisabled: true,\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, \"Missing Fields!\") : !service ? __jsx(Button, {\n    isDisabled: true,\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, \"Creation Password?\") : !isCovalApproved ? __jsx(Button, {\n    onClick: approveCovalFlow,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, \"Approve Coval\") : __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, \"DO IT!\"))))))))), showNotify || hash ? __jsx(Stack, {\n    direction: \"column\",\n    align: \"left\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, showNotify ? __jsx(Notify, {\n    color: \"green\",\n    message: \"Creating your vault ...\",\n    onClose: function onClose() {\n      setShowNotify(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }) : null, hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      setHash(null);\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }) : null) : null);\n}\n\n_s(Create, \"LkgwcC5dJ6AEjMtuhWJnBGuV8l0=\", false, function () {\n  return [useWeb3React, useContract, useContract];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx"],"names":["FormControl","FormLabel","FormHelperText","Input","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","RadioGroup","Radio","Textarea","Button","ButtonGroup","Text","Loader","useWeb3React","React","useEffect","TransactionToast","EMBLEM_API","contractAddresses","Notify","useContract","Create","props","useState","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","password","setPassword","service","setService","isCovalApproved","setIsCovalApproved","loaded","state","setState","hash","setHash","tokenId","setTokenId","mintPassword","setMintPassword","showNotify","setShowNotify","handlerContract","vaultHandler","vaultHandlerAbi","covalContract","coval","covalAbi","handleApprove","allowance","then","balance","toString","console","log","fireMetaMask","buyWithPaymentOnly","error","code","getTokenAllowance","contract","token","owner","spender","approveCovalFlow","alert","handleSubmit","evt","preventDefault","fetch","method","headers","Authorization","body","JSON","stringify","fromAddress","toAddress","description","name","image","response","json","data","tx","previewFile","preview","document","querySelector","inputelement","reader","FileReader","addEventListener","src","result","files","readAsDataURL","acct","setAcct","index","e","target","value"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex,\n  RadioGroup,\n  Radio,\n  Textarea,\n  Button,\n  ButtonGroup,\n  Text,\n} from '@chakra-ui/core'\n\nimport { Token, TokenAmount } from '@uniswap/sdk'\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from 'react'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API , contractAddresses} from '../constants'\nimport { Notify } from './Notify'\nimport { Contract } from '@ethersproject/contracts'\nimport { useContract } from '../hooks'\n\nexport default function Create(props: any) {\n  const [tabIndex, setTabIndex] = React.useState(0)\n  const { account, chainId } = useWeb3React()\n\n  const [vaultAddress, setVaultAddress] = React.useState(account || '')\n  const [vaultPubPriv, setVaultPubPriv] = React.useState('Public')\n  const [vaultName, setVaultName] = React.useState('')\n  const [vaultDesc, setVaultDesc] = React.useState('')\n  const [vaultImage, setVaultImage] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [service, setService] = React.useState('')\n  const [isCovalApproved, setIsCovalApproved] = React.useState(false)\n  const [state, setState] = React.useState({ loaded: true, private: false })\n  const [hash, setHash] = React.useState(null)\n  const [tokenId, setTokenId] = React.useState(null)\n  const [mintPassword, setMintPassword] = React.useState(null)\n  const [showNotify, setShowNotify] = React.useState(false)\n\n  const handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true)\n  const covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true)\n  \n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  const handleApprove = async () => {\n    let balance = await covalContract\n        .allowance(contractAddresses.vaultHandler[chainId], contractAddresses.coval[chainId])\n        .then((balance: { toString: () => string }) => balance.toString())\n    console.log(balance)\n  }\n\n  const fireMetaMask = () => {\n    (handlerContract as Contract)\n      .buyWithPaymentOnly(vaultAddress, tokenId, mintPassword)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code !== 4001) {\n          console.log(`tx failed.`, error)\n        }\n      })\n  }\n\n  const getTokenAllowance = function(contract: Contract, token: Contract): (owner: string, spender: string) => Promise<TokenAmount> {\n    return async (owner: string, spender: string): Promise<TokenAmount> =>\n      contract\n        .allowance(owner, token)\n        .then((balance: { toString: () => string }) => balance.toString())\n  }\n\n  const approveCovalFlow = () => {\n    alert('Approve?')\n    setIsCovalApproved(true)\n  }\n\n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n    setState({ loaded: false, private: state.private })\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        service: service,\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        fromAddress: account,\n        toAddress: vaultAddress,\n        description: vaultDesc,\n        name: vaultName,\n        image: vaultImage,\n        chainId: chainId,\n        private: state.private,\n        password: password || '',\n      }),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      setHash(body.data.tx)\n      setTokenId(body.data.tokenId)\n      setMintPassword(body.password)\n      setShowNotify(true)\n    })\n  }\n\n  function previewFile() {\n    const preview = document.querySelector('img')\n    const inputelement = document.querySelector('input[type=file]') as HTMLInputElement //.files[0];\n    const reader = new FileReader()\n\n    reader.addEventListener(\n      'load',\n      function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || ''\n        if (preview) setVaultImage(preview.src)\n      },\n      false\n    )\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0])\n    }\n  }\n\n  const [acct, setAcct] = React.useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n    }\n  }, [account, acct])\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Make</Tab>\n              <Tab>My</Tab>\n              <Tab>Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"owner-address\">Vault Owner Address</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"owner-address\"\n                        aria-describedby=\"owner-helper-text\"\n                        placeholder=\"0xdeadbeef\"\n                        value={vaultAddress}\n                        onChange={(e) => setVaultAddress(e.target.value)}\n                      />\n                      <FormHelperText id=\"owner-helper-text\">\n                        What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet,\n                        this will populate automagically with your address.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl as=\"fieldset\" isRequired>\n                      <FormLabel>Public or Private?</FormLabel>\n                      <RadioGroup\n                        id=\"pubpriv\"\n                        defaultValue=\"Public\"\n                        onChange={(e) => {\n                          setVaultPubPriv(e.target.value)\n                          setState({ loaded: state.loaded, private: e.target.value === 'Private' })\n                          console.log('Private', e.target.value === 'Private')\n                        }}\n                      >\n                        <Radio value=\"Public\">Public</Radio>\n                        <Radio value=\"Private\">Private</Radio>\n                      </RadioGroup>\n                      <FormHelperText id=\"email-helper-text\">\n                        Do you want people to be able to see the contents?\n                      </FormHelperText>\n                    </FormControl>\n                    {state.private ? (\n                      <FormControl>\n                        <FormLabel>Password</FormLabel>\n                        <Input\n                          type=\"password\"\n                          id=\"vault-password\"\n                          onChange={(e) => setPassword(e.target.value)}\n                          aria-describedby=\"password-helper-text\"\n                        />\n                        <FormHelperText id=\"password-helper-text\">\n                          This password will be used to encrypt and decrypt the contents of this vault\n                        </FormHelperText>\n                      </FormControl>\n                    ) : (\n                      ''\n                    )}\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <Button onClick={() => setTabIndex(1)}>Next</Button>\n                    <Button onClick={() => handleApprove()}>Test Approve</Button>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-name\">Vault Name</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"vault-name\"\n                        aria-describedby=\"vault-name-text\"\n                        value={vaultName}\n                        onChange={(e) => setVaultName(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-name-text\">Give it some love so you can find it later.</FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-desc\">Vault Description</FormLabel>\n                      <Textarea\n                        id=\"vault-desc\"\n                        size=\"lg\"\n                        aria-describedby=\"vault-desc-text\"\n                        value={vaultDesc}\n                        onChange={(e) => setVaultDesc(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-desc-text\">\n                        Add some fluffy text to tell people what the point is!\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(0)}>Back</Button>\n                      <Button onClick={() => setTabIndex(2)}>Next</Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"vault-img\">Vault Image</FormLabel>\n                      <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <input type=\"file\" onChange={() => previewFile()} />\n                        <br /><br />\n                        <img src=\"\" width=\"200\" alt=\"Image preview...\"></img>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"service\">API password:</FormLabel>\n                      <Input\n                        type=\"password\"\n                        id=\"service\"\n                        aria-describedby=\"service\"\n                        onChange={(e) => setService(e.target.value)}\n                      />\n                    </FormControl>\n                  </Stack>\n\n                  {isCovalApproved ? (\n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                      <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Text>Creating a vault spends 1337 Coval from your wallet</Text>\n                      </Box>\n                    </Stack>\n                  ) : null}\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(1)}>Back</Button>\n                      {!account ? (\n                        <Button isDisabled onClick={handleSubmit} type=\"submit\">\n                          No Wallet Connected!\n                        </Button>\n                      ) : !vaultAddress || !vaultName || !vaultDesc ? (\n                        <Button isDisabled onClick={handleSubmit} type=\"submit\">\n                          Missing Fields!\n                        </Button>\n                      ) : !service ? (\n                        <Button isDisabled onClick={handleSubmit} type=\"submit\">\n                          Creation Password?\n                        </Button>\n                      ) : !isCovalApproved ? (\n                        <Button onClick={approveCovalFlow} type=\"submit\">\n                          Approve Coval\n                        </Button>\n                      ) : (\n                        <Button onClick={handleSubmit} type=\"submit\">\n                          DO IT!\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      {showNotify || hash ?\n        <Stack direction=\"column\" align=\"left\" shouldWrapChildren>\n          {showNotify ? (\n            <Notify\n              color=\"green\"\n              message=\"Creating your vault ...\"\n              onClose={() => {\n                setShowNotify(false)\n              }}\n            />\n          ) : (\n            null\n          )}\n          {hash ? (\n            <TransactionToast\n              hash={hash}\n              onComplete={() => {\n                setHash(null)\n                fireMetaMask()\n              }}\n            />\n          ) : (\n            null\n          )}\n          </Stack>\n        : null\n      }\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}