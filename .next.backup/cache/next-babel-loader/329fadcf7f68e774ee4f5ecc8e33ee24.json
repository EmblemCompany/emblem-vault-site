{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\nimport { Generic } from './embed/Generic';\nimport Youtube from './embed/Youtube';\nimport Vimeo from './embed/Vimeo';\n\nvar getIPFSImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(hash) {\n    var responce, jsonData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gateway.ipfs.io/ipfs/' + hash, {\n              method: 'GET',\n              headers: {// redirect:'follow'\n              }\n            });\n\n          case 2:\n            responce = _context.sent;\n            _context.next = 5;\n            return responce.text();\n\n          case 5:\n            jsonData = _context.sent;\n\n            if (!jsonData.includes(\"data:image\")) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", jsonData);\n\n          case 10:\n            return _context.abrupt(\"return\", 'https://gateway.ipfs.io/ipfs/' + hash);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIPFSImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport var Embed = /*#__PURE__*/function (_Component) {\n  _inherits(Embed, _Component);\n\n  var _super = _createSuper(Embed);\n\n  function Embed() {\n    _classCallCheck(this, Embed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Embed, [{\n    key: \"render\",\n    value: function render() {\n      var url = this.props.url || \"\";\n      url = url.replace(\"&framed=true\", \"\");\n      var classIdentifier = url.split('/').reverse()[0] + getRandomInt(999).toString();\n\n      if (url.includes('ipfs://')) {\n        setTimeout(function () {\n          getIPFSImage(url.split('/').reverse()[0]).then(function (result) {\n            if (result.includes('data:image')) {\n              var preview = document.querySelector('.' + classIdentifier);\n              preview ? preview.src = result : null;\n              url = result;\n            }\n          });\n        }, 1000);\n        console.log(\"before\", url);\n        url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/');\n        console.log(\"after\", url);\n        return __jsx(Image, {\n          p: \"20px\",\n          h: \"100%\",\n          className: (this.props.className || \"d-block w-100\") + \" blah \" + classIdentifier,\n          src: url,\n          width: \"250px\"\n        });\n      } else {\n        return __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n          url: url\n        }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n          url: url\n        }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n          url: url\n        }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n          url: url\n        }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n          url: url\n        }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n          url: url\n        }) : url.includes('clara.io/') ? __jsx(Clara, {\n          url: url\n        }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n          url: url\n        }) : url.includes('audius.co/') ? __jsx(Audius, {\n          url: url\n        }) : url.includes('youtube.com') ? __jsx(Youtube, {\n          url: url\n        }) : url.includes('vimeo.com') ? __jsx(Vimeo, {\n          url: url\n        }) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') || url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') || url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? __jsx(Image, {\n          p: \"20px\",\n          h: \"100%\",\n          className: (this.props.className || \"d-block w-100\") + \" \" + classIdentifier,\n          src: url,\n          width: \"250px\"\n        }) : __jsx(Generic, {\n          url: url\n        }));\n      }\n    }\n  }]);\n\n  return Embed;\n}(Component);\nexport default Embed;","map":null,"metadata":{},"sourceType":"module"}