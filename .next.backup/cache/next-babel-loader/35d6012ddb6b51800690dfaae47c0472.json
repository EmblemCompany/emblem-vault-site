{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React from \"react\";\nexport default function Create(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabIndex = _React$useState2[0],\n      setTabIndex = _React$useState2[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState3 = React.useState(account || ''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      vaultAddress = _React$useState4[0],\n      setVaultAddress = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Public'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vaultPubPriv = _React$useState6[0],\n      setVaultPubPriv = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      vaultName = _React$useState8[0],\n      setVaultName = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      vaultDesc = _React$useState10[0],\n      setVaultDesc = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      vaultImage = _React$useState12[0],\n      setVaultImage = _React$useState12[1];\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    alert(\"Vault properties: name is: \".concat(vaultName, \", description is: \").concat(vaultDesc, \", address is: \").concat(vaultAddress, \", Pub/Priv is: \").concat(vaultPubPriv, \", and image data is: \").concat(vaultImage));\n    fetch('http://35.222.58.227:80/mint', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        \"toAddress\": vaultAddress,\n        \"description\": vaultDesc,\n        \"name\": vaultName,\n        \"image\": vaultImage,\n        \"chainId\": chainId\n      })\n    }).then(function (response) {\n      console.log(response.json()); // return response.json();\n    });\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('img');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    }\n  }, __jsx(TabList, null, __jsx(Tab, null, \"Make\"), __jsx(Tab, null, \"My\"), __jsx(Tab, null, \"Vault\")), __jsx(TabPanels, null, __jsx(TabPanel, null, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, {\n    isRequired: true\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\"\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    value: vaultAddress,\n    onChange: function onChange(e) {\n      return setVaultAddress(e.target.value);\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\"\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true\n  }, __jsx(FormLabel, {\n    as: \"legend\"\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: function onChange(e) {\n      return setVaultPubPriv(e.target.value);\n    }\n  }, __jsx(Radio, {\n    value: \"Public\"\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\"\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\"\n  }, \"Do you want people to be able to see the contents?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    }\n  }, \"Next\")))), __jsx(TabPanel, null, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, {\n    isRequired: true\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\"\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    value: vaultName,\n    onChange: function onChange(e) {\n      return setVaultName(e.target.value);\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\"\n  }, \"Give it some love so you can find it later.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, {\n    isRequired: true\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\"\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    value: vaultDesc,\n    onChange: function onChange(e) {\n      return setVaultDesc(e.target.value);\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\"\n  }, \"Want to add some fluffy text to tell people what the point is?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(ButtonGroup, {\n    spacing: 4\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(0);\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(2);\n    }\n  }, \"Next\"))))), __jsx(TabPanel, null, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, null, __jsx(FormLabel, {\n    htmlFor: \"vault-img\"\n  }, \"Vault Image\"), __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: function onChange() {\n      return previewFile();\n    }\n  }), __jsx(\"br\", null), __jsx(\"img\", {\n    src: \"\",\n    width: \"200\",\n    alt: \"Image preview...\"\n  })))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(ButtonGroup, {\n    spacing: 4\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\"\n  }, \"DO IT!\")))))))));\n}","map":null,"metadata":{},"sourceType":"module"}