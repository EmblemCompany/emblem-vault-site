{"ast":null,"code":"import { useMemo, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { ChainId, WETH, Token } from '@uniswap/sdk';\nimport { useLocalStorageTokens } from './context';\nimport { useOnchainToken } from './data';\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin');\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD Coin');\nexport const Coval = new Token(ChainId.MAINNET, '0x3D658390460295FB963f54dC0899cfb1c30776Df', 8, 'Coval', 'Circuits of Value');\nexport const CovalTest = new Token(ChainId.RINKEBY, '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6', 8, 'Coval', 'Circuits of Value');\nexport const CovalTestMatic = new Token(ChainId.RINKEBY, '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC', 8, 'Coval', 'Circuits of Value');\nexport const CovalMatic = new Token(ChainId.RINKEBY, '0x4597c8A59Ab28B36840B82B3A674994A279593D0', 8, 'Coval', 'Circuits of Value');\nexport const CovalxDai = new Token(ChainId.RINKEBY, '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12', 8, 'Coval', 'Circuits of Value');\nexport const CovalBSC = new Token(ChainId.RINKEBY, '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464', 8, 'Coval', 'Circuits of Value');\nexport const CovalFantom = new Token(ChainId.RINKEBY, '0x8b8407c6184f1f0fd1082e83d6a3b8349caced12', 8, 'Coval', 'Circuits of Value');\nexport const DEFAULT_TOKENS = [...Object.values(WETH), // stablecoins\nDAI, USDC, Coval, CovalTest, CovalTestMatic, CovalMatic, CovalxDai, CovalBSC, CovalFantom, // new Token(ChainId.RINKEBY, '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6', 8, 'Coval', 'Circuits of Value'),\nnew Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD'), // stablecoin derivatives\nnew Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'), new Token(ChainId.MAINNET, '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215', 18, 'CHAI', 'Chai'), new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'), // compound\nnew Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound'), // maker\nnew Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker'), // uma\nnew Token(ChainId.MAINNET, '0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828', 18, 'UMA', 'UMA Voting Token v1'), // wbtc\nnew Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC'), // donut\nnew Token(ChainId.MAINNET, '0xC0F9bD5Fa5698B6505F643900FFA515Ea5dF54A9', 18, 'DONUT', 'Donut'), // kovan\nnew Token(ChainId.KOVAN, '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa', 18, 'DAI', 'Dai Stablecoin'), new Token(ChainId.KOVAN, '0xAaF64BFCC32d0F15873a02163e7E500671a4ffcD', 18, 'MKR', 'Maker')];\nexport function useAllTokens() {\n  const {\n    chainId\n  } = useWeb3React();\n  const [tokens, {\n    addToken,\n    removeToken\n  }] = useLocalStorageTokens();\n  return [useMemo(() => {\n    const seen = {};\n    return DEFAULT_TOKENS.concat(tokens).filter(token => {\n      if (token.chainId === chainId && !seen[token.address]) {\n        seen[token.address] = true;\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }, [tokens, chainId]), {\n    addToken,\n    removeToken\n  }];\n}\nexport function useTokenByAddressAndAutomaticallyAdd(tokenAddress) {\n  const [allTokens, {\n    addToken\n  }] = useAllTokens();\n  const token = useMemo(() => allTokens.filter(token => token.address === tokenAddress)[0], [allTokens, tokenAddress]); // fetches onchain data for tokens if they're not in our list already, then adds them to the list\n\n  const {\n    data\n  } = useOnchainToken(token ? undefined : tokenAddress);\n  useEffect(() => {\n    if (data) {\n      addToken(data);\n    }\n  }, [data, addToken]);\n  return token;\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/tokens.ts"],"names":["useMemo","useEffect","useWeb3React","ChainId","WETH","Token","useLocalStorageTokens","useOnchainToken","DAI","MAINNET","USDC","Coval","CovalTest","RINKEBY","CovalTestMatic","CovalMatic","CovalxDai","CovalBSC","CovalFantom","DEFAULT_TOKENS","Object","values","KOVAN","useAllTokens","chainId","tokens","addToken","removeToken","seen","concat","filter","token","address","useTokenByAddressAndAutomaticallyAdd","tokenAddress","allTokens","data","undefined"],"mappings":"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","sourcesContent":["import { useMemo, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ChainId, WETH, Token } from '@uniswap/sdk'\n\nimport { useLocalStorageTokens } from './context'\nimport { useOnchainToken } from './data'\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD Coin')\nexport const Coval = new Token(\n  ChainId.MAINNET,\n  '0x3D658390460295FB963f54dC0899cfb1c30776Df',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\nexport const CovalTest = new Token(\n  ChainId.RINKEBY,\n  '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const CovalTestMatic = new Token(\n  ChainId.RINKEBY,\n  '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const CovalMatic = new Token(\n  ChainId.RINKEBY,\n  '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const CovalxDai = new Token(\n  ChainId.RINKEBY,\n  '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const CovalBSC = new Token(\n  ChainId.RINKEBY,\n  '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const CovalFantom = new Token(\n  ChainId.RINKEBY,\n  '0x8b8407c6184f1f0fd1082e83d6a3b8349caced12',\n  8,\n  'Coval',\n  'Circuits of Value'\n)\n\nexport const DEFAULT_TOKENS = [\n  ...Object.values(WETH),\n\n  // stablecoins\n  DAI,\n  USDC,\n  Coval,\n  CovalTest,\n  CovalTestMatic,\n  CovalMatic,\n  CovalxDai,\n  CovalBSC,\n  CovalFantom,\n  // new Token(ChainId.RINKEBY, '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6', 8, 'Coval', 'Circuits of Value'),\n  new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD'),\n  // stablecoin derivatives\n  new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n  new Token(ChainId.MAINNET, '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215', 18, 'CHAI', 'Chai'),\n  new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\n  // compound\n  new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound'),\n  // maker\n  new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker'),\n  // uma\n  new Token(ChainId.MAINNET, '0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828', 18, 'UMA', 'UMA Voting Token v1'),\n  // wbtc\n  new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC'),\n  // donut\n  new Token(ChainId.MAINNET, '0xC0F9bD5Fa5698B6505F643900FFA515Ea5dF54A9', 18, 'DONUT', 'Donut'),\n\n  // kovan\n  new Token(ChainId.KOVAN, '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa', 18, 'DAI', 'Dai Stablecoin'),\n  new Token(ChainId.KOVAN, '0xAaF64BFCC32d0F15873a02163e7E500671a4ffcD', 18, 'MKR', 'Maker'),\n]\n\nexport function useAllTokens(): [Token[], ReturnType<typeof useLocalStorageTokens>[1]] {\n  const { chainId } = useWeb3React()\n  const [tokens, { addToken, removeToken }] = useLocalStorageTokens()\n\n  return [\n    useMemo(() => {\n      const seen: { [address: string]: boolean } = {}\n      return DEFAULT_TOKENS.concat(tokens).filter((token) => {\n        if (token.chainId === chainId && !seen[token.address]) {\n          seen[token.address] = true\n          return true\n        } else {\n          return false\n        }\n      })\n    }, [tokens, chainId]),\n    { addToken, removeToken },\n  ]\n}\n\nexport function useTokenByAddressAndAutomaticallyAdd(tokenAddress?: string): Token | undefined {\n  const [allTokens, { addToken }] = useAllTokens()\n\n  const token = useMemo(() => allTokens.filter((token) => token.address === tokenAddress)[0], [allTokens, tokenAddress])\n\n  // fetches onchain data for tokens if they're not in our list already, then adds them to the list\n  const { data } = useOnchainToken(token ? undefined : tokenAddress)\n  useEffect(() => {\n    if (data) {\n      addToken(data)\n    }\n  }, [data, addToken])\n\n  return token\n}\n"]},"metadata":{},"sourceType":"module"}