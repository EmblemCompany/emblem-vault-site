{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/contract/ERC1155Contract.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Text } from '@chakra-ui/core';\nimport { contractAddresses } from '../../constants';\nimport { Contract } from '@ethersproject/contracts';\nexport var ERC1155Contract = /*#__PURE__*/function (_Component) {\n  _inherits(ERC1155Contract, _Component);\n\n  var _super = _createSuper(ERC1155Contract);\n\n  function ERC1155Contract() {\n    _classCallCheck(this, ERC1155Contract);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ERC1155Contract, [{\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var address, account, library, abi, tokenContract, tokenName;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                address = this.props.address;\n                account = this.props.account;\n                library = this.props.library;\n                abi = contractAddresses.erc1155Abi;\n                tokenContract = new Contract(address, abi, library.getSigner(account).connectUnchecked());\n                _context.next = 7;\n                return tokenContract.name();\n\n              case 7:\n                tokenName = _context.sent;\n                return _context.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(Text, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 21,\n                    columnNumber: 9\n                  }\n                }, tokenName)));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return ERC1155Contract;\n}(Component);\nexport default ERC1155Contract;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/contract/ERC1155Contract.tsx"],"names":["React","Component","Text","contractAddresses","Contract","ERC1155Contract","address","props","account","library","abi","erc1155Abi","tokenContract","getSigner","connectUnchecked","name","tokenName"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAoBC,IAApB,QAA8H,iBAA9H;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAOA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,OADN,GACgB,KAAKC,KAAL,CAAWD,OAD3B;AAEME,gBAAAA,OAFN,GAEgB,KAAKD,KAAL,CAAWC,OAF3B;AAGMC,gBAAAA,OAHN,GAGgB,KAAKF,KAAL,CAAWE,OAH3B;AAIMC,gBAAAA,GAJN,GAIYP,iBAAiB,CAACQ,UAJ9B;AAKMC,gBAAAA,aALN,GAKsB,IAAIR,QAAJ,CAAaE,OAAb,EAAsBI,GAAtB,EAA2BD,OAAO,CAACI,SAAR,CAAkBL,OAAlB,EAA2BM,gBAA3B,EAA3B,CALtB;AAAA;AAAA,uBAMwBF,aAAa,CAACG,IAAd,EANxB;;AAAA;AAMMC,gBAAAA,SANN;AAAA,iDAQI,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAOA,SAAP,CADF,CARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAqCf,SAArC;AAgBA,eAAeI,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport { contractAddresses } from '../../constants'\nimport { Contract } from '@ethersproject/contracts'\ntype Props = {\n  address: string,\n  account: string,\n  library: any\n}\n\nexport class ERC1155Contract extends Component<Props> {\n  async render() {\n    let address = this.props.address\n    let account = this.props.account\n    let library = this.props.library\n    let abi = contractAddresses.erc1155Abi\n    let tokenContract = new Contract(address, abi, library.getSigner(account).connectUnchecked())\n    let tokenName = await tokenContract.name()\n    return (\n      <>\n        <Text>{tokenName}</Text>\n      </>\n    )\n  }\n}\n\nexport default ERC1155Contract\n"]},"metadata":{},"sourceType":"module"}