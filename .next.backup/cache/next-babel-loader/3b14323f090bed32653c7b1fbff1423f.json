{"ast":null,"code":"import useSWR from 'swr';\nimport { Token, TokenAmount, Pair, JSBI, ChainId } from '@uniswap/sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json';\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { ZERO, ADDRESS_ZERO, ERC20_BYTES32 } from './constants';\nimport { useContract, useKeepSWRDataLiveAsBlocksArrive } from './hooks';\nexport let DataType;\n\n(function (DataType) {\n  DataType[DataType[\"BlockNumber\"] = 0] = \"BlockNumber\";\n  DataType[DataType[\"ETHBalance\"] = 1] = \"ETHBalance\";\n  DataType[DataType[\"TokenBalance\"] = 2] = \"TokenBalance\";\n  DataType[DataType[\"TokenAllowance\"] = 3] = \"TokenAllowance\";\n  DataType[DataType[\"Reserves\"] = 4] = \"Reserves\";\n  DataType[DataType[\"Token\"] = 5] = \"Token\";\n  DataType[DataType[\"RemoteTokens\"] = 6] = \"RemoteTokens\";\n})(DataType || (DataType = {}));\n\nfunction getBlockNumber(library) {\n  return async () => {\n    return library.getBlockNumber();\n  };\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useBlockNumber() {\n  const {\n    library\n  } = useWeb3React();\n  const shouldFetch = !!library;\n  return useSWR(shouldFetch ? [DataType.BlockNumber] : null, getBlockNumber(library), {\n    refreshInterval: 10 * 1000\n  });\n}\n\nfunction getETHBalance(library) {\n  return async (chainId, address) => {\n    const ETH = new Token(chainId, ADDRESS_ZERO, 18);\n    return library.getBalance(address).then(balance => new TokenAmount(ETH, balance.toString()));\n  };\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useETHBalance(address, suspense = false) {\n  const {\n    chainId,\n    library\n  } = useWeb3React();\n  const shouldFetch = typeof chainId === 'number' && typeof address === 'string' && !!library;\n  const result = useSWR(shouldFetch ? [chainId, address, DataType.ETHBalance] : null, getETHBalance(library), {\n    suspense\n  });\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\nfunction getTokenBalance(contract, token) {\n  return async (address) => contract.balanceOf(address).then(balance => new TokenAmount(token, balance.toString()));\n}\n\nexport function useTokenBalance(token, address, suspense = false // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  const contract = useContract(token === null || token === void 0 ? void 0 : token.address, IERC20.abi);\n  const result = useSWR(typeof address === 'string' && token && contract ? [address, token.chainId, token.address, DataType.TokenBalance] : null, getTokenBalance(contract, token), {\n    suspense\n  });\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\nfunction getTokenAllowance(contract, token) {\n  return async (owner, spender) => contract.allowance(owner, spender).then(balance => new TokenAmount(token, balance.toString()));\n}\n\nexport function useTokenAllowance(token, owner, spender) {\n  const contract = useContract(token === null || token === void 0 ? void 0 : token.address, IERC20.abi);\n  const result = useSWR(typeof owner === 'string' && typeof spender === 'string' && token && contract ? [owner, spender, token.chainId, token.address, DataType.TokenAllowance] : null, getTokenAllowance(contract, token));\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\nfunction getReserves(contract, token0, token1) {\n  return async () => contract.getReserves().then(({\n    reserve0,\n    reserve1\n  }) => {\n    const pair = new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString()));\n    return JSBI.equal(pair.reserve0.raw, ZERO) || JSBI.equal(pair.reserve1.raw, ZERO) ? null : pair;\n  }).catch(() => null);\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useReserves(tokenA, tokenB) {\n  const invalid = !!tokenA && !!tokenB && tokenA.equals(tokenB);\n  const [token0, token1] = !!tokenA && !!tokenB && !invalid ? tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] : [];\n  const pairAddress = !!token0 && !!token1 ? Pair.getAddress(token0, token1) : undefined;\n  const contract = useContract(pairAddress, IUniswapV2Pair.abi);\n  const result = useSWR(token0 && pairAddress && contract && token1 ? [token0.chainId, pairAddress, DataType.Reserves] : null, getReserves(contract, token0, token1));\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\nfunction getOnchainToken(contract, contractBytes32) {\n  return async (chainId, address) => {\n    const [decimals, symbol, name] = await Promise.all([contract.decimals().catch(() => null), contract.symbol().catch(() => contractBytes32.symbol().then(parseBytes32String).catch(() => 'UNKNOWN')), contract.name().catch(() => contractBytes32.name().then(parseBytes32String).catch(() => 'Unknown'))]);\n    return decimals === null ? null : new Token(chainId, address, decimals, symbol, name);\n  };\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useOnchainToken(address, suspense = false) {\n  const {\n    chainId\n  } = useWeb3React();\n  const contract = useContract(address, IERC20.abi);\n  const contractBytes32 = useContract(address, ERC20_BYTES32);\n  return useSWR(typeof chainId === 'number' && typeof address === 'string' && contract && contractBytes32 ? [chainId, address, DataType.Token] : null, getOnchainToken(contract, contractBytes32), {\n    dedupingInterval: 60 * 1000,\n    refreshInterval: 60 * 1000,\n    suspense\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function getRemoteTokens(searchQuery) {\n  const {\n    request\n  } = await import('graphql-request');\n  return request('https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2', `\nquery getRemoteTokens($searchQuery: String!) {\n  tokens(where: { symbol_contains: $searchQuery }) {\n    id\n    symbol\n    name\n  }\n}`, {\n    searchQuery\n  }).then(result => result.tokens.map(token => {\n    var _token$symbol, _token$name;\n\n    return {\n      address: getAddress(token.id),\n      symbol: (_token$symbol = token.symbol) !== null && _token$symbol !== void 0 ? _token$symbol : 'UNKNOWN',\n      name: (_token$name = token.name) !== null && _token$name !== void 0 ? _token$name : 'Unknown'\n    };\n  }));\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useRemoteTokens(query = '', suspense = false) {\n  const {\n    chainId\n  } = useWeb3React();\n  const shouldFetch = chainId === ChainId.MAINNET && query.length > 0;\n  return useSWR(shouldFetch ? [query, DataType.RemoteTokens] : null, getRemoteTokens, {\n    dedupingInterval: 60 * 5 * 1000,\n    refreshInterval: 60 * 5 * 1000,\n    suspense\n  });\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/data.ts"],"names":["useSWR","Token","TokenAmount","Pair","JSBI","ChainId","useWeb3React","parseBytes32String","getAddress","IERC20","IUniswapV2Pair","ZERO","ADDRESS_ZERO","ERC20_BYTES32","useContract","useKeepSWRDataLiveAsBlocksArrive","DataType","getBlockNumber","library","useBlockNumber","shouldFetch","BlockNumber","refreshInterval","getETHBalance","chainId","address","ETH","getBalance","then","balance","toString","useETHBalance","suspense","result","ETHBalance","mutate","getTokenBalance","contract","token","balanceOf","useTokenBalance","abi","TokenBalance","getTokenAllowance","owner","spender","allowance","useTokenAllowance","TokenAllowance","getReserves","token0","token1","reserve0","reserve1","pair","equal","raw","catch","useReserves","tokenA","tokenB","invalid","equals","sortsBefore","pairAddress","undefined","Reserves","getOnchainToken","contractBytes32","decimals","symbol","name","Promise","all","useOnchainToken","dedupingInterval","getRemoteTokens","searchQuery","request","tokens","map","id","useRemoteTokens","query","MAINNET","length","RemoteTokens"],"mappings":"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","sourcesContent":["import useSWR, { responseInterface } from 'swr'\nimport { Token, TokenAmount, Pair, JSBI, ChainId } from '@uniswap/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from '@ethersproject/contracts'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { getAddress } from '@ethersproject/address'\nimport { Web3Provider } from '@ethersproject/providers'\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json'\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'\n\nimport { ZERO, ADDRESS_ZERO, ERC20_BYTES32 } from './constants'\nimport { useContract, useKeepSWRDataLiveAsBlocksArrive } from './hooks'\n\nexport enum DataType {\n  BlockNumber,\n  ETHBalance,\n  TokenBalance,\n  TokenAllowance,\n  Reserves,\n  Token,\n  RemoteTokens,\n}\n\nfunction getBlockNumber(library: Web3Provider): () => Promise<number> {\n  return async (): Promise<number> => {\n    return library.getBlockNumber()\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useBlockNumber(): responseInterface<number, any> {\n  const { library } = useWeb3React()\n  const shouldFetch = !!library\n  return useSWR(shouldFetch ? [DataType.BlockNumber] : null, getBlockNumber(library), {\n    refreshInterval: 10 * 1000,\n  })\n}\n\nfunction getETHBalance(library: Web3Provider): (chainId: number, address: string) => Promise<TokenAmount> {\n  return async (chainId: number, address: string): Promise<TokenAmount> => {\n    const ETH = new Token(chainId, ADDRESS_ZERO, 18)\n    return library\n      .getBalance(address)\n      .then((balance: { toString: () => string }) => new TokenAmount(ETH, balance.toString()))\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useETHBalance(address?: string | null, suspense = false): responseInterface<TokenAmount, any> {\n  const { chainId, library } = useWeb3React()\n  const shouldFetch = typeof chainId === 'number' && typeof address === 'string' && !!library\n\n  const result = useSWR(shouldFetch ? [chainId, address, DataType.ETHBalance] : null, getETHBalance(library), {\n    suspense,\n  })\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getTokenBalance(contract: Contract, token: Token): (address: string) => Promise<TokenAmount> {\n  return async (address: string): Promise<TokenAmount> =>\n    contract\n      .balanceOf(address)\n      .then((balance: { toString: () => string }) => new TokenAmount(token, balance.toString()))\n}\n\nexport function useTokenBalance(\n  token?: Token,\n  address?: string | null,\n  suspense = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): responseInterface<TokenAmount, any> {\n  const contract = useContract(token?.address, IERC20.abi)\n\n  const result = useSWR(\n    typeof address === 'string' && token && contract\n      ? [address, token.chainId, token.address, DataType.TokenBalance]\n      : null,\n    getTokenBalance(contract as Contract, token as Token),\n    { suspense }\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getTokenAllowance(contract: Contract, token: Token): (owner: string, spender: string) => Promise<TokenAmount> {\n  return async (owner: string, spender: string): Promise<TokenAmount> =>\n    contract\n      .allowance(owner, spender)\n      .then((balance: { toString: () => string }) => new TokenAmount(token, balance.toString()))\n}\n\nexport function useTokenAllowance(\n  token?: Token,\n  owner?: string | null,\n  spender?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): responseInterface<TokenAmount, any> {\n  const contract = useContract(token?.address, IERC20.abi)\n\n  const result = useSWR(\n    typeof owner === 'string' && typeof spender === 'string' && token && contract\n      ? [owner, spender, token.chainId, token.address, DataType.TokenAllowance]\n      : null,\n    getTokenAllowance(contract as Contract, token as Token)\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getReserves(contract: Contract, token0: Token, token1: Token): () => Promise<Pair | null> {\n  return async (): Promise<Pair | null> =>\n    contract\n      .getReserves()\n      .then(\n        ({ reserve0, reserve1 }: { reserve0: { toString: () => string }; reserve1: { toString: () => string } }) => {\n          const pair = new Pair(\n            new TokenAmount(token0, reserve0.toString()),\n            new TokenAmount(token1, reserve1.toString())\n          )\n          return JSBI.equal(pair.reserve0.raw, ZERO) || JSBI.equal(pair.reserve1.raw, ZERO) ? null : pair\n        }\n      )\n      .catch(() => null)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useReserves(tokenA?: Token, tokenB?: Token): responseInterface<Pair | null, any> {\n  const invalid = !!tokenA && !!tokenB && tokenA.equals(tokenB)\n  const [token0, token1] =\n    !!tokenA && !!tokenB && !invalid ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : []\n  const pairAddress = !!token0 && !!token1 ? Pair.getAddress(token0, token1) : undefined\n  const contract = useContract(pairAddress, IUniswapV2Pair.abi)\n  const result = useSWR(\n    token0 && pairAddress && contract && token1 ? [token0.chainId, pairAddress, DataType.Reserves] : null,\n    getReserves(contract as Contract, token0 as Token, token1 as Token)\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getOnchainToken(\n  contract: Contract,\n  contractBytes32: Contract\n): (chainId: number, address: string) => Promise<Token | null> {\n  return async (chainId: number, address: string): Promise<Token | null> => {\n    const [decimals, symbol, name] = await Promise.all([\n      contract.decimals().catch(() => null),\n      contract.symbol().catch(() =>\n        contractBytes32\n          .symbol()\n          .then(parseBytes32String)\n          .catch(() => 'UNKNOWN')\n      ),\n      contract.name().catch(() =>\n        contractBytes32\n          .name()\n          .then(parseBytes32String)\n          .catch(() => 'Unknown')\n      ),\n    ])\n    return decimals === null ? null : new Token(chainId, address, decimals, symbol, name)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useOnchainToken(address?: string, suspense = false): responseInterface<Token | null, any> {\n  const { chainId } = useWeb3React()\n  const contract = useContract(address, IERC20.abi)\n  const contractBytes32 = useContract(address, ERC20_BYTES32)\n  return useSWR(\n    typeof chainId === 'number' && typeof address === 'string' && contract && contractBytes32\n      ? [chainId, address, DataType.Token]\n      : null,\n    getOnchainToken(contract as Contract, contractBytes32 as Contract),\n    {\n      dedupingInterval: 60 * 1000,\n      refreshInterval: 60 * 1000,\n      suspense,\n    }\n  )\n}\n\ninterface RemoteToken {\n  address: string\n  symbol: string\n  name: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function getRemoteTokens(searchQuery: string): Promise<RemoteToken[]> {\n  const { request } = await import('graphql-request')\n\n  return request(\n    'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2',\n    `\nquery getRemoteTokens($searchQuery: String!) {\n  tokens(where: { symbol_contains: $searchQuery }) {\n    id\n    symbol\n    name\n  }\n}`,\n    { searchQuery }\n  ).then((result) =>\n    result.tokens.map(\n      (token: { id: string; symbol: string; name: string }): RemoteToken => ({\n        address: getAddress(token.id),\n        symbol: token.symbol ?? 'UNKNOWN',\n        name: token.name ?? 'Unknown',\n      })\n    )\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useRemoteTokens(query = '', suspense = false): responseInterface<RemoteToken[], any> {\n  const { chainId } = useWeb3React()\n  const shouldFetch = chainId === ChainId.MAINNET && query.length > 0\n  return useSWR(shouldFetch ? [query, DataType.RemoteTokens] : null, getRemoteTokens, {\n    dedupingInterval: 60 * 5 * 1000,\n    refreshInterval: 60 * 5 * 1000,\n    suspense,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}