{"ast":null,"code":"const isEvent = key => /^on[A-Z]/.test(key);\n\nconst getEventsFromProps = props => Object.keys(props).filter(isEvent).map(getEventFromKey);\n\nconst getEventFromKey = key => key.substr(2).toLowerCase();\n\nexport const unsub = (component, events = undefined) => {\n  (component.unsubs || [] // events not supplied, or event is in events list\n  ).filter(([event]) => !events || events.includes(event)).forEach(([, unsub]) => unsub());\n};\nexport const sub = (component, props) => {\n  // unsub existing subscriptions\n  unsub(component, getEventsFromProps(props)); // subscribe\n\n  component.unsubs = Object.keys(props).filter(isEvent).map(key => {\n    const type = getEventFromKey(key);\n    return [type, component.editor.on(type, props[key])];\n  });\n};","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/node_modules/react-pintura/events.js"],"names":["isEvent","key","test","getEventsFromProps","props","Object","keys","filter","map","getEventFromKey","substr","toLowerCase","unsub","component","events","undefined","unsubs","event","includes","forEach","sub","type","editor","on"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,GAAD,IAAS,WAAWC,IAAX,CAAgBD,GAAhB,CAAzB;;AAEA,MAAME,kBAAkB,GAAIC,KAAD,IAAWC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0BP,OAA1B,EAAmCQ,GAAnC,CAAuCC,eAAvC,CAAtC;;AAEA,MAAMA,eAAe,GAAIR,GAAD,IAASA,GAAG,CAACS,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAjC;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,SAAD,EAAYC,MAAM,GAAGC,SAArB,KAAmC;AACpD,GAACF,SAAS,CAACG,MAAV,IAAoB,EAArB,CACI;AADJ,IAEKT,MAFL,CAEY,CAAC,CAACU,KAAD,CAAD,KAAa,CAACH,MAAD,IAAWA,MAAM,CAACI,QAAP,CAAgBD,KAAhB,CAFpC,EAGKE,OAHL,CAGa,CAAC,GAAGP,KAAH,CAAD,KAAeA,KAAK,EAHjC;AAIH,CALM;AAOP,OAAO,MAAMQ,GAAG,GAAG,CAACP,SAAD,EAAYT,KAAZ,KAAsB;AACrC;AACAQ,EAAAA,KAAK,CAACC,SAAD,EAAYV,kBAAkB,CAACC,KAAD,CAA9B,CAAL,CAFqC,CAIrC;;AACAS,EAAAA,SAAS,CAACG,MAAV,GAAmBX,MAAM,CAACC,IAAP,CAAYF,KAAZ,EACdG,MADc,CACPP,OADO,EAEdQ,GAFc,CAETP,GAAD,IAAS;AACV,UAAMoB,IAAI,GAAGZ,eAAe,CAACR,GAAD,CAA5B;AACA,WAAO,CAACoB,IAAD,EAAOR,SAAS,CAACS,MAAV,CAAiBC,EAAjB,CAAoBF,IAApB,EAA0BjB,KAAK,CAACH,GAAD,CAA/B,CAAP,CAAP;AACH,GALc,CAAnB;AAMH,CAXM","sourcesContent":["const isEvent = (key) => /^on[A-Z]/.test(key);\n\nconst getEventsFromProps = (props) => Object.keys(props).filter(isEvent).map(getEventFromKey);\n\nconst getEventFromKey = (key) => key.substr(2).toLowerCase();\n\nexport const unsub = (component, events = undefined) => {\n    (component.unsubs || [])\n        // events not supplied, or event is in events list\n        .filter(([event]) => !events || events.includes(event))\n        .forEach(([, unsub]) => unsub());\n};\n\nexport const sub = (component, props) => {\n    // unsub existing subscriptions\n    unsub(component, getEventsFromProps(props));\n\n    // subscribe\n    component.unsubs = Object.keys(props)\n        .filter(isEvent)\n        .map((key) => {\n            const type = getEventFromKey(key);\n            return [type, component.editor.on(type, props[key])];\n        });\n};\n"]},"metadata":{},"sourceType":"module"}