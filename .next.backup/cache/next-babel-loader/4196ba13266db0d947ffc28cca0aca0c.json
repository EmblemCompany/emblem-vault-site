{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx\",\n    _s = $RefreshSig$();\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"onMouseMove\", \"onMouseOver\"];\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Stack, Button, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, useColorMode } from '@chakra-ui/core';\nimport { HStack, VStack } from '@chakra-ui/react';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'; // import Select from \"react-dropdown-select\";\n\nimport PropTypes from 'prop-types';\nimport ReactSelect, { components, createFilter } from 'react-select';\nexport default function Find() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(Number(query.start) || 0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState([]),\n      vaults = _useState2[0],\n      setVaults = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: true\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingApi = _useState4[0],\n      setLoadingApi = _useState4[1];\n\n  var _useState5 = useState(query.address),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState(query.experimental),\n      experimental = _useState6[0],\n      setExperimental = _useState6[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState7 = useState(false),\n      shouldFetchData = _useState7[0],\n      setShouldFetchData = _useState7[1];\n\n  var _useState8 = useState(true),\n      hasMore = _useState8[0],\n      setHasMore = _useState8[1];\n\n  var _useState9 = useState(0),\n      offset = _useState9[0],\n      setOffset = _useState9[1];\n\n  var _useState10 = useState(query && Object.keys(query).length > 0),\n      q = _useState10[0],\n      setQ = _useState10[1];\n\n  var _useState11 = useState(false),\n      hideClaimed = _useState11[0],\n      setHideClaimed = _useState11[1];\n\n  var _useState12 = useState(false),\n      hideUnminted = _useState12[0],\n      setHideUnminted = _useState12[1];\n\n  var _useState13 = useState(query.name),\n      assetName = _useState13[0],\n      setAssetName = _useState13[1];\n\n  var _useState14 = useState(assetName || ''),\n      tempAssetName = _useState14[0],\n      setTempAssetName = _useState14[1];\n\n  var _useState15 = useState(query.coin),\n      coin = _useState15[0],\n      setCoin = _useState15[1];\n\n  var _useState16 = useState(coin || ''),\n      tempCoin = _useState16[0],\n      setTempCoin = _useState16[1];\n\n  var _useState17 = useState(query.project),\n      project = _useState17[0],\n      setProject = _useState17[1];\n\n  var _useState18 = useState(project || ''),\n      tempProject = _useState18[0],\n      setTempProject = _useState18[1];\n\n  var _useState19 = useState([]),\n      projects = _useState19[0],\n      setProjects = _useState19[1];\n\n  var _useState20 = useState(false),\n      loadedProjects = _useState20[0],\n      setLoadedProjects = _useState20[1];\n\n  var _useState21 = useState([]),\n      assets = _useState21[0],\n      setAssets = _useState21[1];\n\n  var _useState22 = useState(false),\n      loadedAssets = _useState22[0],\n      setLoadedAssets = _useState22[1];\n\n  var _useState23 = useState(query.searchType || 'filter'),\n      searchType = _useState23[0],\n      setSearchType = _useState23[1];\n\n  var _useState24 = useState(searchType.toString()),\n      tempSearchType = _useState24[0],\n      setTempSearchType = _useState24[1];\n\n  var _useState25 = useState(query.vaultName),\n      vaultName = _useState25[0],\n      setVaultName = _useState25[1];\n\n  var _useState26 = useState(vaultName || ''),\n      tempVaultName = _useState26[0],\n      setTempVaultName = _useState26[1];\n\n  var _useState27 = useState(query.vaultDescription),\n      vaultDescription = _useState27[0],\n      setVaultDescription = _useState27[1];\n\n  var _useState28 = useState(vaultDescription),\n      tempVaultDescription = _useState28[0],\n      setTempVaultDescription = _useState28[1];\n\n  var _useState29 = useState(query.network || null),\n      network = _useState29[0],\n      setNetwork = _useState29[1];\n\n  var _useState30 = useState(Object.keys(query).filter(function (key) {\n    return key !== \"vaultName\" && key !== \"vaultDescription\" && key !== \"searchType\";\n  })),\n      balanceChecks = _useState30[0],\n      setBalanceChecks = _useState30[1];\n\n  var _useState31 = useState(Object.keys(query).filter(function (key) {\n    return key !== \"name\" && key !== \"coin\" && key !== \"project\" && key !== \"searchType\";\n  })),\n      metadataChecks = _useState31[0],\n      setMetadataChecks = _useState31[1];\n\n  var _useState32 = useState([]),\n      selectedItems = _useState32[0],\n      setSelectedItems = _useState32[1];\n\n  var CustomOption = function CustomOption(_ref) {\n    var children = _ref.children,\n        props = _objectWithoutProperties(_ref, _excluded);\n\n    // eslint-disable-next-line no-unused-vars\n    var _props$innerProps = props.innerProps,\n        onMouseMove = _props$innerProps.onMouseMove,\n        onMouseOver = _props$innerProps.onMouseOver,\n        rest = _objectWithoutProperties(_props$innerProps, _excluded2);\n\n    var newProps = _objectSpread(_objectSpread({}, props), {}, {\n      innerProps: rest\n    });\n\n    return __jsx(components.Option, _extends({}, newProps, {\n      className: \"custom-option\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }), children);\n  };\n\n  CustomOption.propTypes = {\n    innerProps: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired\n  };\n  var PAGE_SIZE = 20;\n\n  var getProjects = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(EMBLEM_API + '/search/projects', {\n                method: 'GET',\n                headers: {\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context.sent;\n              setProjects(jsonData.sort());\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getProjects() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getAssets = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, jsonData, formatted;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(EMBLEM_API + '/search/assets', {\n                method: 'GET',\n                headers: {\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context2.sent;\n              formatted = [];\n              jsonData.sort().forEach(function (item) {\n                formatted.push({\n                  value: item,\n                  label: item\n                });\n              });\n              setAssets(formatted); // console.log(formatted)\n\n              _context2.next = 14;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function getAssets() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var body, response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              body = {};\n\n              if (metadataChecks.length > 0) {\n                body.metadata = {};\n                metadataChecks.forEach(function (key) {\n                  if (key == \"vaultDescription\") {\n                    body.metadata[\"description\"] = tempVaultDescription;\n                  }\n\n                  if (key == \"vaultName\") {\n                    body.metadata[\"name\"] = tempVaultName;\n                  }\n                });\n              }\n\n              if (balanceChecks.length > 0) {\n                body.balance = {};\n                balanceChecks.forEach(function (key) {\n                  if (key == \"name\") {\n                    body.balance[\"name\"] = tempAssetName;\n                  }\n\n                  if (key == \"coin\") {\n                    body.balance[\"coin\"] = tempCoin;\n                  }\n\n                  if (key == \"project\") {\n                    body.balance[\"project\"] = tempProject;\n                  }\n                });\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return fetch(EMBLEM_API + '/find/' + tempSearchType + '?start=' + offset + '&size=' + PAGE_SIZE, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              response = _context3.sent;\n              _context3.next = 9;\n              return response.json();\n\n            case 9:\n              jsonData = _context3.sent;\n              console.log('------ vaults', jsonData);\n              jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true);\n              setVaults(vaults.concat(jsonData));\n              setState({\n                loaded: true\n              });\n              setLoadingApi(false);\n              _context3.next = 19;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](3);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 17]]);\n    }));\n\n    return function getVaults() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n              setOffset(offset + PAGE_SIZE);\n              setShouldFetchData(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleCreateItem = function handleCreateItem(item) {\n    setAssets(function (curr) {\n      return [].concat(_toConsumableArray(curr), [item]);\n    });\n    setSelectedItems(function (curr) {\n      return [].concat(_toConsumableArray(curr), [item]);\n    });\n  };\n\n  var handleSelectedItemsChange = function handleSelectedItemsChange(selectedItems) {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  var _useState33 = useState(''),\n      acct = _useState33[0],\n      setAcct = _useState33[1];\n\n  useEffect(function () {\n    if (q && account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState34 = useState(chainId),\n      chain = _useState34[0],\n      setChain = _useState34[1];\n\n  useEffect(function () {\n    if (q && chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    // console.log('here', chainId, chain, account, state)\n    if (q && !account && !state.loaded) {\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    if (shouldFetchData) {\n      console.log('here 1');\n      setShouldFetchData(false);\n      setLoadingApi(true);\n      getVaults();\n    } else {\n      console.log('no fetch');\n    }\n  }, [shouldFetchData]);\n  useEffect(function () {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2');\n      setShouldFetchData(true); // getVaults()\n    } else {\n      console.log('no fetch', q, vaults);\n    }\n  }, [q, vaults]);\n  useEffect(function () {\n    if (projects.length == 0 && !loadedProjects) {\n      setLoadedProjects(true);\n      getProjects();\n    }\n  });\n  useEffect(function () {\n    if (assets.length == 0 && !loadedAssets) {\n      setLoadedAssets(true);\n      getAssets();\n    }\n  }); // useEffect(() => {\n  //   if (query.assetName && !balanceChecks.includes('assetName')) {      \n  //     setBalanceChecks(balanceChecks.concat('assetName'))\n  //   }    \n  // })\n  // useEffect(() => {\n  //   if (query.coin && !balanceChecks.includes('coin')) {      \n  //     setBalanceChecks(balanceChecks.concat('coin'))\n  //   }\n  // })\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setBalanceChecks(balanceChecks.concat(target));\n    }\n\n    console.log('balance checks', balanceChecks);\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setMetadataChecks(metadataChecks.concat(target));\n    }\n\n    console.log('metadata checks', metadataChecks);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }) : '', __jsx(VStack, {\n    width: \"100%\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    onChange: function onChange(e) {\n      setTempSearchType(e.target.value);\n    },\n    defaultValue: tempSearchType,\n    value: tempSearchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    isChecked: tempSearchType == \"filter\" ? true : false,\n    value: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Filter (AND)\"), __jsx(Radio, {\n    isChecked: tempSearchType === \"or\" ? true : false,\n    value: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, \"Search (OR)\"))), __jsx(CheckboxGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check1\",\n    isChecked: balanceChecks.includes('name'),\n    value: \"name\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, \"Asset Name\"), __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check2\",\n    isChecked: balanceChecks.includes('coin'),\n    value: \"coin\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \"Blockchain\"), __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check3\",\n    isChecked: balanceChecks.includes('project'),\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Project\"), __jsx(Checkbox, {\n    isDisabled: balanceChecks.length > 0,\n    key: \"check4\",\n    isChecked: metadataChecks.includes('vaultName'),\n    value: \"vaultName\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"Vault Name\"), __jsx(Checkbox, {\n    isDisabled: balanceChecks.length > 0,\n    key: \"check5\",\n    isChecked: metadataChecks.includes('vaultDescription'),\n    value: \"vaultDescription\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Vault Description\"), __jsx(Checkbox, {\n    isChecked: hideClaimed == true,\n    key: \"check6\",\n    value: \"hideClaimed\",\n    onChange: function onChange(e) {\n      setHideClaimed(!hideClaimed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"Hide Claimed\"), __jsx(Checkbox, {\n    isChecked: hideUnminted == true,\n    key: \"check6\",\n    value: \"hideUnminted\",\n    onChange: function onChange(e) {\n      setHideUnminted(!hideUnminted);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Hide Un-Minted\"))), balanceChecks.map(function (check, index) {\n    return __jsx(VStack, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, index == 0 ? null : tempSearchType == \"or\" ? \"or\" : \"and\", \" \", check == \"coin\" ? \"from Blockchain\" : check == \"name\" ? \"within balances for the Asset Name of\" : \"of the Project\"), check == \"name\" ? // <Input value={tempAssetName} onChange={(e) => setTempAssetName(e.target.value)} ></Input>\n    __jsx(ReactSelect, {\n      components: {\n        Option: CustomOption\n      },\n      classNamePrefix: \"custom-select\",\n      filterOption: createFilter({\n        ignoreAccents: false\n      }),\n      options: assets,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }) : check == \"coin\" ? __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }) // <Select value={tempCoin} onChange={(e)=>{setTempCoin(e.target.value)}}>\n    //   <option key=\"1\" value=\"POLYGON\">Polygon (Matic)</option>\n    //   <option key=\"2\" value=\"XCP\">Counterparty</option>\n    //   <option key=\"3\" value=\"BTC\">Bitcoin</option>\n    //   <option key=\"4\" value=\"BCH\">Bitcoin Cash</option>\n    //   <option key=\"5\" value=\"DGB\">Digibyte</option>\n    //   <option key=\"6\" value=\"DOGE\">Dogecoin</option>\n    //   <option key=\"7\" value=\"ETH\">Ethereum</option>\n    //   <option key=\"8\" value=\"FTM\">Fantom</option>\n    //   <option key=\"9\" value=\"LTC\">Litecoin</option>\n    //   <option key=\"10\" value=\"NMC\">Namecoin</option>\n    //   <option key=\"11\" value=\"OMNI\">Omni</option>\n    //   <option key=\"12\" value=\"xDai\">xDai</option>\n    //   <option key=\"13\" value=\"OMNI\">Omni</option>\n    //   <option key=\"14\" value=\"XDP\">Doge Party</option>\n    //   <option key=\"15\" value=\"XMP\">Mona Party</option>\n    //   <option key=\"16\" value=\"XTZ\">Tezos</option>\n    // </Select>\n    : check == \"project\" ? __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }) // <Select value={tempProject} onChange={(e)=>{setTempProject(e.target.value)}}>\n    //   {projects.map((project, index)=>{\n    //     return (<option key={\"project-\"+index} value={project}>{project}</option>)\n    //   })}\n    // </Select>\n    : null);\n  }), metadataChecks.map(function (check, index) {\n    return __jsx(VStack, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, index == 0 ? null : tempSearchType == \"or\" ? \"or\" : \"and\", \" \", check == \"vaultName\" ? \"within vault name\" : check == \"vaultDescription\" ? \"within vault description\" : null), check == \"vaultName\" ? __jsx(Input, {\n      value: tempVaultName,\n      onChange: function onChange(e) {\n        return setTempVaultName(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }) : check == \"vaultDescription\" ? __jsx(Input, {\n      value: tempVaultDescription,\n      onChange: function onChange(e) {\n        return setTempVaultDescription(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }) : null);\n  }), __jsx(Button, {\n    m: 2,\n    isDisabled: balanceChecks.length < 1 && metadataChecks.length < 1,\n    onClick: function onClick() {\n      setOffset(0);\n      setState({\n        loaded: false\n      });\n      setVaults([]);\n      setQ(true);\n      var loc = location.href.split('?')[0] + '?';\n      metadataChecks.forEach(function (key) {\n        if (key == \"vaultDescription\") {\n          loc = loc + key + '=' + tempVaultDescription + \"&\";\n        }\n\n        if (key == \"vaultName\") {\n          loc = loc + key + '=' + tempVaultName + \"&\";\n        }\n      });\n      balanceChecks.forEach(function (key) {\n        console.log(key);\n\n        if (key == \"name\") {\n          loc = loc + key + '=' + tempAssetName + \"&\";\n        }\n\n        if (key == \"coin\") {\n          loc = loc + key + '=' + tempCoin + \"&\";\n        }\n\n        if (key == \"project\") {\n          loc = loc + key + '=' + tempProject + \"&\";\n        }\n      });\n\n      if (tempSearchType) {\n        loc = loc + \"searchType=\" + tempSearchType + \"&\";\n      } // let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n\n\n      console.log(\"SEARCH\", loc);\n      window.history.pushState('', 'Title', loc);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, \"Search\")), q ? __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    if (hideClaimed && vault.status == 'claimed' || hideUnminted && !vault.live) {\n      return null;\n    } else {\n      return __jsx(Link, {\n        href: url,\n        className: \"vaultLink\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 23\n        }\n      }, __jsx(Box, _extends({\n        className: \"NFT newest\",\n        key: index\n      }, flexSettings, {\n        onClick: redirect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }), __jsx(Text, {\n        fontWeight: \"semibold\",\n        textAlign: \"center\",\n        mt: 2,\n        pl: 2,\n        isTruncated: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }\n      }, vault.name, !vault[\"private\"] && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 27\n        }\n      }, __jsx(Embed, {\n        className: \"d-block w-100 NFT-newest-image\",\n        url: vault.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      })), __jsx(Box, {\n        d: \"flex\",\n        alignItems: \"baseline\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 27\n        }\n      }), __jsx(Stack, {\n        align: \"center\",\n        mt: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 27\n        }\n      }, vault.status == 'claimed' ? __jsx(Text, {\n        color: \"green.500\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 58\n        }\n      }, \"CLAIMED\") : null, __jsx(Text, {\n        fontSize: \"xs\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, \"Id: \", vault.tokenId))));\n    }\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  }, \"CREATE ONE HERE!\")))) : null);\n}\n\n_s(Find, \"J7PRPn3eswD6wgG1U6Nzz/gADCo=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = Find;\n\nvar _c;\n\n$RefreshReg$(_c, \"Find\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx"],"names":["Box","Flex","Text","Link","Stack","Button","Checkbox","CheckboxGroup","Radio","RadioGroup","Input","useColorMode","HStack","VStack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","InfiniteScroll","Embed","PropTypes","ReactSelect","components","createFilter","Find","query","Number","start","pagePosition","setPagePosition","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","hasMore","setHasMore","offset","setOffset","Object","keys","length","q","setQ","hideClaimed","setHideClaimed","hideUnminted","setHideUnminted","name","assetName","setAssetName","tempAssetName","setTempAssetName","coin","setCoin","tempCoin","setTempCoin","project","setProject","tempProject","setTempProject","projects","setProjects","loadedProjects","setLoadedProjects","assets","setAssets","loadedAssets","setLoadedAssets","searchType","setSearchType","toString","tempSearchType","setTempSearchType","vaultName","setVaultName","tempVaultName","setTempVaultName","vaultDescription","setVaultDescription","tempVaultDescription","setTempVaultDescription","network","setNetwork","filter","key","balanceChecks","setBalanceChecks","metadataChecks","setMetadataChecks","selectedItems","setSelectedItems","CustomOption","children","props","innerProps","onMouseMove","onMouseOver","rest","newProps","propTypes","object","isRequired","node","PAGE_SIZE","getProjects","fetch","method","headers","service","response","json","jsonData","sort","getAssets","formatted","forEach","item","push","value","label","getVaults","body","metadata","balance","JSON","stringify","console","log","concat","fetchData","handleCreateItem","curr","handleSelectedItemsChange","acct","setAcct","chain","setChain","addOrRemoveBalanceFilter","target","includes","addOrRemoveMetadataFilter","e","map","check","index","Option","ignoreAccents","loc","location","href","split","window","history","pushState","textAlign","vault","pieces","pathname","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","live","totalValue","image"],"mappings":"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","sourcesContent":["// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, useColorMode } from '@chakra-ui/core'\nimport {HStack, VStack } from '@chakra-ui/react'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { Component, useEffect, useState } from 'react'\nimport { EMBLEM_API } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n// import Select from \"react-dropdown-select\";\nimport PropTypes from 'prop-types';\nimport ReactSelect, { components, createFilter } from 'react-select';\n\nexport default function Find() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const [q, setQ] = useState(query && Object.keys(query).length > 0)\n  const [hideClaimed, setHideClaimed] = useState(false)\n  const [hideUnminted, setHideUnminted] = useState(false)\n\n  const [assetName, setAssetName] = useState(query.name)\n  const [tempAssetName, setTempAssetName] = useState(assetName || '')\n\n  const [coin, setCoin] = useState(query.coin)\n  const [tempCoin, setTempCoin] = useState(coin || '')\n\n  const [project, setProject] = useState(query.project)\n  const [tempProject, setTempProject] = useState(project || '')\n\n  const [projects, setProjects] = useState([])\n  const [loadedProjects, setLoadedProjects] = useState(false)\n\n  const [assets, setAssets] = useState([])\n  const [loadedAssets, setLoadedAssets] = useState(false)\n\n  const [searchType, setSearchType] = useState(query.searchType || 'filter')\n  const [tempSearchType, setTempSearchType] = useState(searchType.toString())\n\n  const [vaultName, setVaultName] = useState(query.vaultName)\n  const [tempVaultName, setTempVaultName] = useState(vaultName || '')\n\n  const [vaultDescription, setVaultDescription] = useState(query.vaultDescription)\n  const [tempVaultDescription, setTempVaultDescription] = useState(vaultDescription)\n\n  const [network, setNetwork] = useState(query.network || null)\n  \n  const [balanceChecks, setBalanceChecks] = useState(Object.keys(query).filter(key=>{return key !== \"vaultName\" && key !== \"vaultDescription\" && key !== \"searchType\"}))\n  const [metadataChecks, setMetadataChecks] = useState(Object.keys(query).filter(key=>{return key !== \"name\" && key !== \"coin\" && key !== \"project\" && key !== \"searchType\"}))\n\n  const [selectedItems, setSelectedItems] = useState<Item[]>([]);\n\n  const CustomOption = ({ children, ...props }) => {\n    // eslint-disable-next-line no-unused-vars\n    const { onMouseMove, onMouseOver, ...rest } = props.innerProps;\n    const newProps: any = { ...props, innerProps: rest };\n    return (\n      <components.Option \n      {...newProps}\n      className=\"custom-option\"\n      >\n        {children}\n      </components.Option>\n    );\n  };\n  \n  CustomOption.propTypes = {\n    innerProps: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired\n  };\n\n  interface Item {\n    label: string;\n    value: string;\n  }\n\n  const PAGE_SIZE = 20\n\n  const getProjects = async () => { \n    try {\n      const response = await fetch(EMBLEM_API + '/search/projects', {\n        method: 'GET',\n        headers: {\n          service: 'evmetadata'\n        }\n      })\n      let jsonData = await response.json()\n      \n      setProjects(jsonData.sort())\n    } catch (error) {}\n  }\n\n  const getAssets = async () => { \n    try {\n      const response = await fetch(EMBLEM_API + '/search/assets', {\n        method: 'GET',\n        headers: {\n          service: 'evmetadata'\n        }\n      })\n      let jsonData = await response.json()\n      let formatted = []\n      jsonData.sort().forEach(item=>{\n        formatted.push({\n          value: item,\n          label: item\n        })\n      })\n      setAssets(formatted)\n      // console.log(formatted)\n    } catch (error) {}\n  }\n\n  const getVaults = async () => {    \n    let body: any = {}\n    if (metadataChecks.length > 0) {\n      body.metadata = {}\n      metadataChecks.forEach(key => {\n        if (key == \"vaultDescription\") {\n          body.metadata[\"description\"] = tempVaultDescription\n        }\n        if (key == \"vaultName\") {\n          body.metadata[\"name\"] = tempVaultName\n        }\n      })\n      \n    }\n    if (balanceChecks.length > 0) {\n      body.balance = {}\n      balanceChecks.forEach(key => {\n        if (key == \"name\") {\n          body.balance[\"name\"] = tempAssetName\n        }\n        if (key == \"coin\") {\n          body.balance[\"coin\"] = tempCoin\n        }\n        if (key == \"project\") {\n          body.balance[\"project\"] = tempProject\n        }\n      })\n    }\n    try {\n      const response = await fetch(EMBLEM_API + '/find/'+tempSearchType+'?start='+offset+'&size='+PAGE_SIZE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify(body)\n      })\n      let jsonData = await response.json()\n      console.log('------ vaults', jsonData)\n      jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true)\n      setVaults(vaults.concat(jsonData))\n      setState({ loaded: true })\n      setLoadingApi(false)\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }  \n\n  const handleCreateItem = (item: Item) => {\n    setAssets((curr) => [...curr, item]);\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems?: Item[]) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (q && account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (q && chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (q && !account && !state.loaded) {      \n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {    \n    if (shouldFetchData) {\n      console.log('here 1')\n      setShouldFetchData(false)\n      setLoadingApi(true)\n      getVaults()\n    } else {\n      console.log('no fetch')\n    }\n  }, [shouldFetchData])\n\n  useEffect(() => {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2')\n      setShouldFetchData(true)\n      // getVaults()\n    } else {\n      console.log('no fetch', q, vaults)\n    }\n  }, [q, vaults])\n\n  useEffect(() => {\n    if (projects.length == 0 && !loadedProjects) {      \n      setLoadedProjects(true)\n      getProjects()\n    }\n  })\n\n  useEffect(() => {\n    if (assets.length == 0 && !loadedAssets) {      \n      setLoadedAssets(true)\n      getAssets()\n    }\n  })\n\n  // useEffect(() => {\n  //   if (query.assetName && !balanceChecks.includes('assetName')) {      \n  //     setBalanceChecks(balanceChecks.concat('assetName'))\n  //   }    \n  // })\n\n  // useEffect(() => {\n  //   if (query.coin && !balanceChecks.includes('coin')) {      \n  //     setBalanceChecks(balanceChecks.concat('coin'))\n  //   }\n  // })\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(item => item !== target))\n    } else {\n      setBalanceChecks(balanceChecks.concat(target))\n    }\n    console.log('balance checks',balanceChecks)\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(item => item !== target))\n    } else {\n      setMetadataChecks(metadataChecks.concat(target))\n    }\n    console.log('metadata checks',metadataChecks)\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n      <VStack width=\"100%\" align=\"center\" justifyContent=\"center\" >\n        <RadioGroup onChange={(e)=>{ setTempSearchType(e.target.value) }} defaultValue={tempSearchType} value={tempSearchType}>\n          <Stack spacing={4} direction=\"row\">                \n            <Radio isChecked={tempSearchType == \"filter\"? true : false} value=\"filter\">Filter (AND)</Radio>\n            <Radio isChecked={tempSearchType === \"or\"? true : false} value=\"or\">Search (OR)</Radio>\n          </Stack>\n        </RadioGroup>\n        <CheckboxGroup>\n          <HStack>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check1\" isChecked={balanceChecks.includes('name')} value=\"name\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Asset Name</Checkbox>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check2\" isChecked={balanceChecks.includes('coin')} value=\"coin\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Blockchain</Checkbox>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check3\" isChecked={balanceChecks.includes('project')} value=\"project\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Project</Checkbox>\n            <Checkbox isDisabled={balanceChecks.length > 0} key=\"check4\" isChecked={metadataChecks.includes('vaultName')} value=\"vaultName\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Name</Checkbox>\n            <Checkbox isDisabled={balanceChecks.length > 0} key=\"check5\" isChecked={metadataChecks.includes('vaultDescription')} value=\"vaultDescription\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Description</Checkbox>\n            <Checkbox isChecked={hideClaimed == true} key=\"check6\" value=\"hideClaimed\" onChange={(e)=>{setHideClaimed(!hideClaimed)}} >Hide Claimed</Checkbox>\n            <Checkbox isChecked={hideUnminted == true} key=\"check6\" value=\"hideUnminted\" onChange={(e)=>{setHideUnminted(!hideUnminted)}} >Hide Un-Minted</Checkbox>\n\n          </HStack>\n        </CheckboxGroup>\n        {balanceChecks.map((check, index)=>{\n          return (\n            <VStack>\n              <Text>{index == 0 ? null : (tempSearchType == \"or\"? \"or\": \"and\")} {check == \"coin\" ? \"from Blockchain\": check==\"name\" ? \"within balances for the Asset Name of\": \"of the Project\"}</Text>\n              {check == \"name\" ? (\n                // <Input value={tempAssetName} onChange={(e) => setTempAssetName(e.target.value)} ></Input>\n                <ReactSelect\n                  components={{ Option: CustomOption }}\n                  classNamePrefix=\"custom-select\"\n                  filterOption={createFilter({ ignoreAccents: false })}\n                  options={assets}\n                />\n              ) : check == \"coin\" ? (\n                <Input></Input>\n                // <Select value={tempCoin} onChange={(e)=>{setTempCoin(e.target.value)}}>\n                //   <option key=\"1\" value=\"POLYGON\">Polygon (Matic)</option>\n                //   <option key=\"2\" value=\"XCP\">Counterparty</option>\n                //   <option key=\"3\" value=\"BTC\">Bitcoin</option>\n                //   <option key=\"4\" value=\"BCH\">Bitcoin Cash</option>\n                //   <option key=\"5\" value=\"DGB\">Digibyte</option>\n                //   <option key=\"6\" value=\"DOGE\">Dogecoin</option>\n                //   <option key=\"7\" value=\"ETH\">Ethereum</option>\n                //   <option key=\"8\" value=\"FTM\">Fantom</option>\n                //   <option key=\"9\" value=\"LTC\">Litecoin</option>\n                //   <option key=\"10\" value=\"NMC\">Namecoin</option>\n                //   <option key=\"11\" value=\"OMNI\">Omni</option>\n                //   <option key=\"12\" value=\"xDai\">xDai</option>\n                //   <option key=\"13\" value=\"OMNI\">Omni</option>\n                //   <option key=\"14\" value=\"XDP\">Doge Party</option>\n                //   <option key=\"15\" value=\"XMP\">Mona Party</option>\n                //   <option key=\"16\" value=\"XTZ\">Tezos</option>\n                // </Select>\n              ) : check == \"project\" ? (\n                <Input></Input>\n                // <Select value={tempProject} onChange={(e)=>{setTempProject(e.target.value)}}>\n                //   {projects.map((project, index)=>{\n                //     return (<option key={\"project-\"+index} value={project}>{project}</option>)\n                //   })}\n                // </Select>\n              ) : null}\n            </VStack>\n          )\n        })}\n        {metadataChecks.map((check, index)=>{\n          return (\n            <VStack>\n              <Text>{index == 0 ? null : (tempSearchType == \"or\"? \"or\": \"and\")} {check == \"vaultName\" ? \"within vault name\": check==\"vaultDescription\" ? \"within vault description\": null}</Text>\n              {check == \"vaultName\" ? (\n                <Input value={tempVaultName} onChange={(e) => setTempVaultName(e.target.value)}></Input>\n              ) : check== \"vaultDescription\" ? (\n                <Input value={tempVaultDescription} onChange={(e) => setTempVaultDescription(e.target.value)}></Input>\n              ) : null}              \n            </VStack>\n          )})}\n          <Button\n              m={2}\n              isDisabled={balanceChecks.length < 1 && metadataChecks.length < 1}\n              onClick={() => {\n                setOffset(0)\n                setState({ loaded: false })\n                setVaults([])                \n                setQ(true)\n                let loc = location.href.split('?')[0] + '?'\n                metadataChecks.forEach(key => {\n                  if (key == \"vaultDescription\") {\n                    loc = loc + key + '=' + tempVaultDescription + \"&\"\n                  }\n                  if (key == \"vaultName\") {\n                    loc = loc + key + '=' + tempVaultName + \"&\"\n                  }\n                })\n                balanceChecks.forEach(key => {\n                  console.log(key)\n                  if (key == \"name\") {\n                    loc = loc + key + '=' + tempAssetName + \"&\"\n                  }\n                  if (key == \"coin\") {\n                    loc = loc + key + '=' + tempCoin + \"&\"\n                  }\n                  if (key == \"project\") {\n                    loc = loc + key + '=' + tempProject + \"&\"\n                  }\n                })\n                if (tempSearchType) {\n                  loc = loc + \"searchType=\" + tempSearchType + \"&\"\n                }\n                // let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n                console.log(\"SEARCH\", loc)\n                window.history.pushState('', 'Title', loc);\n              }}\n            >Search\n          </Button>\n      </VStack>\n            \n      {q? (\n        <InfiniteScroll\n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={fetchData}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b> \n            </p>\n          }\n        >\n          <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n            {vaults.length ? (\n              vaults.map((vault, index) => {\n                let pieces = location.pathname.split('/')\n                pieces.pop()\n                let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n                const flexSettings = {\n                  flex: '1',\n                  minW: '200px',\n                  maxW: '200px',\n                  borderWidth: '1px',\n                  // color: 'white',\n                  mx: '6',\n                  mb: '6',\n                  rounded: 'lg',\n                  overflow: 'hidden',\n                  borderColor: vault.status == 'claimed' ? 'green !important' : '',\n                  cursor: 'pointer',\n                }\n                const redirect = function () {\n                  setLoadingApi(true)\n                  location.href = url\n                }\n                if (hideClaimed && vault.status == 'claimed' || hideUnminted && !vault.live) {\n                  return null\n                } else {\n                    return (\n                      <Link href={url} className=\"vaultLink\">\n                        <Box className=\"NFT newest\" key={index} {...flexSettings} onClick={redirect}>\n                          <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>\n                            {vault.name}\n                            {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                          </Text>\n                          <Stack align=\"center\">\n                            <Embed className=\"d-block w-100 NFT-newest-image\" url={vault.image}/>\n                          </Stack>\n                          <Box d=\"flex\" alignItems=\"baseline\">\n                            \n                          </Box>\n                          \n                          <Stack align=\"center\" mt={3}>\n                            {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                            <Text fontSize=\"xs\">Id: {vault.tokenId}</Text>\n                          </Stack>\n                        </Box>\n                      </Link>\n                    )\n                }\n              })\n              \n            ) : (\n              <Text>\n                YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n                <Link color=\"#638cd8\" href=\"../create\">\n                  CREATE ONE HERE!\n                </Link>\n              </Text>\n            )}\n            \n          </Flex>\n        </InfiniteScroll>\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}