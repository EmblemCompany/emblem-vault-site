{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Container from 'react-bootstrap/Container';\nimport { Box, Stack } from '@chakra-ui/core';\nimport Embed from '../Embed';\nexport var NFTSlideshow = /*#__PURE__*/function (_Component) {\n  _inherits(NFTSlideshow, _Component);\n\n  var _super = _createSuper(NFTSlideshow);\n\n  function NFTSlideshow() {\n    _classCallCheck(this, NFTSlideshow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NFTSlideshow, [{\n    key: \"render\",\n    value: function render() {\n      var items = [{\n        image: this.props.image,\n        name: this.props.name,\n        type: \"nft\"\n      }];\n      items = items.concat(this.props.items);\n      items = items.filter(function (item) {\n        return item.image !== \"\" && item.type == \"nft\";\n      });\n      console.log(\"items\", items);\n      return __jsx(Container, {\n        className: \"p-3\"\n      }, __jsx(Carousel, null, items.map(function (item, index) {\n        return __jsx(Carousel.Item, {\n          key: index\n        }, __jsx(Stack, null, __jsx(Box, null, __jsx(Embed, {\n          url: item.image\n        })), __jsx(Box, null, __jsx(Carousel.Caption, null, __jsx(\"h3\", null, item.name)))));\n      })));\n    }\n  }]);\n\n  return NFTSlideshow;\n}(Component);\n;\nexport default NFTSlideshow;","map":null,"metadata":{},"sourceType":"module"}