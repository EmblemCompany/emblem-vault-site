{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Image } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nexport default function VaultList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      vaults = _React$useState2[0],\n      setVaults = _React$useState2[1];\n\n  var validImage = function validImage(data) {\n    if (data.includes('http')) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.emblemvault.io/vaults/' + account, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'service': 'evmetadata',\n                  'chainId': chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context.sent;\n              _context.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context.sent;\n              setVaults(jsonData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVaults();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault) {\n    var url = './vault/?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: \"1\",\n      minW: \"300px\",\n      maxW: \"300px\",\n      borderWidth: \"1px\",\n      color: \"white\",\n      mx: \"6\",\n      mb: \"6\",\n      rounded: \"lg\",\n      overflow: \"hidden\"\n    };\n    return __jsx(Flex, {\n      w: \"100%\",\n      justify: \"center\",\n      flexWrap: \"wrap\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, __jsx(Box, _extends({}, flexSettings, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, vault.name), __jsx(Image, {\n      src: validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\",\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }), vault.values.length ? vault.values.map(function (coin) {\n      return __jsx(Text, {\n        key: coin.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }\n      }, coin.balance, \" \", coin.name);\n    }) : __jsx(Text, {\n      as: \"h2\",\n      textAlign: \"center\",\n      w: \"100%\",\n      p: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Nothing in here! Fill 'er up!\")), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"blue.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), \"I'm a box 2\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), \"I'm a box 3\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), \"I'm a box 4\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), \"I'm a box 5\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), \"I'm a box 6\")) // <Grid key={vault.tokenId} templateColumns=\"repeat(5, 1fr)\" gap={6}>\n    //     <Link href={url}>\n    //       <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n    //         <Box\n    //           mt=\"1\"\n    //           fontWeight=\"semibold\"\n    //           as=\"h4\"\n    //           lineHeight=\"tight\"\n    //           isTruncated\n    //           p={1}\n    //           textAlign=\"center\"\n    //         >\n    //           {vault.name}\n    //           <Image src={validImage(vault.image)\n    //             ? vault.image\n    //             : \"https://circuitsofvalue.com/public/coval-logo.png\"\n    //           }\n    //             size=\"250px\"\n    //           />\n    //         </Box>\n    //         <Box p=\"4\">\n    //           <Box d=\"flex\" alignItems=\"baseline\">\n    //             <Box\n    //               color=\"gray.500\"\n    //               fontWeight=\"semibold\"\n    //               letterSpacing=\"wide\"\n    //               fontSize=\"xs\"\n    //               textTransform=\"uppercase\"\n    //               ml=\"1\"\n    //             >\n    //               {vault.values.length\n    //                 ? vault.values.map((coin) => {\n    //                   return (\n    //                     <Text key={coin.name}>\n    //                       {coin.balance} {coin.name}\n    //                     </Text>\n    //                   )\n    //                 })\n    //                 : <Text  w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n    //               }\n    //             </Box>\n    //           </Box>\n    //         </Box>\n    //       </Box>\n    //     </Link>\n    //   </Grid>\n    ;\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS. \", \" \", __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\")));\n}\n\n_s(VaultList, \"159Y1YZHaM8GnKfFlxW8WZvvM5o=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = VaultList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VaultList\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx"],"names":["Box","Flex","Text","Link","Image","useWeb3React","React","useEffect","VaultList","props","account","chainId","useState","vaults","setVaults","validImage","data","includes","getVaults","fetch","method","headers","toString","responce","json","jsonData","length","map","vault","url","tokenId","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","name","image","values","coin","balance"],"mappings":"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","sourcesContent":["import {\n    Box,\n    Flex,\n    Grid,\n    Text,\n    Link,\n    Image,\n    SimpleGrid\n} from \"@chakra-ui/core\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from \"react\";\n\nexport default function VaultList(props: any) {\n\n    const { account, chainId } = useWeb3React()\n    const [vaults, setVaults] = React.useState([])\n    const validImage = function(data){\n      if (data.includes('http')) {\n        return true\n      } else {\n        return false\n      }\n    }\n    const getVaults = async () => {\n      // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n      const responce = await fetch('https://api.emblemvault.io/vaults/' + account, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'service': 'evmetadata',\n          'chainId': chainId.toString()\n        },\n      })\n      const jsonData = await responce.json()\n      setVaults(jsonData)\n    }\n\n    useEffect(() => {\n        getVaults()\n      }, [])\n\n    return (\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\" justifyItems=\"center\">\n        {vaults.length ? vaults.map((vault) => {\n            var url = './vault/?id=' + vault.tokenId\n            const flexSettings = {\n              flex: \"1\",\n              minW: \"300px\",\n              maxW: \"300px\",\n              borderWidth: \"1px\",\n              color: \"white\",\n              mx: \"6\",\n              mb: \"6\",\n              rounded: \"lg\",\n              overflow: \"hidden\" \n            };\n            return (\n              <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\">\n                <Box  {...flexSettings} > \n                  <Text fontWeight=\"semibold\" textAlign=\"center\">{vault.name}</Text>\n                  <Image src={validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\" } p={2}/>\n                  {\n                    vault.values.length\n                      ? vault.values.map((coin) => {\n                        return (\n                          <Text key={coin.name}>\n                            {coin.balance} {coin.name}\n                          </Text>\n                        )\n                      })\n                      : <Text as=\"h2\" textAlign=\"center\" w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n                  }\n                </Box>\n                <Box {...flexSettings} bg={\"blue.500\"}>I'm a box 2</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 3</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 4</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 5</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 6</Box>\n              </Flex>\n              // <Grid key={vault.tokenId} templateColumns=\"repeat(5, 1fr)\" gap={6}>\n              //     <Link href={url}>\n              //       <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n              //         <Box\n              //           mt=\"1\"\n              //           fontWeight=\"semibold\"\n              //           as=\"h4\"\n              //           lineHeight=\"tight\"\n              //           isTruncated\n              //           p={1}\n              //           textAlign=\"center\"\n              //         >\n              //           {vault.name}\n\n              //           <Image src={validImage(vault.image)\n              //             ? vault.image\n              //             : \"https://circuitsofvalue.com/public/coval-logo.png\"\n              //           }\n              //             size=\"250px\"\n              //           />\n              //         </Box>\n\n              //         <Box p=\"4\">\n              //           <Box d=\"flex\" alignItems=\"baseline\">\n              //             <Box\n              //               color=\"gray.500\"\n              //               fontWeight=\"semibold\"\n              //               letterSpacing=\"wide\"\n              //               fontSize=\"xs\"\n              //               textTransform=\"uppercase\"\n              //               ml=\"1\"\n              //             >\n              //               {vault.values.length\n              //                 ? vault.values.map((coin) => {\n              //                   return (\n              //                     <Text key={coin.name}>\n              //                       {coin.balance} {coin.name}\n              //                     </Text>\n              //                   )\n              //                 })\n              //                 : <Text  w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n              //               }\n              //             </Box>\n              //           </Box>\n              //         </Box>\n              //       </Box>\n              //     </Link>\n              //   </Grid>\n\n            )\n          })\n          :\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS. {\" \"}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        }\n      </Flex>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}