{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/ColorBox.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useColorMode, Box } from '@chakra-ui/core';\nimport { BG, COLOR } from '../constants';\nexport default function ColorBox(props) {\n  const {\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\"]);\n\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(Box, _extends({\n    bg: BG[colorMode],\n    color: COLOR[colorMode],\n    opacity: .5,\n    transition: \"background-color 250ms\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), children);\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/ColorBox.tsx"],"names":["useColorMode","Box","BG","COLOR","ColorBox","props","children","rest","colorMode"],"mappings":";;;;;;;;;;AAAA,SAASA,YAAT,EAAiCC,GAAjC,QAA4C,iBAA5C;AAEA,SAASC,EAAT,EAAaC,KAAb,QAA0B,cAA1B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAgD;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AAAA,QAAqBE,IAArB,4BAA8BF,KAA9B;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAgBR,YAAY,EAAlC;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEE,EAAE,CAACM,SAAD,CAAX;AAAwB,IAAA,KAAK,EAAEL,KAAK,CAACK,SAAD,CAApC;AAAiD,IAAA,OAAO,EAAE,EAA1D;AAA8D,IAAA,UAAU,EAAC;AAAzE,KAAsGD,IAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,QADH,CADF;AAKD","sourcesContent":["import { useColorMode, BoxProps, Box } from '@chakra-ui/core'\n\nimport { BG, COLOR } from '../constants'\n\nexport default function ColorBox(props: BoxProps): JSX.Element {\n  const { children, ...rest } = props\n  const { colorMode } = useColorMode()\n\n  return (\n    <Box bg={BG[colorMode]} color={COLOR[colorMode]} opacity={.5} transition=\"background-color 250ms\" {...rest}>\n      {children}\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}