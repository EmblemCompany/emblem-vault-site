{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Stack, Button, FormControl, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, Select, useColorMode } from '@chakra-ui/core';\nimport { HStack, VStack } from '@chakra-ui/react';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed';\nexport default function Find() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(Number(query.start) || 0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState([]),\n      vaults = _useState2[0],\n      setVaults = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: true\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingApi = _useState4[0],\n      setLoadingApi = _useState4[1];\n\n  var _useState5 = useState(query.address),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState(query.experimental),\n      experimental = _useState6[0],\n      setExperimental = _useState6[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState7 = useState(false),\n      shouldFetchData = _useState7[0],\n      setShouldFetchData = _useState7[1];\n\n  var _useState8 = useState(true),\n      hasMore = _useState8[0],\n      setHasMore = _useState8[1];\n\n  var _useState9 = useState(0),\n      offset = _useState9[0],\n      setOffset = _useState9[1];\n\n  var _useState10 = useState(query.q),\n      q = _useState10[0],\n      setQ = _useState10[1];\n\n  var _useState11 = useState(q || ''),\n      temp_q = _useState11[0],\n      setTempQ = _useState11[1];\n\n  var _useState12 = useState(query.network || null),\n      network = _useState12[0],\n      setNetwork = _useState12[1];\n\n  var _useState13 = useState(\"filter\"),\n      searchType = _useState13[0],\n      setSearchType = _useState13[1];\n\n  var _useState14 = useState([]),\n      balanceChecks = _useState14[0],\n      setBalanceChecks = _useState14[1];\n\n  var _useState15 = useState([]),\n      metadataChecks = _useState15[0],\n      setMetadataChecks = _useState15[1];\n\n  var PAGE_SIZE = 20;\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('getting vaults');\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(EMBLEM_API + '/find/' + searchType + '?start=' + offset + '&size=' + PAGE_SIZE, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                },\n                body: JSON.stringify({\n                  \"metadata\": {\n                    \"name\": q,\n                    \"description\": q\n                  }\n                })\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              jsonData = _context.sent;\n              // if (jsonData) {\n              //   jsonData = jsonData.filter(item=>{return item.live && !item.claimedBy})\n              // }\n              console.log('------ vaults', jsonData);\n              jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true);\n              setVaults(vaults.concat(jsonData));\n              setState({\n                loaded: true\n              });\n              setLoadingApi(false);\n              _context.next = 17;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 15]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n              setOffset(offset + PAGE_SIZE);\n              setShouldFetchData(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState16 = useState(''),\n      acct = _useState16[0],\n      setAcct = _useState16[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState17 = useState(chainId),\n      chain = _useState17[0],\n      setChain = _useState17[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    if (shouldFetchData) {\n      console.log('here 1');\n      setShouldFetchData(false);\n      setLoadingApi(true);\n      getVaults();\n    } else {\n      console.log('no fetch');\n    }\n  }, [shouldFetchData]);\n  useEffect(function () {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2');\n      setShouldFetchData(true); // getVaults()\n    } else {\n      console.log('no fetch', q, vaults);\n    }\n  }, [q, vaults]);\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setBalanceChecks(balanceChecks.concat(target));\n    }\n\n    console.log('balance checks', balanceChecks);\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setMetadataChecks(metadataChecks.concat(target));\n    }\n\n    console.log('metadata checks', metadataChecks);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }) : '', __jsx(VStack, {\n    width: \"100%\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    onChange: function onChange(e) {\n      setSearchType(e.target.value);\n    },\n    defaultValue: searchType,\n    value: searchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    isChecked: searchType == \"filter\" ? true : false,\n    value: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Filter (AND)\"), __jsx(Radio, {\n    isChecked: searchType == \"or\" ? true : false,\n    value: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Search (OR)\"))), __jsx(CheckboxGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    value: \"name\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Asset Name\"), __jsx(Checkbox, {\n    value: \"coin\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Blockchain\"), __jsx(Checkbox, {\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Project\"), __jsx(Checkbox, {\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Vault Name\"), __jsx(Checkbox, {\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Vault Description\"))), balanceChecks.length > 0 ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Find within vault balances \") : null, balanceChecks.map(function (check, index) {\n    return __jsx(VStack, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, index == 0 ? null : searchType == \"or\" ? \"or\" : \"and\", \" \", check == \"coin\" ? \"from Blockchain\" : check == \"name\" ? \"with the Asset Name of\" : \"of the Project\"), check == \"name\" ? __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }) : check == \"coin\" ? __jsx(Select, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      value: \"POLYGON\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Polygon (Matic)\"), __jsx(\"option\", {\n      value: \"XCP\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"Counterparty\")) : check == \"project\" ? __jsx(Select, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      value: \"Rare Pepe\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Rare Pepe\"), __jsx(\"option\", {\n      value: \"Ether Rock\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"Ether Rock\")) : null);\n  }), metadataChecks.length > 0 ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Find within vault \") : null), __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    id: \"search-query\",\n    width: \"45%\",\n    \"aria-describedby\": \"search-query-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    maxLength: 42,\n    value: temp_q,\n    onChange: function onChange(e) {\n      return setTempQ(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    m: 2,\n    onClick: function onClick() {\n      setOffset(0);\n      setState({\n        loaded: false\n      });\n      setVaults([]);\n      setQ(temp_q);\n      var loc = location.href.split('?')[0] + \"?q=\" + temp_q + \"&network=\" + network;\n      window.history.pushState(temp_q, 'Title', loc);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"Search\"), __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, __jsx(RadioGroup, {\n    onChange: function onChange(e) {\n      setSearchType(e.target.value);\n    },\n    defaultValue: searchType,\n    value: searchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, __jsx(Radio, {\n    isChecked: searchType == \"filter\" ? true : false,\n    value: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \"Filter (AND)\"), __jsx(Radio, {\n    isChecked: searchType == \"or\" ? true : false,\n    value: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \"Search (OR)\"))), __jsx(FormHelperText, {\n    id: \"search-query-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, balanceChecks.length > 0 ? searchType == \"filter\" ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 23\n    }\n  }, \"And\") : balanceChecks.map(function (check, index) {\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 32\n      }\n    }, index == 0 ? 'Search Vault Balances for' : 'for the ', check == \"name\" ? __jsx(HStack, {\n      mt: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, \"Asset name of \"), __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    })) : check == \"coin\" ? __jsx(HStack, {\n      mt: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, \"Blockchain \"), __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    })) : check == \"project\" ? \"Project\" : null, \" \", balanceChecks.length - 1 == index ? null : 'or');\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"Balance Filters\"))), __jsx(CheckboxGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    value: \"name\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"Asset Name\"), __jsx(Checkbox, {\n    value: \"coin\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Blockchain\"), __jsx(Checkbox, {\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Project\"))))), q ? __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    return __jsx(Box, _extends({\n      className: \"NFT newest\",\n      key: index\n    }, flexSettings, {\n      onClick: redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      pl: 2,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, vault.name, !vault[\"private\"] && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, __jsx(Embed, {\n      className: \"d-block w-100 NFT-newest-image\",\n      url: vault.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 23\n      }\n    })), __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    }, vault.status == 'claimed' ? __jsx(Text, {\n      color: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 52\n      }\n    }, \"CLAIMED\") : null, __jsx(Text, {\n      fontSize: \"xs\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }, \"Id: \", vault.tokenId)));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"CREATE ONE HERE!\")))) : null);\n}\n\n_s(Find, \"3hDvbTiwslPxLTHiwVDyXdYlmNg=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = Find;\n\nvar _c;\n\n$RefreshReg$(_c, \"Find\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx"],"names":["Box","Flex","Text","Link","Stack","Button","FormControl","Checkbox","CheckboxGroup","Radio","RadioGroup","Input","FormHelperText","Select","useColorMode","HStack","VStack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","InfiniteScroll","Embed","Find","query","Number","start","pagePosition","setPagePosition","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","hasMore","setHasMore","offset","setOffset","q","setQ","temp_q","setTempQ","network","setNetwork","searchType","setSearchType","balanceChecks","setBalanceChecks","metadataChecks","setMetadataChecks","PAGE_SIZE","getVaults","console","log","fetch","method","headers","service","body","JSON","stringify","response","json","jsonData","length","concat","fetchData","acct","setAcct","chain","setChain","addOrRemoveBalanceFilter","target","includes","filter","item","addOrRemoveMetadataFilter","e","value","map","check","index","loc","location","href","split","window","history","pushState","textAlign","vault","pieces","pathname","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","name","totalValue","image"],"mappings":"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","sourcesContent":["// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, Select, useColorMode } from '@chakra-ui/core'\nimport {HStack, VStack } from '@chakra-ui/react'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n\nexport default function Find() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const [q, setQ] = useState(query.q)\n  const [temp_q, setTempQ] = useState(q || '')\n  const [network, setNetwork] = useState(query.network || null)\n  const [searchType, setSearchType] = useState(\"filter\")\n  const [balanceChecks, setBalanceChecks] = useState([])\n  const [metadataChecks, setMetadataChecks] = useState([])\n\n  const PAGE_SIZE = 20\n\n  const getVaults = async () => {    \n    console.log('getting vaults')\n    try {\n      const response = await fetch(EMBLEM_API + '/find/'+searchType+'?start='+offset+'&size='+PAGE_SIZE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          \"metadata\": {\n            \"name\": q,\n            \"description\": q\n          }\n        })\n      })\n      let jsonData = await response.json()\n      // if (jsonData) {\n      //   jsonData = jsonData.filter(item=>{return item.live && !item.claimedBy})\n      // }\n      console.log('------ vaults', jsonData)\n      jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true)\n      setVaults(vaults.concat(jsonData))\n      setState({ loaded: true })\n      setLoadingApi(false)\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }  \n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {      \n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {    \n    if (shouldFetchData) {\n      console.log('here 1')\n      setShouldFetchData(false)\n      setLoadingApi(true)\n      getVaults()\n    } else {\n      console.log('no fetch')\n    }\n  }, [shouldFetchData])\n\n  useEffect(() => {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2')\n      setShouldFetchData(true)\n      // getVaults()\n    } else {\n      console.log('no fetch', q, vaults)\n    }\n  }, [q, vaults])\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(item => item !== target))\n    } else {\n      setBalanceChecks(balanceChecks.concat(target))\n    }\n    console.log('balance checks',balanceChecks)\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(item => item !== target))\n    } else {\n      setMetadataChecks(metadataChecks.concat(target))\n    }\n    console.log('metadata checks',metadataChecks)\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n      {/* <Flex className=\"wtf\" width=\"100%\" align=\"center\" justifyContent=\"center\" > */}\n      <VStack width=\"100%\" align=\"center\" justifyContent=\"center\" >\n        <RadioGroup onChange={(e)=>{ setSearchType(e.target.value) }} defaultValue={searchType} value={searchType}>\n          <Stack spacing={4} direction=\"row\">                \n            <Radio isChecked={searchType == \"filter\"? true : false} value=\"filter\">Filter (AND)</Radio>\n            <Radio isChecked={searchType == \"or\"? true : false} value=\"or\">Search (OR)</Radio>\n          </Stack>\n        </RadioGroup>\n        <CheckboxGroup>\n          <HStack>\n            <Checkbox value=\"name\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Asset Name</Checkbox>\n            <Checkbox value=\"coin\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Blockchain</Checkbox>\n            <Checkbox value=\"project\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Project</Checkbox>\n            <Checkbox value=\"project\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Name</Checkbox>\n            <Checkbox value=\"project\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Description</Checkbox>\n          </HStack>\n        </CheckboxGroup>\n        {balanceChecks.length > 0 ? (\n          <Text>Find within vault balances </Text>\n        ) : null}\n        {balanceChecks.map((check, index)=>{\n          return (\n            <VStack>\n              <Text>{index == 0 ? null : (searchType == \"or\"? \"or\": \"and\")} {check == \"coin\" ? \"from Blockchain\": check==\"name\" ? \"with the Asset Name of\": \"of the Project\"}</Text>\n              {check == \"name\" ? (\n                <Input></Input>\n              ) : check == \"coin\" ? (\n                <Select>\n                  <option value=\"POLYGON\">Polygon (Matic)</option>\n                  <option value=\"XCP\">Counterparty</option>\n                </Select>\n              ) : check == \"project\" ? (\n                <Select>\n                  <option value=\"Rare Pepe\">Rare Pepe</option>\n                  <option value=\"Ether Rock\">Ether Rock</option>\n                </Select>\n              ) : null}\n            </VStack>\n          )\n        })}\n        {metadataChecks.length > 0 ? (\n          <Text>Find within vault </Text>\n        ) : null}\n      </VStack>\n        <FormControl isRequired>\n          {/* <Flex align=\"center\" justifyContent=\"center\" flexWrap=\"wrap\"> */}\n            <Input\n              type=\"text\"\n              id=\"search-query\"\n              width='45%'\n              aria-describedby=\"search-query-helper-text\"\n              placeholder=\"0xdeadbeef\"\n              maxLength={42}\n              value={temp_q}\n              onChange={(e) =>\n                setTempQ(e.target.value)\n              }\n            />\n            <Button\n              m={2}\n              onClick={() => {\n                setOffset(0)\n                setState({ loaded: false })\n                setVaults([])                \n                setQ(temp_q)\n                let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n                window.history.pushState(temp_q, 'Title', loc);\n              }}\n            >Search\n            </Button>\n            <Stack align=\"center\" w=\"100%\" mt={3}>\n              {/* <Select w=\"45%\" placeholder=\"All Networks\" value={network}\n                onChange={(e)=>{\n                  setNetwork(e.target.value)\n                  console.log(e.target.value)\n                }}\n              >\n                <option value=\"matic\">Matic</option>\n                <option value=\"xdai\">xDai</option>\n                <option value=\"bsc\">Binance Smart Chain</option>\n                <option value=\"mainnet\">Ethereum Mainnet</option>\n                <option value=\"rinkeby\">Ethereum Rinkeby</option>\n              </Select> */}\n              <RadioGroup onChange={(e)=>{ setSearchType(e.target.value) }} defaultValue={searchType} value={searchType}>\n                <Stack spacing={4} direction=\"row\">                \n                  <Radio isChecked={searchType == \"filter\"? true : false} value=\"filter\">Filter (AND)</Radio>\n                  <Radio isChecked={searchType == \"or\"? true : false} value=\"or\">Search (OR)</Radio>\n                </Stack>\n              </RadioGroup>\n\n              <FormHelperText id=\"search-query-helper-text\">\n                <HStack>\n                  {balanceChecks.length > 0 ? (\n                    searchType == \"filter\" ? (\n                      <Text>And</Text>\n                    ) : (\n                      balanceChecks.map((check, index)=>{\n                        return <Text>{index == 0 ? ('Search Vault Balances for') : ('for the ')} \n                        {check == \"name\" ? (\n                          <HStack mt={10}>\n                            <Text>Asset name of </Text>\n                            <Input></Input>\n                          </HStack>\n                        ): \n                        check == \"coin\" ? (\n                          <HStack mt={10}>\n                            <Text>Blockchain </Text>\n                            <Input></Input>\n                          </HStack>\n                        ): check == \"project\" ? (\"Project\") : null} {((balanceChecks.length -1) == index) ? null : ('or')}</Text>\n                      })\n                    )\n                  ) : (\n                    <Text>Balance Filters</Text>\n                  ) }\n                </HStack>\n              </FormHelperText>\n\n              <CheckboxGroup>\n                <HStack>\n                  <Checkbox value=\"name\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Asset Name</Checkbox>\n                  <Checkbox value=\"coin\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Blockchain</Checkbox>\n                  <Checkbox value=\"project\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Project</Checkbox>\n                </HStack>\n              </CheckboxGroup>\n\n            </Stack>\n          {/* </Flex> */}\n          \n          {/* <FormHelperText id=\"search-query-helper-text\">\n            Search for Emblem Vaults by: Name, Description, Type, Contents\n          </FormHelperText> */}\n        </FormControl>\n      {/* </Flex> */}\n      {q? (\n        <InfiniteScroll                \n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={fetchData}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b> \n            </p>\n          }\n        >\n          <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n            {vaults.length ? (\n              vaults.map((vault, index) => {\n                let pieces = location.pathname.split('/')\n                pieces.pop()\n                let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n                const flexSettings = {\n                  flex: '1',\n                  minW: '200px',\n                  maxW: '200px',\n                  borderWidth: '1px',\n                  // color: 'white',\n                  mx: '6',\n                  mb: '6',\n                  rounded: 'lg',\n                  overflow: 'hidden',\n                  borderColor: vault.status == 'claimed' ? 'green !important' : '',\n                  cursor: 'pointer',\n                }\n                const redirect = function () {\n                  setLoadingApi(true)\n                  location.href = url\n                }\n                return (\n                  <Box className=\"NFT newest\" key={index} {...flexSettings} onClick={redirect}>\n                    <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>\n                      {vault.name}\n                      {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                    </Text>\n                    <Stack align=\"center\">\n                      <Embed className=\"d-block w-100 NFT-newest-image\" url={vault.image}/>\n                    </Stack>\n                    <Box d=\"flex\" alignItems=\"baseline\">\n                      \n                    </Box>\n                    \n                    <Stack align=\"center\" mt={3}>\n                      {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                      <Text fontSize=\"xs\">Id: {vault.tokenId}</Text>\n                    </Stack>\n                  </Box>\n                )\n              })\n              \n            ) : (\n              <Text>\n                YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n                <Link color=\"#638cd8\" href=\"../create\">\n                  CREATE ONE HERE!\n                </Link>\n              </Text>\n            )}\n            \n          </Flex>\n        </InfiniteScroll>\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}