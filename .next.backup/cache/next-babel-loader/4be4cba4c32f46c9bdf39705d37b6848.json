{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Text, Box, Flex, Button, ButtonGroup, Divider, Select, Image, Input } from '@chakra-ui/core';\nimport { useRouter } from 'next/router';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { curatedContracts, curatedAssets, EMBLEM_V2_API, ORD_API } from '../constants';\nimport { Checkbox } from '@material-ui/core';\nvar tokenId = null;\nexport default function CreateCurated(props) {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(0),\n      tabIndex = _useState[0],\n      setTabIndex = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState(account || ''),\n      vaultAddress = _useState2[0],\n      setVaultAddress = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: true,\n    \"private\": false\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState({\n    name: '',\n    image: ''\n  }),\n      targetAsset = _useState4[0],\n      setTargetAsset = _useState4[1];\n\n  var _useState5 = useState({\n    name: '',\n    chain: '',\n    image: function image(data) {\n      return '';\n    },\n    allowed: function allowed(data) {\n      return false;\n    },\n    allowedName: function allowedName(data) {\n      return false;\n    },\n    placeholder: function placeholder() {\n      return '';\n    },\n    loading: function loading() {\n      return '';\n    },\n    loadTypes: []\n  }),\n      targetContract = _useState5[0],\n      setTargetContract = _useState5[1];\n\n  var _useState6 = useState(query.curated == 't'),\n      enableAllCurated = _useState6[0],\n      setEnableCurated = _useState6[1];\n\n  var _useState7 = useState(true),\n      mintDisabled = _useState7[0],\n      setMintDisabled = _useState7[1];\n\n  var _useState8 = useState(''),\n      curatedError = _useState8[0],\n      setCuratedError = _useState8[1];\n\n  var _useState9 = useState(''),\n      curatedContentType = _useState9[0],\n      setCuratedContentType = _useState9[1];\n\n  var _useState10 = useState(false),\n      checked = _useState10[0],\n      setChecked = _useState10[1]; // blank vault\n\n\n  var _useState11 = useState(false),\n      acceptedTos = _useState11[0],\n      setAcceptedTos = _useState11[1]; // ToS\n\n\n  var _useState12 = useState(true),\n      showTos = _useState12[0],\n      setShowTos = _useState12[1]; // ToS\n\n\n  var checkTOS = function checkTOS() {\n    var tosMemory = localStorage.getItem('tos') == 'true';\n\n    if (!tosMemory) {\n      setAcceptedTos(false);\n      setShowTos(true);\n    } else {\n      setAcceptedTos(true);\n      setShowTos(false);\n    }\n  };\n\n  var handleTOSCheck = function handleTOSCheck(e) {\n    setAcceptedTos(e.target.checked);\n    localStorage.setItem('tos', e.target.checked);\n  };\n\n  var checkMintDisabled = function checkMintDisabled() {\n    console.log('disable me', !acceptedTos, mintDisabled, !acceptedTos || mintDisabled);\n    return !acceptedTos || mintDisabled;\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    var body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      chainId: chainId,\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    };\n    var apiSuffix = '/create-curated';\n    fetch(EMBLEM_V2_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      body: JSON.stringify(body)\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context.sent;\n                tokenId = body.data.tokenId || body.data.targetContract.tokenId;\n                setTimeout(function () {\n                  location.href = location.origin + '/nft2?id=' + tokenId;\n                }, 500);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  function getOrdinalRecord(num, cb) {\n    fetch(ORD_API + 'num/' + num, {\n      method: 'GET'\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return response.json();\n\n              case 2:\n                body = _context2.sent;\n                return _context2.abrupt(\"return\", cb(body.data[0]));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n  var _useState13 = useState(''),\n      acct = _useState13[0],\n      setAcct = _useState13[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n      checkTOS();\n    }\n  }, [account, acct]);\n  var typingTimer;\n\n  function handleKeyUpNameInput(e) {\n    clearTimeout(typingTimer);\n    console.log(e.target.value);\n    typingTimer = setTimeout(function () {\n      var name = \"\".concat(targetContract.name, \" \").concat(e.target.value);\n\n      if (targetContract.allowedName(name)) {\n        setCuratedError('');\n        getOrdinalRecord(e.target.value, function (ordRecord) {\n          setCuratedContentType(ordRecord ? ordRecord.content_type : \"\");\n\n          if (targetContract.allowed(ordRecord)) {\n            setCuratedError('');\n            setMintDisabled(false);\n            setTargetAsset({\n              name: name,\n              image: targetContract.image(ordRecord)\n            });\n          } else {\n            setCuratedContentType(\"\");\n            setCuratedError(ordRecord ? \"JSON/BRC-20 inscriptions not allowed\" : 'Not a valid #');\n            setMintDisabled(true);\n            setTargetAsset({\n              name: '',\n              image: targetContract.placeholder()\n            });\n          }\n        });\n      } else {\n        setCuratedContentType(\"\");\n        setCuratedError('Invalid format: example (-1337)');\n        setMintDisabled(true);\n        setTargetAsset({\n          name: '',\n          image: ''\n        });\n      }\n    }, 1000);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    }\n  }, __jsx(TabList, null, __jsx(Tab, null, \"Create Curated Vault\")), __jsx(TabPanels, null, __jsx(TabPanel, null, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, null, __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1\n  }, __jsx(Divider, null), __jsx(FormLabel, {\n    htmlFor: \"project-selector\"\n  }, \"Choose Curated Collection\"), __jsx(Select, {\n    id: \"project-selector\",\n    w: \"100%\",\n    value: targetContract.name,\n    onChange: function onChange(e) {\n      var contractData = curatedContracts.filter(function (item) {\n        return item.name == e.target.value;\n      })[0];\n      console.log('------', contractData);\n      setTargetContract(contractData);\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"---Choose Project---\"), curatedContracts.map(function (project) {\n    return enableAllCurated || project.mintable ? __jsx(\"option\", {\n      value: project.name\n    }, project.name) : null;\n  })), targetContract.name && targetContract[\"collectionType\"] !== 'ERC721' && targetContract[\"collectionType\"] !== 'ERC721a' ? __jsx(Select, {\n    id: \"asset-selector\",\n    w: \"100%\",\n    value: targetAsset.name,\n    onChange: function onChange(e) {\n      setMintDisabled(false);\n      setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(function (item) {\n        return item.name == e.target.value;\n      })[0]);\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"---Choose One---\"), curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(function (asset) {\n    return __jsx(\"option\", {\n      value: asset.name\n    }, asset.name);\n  }) : null) : targetContract.name && (targetContract[\"collectionType\"] == 'ERC721' || targetContract[\"collectionType\"] == 'ERC721a') ? __jsx(React.Fragment, null, targetContract.loadTypes.includes('input') ? __jsx(Input, {\n    isDisabled: checked,\n    onKeyUp: function onKeyUp(e) {\n      handleKeyUpNameInput(e);\n    },\n    w: \"100%\",\n    placeholder: \"\".concat(targetContract.name, \" Number (-1337)\")\n  }) : null, targetContract.loadTypes.includes('empty') ? __jsx(Box, {\n    my: 3\n  }, __jsx(Checkbox, {\n    checked: checked,\n    onChange: function onChange(e) {\n      if (e.target.checked) {\n        setTargetAsset({\n          name: \"Loading...\",\n          image: targetContract.loading()\n        });\n        setCuratedError('');\n        setCuratedContentType('');\n        setMintDisabled(false);\n        setChecked(true);\n      } else {\n        setTargetAsset({\n          name: '',\n          image: ''\n        });\n        setMintDisabled(true);\n        setChecked(false);\n      }\n    }\n  }), \"Empty Vault.\") : null, __jsx(React.Fragment, null, curatedError), __jsx(React.Fragment, null, curatedContentType)) : null, targetAsset.image ? __jsx(Image, {\n    p: \"20px\",\n    h: \"100%\",\n    className: \"d-block w-100\",\n    src: curatedContentType == 'text/plain;charset=utf-8' ? targetContract.placeholder() : targetAsset.image,\n    width: \"250px\"\n  }) : null)))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(ButtonGroup, {\n    spacing: 4\n  }, !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\"\n  }, \"No Wallet Connected!\") : __jsx(Button, {\n    isDisabled: checkMintDisabled(),\n    onClick: function onClick(e) {\n      handleSubmit(e);\n    },\n    type: \"submit\"\n  }, \"Create \", targetContract.name.toString(), \" Vault\"))), showTos ? __jsx(Stack, null, __jsx(FormLabel, null, __jsx(Checkbox, {\n    onClick: handleTOSCheck\n  }), \"Agree to \", __jsx(\"a\", {\n    href: \"/tos\",\n    target: \"_blank\"\n  }, \"Terms of Service\"))) : __jsx(Text, null, __jsx(\"a\", {\n    href: \"/tos\",\n    target: \"_blank\"\n  }, \"Terms of Service\")))))))));\n}","map":null,"metadata":{},"sourceType":"module"}