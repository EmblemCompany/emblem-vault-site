{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, Text, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nexport default function PnL() {\n  const {\n    query\n  } = useRouter();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    loaded: false\n  });\n  const {\n    0: loadingApi,\n    1: setLoadingApi\n  } = useState(false);\n  const {\n    0: stats,\n    1: setStats\n  } = useState(null);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\");\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false);\n      getPnL();\n    }\n  }, []);\n\n  const getPnL = async () => {\n    console.log(\"getting logs\");\n    fetch('https://api.emblemvault.io/s:osautomate/offer/' + address + '?limit=10&offset=20', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false);\n      setState({\n        loaded: true\n      });\n      let jsonData = await response.json();\n      setStats(jsonData);\n      console.log(jsonData);\n    });\n  };\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, stats ? __jsx(React.Fragment, null, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Total Offers in USD: $\", stats.offers.toFixed(2)), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Total Number of offers: $\", stats.offerCount.toFixed(2))) : null)));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx"],"names":["Flex","Text","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","PnL","query","account","chainId","state","setState","loaded","loadingApi","setLoadingApi","stats","setStats","address","setAddress","getPnL","console","log","fetch","method","headers","then","response","jsonData","json","offers","toFixed","offerCount"],"mappings":";;;AAAA,SAAcA,IAAd,EAAoBC,IAApB,EAAuCC,KAAvC,QAA8H,iBAA9H;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYL,SAAS,EAA3B;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBN,YAAY,EAAzC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlC;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAACE,KAAK,CAACU,OAAN,IAAiB,4CAAlB,CAAtC;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACE,MAAN,IAAgB,KAAhB,IAAyB,CAACC,UAA9B,EAA0C;AACxCC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAK,MAAAA,MAAM;AACP;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMA,MAAM,GAAG,YAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,IAAAA,KAAK,CAAC,mDAAiDL,OAAjD,GAAyD,qBAA1D,EAAiF;AACpFM,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAF2E,KAAjF,CAAL,CAKGC,IALH,CAKQ,gBAAgBC,QAAhB,EAA0B;AAChCZ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAR;AACA,UAAIe,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;AACAZ,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,KAXD;AAYD,GAdD;;AAgBA,SACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEjB,KAAK,CAACE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,EADjC,EAGE,MAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAgC,IAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,GACJ,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA6BA,KAAK,CAACc,MAAN,CAAaC,OAAb,CAAqB,CAArB,CAA7B,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgCf,KAAK,CAACgB,UAAN,CAAiBD,OAAjB,CAAyB,CAAzB,CAAhC,CAFF,CADI,GAKF,IANN,CADF,CAHF,CADF;AAiBD","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useQuery } from '@chakra-ui/react'\n\n\nexport default function PnL() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState(null)\n  const [address, setAddress] = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\")\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false)\n      getPnL()\n    }\n  }, [])\n\n  const getPnL = async() =>{\n    console.log(\"getting logs\")\n    fetch('https://api.emblemvault.io/s:osautomate/offer/'+address+'?limit=10&offset=20', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false)\n      setState({ loaded: true })\n      let jsonData = await response.json()\n      setStats(jsonData)\n      console.log(jsonData)\n    })\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\">\n          {stats? (\n            <>\n              <Text>Total Offers in USD: ${stats.offers.toFixed(2)}</Text>\n              <Text>Total Number of offers: ${stats.offerCount.toFixed(2)}</Text>              \n            </>\n          ) : null }\n        </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}