{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/embed/SketchFab.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nexport var SketchFab = /*#__PURE__*/function (_Component) {\n  _inherits(SketchFab, _Component);\n\n  var _super = _createSuper(SketchFab);\n\n  function SketchFab() {\n    _classCallCheck(this, SketchFab);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SketchFab, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"sketchfab-embed-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, __jsx(\"iframe\", {\n        width: \"100%\",\n        src: this.props.url,\n        frameBorder: \"0\",\n        allow: \"autoplay; fullscreen; vr\",\n        allowFullScreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SketchFab;\n}(Component);\nexport default SketchFab;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/embed/SketchFab.tsx"],"names":["React","Component","SketchFab","props","url"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAMA,WAAaC,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,aACE,4BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GAArC;AAA0C,QAAA,WAAW,EAAC,GAAtD;AAA0D,QAAA,KAAK,EAAC,0BAAhE;AAA2F,QAAA,eAAe,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;AATH;;AAAA;AAAA,EAA+BH,SAA/B;AAYA,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react'\n\ntype SketchFabProps = {\n  url: string\n}\n\nexport class SketchFab extends Component<SketchFabProps> {\n  render() {\n    return (\n      <>\n        <div className=\"sketchfab-embed-wrapper\">\n          <iframe width=\"100%\" src={this.props.url} frameBorder=\"0\" allow=\"autoplay; fullscreen; vr\" allowFullScreen></iframe>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default SketchFab\n"]},"metadata":{},"sourceType":"module"}