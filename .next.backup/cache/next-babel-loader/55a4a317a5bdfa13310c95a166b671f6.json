{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup } from \"@chakra-ui/core\";\nimport Loader from \"react-loader\";\nimport { useWeb3React } from '@web3-react/core';\nimport React from \"react\";\nexport default function Create(props) {\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const [vaultAddress, setVaultAddress] = React.useState(account || '');\n  const [vaultPubPriv, setVaultPubPriv] = React.useState('Public');\n  const [vaultName, setVaultName] = React.useState('');\n  const [vaultDesc, setVaultDesc] = React.useState('');\n  const [vaultImage, setVaultImage] = React.useState('');\n  const [state, setState] = React.useState({\n    loaded: true,\n    checked: false\n  });\n\n  const handlePrivateRadio = e => {\n    console.log(\"Changed Private visibility\", e);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Vault properties: name is: ${vaultName}, description is: ${vaultDesc}, address is: ${vaultAddress}, Pub/Priv is: ${vaultPubPriv}, and image data is: ${vaultImage}`);\n    setState({\n      loaded: false,\n      checked: state.checked\n    });\n    fetch('https://api.emblemvault.io/mint', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        'service': 'kms'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        \"toAddress\": vaultAddress,\n        \"description\": vaultDesc,\n        \"name\": vaultName,\n        \"image\": vaultImage,\n        \"chainId\": chainId\n      })\n    }).then(function (response) {\n      setState({\n        loaded: true,\n        checked: state.checked\n      });\n      location.href = location.origin + \"/vaultlist\"; // console.log(response.json())\n      // return response.json();\n    });\n  };\n\n  function previewFile() {\n    const preview = document.querySelector('img');\n    const inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: index => setTabIndex(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Make\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"My\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    value: vaultAddress,\n    onChange: e => setVaultAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: e => setVaultPubPriv(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, __jsx(Radio, {\n    value: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\",\n    onChange: handlePrivateRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, \"Do you want people to be able to see the contents?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Next\")))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    value: vaultName,\n    onChange: e => setVaultName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, \"Give it some love so you can find it later.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    value: vaultDesc,\n    onChange: e => setVaultDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, \"Want to add some fluffy text to tell people what the point is?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: () => setTabIndex(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }\n  }, \"Next\"))))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Vault Image\"), __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: () => previewFile(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 27\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 79\n    }\n  }), __jsx(\"img\", {\n    src: \"\",\n    width: \"200\",\n    alt: \"Image preview...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 27\n    }\n  })))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"DO IT!\"))))))))));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx"],"names":["FormControl","FormLabel","FormHelperText","Input","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","RadioGroup","Radio","Textarea","Button","ButtonGroup","Loader","useWeb3React","React","Create","props","tabIndex","setTabIndex","useState","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","state","setState","loaded","checked","handlePrivateRadio","e","console","log","handleSubmit","evt","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","response","location","href","origin","previewFile","preview","document","querySelector","inputelement","reader","FileReader","addEventListener","src","result","toString","files","readAsDataURL","index","target","value"],"mappings":"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","sourcesContent":["import {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Input,\n    Stack,\n    Tabs, \n    TabList, \n    TabPanels, \n    Tab, \n    TabPanel,\n    Box,\n    Flex,\n    RadioGroup,\n    Radio,\n    Textarea,\n    Button,\n    ButtonGroup\n  } from \"@chakra-ui/core\";\n  \n  import Loader from \"react-loader\"\n  import { useWeb3React } from '@web3-react/core'\n  import React, { useState } from \"react\";\n  \n  export default function Create(props: any) {\n  \n    const [tabIndex, setTabIndex] = React.useState(0)\n    const { account, chainId } = useWeb3React()\n  \n    const [vaultAddress, setVaultAddress] = React.useState(account || '');\n    const [vaultPubPriv, setVaultPubPriv] = React.useState('Public');\n    const [vaultName, setVaultName] = React.useState('');\n    const [vaultDesc, setVaultDesc] = React.useState('');\n    const [vaultImage, setVaultImage] = React.useState('');\n    const [state, setState] = React.useState({loaded: true, checked: false})\n    \n    const handlePrivateRadio = (e)=>{\n      console.log(\"Changed Private visibility\", e)\n    }\n    const handleSubmit = (evt: { preventDefault: () => void; }) => {\n      evt.preventDefault();\n      alert(`Vault properties: name is: ${vaultName}, description is: ${vaultDesc}, address is: ${vaultAddress}, Pub/Priv is: ${vaultPubPriv}, and image data is: ${vaultImage}`)\n      setState({loaded: false, checked: state.checked})\n      fetch('https://api.emblemvault.io/mint', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n          'Content-Type': 'application/json',\n          'service': 'kms'\n        },\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(\n          {\"toAddress\": vaultAddress,\n          \"description\":vaultDesc,\n          \"name\":vaultName,\n          \"image\":vaultImage,\n          \"chainId\":chainId}\n        )\n      }).then(function(response) {\n        setState({loaded: true, checked: state.checked})\n        location.href = location.origin + \"/vaultlist\"\n        // console.log(response.json())\n        // return response.json();\n      });\n    }\n  \n    function previewFile() {\n      const preview = document.querySelector('img');\n      const inputelement = (document.querySelector('input[type=file]') as HTMLInputElement); //.files[0];\n      const reader = new FileReader();\n    \n      reader.addEventListener(\"load\", function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || '';\n        if (preview) setVaultImage(preview.src)\n      }, false);\n    \n      if (inputelement.files) {\n        reader.readAsDataURL(inputelement.files[0]);\n      }\n    }\n  \n    return (\n      <Loader loaded={state.loaded}>\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Make</Tab>\n              <Tab>My</Tab>\n              <Tab>Vault</Tab>\n            </TabList>\n  \n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"owner-address\">Vault Owner Address</FormLabel>\n                      <Input \n                        type=\"text\" \n                        id=\"owner-address\" \n                        aria-describedby=\"owner-helper-text\" \n                        placeholder=\"0xdeadbeef\"\n                        value={vaultAddress}\n                        onChange={e => setVaultAddress(e.target.value)}\n                        />\n                      <FormHelperText id=\"owner-helper-text\">\n                        What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n  \n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl as=\"fieldset\" isRequired>\n                      <FormLabel as=\"legend\">Public or Private?</FormLabel>\n                      <RadioGroup id=\"pubpriv\" defaultValue=\"Public\" onChange = {e => setVaultPubPriv(e.target.value)}>\n                        <Radio value=\"Public\">Public</Radio>\n                        <Radio value=\"Private\" onChange={handlePrivateRadio}>Private</Radio>\n                      </RadioGroup>\n                      <FormHelperText id=\"email-helper-text\">\n                        Do you want people to be able to see the contents?\n                      </FormHelperText>\n                    </FormControl>                    \n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <Button onClick={() => setTabIndex(1)} >Next</Button>\n                  </Stack>\n                  </Stack>\n              </TabPanel>\n  \n                  <TabPanel>\n                  <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-name\">Vault Name</FormLabel>\n                      <Input \n                        type=\"text\" \n                        id=\"vault-name\" \n                        aria-describedby=\"vault-name-text\"\n                        value={vaultName}\n                        onChange={e => setVaultName(e.target.value)} \n                      />\n                      <FormHelperText id=\"vault-name-text\">\n                        Give it some love so you can find it later.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-desc\">Vault Description</FormLabel>\n                      <Textarea \n                        id=\"vault-desc\" \n                        size=\"lg\" \n                        aria-describedby=\"vault-desc-text\" \n                        value={vaultDesc}\n                        onChange={e => setVaultDesc(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-desc-text\">\n                        Want to add some fluffy text to tell people what the point is?\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(0)} >Back</Button>\n                      <Button onClick={() => setTabIndex(2)} >Next</Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n  \n              <TabPanel>\n                  <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren >\n                      <FormControl>\n                        <FormLabel htmlFor=\"vault-img\">Vault Image</FormLabel>\n                        <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                          <input type=\"file\" onChange={() => previewFile()} /><br/>\n                          <img src=\"\" width=\"200\" alt=\"Image preview...\"></img>\n                        </Box>\n                      </FormControl>\n                    </Stack>\n  \n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                      <ButtonGroup spacing={4}>\n                        <Button onClick={() => setTabIndex(1)} >Back</Button>\n                        <Button onClick={handleSubmit} type=\"submit\">DO IT!</Button>\n                      </ButtonGroup>\n                    </Stack>\n                  </Stack>\n                </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      </Loader>\n    )\n  }"]},"metadata":{},"sourceType":"module"}