{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vaults.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Image, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { validImage } from '../utils';\nimport { EMBLEM_API } from '../constants';\nexport default function Vaults() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState = useState([]),\n      vaults = _useState[0],\n      setVaults = _useState[1];\n\n  var _useState2 = useState({\n    loaded: false\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      loadingApi = _useState3[0],\n      setLoadingApi = _useState3[1];\n\n  var _useState4 = useState(query.address),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Number(chainId) === 137 || Number(chainId) === 80001)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              loadCache();\n              _context.prev = 3;\n              _context.next = 6;\n              return fetch(EMBLEM_API + '/opensea/assets', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainId: chainId.toString()\n                }\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              jsonData = _context.sent;\n              setState({\n                loaded: true\n              });\n              setVaults(jsonData);\n              saveCache(jsonData);\n              setLoadingApi(false); // console.log(jsonData)\n\n              _context.next = 18;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 16]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadCache = function loadCache() {\n    var vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_vaults')); // Load vaults from storage before updating from server!\n\n    if (vaults) {\n      setState({\n        loaded: true\n      });\n      setVaults(vaults);\n      setLoadingApi(true);\n    }\n  };\n\n  var saveCache = function saveCache(vaults) {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_vaults', JSON.stringify(vaults)); // Save new state for later\n  };\n\n  var _useState5 = useState(''),\n      acct = _useState5[0],\n      setAcct = _useState5[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState6 = useState(chainId),\n      chain = _useState6[0],\n      setChain = _useState6[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    account && chainId ? getVaults() : setState({\n      loaded: true\n    });\n  }, []);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/vault?id=' + vault.token_id;\n    var flexSettings = {\n      flex: '1',\n      minW: '300px',\n      maxW: '300px',\n      borderWidth: '1px',\n      color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      location.href = url;\n    };\n\n    return __jsx(Box, _extends({\n      key: index\n    }, flexSettings, {\n      onClick: redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, vault.name), __jsx(Stack, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(Image, {\n      src: validImage(vault.image_url) ? vault.image_url : 'https://circuitsofvalue.com/public/coval-logo.png',\n      p: 2,\n      width: \"250px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      ml: \"2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    })), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, vault.status == 'claimed' ? __jsx(Text, {\n      color: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 48\n      }\n    }, \"CLAIMED\") : null));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\"))));\n}\n\n_s(Vaults, \"21/aXTEysExcpOO0y9XVHJh2gDs=\", false, function () {\n  return [useRouter, useWeb3React];\n});\n\n_c = Vaults;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaults\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vaults.tsx"],"names":["Box","Flex","Text","Link","Image","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","validImage","EMBLEM_API","Vaults","query","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","getVaults","Number","loadCache","fetch","method","headers","service","toString","response","json","jsonData","saveCache","JSON","parse","localStorage","getItem","setItem","stringify","acct","setAcct","chain","setChain","length","map","vault","index","pieces","location","pathname","split","pop","url","origin","join","token_id","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","href","name","image_url"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { validImage } from '../utils'\nimport { EMBLEM_API } from '../constants'\n\nexport default function Vaults() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n\n  const getVaults = async () => {\n    if (Number(chainId) === 137 || Number(chainId) === 80001) {\n      return\n    }\n    loadCache()\n    try {\n      const response = await fetch(EMBLEM_API + '/opensea/assets', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n        },\n      })\n      const jsonData = await response.json()\n      setState({ loaded: true })\n      setVaults(jsonData)\n      saveCache(jsonData)\n      setLoadingApi(false)\n      // console.log(jsonData)\n    } catch (error) {}\n  }\n\n  const loadCache = () => {\n    let vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_vaults')) // Load vaults from storage before updating from server!\n    if (vaults) {\n      setState({ loaded: true })\n      setVaults(vaults)\n      setLoadingApi(true)\n    }\n  }\n\n  const saveCache = (vaults) => {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_vaults', JSON.stringify(vaults)) // Save new state for later\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    account && chainId ? getVaults() : setState({ loaded: true })\n  }, [])\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>\n        {vaults.length ? (\n          vaults.map((vault, index) => {\n            let pieces = location.pathname.split('/')\n            pieces.pop()\n            let url = location.origin + pieces.join('/') + '/vault?id=' + vault.token_id\n            const flexSettings = {\n              flex: '1',\n              minW: '300px',\n              maxW: '300px',\n              borderWidth: '1px',\n              color: 'white',\n              mx: '6',\n              mb: '6',\n              rounded: 'lg',\n              overflow: 'hidden',\n              borderColor: vault.status == 'claimed' ? 'green !important' : '',\n              cursor: 'pointer',\n            }\n            const redirect = function () {\n              location.href = url\n            }\n            return (\n              <Box key={index} {...flexSettings} onClick={redirect}>\n                <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2}>\n                  {vault.name}\n                  {/* {!vault.private ? ': ~$' + vault.totalValue : null} */}\n                </Text>\n                <Stack align=\"center\">\n                  <Image\n                    src={validImage(vault.image_url) ? vault.image_url : 'https://circuitsofvalue.com/public/coval-logo.png'}\n                    p={2}\n                    width=\"250px\"\n                  />\n                </Stack>\n                <Box d=\"flex\" alignItems=\"baseline\">\n                  <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                    {/* {vault.private ? (\n                      <>\n                        <Text>Contents hidden. Click to view the vault and unlock values.</Text>\n                      </>\n                    ) : vault.values.length ? (\n                      vault.values.map((coin, index) => {\n                        if (index < 4)\n                          return (\n                            <Text key={coin.name} isTruncated>\n                              {coin.name}: {coin.balance}\n                            </Text>\n                          )\n                        else if (index == 4)\n                          return (\n                            <Text fontWeight=\"bold\" mt={2}>\n                              ... Click to see the rest ...\n                            </Text>\n                          )\n                      })\n                    ) : (\n                      <Text>\n                        Nothing in here! <br />\n                        Click to fill 'er up!\n                      </Text>\n                    )} */}\n                  </Box>\n                </Box>\n                {/* <Box d=\"flex\" alignItems=\"baseline\">\n                  <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                    <Text>\n                      Total Computable Value: {vault.totalValue}\n                    </Text>\n                  </Box>\n                  </Box> */}\n                <Stack align=\"center\" mt={3}>\n                  {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                </Stack>\n              </Box>\n            )\n          })\n        ) : (\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        )}\n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}