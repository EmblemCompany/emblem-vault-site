{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vault.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Image, Text, Stack, Button, ButtonGroup, Input, Link, useDisclosure } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Refreshing from './Refreshing';\nimport Loader from 'react-loader';\nimport dynamic from 'next/dynamic';\nimport { validImage } from '../utils';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nimport Tilt from 'react-tilt';\nimport CryptoJS from 'crypto-js';\nvar AddrModal = dynamic(_c = function _c() {\n  return import('./AddrModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./AddrModal')];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = dynamic(_c3 = function _c3() {\n  return import('./KeysModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./KeysModal')];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nexport default function Vault() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(query.id),\n      tokenId = _useState[0],\n      setTokenId = _useState[1];\n\n  var _useState2 = useState(query.experimental),\n      experimental = _useState2[0],\n      setExperimental = _useState2[1];\n\n  var _useState3 = useState(''),\n      vaultName = _useState3[0],\n      setVaultName = _useState3[1];\n\n  var _useState4 = useState(''),\n      vaultDesc = _useState4[0],\n      setVaultDesc = _useState4[1];\n\n  var _useState5 = useState(''),\n      vaultImage = _useState5[0],\n      setVaultImage = _useState5[1];\n\n  var _useState6 = useState([]),\n      vaultValues = _useState6[0],\n      setVaultValues = _useState6[1];\n\n  var _useState7 = useState([]),\n      vaultAddresses = _useState7[0],\n      setVaultAddresses = _useState7[1];\n\n  var _useState8 = useState(false),\n      vaultPrivacy = _useState8[0],\n      setVaultPrivacy = _useState8[1];\n\n  var _useState9 = useState(null),\n      vaultChainId = _useState9[0],\n      setVaultChainId = _useState9[1];\n\n  var _useState10 = useState(null),\n      hash = _useState10[0],\n      setHash = _useState10[1];\n\n  var _useState11 = useState(''),\n      currCoin = _useState11[0],\n      setCurrCoin = _useState11[1];\n\n  var _useState12 = useState(''),\n      currAddr = _useState12[0],\n      setCurrAddr = _useState12[1];\n\n  var _useState13 = useState({\n    loaded: false\n  }),\n      state = _useState13[0],\n      setState = _useState13[1];\n\n  var _useState14 = useState(false),\n      mine = _useState14[0],\n      setMine = _useState14[1];\n\n  var _useState15 = useState(false),\n      claiming = _useState15[0],\n      setClaiming = _useState15[1];\n\n  var _useState16 = useState('claimed'),\n      status = _useState16[0],\n      setStatus = _useState16[1];\n\n  var _useState17 = useState(null),\n      claimedBy = _useState17[0],\n      setClaimedBy = _useState17[1];\n\n  var _useState18 = useState(''),\n      mnemonic = _useState18[0],\n      setMnemonic = _useState18[1];\n\n  var _useState19 = useState(''),\n      privKeyBTC = _useState19[0],\n      setPrivKeyBTC = _useState19[1];\n\n  var _useState20 = useState(''),\n      privKeyETH = _useState20[0],\n      setPrivKeyETH = _useState20[1];\n\n  var _useState21 = useState(false),\n      loadingApi = _useState21[0],\n      setLoadingApi = _useState21[1];\n\n  var _useState22 = useState(''),\n      decryptedEffect = _useState22[0],\n      setDecryptedEffect = _useState22[1];\n\n  var _useState23 = useState(false),\n      decryptedEffectRunning = _useState23[0],\n      setDecryptedEffectRunning = _useState23[1];\n\n  var _useState24 = useState(''),\n      decryptPassword = _useState24[0],\n      setDecryptPassword = _useState24[1];\n\n  var _useState25 = useState(false),\n      invalidVault = _useState25[0],\n      setInvalidVault = _useState25[1];\n\n  var emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true);\n\n  var _useDisclosure = useDisclosure(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = useDisclosure(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadCache();\n              _context.next = 3;\n              return fetch(EMBLEM_API + '/meta/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context.sent;\n              _context.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context.sent;\n              console.log('vault response was ', jsonData);\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                saveCache(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultValues(jsonData.values);\n    setVaultDesc(jsonData.description);\n    setVaultAddresses(jsonData.addresses);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : 4);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    }\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0; // console.log(\"pvt\", isPvt)\n\n    setVaultPrivacy(isPvt);\n  };\n\n  var loadCache = function loadCache() {\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var getKeys = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context2.next = 7;\n              return fetch(EMBLEM_API + '/verify/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context2.sent;\n              _context2.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context2.sent;\n              console.log('getKeys response is ', jsonData);\n              return _context2.abrupt(\"return\", cb(jsonData));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getKeys(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var owner;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return emblemContract.ownerOf(tokenId);\n\n            case 2:\n              owner = _context3.sent;\n              setMine(owner === account); // console.log('status', status, 'claimedBy', claimedBy)\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getContractStates() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleApprove = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              emblemContract.setApprovalForAll(contractAddresses.vaultHandler[chainId], true).then(function (_ref5) {\n                var hash = _ref5.hash;\n                setHash(hash);\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleApprove() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getClaimedVaults = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // emblemContract.events.allEvents({filter: {_from: account, _to: \"0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180\"},fromBlock: 7221177, toBlock: 'latest'}).then((logs)=>{\n              //   console.log('logs', logs)\n              // })\n              library.eth.filter({\n                fromBlock: 7221177,\n                address: emblemContract.address\n              }, function (e, r) {\n                console.log('events', e, r);\n              }); // console.log(emblemContract)\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getClaimedVaults() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n              library.getSigner(account).signMessage('Claim: ' + tokenId).then(function (signature) {\n                getKeys(signature, tokenId, function (result) {\n                  console.log('HandleSign response is ' + result); // alert('Mnemonic: ' + result.decrypted.phrase)\n\n                  setMnemonic(result.decrypted.phrase);\n                  setPrivKeyBTC(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'btc';\n                  })[0].privkey);\n                  setPrivKeyETH(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'eth';\n                  })[0].privkey);\n                  onOpenKeysModal(); // console.log(result.decrypted)\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleSign() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              emblemContract.transferFrom(account, BURN_ADDRESS, tokenId).then(function (_ref9) {\n                var hash = _ref9.hash;\n                setClaiming(true);\n                setTimeout(function () {\n                  setHash(hash);\n                  handleSign();\n                }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n              });\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleClaim() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context8.next = 3;\n                break;\n              }\n\n              return _context8.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVault();\n  }, []);\n  useEffect(function () {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n');\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = CryptoJS.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      var cipherText = item.address.replace('private:', '');\n      item.address = decrypt(cipherText, key);\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = CryptoJS.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }), __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault ? __jsx(Tilt, {\n    className: \"Tilt\",\n    options: {\n      max: experimental ? 19 : 0,\n      scale: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, vaultChainId != chainId ? __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"orange.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, \"BEWARE: Vault is on a different network than you are.\") : null, __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, vaultName), __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: validImage(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png',\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }\n  })), __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    mt: \"1\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, splitDescription(vaultDesc)))), __jsx(Box, {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    as: \"h4\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }, \"Current Contents:\"), vaultPrivacy ? __jsx(React.Fragment, null, __jsx(Text, {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(Input, {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 27\n    }\n  })) : vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(Text, {\n      key: coin.name,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 29\n      }\n    }, coin.name, \": \", coin.balance);\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\"))), !vaultPrivacy ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 23\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(Button, {\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }, \"Put \", addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin, \" In\");\n  }))) : null, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: getClaimedVaults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 23\n    }\n  }, \"Get Claimed Test\")), status === 'claimed' && claimedBy === account ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, __jsx(Button, _extends({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: 'https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + contractAddresses.emblemVault[vaultChainId] + '/' + tokenId,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 23\n    }\n  }), mine ? 'Sell/Gift/Send' : 'Make an Offer')), mine ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 23\n    }\n  }, \"Claim\")) : null), __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(Text, {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null)))) : __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (claiming) {\n        setHash(null);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }) : null));\n}\n\n_s(Vault, \"ZiNRjDSb37In4Py36Fx27RFI5GQ=\", false, function () {\n  return [useWeb3React, useRouter, useContract, useDisclosure, useDisclosure];\n});\n\n_c5 = Vault;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"Vault\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vault.tsx"],"names":["Box","Flex","Image","Text","Stack","Button","ButtonGroup","Input","Link","useDisclosure","useWeb3React","useEffect","useState","useRouter","Refreshing","Loader","dynamic","validImage","TransactionToast","EMBLEM_API","BURN_ADDRESS","contractAddresses","useContract","Tilt","CryptoJS","AddrModal","KeysModal","Vault","account","chainId","library","query","id","tokenId","setTokenId","experimental","setExperimental","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","vaultValues","setVaultValues","vaultAddresses","setVaultAddresses","vaultPrivacy","setVaultPrivacy","vaultChainId","setVaultChainId","hash","setHash","currCoin","setCurrCoin","currAddr","setCurrAddr","loaded","state","setState","mine","setMine","claiming","setClaiming","status","setStatus","claimedBy","setClaimedBy","mnemonic","setMnemonic","privKeyBTC","setPrivKeyBTC","privKeyETH","setPrivKeyETH","loadingApi","setLoadingApi","decryptedEffect","setDecryptedEffect","decryptedEffectRunning","setDecryptedEffectRunning","decryptPassword","setDecryptPassword","invalidVault","setInvalidVault","emblemContract","emblemVault","emblemAbi","isOpenAddrModal","isOpen","onOpenAddrModal","onOpen","onCloseAddrModal","onClose","isOpenKeysModal","onOpenKeysModal","onCloseKeysModal","getVault","loadCache","fetch","method","headers","service","responce","json","jsonData","console","log","name","setStates","saveCache","image","description","values","addresses","network","isPvt","filter","item","address","includes","length","vault","JSON","parse","localStorage","getItem","setItem","stringify","getKeys","signature","cb","myHeaders","Headers","append","toString","raw","body","redirect","getContractStates","ownerOf","owner","handleApprove","setApprovalForAll","vaultHandler","then","getClaimedVaults","eth","fromBlock","e","r","handleSign","getSigner","signMessage","result","decrypted","phrase","keys","key","coin","privkey","handleClaim","transferFrom","setTimeout","startDecryptEffect","nextFrame","pos","i","clen","stri","num","Math","floor","theLetters","random","letter","charAt","block","si","increment","fixed","ctnt","speed","rustle","splitDescription","words","desc","split","trim","tryDecrypt","ciphertext","replace","bytes","AES","decrypt","enc","Utf8","decryptAddresses","err","forEach","cipherText","decryptedData","max","scale","target","value","map","balance","addr","href","rel"],"mappings":"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","sourcesContent":["import { Box, Flex, Image, Text, Stack, Button, ButtonGroup, Input, Link, useDisclosure } from '@chakra-ui/core'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Refreshing from './Refreshing'\nimport Loader from 'react-loader'\nimport dynamic from 'next/dynamic'\nimport { validImage } from '../utils'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\nimport Tilt from 'react-tilt'\nimport CryptoJS from 'crypto-js'\n\nconst AddrModal = dynamic(() => import('./AddrModal'))\nconst KeysModal = dynamic(() => import('./KeysModal'))\n\nexport default function Vault() {\n  const { account, chainId, library } = useWeb3React()\n  const { query } = useRouter()\n  const [tokenId, setTokenId] = useState(query.id)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const [vaultName, setVaultName] = useState('')\n  const [vaultDesc, setVaultDesc] = useState('')\n  const [vaultImage, setVaultImage] = useState('')\n  const [vaultValues, setVaultValues] = useState([])\n  const [vaultAddresses, setVaultAddresses] = useState([])\n  const [vaultPrivacy, setVaultPrivacy] = useState(false)\n  const [vaultChainId, setVaultChainId] = useState(null)\n  const [hash, setHash] = useState(null)\n  const [currCoin, setCurrCoin] = useState('')\n  const [currAddr, setCurrAddr] = useState('')\n  const [state, setState] = useState({ loaded: false })\n  const [mine, setMine] = useState(false)\n  const [claiming, setClaiming] = useState(false)\n  const [status, setStatus] = useState('claimed')\n  const [claimedBy, setClaimedBy] = useState(null)\n  const [mnemonic, setMnemonic] = useState('')\n  const [privKeyBTC, setPrivKeyBTC] = useState('')\n  const [privKeyETH, setPrivKeyETH] = useState('')\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [decryptedEffect, setDecryptedEffect] = useState('')\n  const [decryptedEffectRunning, setDecryptedEffectRunning] = useState(false)\n  const [decryptPassword, setDecryptPassword] = useState('')\n  const [invalidVault, setInvalidVault] = useState(false)\n\n  const emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n\n  const { isOpen: isOpenAddrModal, onOpen: onOpenAddrModal, onClose: onCloseAddrModal } = useDisclosure()\n  const { isOpen: isOpenKeysModal, onOpen: onOpenKeysModal, onClose: onCloseKeysModal } = useDisclosure()\n\n  const getVault = async () => {\n    loadCache()\n    const responce = await fetch(EMBLEM_API + '/meta/' + tokenId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n    })\n    const jsonData = await responce.json()\n    console.log('vault response was ', jsonData)\n    if (!jsonData.name) {\n      setState({ loaded: true })\n      setInvalidVault(true)\n    } else {\n      setStates(jsonData)\n      saveCache(jsonData)\n      setLoadingApi(false)\n      setInvalidVault(false)\n    }\n  }\n\n  const setStates = (jsonData) => {\n    setVaultName(jsonData.name)\n    setVaultImage(jsonData.image)\n    setVaultDesc(jsonData.description)\n    setVaultValues(jsonData.values)\n    setVaultDesc(jsonData.description)\n    setVaultAddresses(jsonData.addresses)\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : 4)\n    setStatus(jsonData.status)\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy)\n    }\n    setState({ loaded: true })\n    let isPvt =\n      jsonData.addresses.filter((item) => {\n        return item.address.includes('private:')\n      }).length > 0\n    // console.log(\"pvt\", isPvt)\n    setVaultPrivacy(isPvt)\n  }\n\n  const loadCache = () => {\n    let vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')) // Load vaults from storage before updating from server!\n    if (vault) {\n      setState({ loaded: true })\n      setStates(vault)\n      setLoadingApi(true)\n    }\n  }\n\n  const saveCache = (vault) => {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)) // Save new state for later\n  }\n\n  const getKeys = async (signature, tokenId, cb) => {\n    var myHeaders = new Headers()\n    myHeaders.append('chainId', chainId.toString())\n    myHeaders.append('service', 'evmetadata')\n    myHeaders.append('Content-Type', 'application/json')\n\n    var raw = JSON.stringify({ signature: signature })\n    const responce = await fetch(EMBLEM_API + '/verify/' + tokenId, {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    })\n    const jsonData = await responce.json()\n    console.log('getKeys response is ', jsonData)\n    return cb(jsonData)\n  }\n\n  const getContractStates = async () => {\n    let owner = await emblemContract.ownerOf(tokenId)\n    setMine(owner === account)\n    // console.log('status', status, 'claimedBy', claimedBy)\n  }\n\n  const handleApprove = async () => {\n    emblemContract\n      .setApprovalForAll(contractAddresses.vaultHandler[chainId], true)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n  }\n\n  const getClaimedVaults = async () => {\n    // emblemContract.events.allEvents({filter: {_from: account, _to: \"0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180\"},fromBlock: 7221177, toBlock: 'latest'}).then((logs)=>{\n    //   console.log('logs', logs)\n    // })\n    library.eth.filter({fromBlock: 7221177, address: emblemContract.address}, function(e, r) {\n      console.log('events',e,r)\n    });\n    // console.log(emblemContract)\n  }\n\n  const handleSign = async () => {\n    // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n    library\n      .getSigner(account)\n      .signMessage('Claim: ' + tokenId)\n      .then((signature) => {\n        getKeys(signature, tokenId, (result) => {\n          console.log('HandleSign response is ' + result)\n          // alert('Mnemonic: ' + result.decrypted.phrase)\n          setMnemonic(result.decrypted.phrase)\n          setPrivKeyBTC(result.decrypted.keys.filter(key=>{ return key.coin === 'btc'})[0].privkey)\n          setPrivKeyETH(result.decrypted.keys.filter(key=>{ return key.coin === 'eth'})[0].privkey)\n          onOpenKeysModal()\n          // console.log(result.decrypted)\n        })\n      })\n  }\n\n  const handleClaim = async () => {\n    emblemContract.transferFrom(account, BURN_ADDRESS, tokenId).then(({ hash }: { hash: string }) => {\n      setClaiming(true)\n      setTimeout(() => {\n        setHash(hash)\n        handleSign()\n      }, 100) // Solving State race condition where transaction watcher wouldn't notice we were claiming\n    })\n  }\n\n  const startDecryptEffect = async () => {\n    if (decryptedEffectRunning) {\n      return\n    }\n    setDecryptedEffectRunning(true)\n    var theLetters = 'abcdefghijklmnopqrstuvwxyz' //You can customize what letters it will cycle through\n    var ctnt = 'Decrypting' // Your text goes here\n    var speed = 5 // ms per frame\n    var increment = 8 // frames per step. Must be >2\n\n    var clen = ctnt.length\n    var si = 0\n    var stri = 0\n    var block = ''\n    var fixed = ''\n    ;(function rustle(i) {\n      setTimeout(function () {\n        if (--i) {\n          rustle(i)\n        } else {\n          setDecryptedEffectRunning(false)\n        }\n        nextFrame(i)\n        si = si + 1\n      }, speed)\n    })(clen * increment + 1)\n    function nextFrame(pos) {\n      for (var i = 0; i < clen - stri; i++) {\n        //Random number\n        var num = Math.floor(theLetters.length * Math.random())\n        //Get random letter\n        var letter = theLetters.charAt(num)\n        block = block + letter\n      }\n      if (si == increment - 1) {\n        stri++\n      }\n      if (si == increment) {\n        // Add a letter;\n        // every speed*10 ms\n        fixed = fixed + ctnt.charAt(stri - 1)\n        si = 0\n      }\n      // $(\"#output\").html(fixed + block);\n      setDecryptedEffect(fixed + block)\n      block = ''\n    }\n  }\n\n  useEffect(() => {\n    getVault()\n  }, [])\n\n  useEffect(() => {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null\n  })\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n')\n    return desc[0].trim()\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword\n    }\n    startDecryptEffect()\n    let ciphertext = vaultAddresses[0].address.replace('private:', '')\n    try {\n      var bytes = CryptoJS.AES.decrypt(ciphertext, key)\n      JSON.parse(bytes.toString(CryptoJS.enc.Utf8))\n      setVaultPrivacy(false)\n      setDecryptPassword(key)\n      setVaultAddresses(decryptAddresses(key))\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach((item) => {\n      let cipherText = item.address.replace('private:', '')\n      item.address = decrypt(cipherText, key)\n    })\n    return vaultAddresses\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = CryptoJS.AES.decrypt(cipherText, key)\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8))\n    return decryptedData\n  }\n\n  return (\n    <>\n      <AddrModal isOpen={isOpenAddrModal} onClose={onCloseAddrModal} addrCoin={currCoin} addrAddr={currAddr} />\n\n      <KeysModal\n        isOpen={isOpenKeysModal}\n        onClose={onCloseKeysModal}\n        mnemonic={mnemonic}\n        privKeyBTC={privKeyBTC}\n        privKeyETH={privKeyETH}\n      />\n\n      <Loader loaded={state.loaded}>\n        {loadingApi ? <Refreshing /> : ''}\n        {!invalidVault ? (\n          <Tilt className=\"Tilt\" options={{ max: experimental ? 19 : 0, scale: 1 }}>\n            <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n              <Box\n                maxW=\"sm\"\n                borderWidth=\"1px\"\n                borderColor={vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null}\n                rounded=\"lg\"\n                overflow=\"hidden\"\n                alignItems=\"center\"\n                minW={390}\n              >\n                {vaultChainId != chainId ? (\n                  <Box\n                    mt=\"1\"\n                    fontWeight=\"semibold\"\n                    as=\"h3\"\n                    lineHeight=\"tight\"\n                    p={2}\n                    textAlign=\"center\"\n                    textTransform=\"uppercase\"\n                    alignItems=\"center\"\n                    color=\"orange.500\"\n                  >\n                    BEWARE: Vault is on a different network than you are.\n                  </Box>\n                ) : null}\n                <Box\n                  mt=\"1\"\n                  fontWeight=\"semibold\"\n                  as=\"h3\"\n                  lineHeight=\"tight\"\n                  p={2}\n                  textAlign=\"center\"\n                  textTransform=\"uppercase\"\n                  alignItems=\"center\"\n                >\n                  {vaultName}\n                </Box>\n                <Stack align=\"center\">\n                  <Image\n                    src={validImage(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png'}\n                    width=\"250px\"\n                  />\n                </Stack>\n                <Stack align=\"center\">\n                  <Box mt=\"1\" ml=\"4\" lineHeight=\"tight\">\n                    <Text as=\"h4\" ml=\"4\" mr=\"4\">\n                      {splitDescription(vaultDesc)}\n                    </Text>\n                  </Box>\n                </Stack>\n                <Box p=\"6\">\n                  <Box d=\"flex\" alignItems=\"baseline\">\n                    <Box color=\"gray.500\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                      <Text as=\"h4\" fontWeight=\"semibold\">\n                        Current Contents:\n                      </Text>\n                      {vaultPrivacy ? (\n                        <>\n                          <Text pb={2} color={decryptedEffect ? 'green.500' : null}>\n                            {decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'}\n                          </Text>\n                          <Input\n                            type=\"password\"\n                            id=\"vault-password\"\n                            onChange={(e) => tryDecrypt(e.target.value)}\n                            aria-describedby=\"password-helper-text\"\n                          />\n                        </>\n                      ) : vaultValues.length ? (\n                        vaultValues.map((coin) => {\n                          return (\n                            <Text key={coin.name} isTruncated>\n                              {coin.name}: {coin.balance}\n                            </Text>\n                          )\n                        })\n                      ) : (\n                        <Text>Nothing in here! Fill 'er up!</Text>\n                      )}\n                    </Box>\n                  </Box>\n                  {!vaultPrivacy ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <ButtonGroup justifyContent=\"space-between\">\n                        {vaultAddresses.map((addr) => {\n                          return (\n                            <Button\n                              key={addr.address}\n                              onClick={() => {\n                                setCurrCoin(addr.coin)\n                                setCurrAddr(addr.address)\n                                onOpenAddrModal()\n                              }}\n                            >\n                              Put {addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin} In\n                            </Button>\n                          )\n                        })}\n                      </ButtonGroup>\n                    </Box>\n                  ) : null}\n                  <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button width=\"100%\" onClick={getClaimedVaults}>\n                        Get Claimed Test\n                      </Button>\n                    </Box>\n                  {status === 'claimed' && claimedBy === account ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button width=\"100%\" onClick={handleSign}>\n                        Get Keys\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button\n                        width=\"100%\"\n                        as=\"a\"\n                        {...{\n                          href:\n                            'https://' +\n                            (vaultChainId == 4 ? 'rinkeby.' : '') +\n                            'opensea.io/assets/' +\n                            contractAddresses.emblemVault[vaultChainId] +\n                            '/' +\n                            tokenId,\n                          target: '_blank',\n                          rel: 'noopener noreferrer',\n                        }}\n                      >\n                        {mine ? 'Sell/Gift/Send' : 'Make an Offer'}\n                      </Button>\n                    </Box>\n                  )}\n\n                  {mine ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button\n                        width=\"100%\"\n                        onClick={() => {\n                          handleClaim()\n                        }}\n                      >\n                        Claim\n                      </Button>\n                    </Box>\n                  ) : null}\n                </Box>\n                <Stack direction=\"column\" align=\"center\">\n                  {status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                </Stack>\n              </Box>\n            </Flex>\n          </Tilt>\n        ) : (\n          <Stack align=\"center\">\n            <Image\n              width=\"md\"\n              src=\"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\"\n            ></Image>\n            <Text>\n              THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR{' '}\n              <Link color=\"#638cd8\" href=\"../create\">\n                CREATE ONE HERE!\n              </Link>\n            </Text>\n          </Stack>\n        )}\n        {hash ? (\n          <TransactionToast\n            hash={hash}\n            onComplete={() => {\n              if (claiming) {\n                setHash(null)\n              }\n            }}\n          />\n        ) : null}\n      </Loader>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}