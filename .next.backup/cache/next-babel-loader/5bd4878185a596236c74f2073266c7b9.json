{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Base.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { resolve } from 'url';\nimport Head from 'next/head';\nimport { isIPFS, isServerSide } from '../constants';\nexport default function Base() {\n  // during SSR/SSG, don't specify a base tag\n  if (isServerSide) {\n    return null;\n  } // on the client, specify a \"default\" base tag, e.g. https://hypertext.finance/\n\n\n  let href = resolve(window.location.origin, '/'); // on the client, if this was an IPFS build, and if it seems like we're being served from a gateway of the form\n  // e.g. https://ipfs.io/ipns/hypertext.finance/, specify a base tag of the gateway root for this page\n\n  if (isIPFS && ['ipfs', 'ipns'].some(identifier => identifier === window.location.pathname.split('/')[1])) {\n    href = resolve(window.location.origin, // https://ipfs.io\"\n    window.location.pathname // /ipns/hypertext.finance/\n    .split('/').slice(0, 3).join('/') + '/');\n  }\n\n  return __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"base\", {\n    key: \"base\",\n    href: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Base.tsx"],"names":["resolve","Head","isIPFS","isServerSide","Base","href","window","location","origin","some","identifier","pathname","split","slice","join"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,KAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,cAArC;AAEA,eAAe,SAASC,IAAT,GAAoC;AACjD;AACA,MAAID,YAAJ,EAAkB;AAChB,WAAO,IAAP;AACD,GAJgD,CAMjD;;;AACA,MAAIE,IAAY,GAAGL,OAAO,CAACM,MAAM,CAACC,QAAP,CAAgBC,MAAjB,EAAyB,GAAzB,CAA1B,CAPiD,CASjD;AACA;;AACA,MAAIN,MAAM,IAAI,CAAC,MAAD,EAAS,MAAT,EAAiBO,IAAjB,CAAuBC,UAAD,IAAgBA,UAAU,KAAKJ,MAAM,CAACC,QAAP,CAAgBI,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAArD,CAAd,EAA4G;AAC1GP,IAAAA,IAAI,GAAGL,OAAO,CACZM,MAAM,CAACC,QAAP,CAAgBC,MADJ,EACY;AACxBF,IAAAA,MAAM,CAACC,QAAP,CAAgBI,QAAhB,CAAyB;AAAzB,KACGC,KADH,CACS,GADT,EAEGC,KAFH,CAES,CAFT,EAEY,CAFZ,EAGGC,IAHH,CAGQ,GAHR,IAGe,GALH,CAAd;AAOD;;AAED,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAET,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import { resolve } from 'url'\nimport Head from 'next/head'\n\nimport { isIPFS, isServerSide } from '../constants'\n\nexport default function Base(): JSX.Element | null {\n  // during SSR/SSG, don't specify a base tag\n  if (isServerSide) {\n    return null\n  }\n\n  // on the client, specify a \"default\" base tag, e.g. https://hypertext.finance/\n  let href: string = resolve(window.location.origin, '/')\n\n  // on the client, if this was an IPFS build, and if it seems like we're being served from a gateway of the form\n  // e.g. https://ipfs.io/ipns/hypertext.finance/, specify a base tag of the gateway root for this page\n  if (isIPFS && ['ipfs', 'ipns'].some((identifier) => identifier === window.location.pathname.split('/')[1])) {\n    href = resolve(\n      window.location.origin, // https://ipfs.io\"\n      window.location.pathname // /ipns/hypertext.finance/\n        .split('/')\n        .slice(0, 3)\n        .join('/') + '/'\n    )\n  }\n\n  return (\n    <Head>\n      {/* <script src=\"../public/jquery.js\"></script> */}\n      <base key=\"base\" href={href} />\n    </Head>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}