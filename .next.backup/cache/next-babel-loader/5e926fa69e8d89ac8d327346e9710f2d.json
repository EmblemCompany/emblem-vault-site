{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\nimport { Generic } from './embed/Generic';\nimport Youtube from './embed/Youtube';\nimport Vimeo from './embed/Vimeo';\n\nconst getIPFSImage = async function (hash) {\n  // alert(0)\n  const responce = await fetch('https://gateway.ipfs.io/ipfs/' + hash, {\n    method: 'GET',\n    headers: {// redirect:'follow'\n    }\n  });\n  let jsonData = await responce.text(); // setVaultImage(jsonData) \n  // const preview = document.querySelector('img.d-block') as HTMLImageElement\n\n  if (jsonData.includes(\"data:image\")) {\n    // preview.src = jsonData\n    return jsonData;\n  } else {\n    // preview.src = 'https://gateway.ipfs.io/ipfs/'+hash\n    return 'https://gateway.ipfs.io/ipfs/' + hash;\n  }\n};\n\nexport class Embed extends Component {\n  render() {\n    let url = this.props.url || \"\";\n    url = url.replace(\"&framed=true\", \"\");\n\n    if (url.includes('ipfs://')) {\n      getIPFSImage(url.replace('ipfs://', '')).then(result => {\n        if (result.includes('data:image')) {\n          const preview = document.querySelector('img.d-block');\n          preview.src = result;\n          url = result;\n        }\n      });\n      url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/');\n    }\n\n    return __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }) : url.includes('clara.io/') ? __jsx(Clara, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }) : url.includes('audius.co/') ? __jsx(Audius, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }) : url.includes('youtube.com') ? __jsx(Youtube, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }) : url.includes('vimeo.com') ? __jsx(Vimeo, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') || url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') || url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? __jsx(Image, {\n      p: \"20px\",\n      h: \"100%\",\n      className: (this.props.className || \"d-block w-100\") + \" \" + url,\n      src: url,\n      width: \"250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }) : __jsx(Generic, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\nexport default Embed;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx"],"names":["React","Component","Image","SketchFab","ShaderToy","Bandcamp","SoundCloud","Clyp","Sketchup","Clara","MyMiniFactory","Audius","Generic","Youtube","Vimeo","getIPFSImage","hash","responce","fetch","method","headers","jsonData","text","includes","Embed","render","url","props","replace","then","result","preview","document","querySelector","src","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validImage } from '../utils'\nimport { Image } from '@chakra-ui/core'\nimport SketchFab from './embed/SketchFab'\nimport ShaderToy from './embed/ShaderToy'\nimport Bandcamp from './embed/Bandcamp'\nimport SoundCloud from './embed/SoundCloud'\nimport Clyp from './embed/Clyp'\nimport Sketchup from './embed/Sketchup'\nimport Clara from './embed/Clara'\nimport MyMiniFactory from './embed/MyMiniFactory'\nimport { Audius } from './embed/Audius'\nimport { Generic } from './embed/Generic'\nimport Youtube from './embed/Youtube'\nimport Vimeo from './embed/Vimeo'\n\ntype EmbedProps = {\n  url: string,\n  className?: string\n}\n\nconst getIPFSImage = async function(hash){\n  // alert(0)\n  const responce = await fetch('https://gateway.ipfs.io/ipfs/'+hash, {\n    method: 'GET',\n    headers: {\n      // redirect:'follow'\n    },\n  })\n  let jsonData = await responce.text()\n  // setVaultImage(jsonData) \n  // const preview = document.querySelector('img.d-block') as HTMLImageElement\n  if (jsonData.includes(\"data:image\")) {\n    // preview.src = jsonData\n    return jsonData\n  } else {\n    // preview.src = 'https://gateway.ipfs.io/ipfs/'+hash\n    return 'https://gateway.ipfs.io/ipfs/'+hash\n  }\n}\n\nexport class Embed extends Component<EmbedProps> {\n  render() {\n    let url = this.props.url || \"\"\n    url = url.replace(\"&framed=true\", \"\")\n    if (url.includes('ipfs://')) {\n      getIPFSImage(url.replace('ipfs://','')).then((result)=>{\n        if (result.includes('data:image')) {\n          const preview = document.querySelector('img.d-block') as HTMLImageElement\n          preview.src = result\n          url = result\n        }\n      })\n    url = url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')      \n    }\n    return (\n      <>\n        {url.includes('sketchfab.com/') ? (\n          <SketchFab\n            url={url}\n          />\n        ) : url.includes('shadertoy.com/') ? (\n          <ShaderToy\n            url={url}\n          />\n        ) : url.includes('bandcamp.com/') ? (\n          <Bandcamp\n            url={url}\n          />\n        ) : url.includes('soundcloud.com/') ? (\n          <SoundCloud\n            url={url}\n          />\n        ) : url.includes('clyp.it/') ? (\n          <Clyp\n            url={url}\n          />\n        ) : url.includes('sketchup.com/') ? (\n          <Sketchup\n            url={url}\n          />\n        ) : url.includes('clara.io/') ? (\n          <Clara\n            url={url}\n          />\n        ) : url.includes('myminifactory.com/') ? (\n          <MyMiniFactory\n            url={url}\n          />\n        ) : url.includes('audius.co/') ? (\n          <Audius\n            url={url}\n          />\n        ) : url.includes('youtube.com') ? (\n          <Youtube\n            url={url}\n          />\n        ) : url.includes('vimeo.com') ? (\n          <Vimeo\n            url={url}\n          />\n        ) : url.includes('/dynamic/') || url.includes('arweave') || url.includes('https://s3.amazonaws.com/') ||  url.includes('googleusercontent.com') || url.includes('ipfs.io') || url.includes('framed/') ||  url.includes('.png') || url.includes('.jpg') || url.includes('.jpeg') || url.includes('.gif') || url.includes('.svg') || url.includes('data:image') ? (\n              <Image\n                p={\"20px\"}\n                h={\"100%\"}\n                className={(this.props.className || \"d-block w-100\") + \" \"+url}\n                src={url}\n                width=\"250px\"\n              />\n        ) : (\n          <Generic\n            url={url}\n          />\n        )\n          }\n      </>\n    )\n  }\n}\n\nexport default Embed\n"]},"metadata":{},"sourceType":"module"}