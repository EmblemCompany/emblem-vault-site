{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Grid, Text, Link, Image } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nexport default function VaultList(props) {\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      vaults = _React$useState2[0],\n      setVaults = _React$useState2[1];\n\n  var validImage = function validImage(data) {\n    if (data.includes('http')) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.emblemvault.io/vaults/' + account, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'service': 'evmetadata',\n                  'chainId': chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context.sent;\n              _context.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context.sent;\n              setVaults(jsonData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVaults();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    justifyItems: \"center\"\n  }, vaults.length ? vaults.map(function (vault) {\n    var url = './vault/?id=' + vault.tokenId;\n    return __jsx(Grid, {\n      key: vault.tokenId,\n      templateColumns: \"repeat(5, 1fr)\",\n      gap: 1\n    }, __jsx(Link, {\n      href: url\n    }, __jsx(Box, {\n      maxW: \"sm\",\n      borderWidth: \"1px\",\n      rounded: \"lg\",\n      overflow: \"hidden\"\n    }, __jsx(Box, {\n      mt: \"1\",\n      fontWeight: \"semibold\",\n      as: \"h4\",\n      lineHeight: \"tight\",\n      isTruncated: true,\n      p: 1,\n      textAlign: \"center\"\n    }, vault.name, __jsx(Image, {\n      src: validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\",\n      size: \"250px\"\n    })), __jsx(Box, {\n      p: \"6\"\n    }, __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\"\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      fontSize: \"xs\",\n      textTransform: \"uppercase\",\n      ml: \"2\"\n    }, vault.values.length ? vault.values.map(function (coin) {\n      return __jsx(Text, {\n        key: coin.name\n      }, coin.balance, \" \", coin.name);\n    }) : __jsx(Text, null, \"Nothing in here! Fill 'er up!\")))))));\n  }) : __jsx(Text, null, \"YOU DON'T SEEM TO HAVE ANY VAULTS. \", \" \", __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\"\n  }, \"CREATE ONE HERE!\")));\n}","map":null,"metadata":{},"sourceType":"module"}