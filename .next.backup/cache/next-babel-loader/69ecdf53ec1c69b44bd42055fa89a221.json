{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Admin.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Stack, Button } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { VStack, Divider } from '@chakra-ui/react';\nimport { contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nimport { Contract } from '@ethersproject/contracts';\nexport default function Admin() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useState = useState({\n    loaded: true\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingApi = _useState2[0],\n      setLoadingApi = _useState2[1];\n\n  var _useState3 = useState([]),\n      stats = _useState3[0],\n      setStats = _useState3[1];\n\n  var _useState4 = useState(query.address || null),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(0),\n      offset = _useState5[0],\n      setOffset = _useState5[1];\n\n  var _useState6 = useState(10),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(address ? true : false),\n      shouldFetchData = _useState7[0],\n      setShouldFetchData = _useState7[1];\n\n  var _useState8 = useState(true),\n      hasMore = _useState8[0],\n      setHasMore = _useState8[1];\n\n  var _useState9 = useState(false),\n      buttonDisabled = _useState9[0],\n      setButtonDisabled = _useState9[1];\n\n  var _useState10 = useState([]),\n      factories = _useState10[0],\n      setFactories = _useState10[1];\n\n  var _useState11 = useState([]),\n      clones = _useState11[0],\n      setClones = _useState11[1];\n\n  var handlerContract = useContract(contractAddresses.vaultHandlerV8[chainId], contractAddresses.vaultHandlerV8Abi, true);\n  // useEffect(() => {\n  //   if (state.loaded == false && !loadingApi && address) {\n  //     setLoadingApi(false)\n  //     // getPnL()\n  //   }\n  // }, [])\n  // useEffect(() => {\n  //   if (shouldFetchData && address) {\n  //     console.log(\"Should load api after setting consts\", offset)\n  //     setShouldFetchData(false)\n  //     // getPnL()\n  //   } else {\n  //     console.log(\"wtf\")\n  //   }\n  // }, [shouldFetchData, offset])\n  // const fetchDataForLazyLoad = async () =>{    \n  //   console.log('setting new offset to', offset+limit)\n  //   setOffset(offset+limit)\n  //   setShouldFetchData(true)\n  // }\n  useEffect(function () {\n    if (loadingApi) {\n      alert(0); // GetContracts()\n    }\n  });\n\n  var HandleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoadingApi(true);\n              GetContracts();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function HandleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function GetContracts() {\n    return _GetContracts.apply(this, arguments);\n  }\n\n  function _GetContracts() {\n    _GetContracts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var factories, factoryInfo;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              getClones();\n              _context2.next = 3;\n              return handlerContract.getAllRegisteredContractsOfType(8);\n\n            case 3:\n              factories = _context2.sent;\n              _context2.next = 6;\n              return getFactoryInto(factories, 0, []);\n\n            case 6:\n              factoryInfo = _context2.sent;\n              setFactories(factoryInfo);\n              setLoadingApi(false);\n              setState({\n                loaded: true\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _GetContracts.apply(this, arguments);\n  }\n\n  function getFactoryInto(_x, _x2, _x3) {\n    return _getFactoryInto.apply(this, arguments);\n  }\n\n  function _getFactoryInto() {\n    _getFactoryInto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(factories, index, values) {\n      var factory, factoryContract, factoryType, factoryClones, factoryOwner, detailedClones;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              factory = factories[index];\n              factoryContract = getFactoryContract(factory);\n              _context3.next = 4;\n              return factoryContract.factoryType();\n\n            case 4:\n              factoryType = _context3.sent;\n              _context3.next = 7;\n              return factoryContract.getClones();\n\n            case 7:\n              factoryClones = _context3.sent;\n              _context3.next = 10;\n              return factoryContract.owner();\n\n            case 10:\n              factoryOwner = _context3.sent;\n              _context3.next = 13;\n              return getCloneInto(factoryClones, 0, factoryType, []);\n\n            case 13:\n              detailedClones = _context3.sent;\n              values.push({\n                type: factoryType,\n                address: factory,\n                clones: detailedClones,\n                owner: factoryOwner\n              });\n\n              if (!(index + 1 == factories.length)) {\n                _context3.next = 19;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", values);\n\n            case 19:\n              return _context3.abrupt(\"return\", getFactoryInto(factories, index + 1, values));\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getFactoryInto.apply(this, arguments);\n  }\n\n  function getClones() {\n    return _getClones.apply(this, arguments);\n  }\n\n  function _getClones() {\n    _getClones = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var erc1155, erc721, erc20;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return handlerContract.getAllRegisteredContractsOfType(1);\n\n            case 2:\n              erc1155 = _context4.sent;\n              console.log(\"---------\", erc1155, erc1155.length);\n              _context4.next = 6;\n              return getCloneInto(erc1155, 0, \"ERC1155\", []);\n\n            case 6:\n              erc1155 = _context4.sent;\n              _context4.next = 9;\n              return handlerContract.getAllRegisteredContractsOfType(2);\n\n            case 9:\n              erc721 = _context4.sent;\n              _context4.next = 12;\n              return getCloneInto(erc721, 0, \"ERC721\", []);\n\n            case 12:\n              erc721 = _context4.sent;\n              _context4.next = 15;\n              return handlerContract.getAllRegisteredContractsOfType(4);\n\n            case 15:\n              erc20 = _context4.sent;\n              _context4.next = 18;\n              return getCloneInto(erc20, 0, \"ERC20\", []);\n\n            case 18:\n              erc20 = _context4.sent;\n              setClones(erc1155.concat(erc721).concat(erc20));\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _getClones.apply(this, arguments);\n  }\n\n  function getCloneInto(_x4, _x5, _x6, _x7) {\n    return _getCloneInto.apply(this, arguments);\n  }\n\n  function _getCloneInto() {\n    _getCloneInto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_clones, index, cloneType, values) {\n      var clone, cloneContract, cloneOwner, cloneName, decimals, cloneBalance;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(_clones.length == 0)) {\n                _context5.next = 2;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", values);\n\n            case 2:\n              clone = _clones[index];\n              cloneContract = getCloneContract(clone, cloneType);\n              _context5.next = 6;\n              return cloneContract.owner();\n\n            case 6:\n              cloneOwner = _context5.sent;\n              _context5.next = 9;\n              return cloneContract.name();\n\n            case 9:\n              cloneName = _context5.sent;\n\n              if (!(cloneType == \"ERC20\")) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 13;\n              return cloneContract.decimals();\n\n            case 13:\n              _context5.t0 = _context5.sent;\n              _context5.next = 17;\n              break;\n\n            case 16:\n              _context5.t0 = 0;\n\n            case 17:\n              decimals = _context5.t0;\n\n              if (!(cloneType == \"ERC20\")) {\n                _context5.next = 27;\n                break;\n              }\n\n              _context5.t2 = calculateBalance;\n              _context5.next = 22;\n              return cloneContract.balanceOf(account);\n\n            case 22:\n              _context5.t3 = _context5.sent.toNumber();\n              _context5.t4 = decimals;\n              _context5.t1 = (0, _context5.t2)(_context5.t3, _context5.t4);\n              _context5.next = 35;\n              break;\n\n            case 27:\n              if (!(cloneType == \"ERC1155\")) {\n                _context5.next = 33;\n                break;\n              }\n\n              _context5.next = 30;\n              return getERC1155TokenBalance(cloneContract, account);\n\n            case 30:\n              _context5.t5 = _context5.sent;\n              _context5.next = 34;\n              break;\n\n            case 33:\n              _context5.t5 = 0;\n\n            case 34:\n              _context5.t1 = _context5.t5;\n\n            case 35:\n              cloneBalance = _context5.t1;\n              values.push({\n                address: clone,\n                owner: cloneOwner,\n                name: cloneName,\n                type: cloneType,\n                balance: cloneBalance,\n                decimals: decimals\n              });\n\n              if (!(index + 1 == _clones.length)) {\n                _context5.next = 41;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", values);\n\n            case 41:\n              return _context5.abrupt(\"return\", getCloneInto(_clones, index + 1, cloneType, values));\n\n            case 42:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _getCloneInto.apply(this, arguments);\n  }\n\n  function getERC1155TokenBalance(_x8, _x9) {\n    return _getERC1155TokenBalance.apply(this, arguments);\n  }\n\n  function _getERC1155TokenBalance() {\n    _getERC1155TokenBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(contract, address) {\n      var ids;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return contract.getTokenIds();\n\n            case 2:\n              ids = _context6.sent;\n              console.log(\"ids\", ids);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _getERC1155TokenBalance.apply(this, arguments);\n  }\n\n  function getCloneContract(address, cloneType) {\n    var abi;\n\n    switch (cloneType) {\n      case \"ERC20\":\n        abi = contractAddresses.erc20Abi;\n        break;\n\n      case \"ERC721\":\n        abi = contractAddresses.erc721Abi;\n        break;\n\n      case \"ERC1155\":\n        abi = contractAddresses.erc1155Abi;\n        break;\n    }\n\n    return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n  }\n\n  function getFactoryContract(address) {\n    return new Contract(address, contractAddresses.clonableFactoryAbi, library.getSigner(account).connectUnchecked());\n  }\n\n  function calculateBalance(balance, decimals) {\n    return balance / Math.pow(10, parseInt(decimals));\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: HandleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Refresh Data\"), factories.length > 0 ? factories.map(function (factory, index) {\n    return __jsx(VStack, {\n      key: \"factory-\" + index,\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      w: \"100%\",\n      \"min-width\": \"40px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      w: \"100%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, factory.owner == account ? \"Owned\" : null, \" \", factory.type, \" Factory: \", factory.address), factory.clones.map(function (clone, index) {\n      return __jsx(React.Fragment, null, __jsx(Text, {\n        key: clone.address,\n        ml: 12,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 27\n        }\n      }, clone.owner == account ? \"Owned\" : null, \" \", factory.type, \" : \", clone.address, \" \"), __jsx(Divider, {\n        orientation: \"horizontal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 27\n        }\n      }), __jsx(Text, {\n        key: clone.name + index,\n        ml: 12,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }\n      }, \"Name: \", clone.name || \"Not Named\"));\n    }), __jsx(Divider, {\n      orientation: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    })));\n  }) : null, clones.length > 0 ? clones.map(function (clone, index) {\n    return __jsx(VStack, {\n      key: \"factory-\" + index,\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      w: \"100%\",\n      \"min-width\": \"40px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      key: clone.address,\n      ml: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, clone.owner == account ? \"Owned\" : null, \" \", clone.type, \" : \", clone.address, \" \"), __jsx(Divider, {\n      orientation: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      key: clone.name + index,\n      ml: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Name: \", clone.name || \"Not Named\"), __jsx(Divider, {\n      orientation: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      key: clone.balance + index,\n      ml: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Balance: \", clone.balance)));\n  }) : __jsx(VStack, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    w: \"100%\",\n    \"min-width\": \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    w: 300,\n    m: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Create ERC20\"), __jsx(Divider, {\n    orientation: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    w: 300,\n    m: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Create ERC721\"), __jsx(Divider, {\n    orientation: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    w: 300,\n    m: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"Create ERC1155\"))))));\n}\n\n_s(Admin, \"6XXBkAkjvBc8pttUUIqYnisE/Ao=\", false, function () {\n  return [useRouter, useWeb3React, useContract];\n});\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Admin.tsx"],"names":["Box","Flex","Text","Stack","Button","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","VStack","Divider","contractAddresses","useContract","Contract","Admin","query","account","chainId","library","loaded","state","setState","loadingApi","setLoadingApi","stats","setStats","address","setAddress","offset","setOffset","limit","setLimit","shouldFetchData","setShouldFetchData","hasMore","setHasMore","buttonDisabled","setButtonDisabled","factories","setFactories","clones","setClones","handlerContract","vaultHandlerV8","vaultHandlerV8Abi","alert","HandleClick","GetContracts","getClones","getAllRegisteredContractsOfType","getFactoryInto","factoryInfo","index","values","factory","factoryContract","getFactoryContract","factoryType","factoryClones","owner","factoryOwner","getCloneInto","detailedClones","push","type","length","erc1155","console","log","erc721","erc20","concat","_clones","cloneType","clone","cloneContract","getCloneContract","cloneOwner","name","cloneName","decimals","calculateBalance","balanceOf","toNumber","getERC1155TokenBalance","cloneBalance","balance","contract","getTokenIds","ids","abi","erc20Abi","erc721Abi","erc1155Abi","getSigner","connectUnchecked","clonableFactoryAbi","Math","pow","parseInt","map"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {HStack, VStack, Circle, Divider } from '@chakra-ui/react'\nimport { EMBLEM_API, BURN_ADDRESS, ZERO_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\n\nimport { Contract } from '@ethersproject/contracts'\n\nexport default function Admin() {\n  const { query } = useRouter()\n  const { account, chainId, library } = useWeb3React()\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState([])\n  const [address, setAddress] = useState(query.address || null)\n  const [offset, setOffset] = useState(0)\n  const [limit, setLimit] = useState(10)\n  const [shouldFetchData, setShouldFetchData] = useState(address? true: false)\n  const [hasMore, setHasMore] = useState(true)\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n\n  const [factories, setFactories] = useState([])\n  const [clones, setClones] = useState([])\n\n  const handlerContract = useContract(contractAddresses.vaultHandlerV8[chainId], contractAddresses.vaultHandlerV8Abi, true)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  // useEffect(() => {\n  //   if (state.loaded == false && !loadingApi && address) {\n  //     setLoadingApi(false)\n  //     // getPnL()\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   if (shouldFetchData && address) {\n  //     console.log(\"Should load api after setting consts\", offset)\n  //     setShouldFetchData(false)\n  //     // getPnL()\n  //   } else {\n  //     console.log(\"wtf\")\n  //   }\n  // }, [shouldFetchData, offset])\n\n  // const fetchDataForLazyLoad = async () =>{    \n  //   console.log('setting new offset to', offset+limit)\n  //   setOffset(offset+limit)\n  //   setShouldFetchData(true)\n  // }\n\n    useEffect(() => {\n      if (loadingApi) {\n        alert(0)\n        // GetContracts()\n      }\n    })\n\n  const HandleClick = async()=>{\n    setLoadingApi(true)\n    GetContracts()\n  }\n\n  async function GetContracts() {\n    getClones()\n    let factories = await handlerContract.getAllRegisteredContractsOfType(8)\n    let factoryInfo = await getFactoryInto(factories, 0, [])\n    setFactories(factoryInfo)\n    setLoadingApi(false)\n    setState({loaded: true})\n  }\n\n  async function getFactoryInto(factories, index, values) {\n    let factory = factories[index]\n    let factoryContract = getFactoryContract(factory)\n    let factoryType = await factoryContract.factoryType()\n    let factoryClones = await factoryContract.getClones()\n    let factoryOwner = await factoryContract.owner()\n    let detailedClones = await getCloneInto(factoryClones, 0, factoryType, [])\n    \n    values.push({type: factoryType, address: factory, clones: detailedClones, owner: factoryOwner})\n\n    if (index+1 == factories.length) {\n      return values\n    } else {\n      return getFactoryInto(factories, index +1, values)\n    }\n  }\n\n  async function getClones() {\n    let erc1155 = await handlerContract.getAllRegisteredContractsOfType(1)\n    console.log(\"---------\", erc1155, erc1155.length)\n    erc1155 = await getCloneInto(erc1155, 0, \"ERC1155\", [])\n    let erc721 = await handlerContract.getAllRegisteredContractsOfType(2)\n    erc721 = await getCloneInto(erc721, 0, \"ERC721\", [])\n    let erc20 = await handlerContract.getAllRegisteredContractsOfType(4)\n    erc20 = await getCloneInto(erc20, 0, \"ERC20\", [])\n    setClones(erc1155.concat(erc721).concat(erc20))\n  }\n\n  async function getCloneInto(_clones, index, cloneType, values) {\n    if (_clones.length == 0) return values\n    let clone = _clones[index]\n    let cloneContract = getCloneContract(clone, cloneType)\n    let cloneOwner = await cloneContract.owner()\n    let cloneName = await cloneContract.name()\n    let decimals = cloneType == \"ERC20\"?  await cloneContract.decimals() : 0\n    let cloneBalance = cloneType == \"ERC20\"?  calculateBalance((await cloneContract.balanceOf(account)).toNumber(), decimals) : cloneType == \"ERC1155\" ? await getERC1155TokenBalance(cloneContract, account) : 0\n\n    values.push({address: clone, owner: cloneOwner, name: cloneName, type: cloneType, balance: cloneBalance, decimals: decimals})\n\n    if (index+1 == _clones.length) {\n      return values\n    } else {\n      return getCloneInto(_clones, index +1, cloneType, values)\n    }\n  }\n\n  async function getERC1155TokenBalance(contract, address) {\n    let ids = await contract.getTokenIds()\n    console.log(\"ids\", ids)\n  }\n\n  function getCloneContract(address, cloneType) {\n    let abi\n    switch(cloneType) {\n      case \"ERC20\":\n        abi = contractAddresses.erc20Abi\n        break;\n      case \"ERC721\":\n        abi = contractAddresses.erc721Abi\n        break;\n      case \"ERC1155\":\n        abi = contractAddresses.erc1155Abi\n        break;\n    }\n    return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n  }\n\n  function getFactoryContract(address) {\n    return new Contract(address, contractAddresses.clonableFactoryAbi, library.getSigner(account).connectUnchecked())\n  }\n\n  function calculateBalance(balance: number, decimals: string) {\n    return balance / Math.pow(10, parseInt(decimals))\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\" w={\"100%\"}>\n        \n        <Button onClick={HandleClick}>Refresh Data</Button>\n\n        {factories.length > 0? (\n          factories.map((factory, index)=>{\n            return (\n              <VStack key={\"factory-\"+index} p={2} >\n                <Box w=\"100%\" min-width=\"40px\">     \n                  <Text w=\"100%\">{factory.owner == account? \"Owned\": null} {factory.type} Factory: {factory.address}</Text>\n                  {factory.clones.map( (clone, index)=>{\n                      return (\n                        <>\n                          <Text key={clone.address} ml={12}>{clone.owner == account? \"Owned\": null} {factory.type} : {clone.address} </Text>\n                          <Divider orientation=\"horizontal\" />\n                          <Text key={clone.name + index} ml={12}>Name: {clone.name || \"Not Named\"}</Text>\n                        </>\n                      )\n                    }\n                  )}\n                  <Divider orientation=\"horizontal\" />\n                </Box>\n              </VStack>\n            )\n          })\n        ) : null} \n        \n        { clones.length > 0? (\n          clones.map((clone, index)=>{\n            return (\n              <VStack key={\"factory-\"+index} p={2} >\n                <Box w=\"100%\" min-width=\"40px\">  \n                  <Text key={clone.address} ml={12}>{clone.owner == account? \"Owned\": null} {clone.type} : {clone.address} </Text>\n                  <Divider orientation=\"horizontal\" />\n                  <Text key={clone.name + index} ml={12}>Name: {clone.name || \"Not Named\"}</Text>\n                  <Divider orientation=\"horizontal\" />\n                  <Text key={clone.balance + index} ml={12}>Balance: {clone.balance}</Text>\n                </Box>\n              </VStack>\n            )\n          })\n        ) : (\n          <VStack p={2} >\n            <Box w=\"100%\" min-width=\"40px\">\n              <Button w={300} m={2}>Create ERC20</Button>\n              <Divider orientation=\"horizontal\" />\n              <Button w={300} m={2}>Create ERC721</Button>\n              <Divider orientation=\"horizontal\" />\n              <Button w={300} m={2}>Create ERC1155</Button>\n            </Box>\n          </VStack>\n        )}\n\n       </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}