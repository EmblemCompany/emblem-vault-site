{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nftrade.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Stack, Button, FormControl, Input, FormHelperText, Select } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { Embed } from './Embed';\nimport { useContract } from '../hooks';\nimport { EMBLEM_API, contractAddresses } from '../constants';\nimport { TransactionToast } from './TransactionToast';\nexport default function NFTrade() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState([]),\n      vaults = _useState[0],\n      setVaults = _useState[1];\n\n  var _useState2 = useState([]),\n      myVaults = _useState2[0],\n      setMyVaults = _useState2[1];\n\n  var _useState3 = useState(false),\n      myVaultsLoaded = _useState3[0],\n      setMyVaultsLoaded = _useState3[1];\n\n  var _useState4 = useState(false),\n      collectionsLoaded = _useState4[0],\n      setCollectionsLoaded = _useState4[1];\n\n  var _useState5 = useState({\n    loaded: false\n  }),\n      state = _useState5[0],\n      setState = _useState5[1];\n\n  var _useState6 = useState(false),\n      loadingApi = _useState6[0],\n      setLoadingApi = _useState6[1];\n\n  var _useState7 = useState(null),\n      hash = _useState7[0],\n      setHash = _useState7[1];\n\n  var _useState8 = useState(query.q),\n      q = _useState8[0],\n      setQ = _useState8[1];\n\n  var _useState9 = useState(q || ''),\n      temp_q = _useState9[0],\n      setTempQ = _useState9[1];\n\n  var _useState10 = useState(query.network || null),\n      network = _useState10[0],\n      setNetwork = _useState10[1];\n\n  var _useState11 = useState(query.address),\n      address = _useState11[0],\n      setAddress = _useState11[1];\n\n  var _useState12 = useState(query.experimental),\n      experimental = _useState12[0],\n      setExperimental = _useState12[1];\n\n  var _useState13 = useState(null),\n      offeringTokenId = _useState13[0],\n      setOfferingTokenId = _useState13[1];\n\n  var _useState14 = useState(null),\n      offeringTokenAllowed = _useState14[0],\n      setOfferingTokenAllowed = _useState14[1];\n\n  var _useState15 = useState(null),\n      acceptingOfferingIndex = _useState15[0],\n      setAcceptingOfferIndex = _useState15[1];\n\n  var _useState16 = useState(null),\n      acceptingTokenAllowed = _useState16[0],\n      setAcceptingTokenAllowed = _useState16[1];\n\n  var _useState17 = useState(null),\n      acceptingTokenId = _useState17[0],\n      setAcceptingTokenId = _useState17[1];\n\n  var _useState18 = useState(query.network || null),\n      collection = _useState18[0],\n      setCollection = _useState18[1];\n\n  var _useState19 = useState([]),\n      collections = _useState19[0],\n      setCollections = _useState19[1];\n\n  var emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true);\n  var nftradeContract = useContract(contractAddresses.nftrade[chainId], contractAddresses.nftradeAbi, true);\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoadingApi(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(EMBLEM_API + '/search', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                },\n                body: JSON.stringify({\n                  q: q,\n                  network: network == \"null\" ? null : network,\n                  external: true,\n                  collections: [collection]\n                })\n              });\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              jsonData = _context2.sent;\n              jsonData = jsonData.records;\n              setState({\n                loaded: true\n              });\n              jsonData.forEach( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, index) {\n                  var owner, offerCount, mine, offers;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(data && data.network === \"matic\")) {\n                            _context.next = 15;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return checkOwner(data.tokenId);\n\n                        case 3:\n                          owner = _context.sent;\n                          _context.next = 6;\n                          return getOfferCount(data.tokenId);\n\n                        case 6:\n                          offerCount = _context.sent;\n                          mine = owner === account;\n                          _context.next = 10;\n                          return getOffers(offerCount, data.tokenId);\n\n                        case 10:\n                          offers = _context.sent;\n\n                          // debugger\n                          if (offers.length < offerCount) {\n                            offerCount = offers.length;\n                          }\n\n                          jsonData[index].offers = offers;\n                          jsonData[index].mine = mine;\n                          jsonData[index].offerCount = offerCount;\n\n                        case 15:\n                          if (!data) {\n                            delete jsonData[index];\n                          }\n\n                          if (index + 1 === jsonData.length) {\n                            // debugger\n                            setVaults(jsonData);\n                            setLoadingApi(false);\n                          }\n\n                        case 17:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x, _x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              _context2.next = 15;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getMyVaults = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"Getting My Vaults\");\n              setMyVaultsLoaded(true);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return fetch(EMBLEM_API + '/vaults/' + (address ? address : account) + (experimental ? '?experimental=true' : ''), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainId: chainId.toString()\n                }\n              });\n\n            case 5:\n              response = _context3.sent;\n              _context3.next = 8;\n              return response.json();\n\n            case 8:\n              jsonData = _context3.sent;\n              setMyVaults(jsonData); // console.log(jsonData)\n\n              _context3.next = 14;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](2);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 12]]);\n    }));\n\n    return function getMyVaults() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getCollections = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"Getting Collections\");\n              setCollectionsLoaded(true);\n              _context4.prev = 2;\n              _context4.next = 5;\n              return fetch(EMBLEM_API + '/opensea/collections/', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              response = _context4.sent;\n              _context4.next = 8;\n              return response.json();\n\n            case 8:\n              jsonData = _context4.sent;\n              setCollections(jsonData); // console.log(jsonData)\n\n              _context4.next = 14;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](2);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 12]]);\n    }));\n\n    return function getCollections() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // console.log(q, state, loadingApi)\n    nftradeStuff();\n\n    if (q && !state.loaded && !loadingApi) {\n      console.log(\"Load Search\");\n      getVaults();\n    }\n  });\n\n  function nftradeStuff() {\n    return _nftradeStuff.apply(this, arguments);\n  }\n\n  function _nftradeStuff() {\n    _nftradeStuff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (myVaultsLoaded) {\n                _context5.next = 5;\n                break;\n              }\n\n              _context5.next = 3;\n              return getMyVaults();\n\n            case 3:\n              _context5.next = 6;\n              break;\n\n            case 5:\n              null;\n\n            case 6:\n              if (collectionsLoaded) {\n                _context5.next = 11;\n                break;\n              }\n\n              _context5.next = 9;\n              return getCollections();\n\n            case 9:\n              _context5.next = 12;\n              break;\n\n            case 11:\n              null;\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _nftradeStuff.apply(this, arguments);\n  }\n\n  function getOfferCount(_x3) {\n    return _getOfferCount.apply(this, arguments);\n  }\n\n  function _getOfferCount() {\n    _getOfferCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(tokenId) {\n      var offerCount;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return nftradeContract.getOfferCount(contractAddresses.emblemVault[chainId], tokenId);\n\n            case 2:\n              offerCount = _context6.sent;\n              return _context6.abrupt(\"return\", Number(offerCount));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _getOfferCount.apply(this, arguments);\n  }\n\n  function getOffers(_x4, _x5) {\n    return _getOffers.apply(this, arguments);\n  }\n\n  function _getOffers() {\n    _getOffers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(count, tokenId) {\n      var offers, i, offer;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              offers = [];\n              i = 0;\n\n            case 2:\n              if (!(i < count)) {\n                _context7.next = 10;\n                break;\n              }\n\n              _context7.next = 5;\n              return nftradeContract.getOffer(contractAddresses.emblemVault[chainId], tokenId, i);\n\n            case 5:\n              offer = _context7.sent;\n\n              // debugger\n              if (offer.nft !== \"0x0000000000000000000000000000000000000000\") {\n                offers.push(offer);\n              }\n\n            case 7:\n              i++;\n              _context7.next = 2;\n              break;\n\n            case 10:\n              console.log('offers', offers);\n              return _context7.abrupt(\"return\", offers);\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _getOffers.apply(this, arguments);\n  }\n\n  function checkOfferingAllowance(_x6) {\n    return _checkOfferingAllowance.apply(this, arguments);\n  }\n\n  function _checkOfferingAllowance() {\n    _checkOfferingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(tokenId) {\n      var allowed;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return emblemContract.getApproved(tokenId);\n\n            case 2:\n              allowed = _context8.sent;\n              setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _checkOfferingAllowance.apply(this, arguments);\n  }\n\n  function checkAcceptingAllowance(_x7) {\n    return _checkAcceptingAllowance.apply(this, arguments);\n  }\n\n  function _checkAcceptingAllowance() {\n    _checkAcceptingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(tokenId) {\n      var allowed;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return emblemContract.getApproved(tokenId);\n\n            case 2:\n              allowed = _context9.sent;\n              setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _checkAcceptingAllowance.apply(this, arguments);\n  }\n\n  function checkOwner(_x8) {\n    return _checkOwner.apply(this, arguments);\n  }\n\n  function _checkOwner() {\n    _checkOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tokenId) {\n      var owner;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              //debugger\n              console.log(\"checking owner for\", tokenId);\n              _context10.next = 3;\n              return emblemContract.ownerOf(tokenId)[\"catch\"](function () {});\n\n            case 3:\n              owner = _context10.sent;\n              return _context10.abrupt(\"return\", owner);\n\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _checkOwner.apply(this, arguments);\n  }\n\n  var approveOffer = function approveOffer(tokenId) {\n    // debugger\n    console.log(\"checking offer for\", tokenId);\n    emblemContract.approve(contractAddresses.nftrade[chainId], tokenId && typeof tokenId === \"string\" ? tokenId : offeringTokenId).then(function (_ref5) {\n      var hash = _ref5.hash;\n      setHash(hash);\n    }); // .catch((error: ErrorWithCode) => {\n    //   if (error?.code == 4001) {\n    //     setApproving(false)\n    //   }\n    // })\n  };\n\n  var makeOffer = function makeOffer(tokenId) {\n    ;\n    nftradeContract.addOffer(contractAddresses.emblemVault[chainId], offeringTokenId, contractAddresses.emblemVault[chainId], tokenId).then(function (_ref6) {\n      var hash = _ref6.hash;\n      setHash(hash);\n    }); // .catch((error: ErrorWithCode) => {\n    //   if (error?.code == 4001) {\n    //     setApproving(false)\n    //   }\n    // })\n  };\n\n  var acceptOffer = function acceptOffer() {\n    ;\n    nftradeContract.acceptOffer(contractAddresses.emblemVault[chainId], acceptingTokenId, Number(acceptingOfferingIndex)).then(function (_ref7) {\n      var hash = _ref7.hash;\n      setHash(hash);\n    }); // .catch((error: ErrorWithCode) => {\n    //   if (error?.code == 4001) {\n    //     setApproving(false)\n    //   }\n    // })\n  };\n\n  var rejectOffer = function rejectOffer() {\n    ;\n    nftradeContract.rejectOffer(contractAddresses.emblemVault[chainId], acceptingTokenId, Number(acceptingOfferingIndex)).then(function (_ref8) {\n      var hash = _ref8.hash;\n      setHash(hash);\n    }); // .catch((error: ErrorWithCode) => {\n    //   if (error?.code == 4001) {\n    //     setApproving(false)\n    //   }\n    // })\n  };\n\n  return __jsx(Loader, {\n    loaded: state.loaded || !q,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    id: \"search-query\",\n    width: \"45%\",\n    \"aria-describedby\": \"search-query-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    maxLength: 42,\n    value: temp_q,\n    onChange: function onChange(e) {\n      return setTempQ(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    m: 2,\n    onClick: function onClick() {\n      setState({\n        loaded: false\n      });\n      setQ(temp_q);\n      var loc = location.href.split('?')[0] + \"?q=\" + temp_q + \"&network=\" + network + \"&collection=\" + collection;\n      window.history.pushState(temp_q, 'Title', loc);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Search\"), __jsx(Select, {\n    w: \"45%\",\n    placeholder: \"All Networks\",\n    value: network || '',\n    onChange: function onChange(e) {\n      setNetwork(e.target.value);\n      console.log(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"matic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"Matic\"), __jsx(\"option\", {\n    value: \"mainnet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"Ethereum Mainnet\"), __jsx(\"option\", {\n    value: \"rinkeby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, \"Ethereum Rinkeby\")), __jsx(Select, {\n    ml: 2,\n    w: \"45%\",\n    placeholder: \"All Collections\",\n    value: collection || '',\n    onChange: function onChange(e) {\n      setCollection(e.target.value);\n      console.log(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, collections ? collections.map(function (collection, index) {\n    return __jsx(\"option\", {\n      key: collection.slug,\n      value: collection.slug,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 26\n      }\n    }, collection.name);\n  }) : null)), __jsx(FormHelperText, {\n    id: \"search-query-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, \"Search for Emblem Vaults by: Name, Description, Type, Contents\"))), __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    if (vault.name && vault.image) {\n      var pieces = location.pathname.split('/');\n      pieces.pop(); // let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n\n      var url = vault.external_url;\n      var flexSettings = {\n        flex: '1',\n        minW: '300px',\n        maxW: '300px',\n        borderWidth: '1px',\n        color: 'white',\n        mx: '6',\n        mb: '6',\n        rounded: 'lg',\n        overflow: 'hidden',\n        borderColor: vault.status == 'claimed' ? 'green !important' : '',\n        cursor: 'pointer'\n      };\n\n      var redirect = function redirect() {\n        location.href = url;\n      };\n\n      return __jsx(Stack, {\n        key: \"stack_\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, __jsx(Box, _extends({\n        key: index\n      }, flexSettings, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 19\n        }\n      }), __jsx(Text, {\n        fontWeight: \"semibold\",\n        textAlign: \"center\",\n        mt: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, vault.name, !vault[\"private\"] && vault.totalValue ? ': ~$' + vault.totalValue : vault.contract.name ? \" : \" + vault.contract.name : null), __jsx(Stack, {\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }, __jsx(Embed, {\n        url: vault.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 23\n        }\n      })), __jsx(Box, {\n        d: \"flex\",\n        alignItems: \"baseline\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }, __jsx(Stack, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 23\n        }\n      }, __jsx(Box, {\n        onClick: redirect,\n        width: \"100%\",\n        color: \"gray.500\",\n        fontWeight: \"semibold\",\n        letterSpacing: \"wide\",\n        fontSize: \"sm\",\n        ml: \"2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }\n      }, vault[\"private\"] ? __jsx(React.Fragment, null, __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }\n      }, \"Contents hidden. Click to view the vault and unlock values.\")) : vault.values.length ? vault.values.map(function (coin, index) {\n        if (index < 4) return __jsx(Text, {\n          key: coin.name,\n          isTruncated: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 33\n          }\n        }, coin.name, \": \", coin.balance);else if (index == 4) return __jsx(Text, {\n          fontWeight: \"bold\",\n          mt: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }\n        }, \"... Click to see the rest ...\");\n      }) : __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 31\n        }\n      }, \"Nothing in here! \", __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 50\n        }\n      }), \"Click to fill 'er up!\"), __jsx(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 29\n        }\n      }, \"Offers: \", vault.offerCount)), __jsx(Box, _extends({\n        key: \"offer_\" + index\n      }, flexSettings, {\n        minW: \"250px\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }\n      }), !vault.mine ? __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"84%%\",\n        placeholder: \"Offer NFT\",\n        onChange: function onChange(e) {\n          var tokenId = e.target.value; // console.log(e.target.value)\n\n          setOfferingTokenId(tokenId);\n          checkOfferingAllowance(tokenId);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }, myVaults.map(function (vault, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: vault.tokenId,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 33\n          }\n        }, vault.name);\n      })) : __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"34%\",\n        placeholder: \"Offers\",\n        onChange: function onChange(e) {\n          var index = e.target.value;\n          console.log(e.target.value);\n          setAcceptingOfferIndex(index);\n          setAcceptingTokenId(vault.tokenId);\n          checkAcceptingAllowance(vault.tokenId);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }\n      }, vault.offers.map(function (offer, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 33\n          }\n        }, Number(offer.tokenId));\n      })), offeringTokenId && !vault.mine ? offeringTokenAllowed ? __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          makeOffer(vault.tokenId);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 31\n        }\n      }, \"Make Offer\") : __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: approveOffer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 110\n        }\n      }, \"Approve\") : null, acceptingOfferingIndex && vault.mine ? acceptingTokenAllowed ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          acceptOffer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 31\n        }\n      }, \"Accept Offer\") : __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          approveOffer(vault.tokenId);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 109\n        }\n      }, \"Approve\") : null, acceptingOfferingIndex && vault.mine ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          rejectOffer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 31\n        }\n      }, \"Reject Offer\") : null))), __jsx(Stack, {\n        align: \"center\",\n        mt: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }\n      }, vault.status == 'claimed' ? __jsx(Text, {\n        color: \"green.500\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 52\n        }\n      }, \"CLAIMED\") : null)));\n    }\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  }, \"Search Resulted in 0 Vaults.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      setHash(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }) : null);\n}\n\n_s(NFTrade, \"n7hzUlkfxM+OFnyIbIS3cdcv3nU=\", false, function () {\n  return [useWeb3React, useRouter, useContract, useContract];\n});\n\n_c = NFTrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTrade\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nftrade.tsx"],"names":["Box","Flex","Text","Link","Stack","Button","FormControl","Input","FormHelperText","Select","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","Embed","useContract","EMBLEM_API","contractAddresses","TransactionToast","NFTrade","account","chainId","library","query","vaults","setVaults","myVaults","setMyVaults","myVaultsLoaded","setMyVaultsLoaded","collectionsLoaded","setCollectionsLoaded","loaded","state","setState","loadingApi","setLoadingApi","hash","setHash","q","setQ","temp_q","setTempQ","network","setNetwork","address","setAddress","experimental","setExperimental","offeringTokenId","setOfferingTokenId","offeringTokenAllowed","setOfferingTokenAllowed","acceptingOfferingIndex","setAcceptingOfferIndex","acceptingTokenAllowed","setAcceptingTokenAllowed","acceptingTokenId","setAcceptingTokenId","collection","setCollection","collections","setCollections","emblemContract","emblemVault","emblemAbi","nftradeContract","nftrade","nftradeAbi","getVaults","fetch","method","headers","service","body","JSON","stringify","external","response","json","jsonData","records","forEach","data","index","checkOwner","tokenId","owner","getOfferCount","offerCount","mine","getOffers","offers","length","getMyVaults","console","log","toString","getCollections","nftradeStuff","Number","count","i","getOffer","offer","nft","push","checkOfferingAllowance","getApproved","allowed","checkAcceptingAllowance","ownerOf","approveOffer","approve","then","makeOffer","addOffer","acceptOffer","rejectOffer","e","target","value","loc","location","href","split","window","history","pushState","map","slug","name","vault","image","pieces","pathname","pop","url","external_url","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","totalValue","contract","values","coin","balance"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Input, FormHelperText, Select } from '@chakra-ui/core'\nimport Loader from 'react-loader'\n\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { validImage } from '../utils'\nimport { Embed } from './Embed'\nimport { setTimeout } from 'timers'\nimport { useContract } from '../hooks'\nimport { Contract } from '@ethersproject/contracts'\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants'\nimport { TransactionToast } from './TransactionToast'\n\n\nexport default function NFTrade() {\n  const { account, chainId, library } = useWeb3React()\n  const { query } = useRouter()\n  const [vaults, setVaults] = useState([])\n  const [myVaults, setMyVaults] = useState([])\n  const [myVaultsLoaded, setMyVaultsLoaded] = useState(false)\n  const [collectionsLoaded, setCollectionsLoaded] = useState(false)\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [hash, setHash] = useState(null)\n  const [q, setQ] = useState(query.q)\n  const [temp_q, setTempQ] = useState(q || '')\n  const [network, setNetwork] = useState(query.network || null)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const [offeringTokenId, setOfferingTokenId] = useState(null)\n  const [offeringTokenAllowed, setOfferingTokenAllowed] = useState(null)\n  const [acceptingOfferingIndex, setAcceptingOfferIndex] = useState(null)\n  const [acceptingTokenAllowed, setAcceptingTokenAllowed] = useState(null)\n  const [acceptingTokenId, setAcceptingTokenId] = useState(null)\n  const [collection, setCollection] = useState(query.network || null)\n  const [collections, setCollections] = useState([])\n  \n\n  const emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n  const nftradeContract = useContract(contractAddresses.nftrade[chainId], contractAddresses.nftradeAbi, true)\n  \n  const getVaults = async () => {    \n    setLoadingApi(true)\n    try {      \n      const response = await fetch(EMBLEM_API + '/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({q: q, network: network == \"null\"? null : network, external: true, collections: [collection] })\n      })\n      let jsonData = await response.json()\n      jsonData = jsonData.records\n      setState({ loaded: true })\n      jsonData.forEach(async (data, index)=>{\n        // debugger\n        if (data && data.network === \"matic\") {\n          \n          let owner = await checkOwner(data.tokenId)\n          let offerCount = await getOfferCount(data.tokenId)\n          let mine = owner === account        \n          let offers = await getOffers(offerCount, data.tokenId)\n          // debugger\n          if (offers.length < offerCount) {\n            offerCount = offers.length\n          }\n          jsonData[index].offers = offers        \n          jsonData[index].mine = mine\n          jsonData[index].offerCount = offerCount\n        }\n        if (!data) {\n          delete jsonData[index]\n        }\n        \n        if (index +1 === jsonData.length) {\n          // debugger\n          setVaults(jsonData)\n          setLoadingApi(false)\n        }\n      })\n      \n    } catch (error) {}\n  }\n\n  const getMyVaults = async () => {\n    console.log(\"Getting My Vaults\")\n    setMyVaultsLoaded(true)\n    try {\n      const response = await fetch(EMBLEM_API + '/vaults/' + (address ? address : account) + (experimental? '?experimental=true' : ''), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n        },\n      })\n      const jsonData = await response.json()\n      setMyVaults(jsonData)\n      // console.log(jsonData)\n    } catch (error) {}\n  }\n\n  const getCollections = async () => {\n    console.log(\"Getting Collections\")\n    setCollectionsLoaded(true)\n    try {\n      const response = await fetch(EMBLEM_API + '/opensea/collections/'  , {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n      })\n      const jsonData = await response.json()\n      setCollections(jsonData)\n      // console.log(jsonData)\n    } catch (error) {}\n  }\n\n\n\n  useEffect(() => {\n    // console.log(q, state, loadingApi)\n    nftradeStuff()\n    if (q && !state.loaded && !loadingApi) {\n      console.log(\"Load Search\")\n      getVaults()\n    }\n  })\n\n  async function nftradeStuff() {\n    !myVaultsLoaded ? await getMyVaults() : null\n    !collectionsLoaded ? await getCollections() : null\n    \n    // let _owner  = await nftradeContract.ownerOf(tokenId)\n  }\n\n  async function getOfferCount(tokenId) {\n    let offerCount  = await nftradeContract.getOfferCount(contractAddresses.emblemVault[chainId], tokenId)\n    return Number(offerCount)\n  }\n\n  async function getOffers(count, tokenId) {\n    let offers = []\n    for (let i = 0; i < count; i++) {\n      let offer  = await nftradeContract.getOffer(contractAddresses.emblemVault[chainId], tokenId, i)\n      // debugger\n      if (offer.nft !== \"0x0000000000000000000000000000000000000000\") {\n        offers.push(offer)\n      }\n    }\n    console.log('offers', offers)\n    return offers\n  }\n\n  async function checkOfferingAllowance(tokenId) {\n    let allowed  = await emblemContract.getApproved(tokenId)\n    setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n  }\n\n  async function checkAcceptingAllowance(tokenId) {\n    let allowed  = await emblemContract.getApproved(tokenId)    \n    setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n  }\n\n  async function checkOwner(tokenId) {\n    //debugger\n    console.log(\"checking owner for\", tokenId)\n    let owner  = await emblemContract.ownerOf(tokenId).catch(()=>{})\n    return owner\n  }\n\n  const approveOffer = (tokenId) => {\n    // debugger\n    console.log(\"checking offer for\", tokenId)\n    ;(emblemContract as Contract)\n      .approve(contractAddresses.nftrade[chainId], (tokenId && typeof tokenId === \"string\" ? tokenId: offeringTokenId))\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n  }\n\n  const makeOffer = (tokenId) => {\n    ;(nftradeContract as Contract)\n      .addOffer(contractAddresses.emblemVault[chainId], offeringTokenId, contractAddresses.emblemVault[chainId], tokenId)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n  }\n\n  const acceptOffer = () => {    \n    ;(nftradeContract as Contract)\n      .acceptOffer(contractAddresses.emblemVault[chainId], acceptingTokenId, Number(acceptingOfferingIndex))\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n  }\n\n  const rejectOffer = () => {    \n    ;(nftradeContract as Contract)\n      .rejectOffer(contractAddresses.emblemVault[chainId], acceptingTokenId, Number(acceptingOfferingIndex))\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n  }\n\n  return (\n    <Loader loaded={state.loaded || !q}>\n      {loadingApi ? <Refreshing /> : ''}\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\" >\n        <FormControl isRequired>\n          <Flex width=\"full\" align=\"center\" justifyContent=\"center\" flexWrap=\"wrap\">\n            <Input\n              type=\"text\"\n              id=\"search-query\"\n              width='45%'\n              aria-describedby=\"search-query-helper-text\"\n              placeholder=\"0xdeadbeef\"\n              maxLength={42}\n              value={temp_q}\n              onChange={(e) =>\n                setTempQ(e.target.value)\n              }\n            />\n            <Button\n              m={2}\n              onClick={() => {\n                setState({ loaded: false })\n                setQ(temp_q)\n                let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network + \"&collection=\" + collection\n                window.history.pushState(temp_q, 'Title', loc);\n              }}\n            >Search\n            </Button>\n            <Select w=\"45%\" placeholder=\"All Networks\" value={network || ''}\n              onChange={(e)=>{\n                setNetwork(e.target.value)\n                console.log(e.target.value)\n              }}\n            >\n              <option value=\"matic\">Matic</option>\n              <option value=\"mainnet\">Ethereum Mainnet</option>\n              <option value=\"rinkeby\">Ethereum Rinkeby</option>\n            </Select>\n            <Select ml={2} w=\"45%\" placeholder=\"All Collections\" value={collection || ''}\n              onChange={(e)=>{\n                setCollection(e.target.value)\n                console.log(e.target.value)\n              }}\n            >\n              {collections? (\n                collections.map((collection, index) => {\n                  return <option key={collection.slug} value={collection.slug}>{collection.name}</option>\n                })\n              ): null}\n            </Select>\n          </Flex>\n          \n          <FormHelperText id=\"search-query-helper-text\">\n            Search for Emblem Vaults by: Name, Description, Type, Contents\n        </FormHelperText>\n        </FormControl>\n      </Flex>\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>\n        {vaults.length ? (\n          vaults.map((vault, index) => {\n            if (vault.name && vault.image) {\n              let pieces = location.pathname.split('/')\n              pieces.pop()\n              // let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n              let url = vault.external_url\n              const flexSettings = {\n                flex: '1',\n                minW: '300px',\n                maxW: '300px',\n                borderWidth: '1px',\n                color: 'white',\n                mx: '6',\n                mb: '6',\n                rounded: 'lg',\n                overflow: 'hidden',\n                borderColor: vault.status == 'claimed' ? 'green !important' : '',\n                cursor: 'pointer',\n              }\n              const redirect = function () {\n                location.href = url\n              }\n              return (\n                <Stack key={\"stack_\"+index}>\n                  <Box key={index} {...flexSettings}>\n                    <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2}>\n                      {vault.name}\n                      {!vault.private && vault.totalValue? ': ~$' + vault.totalValue : vault.contract.name? \" : \"+ vault.contract.name : null}\n                    </Text>\n                    <Stack align=\"center\">\n                      <Embed url={vault.image}/>\n                    </Stack>\n                    <Box d=\"flex\" alignItems=\"baseline\">\n                      <Stack>\n                        <Box onClick={redirect} width=\"100%\" color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                        {vault.private ? (\n                          <>\n                            <Text>Contents hidden. Click to view the vault and unlock values.</Text>\n                          </>\n                        ) : vault.values.length ? (\n                          vault.values.map((coin, index) => {\n                            if (index < 4)\n                              return (\n                                <Text key={coin.name} isTruncated>\n                                  {coin.name}: {coin.balance}\n                                </Text>\n                              )\n                            else if (index == 4)\n                              return (\n                                <Text fontWeight=\"bold\" mt={2}>\n                                  ... Click to see the rest ...\n                                </Text>\n                              )\n                          })\n                        ) : (\n                              <Text>\n                                Nothing in here! <br />\n                            Click to fill 'er up!\n                              </Text>\n                            )}\n                            \n                            <Text>Offers: {vault.offerCount}</Text>\n                      </Box>\n                      \n                        <Box key={\"offer_\"+index} {...flexSettings} minW=\"250px\" >\n                        {!vault.mine ? (\n                        <Select p={2} m={2} w=\"84%%\" placeholder=\"Offer NFT\" \n                            onChange={(e)=>{\n                              let tokenId = e.target.value\n                              // console.log(e.target.value)\n                              setOfferingTokenId(tokenId)\n                              checkOfferingAllowance(tokenId)\n                            }}\n                          >\n                            {myVaults.map((vault, index) => {\n                              return (\n                                <option key={index} value={vault.tokenId}>{vault.name}</option>\n                              )\n                            })}\n                          </Select> ) : (\n                            <Select p={2} m={2} w=\"34%\" placeholder=\"Offers\" \n                            onChange={(e)=>{\n                              let index = e.target.value\n                              console.log(e.target.value)\n                              setAcceptingOfferIndex(index)\n                              setAcceptingTokenId(vault.tokenId)\n                              checkAcceptingAllowance(vault.tokenId)\n                            }}\n                          >\n                            {vault.offers.map((offer, index) => {\n                              return (\n                                <option key={index} value={index}>{Number(offer.tokenId)}</option>\n                              )\n                            })}\n                          </Select>\n                          )}\n                          {offeringTokenId && !vault.mine ? (\n                            offeringTokenAllowed ? (\n                              <Button m={2} onClick={()=>{makeOffer(vault.tokenId)}}>Make Offer</Button>) : (<Button m={2}  w=\"94%\" onClick={approveOffer}>Approve</Button>\n                            )\n                        ) : null }\n                        {acceptingOfferingIndex && vault.mine ? (\n                            acceptingTokenAllowed ? (\n                              <Button m={2} w=\"94%\" onClick={()=>{acceptOffer()}}>Accept Offer</Button>) : (<Button m={2} onClick={() => {approveOffer(vault.tokenId)}}>Approve</Button>\n                            )\n                        ) : null }\n                        {acceptingOfferingIndex && vault.mine ? (                    \n                              <Button m={2} w=\"94%\" onClick={()=>{rejectOffer()}}>Reject Offer</Button>) : null }\n                      </Box>\n                      </Stack>\n                    </Box>\n                    <Stack align=\"center\" mt={3}>\n                      {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                    </Stack>\n                        \n                  </Box>\n                  \n                </Stack>\n                \n              )}\n          })\n          ) : (\n          <Text>\n            Search Resulted in 0 Vaults.{' '}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        )}\n      </Flex>\n      {hash ? (\n      <TransactionToast\n          hash={hash}\n          onComplete={() => {\n            setHash(null)\n          }}\n        />\n      ): null }\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}