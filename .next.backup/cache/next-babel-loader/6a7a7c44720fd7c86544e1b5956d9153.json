{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\nimport useSWR from 'swr';\nimport { Token, TokenAmount, Pair, JSBI, ChainId } from '@uniswap/sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { getAddress } from '@ethersproject/address';\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json';\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { ZERO, ADDRESS_ZERO, ERC20_BYTES32 } from './constants';\nimport { useContract, useKeepSWRDataLiveAsBlocksArrive } from './hooks';\nexport var DataType;\n\n(function (DataType) {\n  DataType[DataType[\"BlockNumber\"] = 0] = \"BlockNumber\";\n  DataType[DataType[\"ETHBalance\"] = 1] = \"ETHBalance\";\n  DataType[DataType[\"TokenBalance\"] = 2] = \"TokenBalance\";\n  DataType[DataType[\"TokenAllowance\"] = 3] = \"TokenAllowance\";\n  DataType[DataType[\"Reserves\"] = 4] = \"Reserves\";\n  DataType[DataType[\"Token\"] = 5] = \"Token\";\n  DataType[DataType[\"RemoteTokens\"] = 6] = \"RemoteTokens\";\n})(DataType || (DataType = {}));\n\nfunction getBlockNumber(library) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", library.getBlockNumber());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useBlockNumber() {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var shouldFetch = !!library;\n  return useSWR(shouldFetch ? [DataType.BlockNumber] : null, getBlockNumber(library), {\n    refreshInterval: 10 * 1000\n  });\n}\n\n_s(useBlockNumber, \"BgQJhLCxWb/Ymz+l65Mk9fZNWes=\", false, function () {\n  return [useWeb3React, useSWR];\n});\n\nfunction getETHBalance(library) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chainId, address) {\n      var ETH;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ETH = new Token(chainId, ADDRESS_ZERO, 18);\n              return _context2.abrupt(\"return\", library.getBalance(address).then(function (balance) {\n                return new TokenAmount(ETH, balance.toString());\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nexport function requestSignature() {\n  _s2();\n\n  var _useWeb3React2 = useWeb3React(),\n      library = _useWeb3React2.library;\n\n  library.personal.sign(library.toHex(\"Claim:358746\"), library.eth.defaultAccount, function (err, res) {\n    return console.log(err, res);\n  });\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n_s2(requestSignature, \"oanwYOI7qu20JE/AtluYRkW86fE=\", false, function () {\n  return [useWeb3React];\n});\n\nexport function useETHBalance(address) {\n  _s3();\n\n  var suspense = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useWeb3React3 = useWeb3React(),\n      chainId = _useWeb3React3.chainId,\n      library = _useWeb3React3.library;\n\n  var shouldFetch = typeof chainId === 'number' && typeof address === 'string' && !!library;\n  var result = useSWR(shouldFetch ? [chainId, address, DataType.ETHBalance] : null, getETHBalance(library), {\n    suspense: suspense\n  });\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\n_s3(useETHBalance, \"hYg0/3lgdRK7YNUfh/6/9f2nyPU=\", false, function () {\n  return [useWeb3React, useSWR, useKeepSWRDataLiveAsBlocksArrive];\n});\n\nfunction getTokenBalance(contract, token) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", contract.balanceOf(address).then(function (balance) {\n                return new TokenAmount(token, balance.toString());\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\n\nexport function useTokenBalance(token, address) {\n  _s4();\n\n  var suspense = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var contract = useContract(token === null || token === void 0 ? void 0 : token.address, IERC20.abi);\n  var result = useSWR(typeof address === 'string' && token && contract ? [address, token.chainId, token.address, DataType.TokenBalance] : null, getTokenBalance(contract, token), {\n    suspense: suspense\n  });\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\n_s4(useTokenBalance, \"VWB3V6isPVwaqnVFgQJIarJwjZo=\", false, function () {\n  return [useContract, useSWR, useKeepSWRDataLiveAsBlocksArrive];\n});\n\nfunction getTokenAllowance(contract, token) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(owner, spender) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", contract.allowance(owner, spender).then(function (balance) {\n                return new TokenAmount(token, balance.toString());\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}\n\nexport function useTokenAllowance(token, owner, spender) {\n  _s5();\n\n  var contract = useContract(token === null || token === void 0 ? void 0 : token.address, IERC20.abi);\n  var result = useSWR(typeof owner === 'string' && typeof spender === 'string' && token && contract ? [owner, spender, token.chainId, token.address, DataType.TokenAllowance] : null, getTokenAllowance(contract, token));\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\n_s5(useTokenAllowance, \"VWB3V6isPVwaqnVFgQJIarJwjZo=\", false, function () {\n  return [useContract, useSWR, useKeepSWRDataLiveAsBlocksArrive];\n});\n\nfunction getReserves(contract, token0, token1) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", contract.getReserves().then(function (_ref6) {\n              var reserve0 = _ref6.reserve0,\n                  reserve1 = _ref6.reserve1;\n              var pair = new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString()));\n              return JSBI.equal(pair.reserve0.raw, ZERO) || JSBI.equal(pair.reserve1.raw, ZERO) ? null : pair;\n            })[\"catch\"](function () {\n              return null;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useReserves(tokenA, tokenB) {\n  _s6();\n\n  var invalid = !!tokenA && !!tokenB && tokenA.equals(tokenB);\n\n  var _ref7 = !!tokenA && !!tokenB && !invalid ? tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] : [],\n      _ref8 = _slicedToArray(_ref7, 2),\n      token0 = _ref8[0],\n      token1 = _ref8[1];\n\n  var pairAddress = !!token0 && !!token1 ? Pair.getAddress(token0, token1) : undefined;\n  var contract = useContract(pairAddress, IUniswapV2Pair.abi);\n  var result = useSWR(token0 && pairAddress && contract && token1 ? [token0.chainId, pairAddress, DataType.Reserves] : null, getReserves(contract, token0, token1));\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate);\n  return result;\n}\n\n_s6(useReserves, \"VWB3V6isPVwaqnVFgQJIarJwjZo=\", false, function () {\n  return [useContract, useSWR, useKeepSWRDataLiveAsBlocksArrive];\n});\n\nfunction getOnchainToken(contract, contractBytes32) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(chainId, address) {\n      var _yield$Promise$all, _yield$Promise$all2, decimals, symbol, name;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return Promise.all([contract.decimals()[\"catch\"](function () {\n                return null;\n              }), contract.symbol()[\"catch\"](function () {\n                return contractBytes32.symbol().then(parseBytes32String)[\"catch\"](function () {\n                  return 'UNKNOWN';\n                });\n              }), contract.name()[\"catch\"](function () {\n                return contractBytes32.name().then(parseBytes32String)[\"catch\"](function () {\n                  return 'Unknown';\n                });\n              })]);\n\n            case 2:\n              _yield$Promise$all = _context6.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n              decimals = _yield$Promise$all2[0];\n              symbol = _yield$Promise$all2[1];\n              name = _yield$Promise$all2[2];\n              return _context6.abrupt(\"return\", decimals === null ? null : new Token(chainId, address, decimals, symbol, name));\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6, _x7) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function useOnchainToken(address) {\n  _s7();\n\n  var suspense = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useWeb3React4 = useWeb3React(),\n      chainId = _useWeb3React4.chainId;\n\n  var contract = useContract(address, IERC20.abi);\n  var contractBytes32 = useContract(address, ERC20_BYTES32);\n  return useSWR(typeof chainId === 'number' && typeof address === 'string' && contract && contractBytes32 ? [chainId, address, DataType.Token] : null, getOnchainToken(contract, contractBytes32), {\n    dedupingInterval: 60 * 1000,\n    refreshInterval: 60 * 1000,\n    suspense: suspense\n  });\n}\n\n_s7(useOnchainToken, \"lEuxnUmvCMb1zyCr+oy/rcyrg4g=\", false, function () {\n  return [useWeb3React, useContract, useContract, useSWR];\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getRemoteTokens(_x8) {\n  return _getRemoteTokens.apply(this, arguments);\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction _getRemoteTokens() {\n  _getRemoteTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(searchQuery) {\n    var _yield$import, request;\n\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return import('graphql-request');\n\n          case 2:\n            _yield$import = _context7.sent;\n            request = _yield$import.request;\n            return _context7.abrupt(\"return\", request('https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2', \"\\nquery getRemoteTokens($searchQuery: String!) {\\n  tokens(where: { symbol_contains: $searchQuery }) {\\n    id\\n    symbol\\n    name\\n  }\\n}\", {\n              searchQuery: searchQuery\n            }).then(function (result) {\n              return result.tokens.map(function (token) {\n                var _token$symbol, _token$name;\n\n                return {\n                  address: getAddress(token.id),\n                  symbol: (_token$symbol = token.symbol) !== null && _token$symbol !== void 0 ? _token$symbol : 'UNKNOWN',\n                  name: (_token$name = token.name) !== null && _token$name !== void 0 ? _token$name : 'Unknown'\n                };\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getRemoteTokens.apply(this, arguments);\n}\n\nexport function useRemoteTokens() {\n  _s8();\n\n  var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var suspense = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useWeb3React5 = useWeb3React(),\n      chainId = _useWeb3React5.chainId;\n\n  var shouldFetch = chainId === ChainId.MAINNET && query.length > 0;\n  return useSWR(shouldFetch ? [query, DataType.RemoteTokens] : null, getRemoteTokens, {\n    dedupingInterval: 60 * 5 * 1000,\n    refreshInterval: 60 * 5 * 1000,\n    suspense: suspense\n  });\n}\n\n_s8(useRemoteTokens, \"ly/QsmiodUR2Yg2vfiEYS5TW6TE=\", false, function () {\n  return [useWeb3React, useSWR];\n});","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/data.ts"],"names":["useSWR","Token","TokenAmount","Pair","JSBI","ChainId","useWeb3React","parseBytes32String","getAddress","IERC20","IUniswapV2Pair","ZERO","ADDRESS_ZERO","ERC20_BYTES32","useContract","useKeepSWRDataLiveAsBlocksArrive","DataType","getBlockNumber","library","useBlockNumber","shouldFetch","BlockNumber","refreshInterval","getETHBalance","chainId","address","ETH","getBalance","then","balance","toString","requestSignature","personal","sign","toHex","eth","defaultAccount","err","res","console","log","useETHBalance","suspense","result","ETHBalance","mutate","getTokenBalance","contract","token","balanceOf","useTokenBalance","abi","TokenBalance","getTokenAllowance","owner","spender","allowance","useTokenAllowance","TokenAllowance","getReserves","token0","token1","reserve0","reserve1","pair","equal","raw","useReserves","tokenA","tokenB","invalid","equals","sortsBefore","pairAddress","undefined","Reserves","getOnchainToken","contractBytes32","Promise","all","decimals","symbol","name","useOnchainToken","dedupingInterval","getRemoteTokens","searchQuery","request","tokens","map","id","useRemoteTokens","query","MAINNET","length","RemoteTokens"],"mappings":"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","sourcesContent":["import useSWR, { responseInterface } from 'swr'\nimport { Token, TokenAmount, Pair, JSBI, ChainId } from '@uniswap/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from '@ethersproject/contracts'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { getAddress } from '@ethersproject/address'\nimport { Web3Provider } from '@ethersproject/providers'\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json'\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'\n\nimport { ZERO, ADDRESS_ZERO, ERC20_BYTES32 } from './constants'\nimport { useContract, useKeepSWRDataLiveAsBlocksArrive } from './hooks'\n\nexport enum DataType {\n  BlockNumber,\n  ETHBalance,\n  TokenBalance,\n  TokenAllowance,\n  Reserves,\n  Token,\n  RemoteTokens,\n}\n\nfunction getBlockNumber(library: Web3Provider): () => Promise<number> {\n  return async (): Promise<number> => {\n    return library.getBlockNumber()\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useBlockNumber(): responseInterface<number, any> {\n  const { library } = useWeb3React()\n  const shouldFetch = !!library\n  return useSWR(shouldFetch ? [DataType.BlockNumber] : null, getBlockNumber(library), {\n    refreshInterval: 10 * 1000,\n  })\n}\n\nfunction getETHBalance(library: Web3Provider): (chainId: number, address: string) => Promise<TokenAmount> {\n  return async (chainId: number, address: string): Promise<TokenAmount> => {\n    const ETH = new Token(chainId, ADDRESS_ZERO, 18)\n    return library\n      .getBalance(address)\n      .then((balance: { toString: () => string }) => new TokenAmount(ETH, balance.toString()))\n  }\n}\n\nexport function requestSignature() {\n  const { library } = useWeb3React()\n  library.personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useETHBalance(address?: string | null, suspense = false): responseInterface<TokenAmount, any> {\n  const { chainId, library } = useWeb3React()\n  const shouldFetch = typeof chainId === 'number' && typeof address === 'string' && !!library\n\n  const result = useSWR(shouldFetch ? [chainId, address, DataType.ETHBalance] : null, getETHBalance(library), {\n    suspense,\n  })\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getTokenBalance(contract: Contract, token: Token): (address: string) => Promise<TokenAmount> {\n  return async (address: string): Promise<TokenAmount> =>\n    contract\n      .balanceOf(address)\n      .then((balance: { toString: () => string }) => new TokenAmount(token, balance.toString()))\n}\n\nexport function useTokenBalance(\n  token?: Token,\n  address?: string | null,\n  suspense = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): responseInterface<TokenAmount, any> {\n  const contract = useContract(token?.address, IERC20.abi)\n\n  const result = useSWR(\n    typeof address === 'string' && token && contract\n      ? [address, token.chainId, token.address, DataType.TokenBalance]\n      : null,\n    getTokenBalance(contract as Contract, token as Token),\n    { suspense }\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getTokenAllowance(contract: Contract, token: Token): (owner: string, spender: string) => Promise<TokenAmount> {\n  return async (owner: string, spender: string): Promise<TokenAmount> =>\n    contract\n      .allowance(owner, spender)\n      .then((balance: { toString: () => string }) => new TokenAmount(token, balance.toString()))\n}\n\nexport function useTokenAllowance(\n  token?: Token,\n  owner?: string | null,\n  spender?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): responseInterface<TokenAmount, any> {\n  const contract = useContract(token?.address, IERC20.abi)\n\n  const result = useSWR(\n    typeof owner === 'string' && typeof spender === 'string' && token && contract\n      ? [owner, spender, token.chainId, token.address, DataType.TokenAllowance]\n      : null,\n    getTokenAllowance(contract as Contract, token as Token)\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getReserves(contract: Contract, token0: Token, token1: Token): () => Promise<Pair | null> {\n  return async (): Promise<Pair | null> =>\n    contract\n      .getReserves()\n      .then(\n        ({ reserve0, reserve1 }: { reserve0: { toString: () => string }; reserve1: { toString: () => string } }) => {\n          const pair = new Pair(\n            new TokenAmount(token0, reserve0.toString()),\n            new TokenAmount(token1, reserve1.toString())\n          )\n          return JSBI.equal(pair.reserve0.raw, ZERO) || JSBI.equal(pair.reserve1.raw, ZERO) ? null : pair\n        }\n      )\n      .catch(() => null)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useReserves(tokenA?: Token, tokenB?: Token): responseInterface<Pair | null, any> {\n  const invalid = !!tokenA && !!tokenB && tokenA.equals(tokenB)\n  const [token0, token1] =\n    !!tokenA && !!tokenB && !invalid ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : []\n  const pairAddress = !!token0 && !!token1 ? Pair.getAddress(token0, token1) : undefined\n  const contract = useContract(pairAddress, IUniswapV2Pair.abi)\n  const result = useSWR(\n    token0 && pairAddress && contract && token1 ? [token0.chainId, pairAddress, DataType.Reserves] : null,\n    getReserves(contract as Contract, token0 as Token, token1 as Token)\n  )\n  useKeepSWRDataLiveAsBlocksArrive(result.mutate)\n  return result\n}\n\nfunction getOnchainToken(\n  contract: Contract,\n  contractBytes32: Contract\n): (chainId: number, address: string) => Promise<Token | null> {\n  return async (chainId: number, address: string): Promise<Token | null> => {\n    const [decimals, symbol, name] = await Promise.all([\n      contract.decimals().catch(() => null),\n      contract.symbol().catch(() =>\n        contractBytes32\n          .symbol()\n          .then(parseBytes32String)\n          .catch(() => 'UNKNOWN')\n      ),\n      contract.name().catch(() =>\n        contractBytes32\n          .name()\n          .then(parseBytes32String)\n          .catch(() => 'Unknown')\n      ),\n    ])\n    return decimals === null ? null : new Token(chainId, address, decimals, symbol, name)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useOnchainToken(address?: string, suspense = false): responseInterface<Token | null, any> {\n  const { chainId } = useWeb3React()\n  const contract = useContract(address, IERC20.abi)\n  const contractBytes32 = useContract(address, ERC20_BYTES32)\n  return useSWR(\n    typeof chainId === 'number' && typeof address === 'string' && contract && contractBytes32\n      ? [chainId, address, DataType.Token]\n      : null,\n    getOnchainToken(contract as Contract, contractBytes32 as Contract),\n    {\n      dedupingInterval: 60 * 1000,\n      refreshInterval: 60 * 1000,\n      suspense,\n    }\n  )\n}\n\ninterface RemoteToken {\n  address: string\n  symbol: string\n  name: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function getRemoteTokens(searchQuery: string): Promise<RemoteToken[]> {\n  const { request } = await import('graphql-request')\n\n  return request(\n    'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2',\n    `\nquery getRemoteTokens($searchQuery: String!) {\n  tokens(where: { symbol_contains: $searchQuery }) {\n    id\n    symbol\n    name\n  }\n}`,\n    { searchQuery }\n  ).then((result) =>\n    result.tokens.map(\n      (token: { id: string; symbol: string; name: string }): RemoteToken => ({\n        address: getAddress(token.id),\n        symbol: token.symbol ?? 'UNKNOWN',\n        name: token.name ?? 'Unknown',\n      })\n    )\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useRemoteTokens(query = '', suspense = false): responseInterface<RemoteToken[], any> {\n  const { chainId } = useWeb3React()\n  const shouldFetch = chainId === ChainId.MAINNET && query.length > 0\n  return useSWR(shouldFetch ? [query, DataType.RemoteTokens] : null, getRemoteTokens, {\n    dedupingInterval: 60 * 5 * 1000,\n    refreshInterval: 60 * 5 * 1000,\n    suspense,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}