{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/WalletConnect.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from 'chakra-ui/react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { walletconnect } from '../connectors';\nimport { UserRejectedRequestError } from '@web3-react/walletconnect-connector';\nexport default function WalletConnect() {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      error = _useWeb3React.error,\n      activate = _useWeb3React.activate,\n      setError = _useWeb3React.setError;\n\n  var _useState = useState(false),\n      connecting = _useState[0],\n      setConnecting = _useState[1];\n\n  useEffect(function () {\n    if (active || error) {\n      setConnecting(false);\n    }\n  }, [active, error]);\n\n  if (error) {\n    return null;\n  }\n\n  return __jsx(Button, {\n    isLoading: connecting,\n    leftIcon: 'walletconnect',\n    onClick: function onClick() {\n      var _walletconnect$wallet, _walletconnect$wallet2;\n\n      setConnecting(true); // reset the connector if it was tried already\n\n      if (walletconnect !== null && walletconnect !== void 0 && (_walletconnect$wallet = walletconnect.walletConnectProvider) !== null && _walletconnect$wallet !== void 0 && (_walletconnect$wallet2 = _walletconnect$wallet.wc) !== null && _walletconnect$wallet2 !== void 0 && _walletconnect$wallet2.uri) {\n        walletconnect.walletConnectProvider = undefined;\n      }\n\n      activate(walletconnect, undefined, true)[\"catch\"](function (error) {\n        if (error instanceof UserRejectedRequestError) {\n          setConnecting(false);\n        } else {\n          setError(error);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"WalletConnect\");\n}\n\n_s(WalletConnect, \"4tpCTbwF+autKhDdhkhrcL3IrKM=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = WalletConnect;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/WalletConnect.tsx"],"names":["Button","useWeb3React","useEffect","useState","walletconnect","UserRejectedRequestError","WalletConnect","active","error","activate","setError","connecting","setConnecting","walletConnectProvider","wc","uri","undefined"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,wBAAT,QAAyC,qCAAzC;AAEA,eAAe,SAASC,aAAT,GAA6C;AAAA;;AAC1D,sBAA8CL,YAAY,EAA1D;AAAA,MAAQM,MAAR,iBAAQA,MAAR;AAAA,MAAgBC,KAAhB,iBAAgBA,KAAhB;AAAA,MAAuBC,QAAvB,iBAAuBA,QAAvB;AAAA,MAAiCC,QAAjC,iBAAiCA,QAAjC;;AAEA,kBAAoCP,QAAQ,CAAC,KAAD,CAA5C;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,MAAM,IAAIC,KAAd,EAAqB;AACnBI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACL,MAAD,EAASC,KAAT,CAJM,CAAT;;AAMA,MAAIA,KAAJ,EAAW;AACT,WAAO,IAAP;AACD;;AAED,SACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAEG,UADb;AAEE,IAAA,QAAQ,EAAE,eAFZ;AAGE,IAAA,OAAO,EAAE,mBAAY;AAAA;;AACnBC,MAAAA,aAAa,CAAC,IAAD,CAAb,CADmB,CAEnB;;AACA,UAAIR,aAAJ,aAAIA,aAAJ,wCAAIA,aAAa,CAAES,qBAAnB,4EAAI,sBAAsCC,EAA1C,mDAAI,uBAA0CC,GAA9C,EAAmD;AACjDX,QAAAA,aAAa,CAACS,qBAAd,GAAsCG,SAAtC;AACD;;AACDP,MAAAA,QAAQ,CAACL,aAAD,EAAgBY,SAAhB,EAA2B,IAA3B,CAAR,UAA+C,UAACR,KAAD,EAAW;AACxD,YAAIA,KAAK,YAAYH,wBAArB,EAA+C;AAC7CO,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAFD,MAEO;AACLF,UAAAA,QAAQ,CAACF,KAAD,CAAR;AACD;AACF,OAND;AAOD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAsBD;;GApCuBF,a;UACwBL,Y;;;KADxBK,a","sourcesContent":["import { Button } from 'chakra-ui/react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { useEffect, useState } from 'react'\n\nimport { walletconnect } from '../connectors'\nimport { UserRejectedRequestError } from '@web3-react/walletconnect-connector'\n\nexport default function WalletConnect(): JSX.Element | null {\n  const { active, error, activate, setError } = useWeb3React<Web3Provider>()\n\n  const [connecting, setConnecting] = useState(false)\n  useEffect(() => {\n    if (active || error) {\n      setConnecting(false)\n    }\n  }, [active, error])\n\n  if (error) {\n    return null\n  }\n\n  return (\n    <Button\n      isLoading={connecting}\n      leftIcon={'walletconnect' as 'edit'}\n      onClick={(): void => {\n        setConnecting(true)\n        // reset the connector if it was tried already\n        if (walletconnect?.walletConnectProvider?.wc?.uri) {\n          walletconnect.walletConnectProvider = undefined\n        }\n        activate(walletconnect, undefined, true).catch((error) => {\n          if (error instanceof UserRejectedRequestError) {\n            setConnecting(false)\n          } else {\n            setError(error)\n          }\n        })\n      }}\n    >\n      WalletConnect\n    </Button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}