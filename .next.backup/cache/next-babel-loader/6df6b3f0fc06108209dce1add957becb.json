{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BackgroundVideo from './BackgroundVideo';\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Text, Link } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport dynamic from 'next/dynamic';\nimport { CHAIN_ID_NAMES } from '../utils';\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks';\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context';\nimport ColorBox from './ColorBox';\nimport Account from './Account';\nimport { TransactionToast } from './TransactionToast';\nimport TokenBalance from './TokenBalance';\nimport { WETH, ChainId } from '@uniswap/sdk';\nimport WalletConnect from './WalletConnect';\nimport { QueryParameters } from '../constants';\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic } from '../tokens';\nvar Settings = dynamic(_c = function _c() {\n  return import('./Settings');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./Settings')];\n    },\n    modules: ['./Settings']\n  }\n});\n_c2 = Settings;\nexport default function Layout(_ref) {\n  _s();\n\n  var _this = this;\n\n  var children = _ref.children;\n\n  var _useWeb3React = useWeb3React(),\n      chainId = _useWeb3React.chainId,\n      account = _useWeb3React.account;\n\n  var isTestnet = typeof chainId === 'number' && chainId !== 1;\n\n  var _useDisclosure = useDisclosure(),\n      isOpenSettings = _useDisclosure.isOpen,\n      onOpenSettings = _useDisclosure.onOpen,\n      onCloseSettings = _useDisclosure.onClose;\n\n  var _useFirstToken = useFirstToken(),\n      _useFirstToken2 = _slicedToArray(_useFirstToken, 1),\n      firstToken = _useFirstToken2[0];\n\n  var _useSecondToken = useSecondToken(),\n      _useSecondToken2 = _slicedToArray(_useSecondToken, 1),\n      secondToken = _useSecondToken2[0];\n\n  var _useShowUSD = useShowUSD(),\n      _useShowUSD2 = _slicedToArray(_useShowUSD, 2),\n      showUSD = _useShowUSD2[0],\n      setShowUSD = _useShowUSD2[1];\n\n  var _useTransactions = useTransactions(),\n      _useTransactions2 = _slicedToArray(_useTransactions, 1),\n      transactions = _useTransactions2[0]; // automatically try connecting to the injected connector on pageload\n\n\n  var triedToEagerConnect = useEagerConnect();\n  var queryParameters = useQueryParameters();\n  var requiredChainId = queryParameters[QueryParameters.CHAIN];\n  var USDETHPrice = useUSDETHPrice();\n\n  var handleNavigationclick = function handleNavigationclick() {\n    console.log(location.pathname);\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create';\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist';\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Settings, {\n    isOpen: isOpenSettings,\n    onClose: onCloseSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(BackgroundVideo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(ColorBox, {\n    as: Flex,\n    flexDirection: \"column\",\n    borderColor: Number(chainId) === 137 ? \"blue.500\" : \"orange.500\",\n    borderWidth: isTestnet ? '.5rem' : '0',\n    minHeight: \"100vh\",\n    maxHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexShrink: 0,\n    overflowX: \"auto\",\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(IconButton, {\n    m: 2,\n    icon: \"settings\",\n    variant: \"ghost\",\n    onClick: onOpenSettings,\n    \"aria-label\": \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    m: 2,\n    variant: \"ghost\",\n    onClick: handleNavigationclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, ' ', location.pathname.includes('vaultlist') ? 'Create Vault' : 'My Vaults')), __jsx(Account, {\n    triedToEagerConnect: triedToEagerConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    mt: isTestnet ? '5rem' : '4.5rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, typeof account !== 'string' ? !triedToEagerConnect || (typeof chainId === 'number' ? chainId !== ChainId.MAINNET : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(WalletConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })) : // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n  [chainId == 1 ? Coval : chainId == 80001 ? CovalTestMatic : chainId == 137 ? CovalMatic : CovalTest, firstToken ? firstToken.symbol != 'Coval' ? firstToken : null : null, secondToken ? secondToken.symbol != 'Coval' ? secondToken : null : null].filter(function (token) {\n    return token;\n  }).filter(function (token) {\n    return !(token === null || token === void 0 ? void 0 : token.equals(WETH[token.chainId]));\n  }).map(function (token) {\n    return __jsx(Box, {\n      key: token === null || token === void 0 ? void 0 : token.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(TokenBalance, {\n      token: token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Flex, {\n    flexGrow: 1,\n    direction: \"column\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, children), __jsx(Flex, {\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, typeof chainId === 'number' && __jsx(LightMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, __jsx(Badge, {\n    variant: \"solid\",\n    variantColor: chainId == 137 ? 'blue' : 'orange'\n    /*isTestnet ? 'blue' : undefined*/\n    ,\n    fontSize: \"1rem\",\n    style: {\n      borderTopLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"- \", CHAIN_ID_NAMES[chainId]), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"change network\")))), transactions.length > 0 && __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, transactions.filter(function (transaction) {\n    return transaction.chainId === chainId;\n  }).map(function (_ref2) {\n    var hash = _ref2.hash;\n    return __jsx(Box, {\n      key: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, __jsx(TransactionToast, {\n      hash: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    left: 100,\n    alignItems: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    right: 1,\n    p: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(Button, _extends({\n    as: \"a\"\n  }, {\n    href: location.origin + '/buy?chain=' + chainId + '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), \"Buy Coval\"))));\n}\n\n_s(Layout, \"2i6ifyng28hYCLGD7nYfehpK3X0=\", false, function () {\n  return [useWeb3React, useDisclosure, useFirstToken, useSecondToken, useShowUSD, useTransactions, useEagerConnect, useQueryParameters, useUSDETHPrice];\n});\n\n_c3 = Layout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Settings$dynamic\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"Layout\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx"],"names":["BackgroundVideo","Flex","IconButton","useDisclosure","Badge","LightMode","Stack","Box","Button","Text","Link","useWeb3React","dynamic","CHAIN_ID_NAMES","useEagerConnect","useQueryParameters","useUSDETHPrice","useTransactions","useFirstToken","useSecondToken","useShowUSD","ColorBox","Account","TransactionToast","TokenBalance","WETH","ChainId","WalletConnect","QueryParameters","Coval","CovalTest","CovalTestMatic","CovalMatic","Settings","Layout","children","chainId","account","isTestnet","isOpenSettings","isOpen","onOpenSettings","onOpen","onCloseSettings","onClose","firstToken","secondToken","showUSD","setShowUSD","transactions","triedToEagerConnect","queryParameters","requiredChainId","CHAIN","USDETHPrice","handleNavigationclick","console","log","location","pathname","pieces","split","pop","includes","href","origin","join","Number","MAINNET","symbol","filter","token","equals","map","address","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","length","transaction","hash","target","rel"],"mappings":"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","sourcesContent":["import { ReactNode } from 'react'\nimport BackgroundVideo from './BackgroundVideo'\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverCloseButton, PopoverBody, Text, Link} from '@chakra-ui/core'\nimport { useWeb3React } from '@web3-react/core'\nimport dynamic from 'next/dynamic'\n\nimport { CHAIN_ID_NAMES } from '../utils'\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks'\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context'\nimport ColorBox from './ColorBox'\nimport Account from './Account'\nimport { TransactionToast } from './TransactionToast'\nimport TokenBalance from './TokenBalance'\nimport { WETH, ChainId, Token } from '@uniswap/sdk'\nimport WalletConnect from './WalletConnect'\nimport { QueryParameters } from '../constants'\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic, DEFAULT_TOKENS } from '../tokens'\n\nconst Settings = dynamic(() => import('./Settings'))\n\nexport default function Layout({ children }: { children: ReactNode }): JSX.Element {\n  const { chainId, account } = useWeb3React()\n  const isTestnet = typeof chainId === 'number' && chainId !== 1\n\n  const { isOpen: isOpenSettings, onOpen: onOpenSettings, onClose: onCloseSettings } = useDisclosure()\n\n  const [firstToken] = useFirstToken()\n  const [secondToken] = useSecondToken()\n  const [showUSD, setShowUSD] = useShowUSD()\n\n  const [transactions] = useTransactions()\n\n  // automatically try connecting to the injected connector on pageload\n  const triedToEagerConnect = useEagerConnect()\n\n  const queryParameters = useQueryParameters()\n  const requiredChainId = queryParameters[QueryParameters.CHAIN]\n\n  const USDETHPrice = useUSDETHPrice()\n  const handleNavigationclick = () => {\n    console.log(location.pathname)\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create'\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist'\n    }\n  }\n  return (\n    <>\n      <Settings isOpen={isOpenSettings} onClose={onCloseSettings} />\n      <BackgroundVideo />\n      <ColorBox\n        as={Flex}\n        flexDirection=\"column\"\n        borderColor={Number(chainId) === 137 ? \"blue.500\" : \"orange.500\"}\n        borderWidth={isTestnet ? '.5rem' : '0'}\n        minHeight=\"100vh\"\n        maxHeight=\"100vh\"\n      >\n        <Flex justifyContent=\"space-between\" flexShrink={0} overflowX=\"auto\" p=\"1rem\">\n          <Stack spacing={0} direction=\"row\">\n            <IconButton m={2} icon=\"settings\" variant=\"ghost\" onClick={onOpenSettings} aria-label=\"Settings\" />\n            <Button m={2} variant=\"ghost\" onClick={handleNavigationclick}>\n              {' '}\n              {location.pathname.includes('vaultlist') ? 'Create Vault' : 'My Vaults'}\n            </Button>\n          </Stack>\n          <Account triedToEagerConnect={triedToEagerConnect} />\n        </Flex>\n\n        <Stack\n          position=\"absolute\"\n          top={0}\n          right={0}\n          m={isTestnet ? '1.5rem' : '1rem'}\n          mt={isTestnet ? '5rem' : '4.5rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n          zIndex={2}\n        >\n          {typeof account !== 'string' ? (\n            !triedToEagerConnect ||\n            (typeof chainId === 'number'\n              ? chainId !== ChainId.MAINNET\n              : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : (\n              <Box>\n                <WalletConnect />\n              </Box>\n            )\n          ) : (\n            // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n            [\n              chainId == 1 ? Coval : chainId == 80001 ? CovalTestMatic : chainId == 137 ? CovalMatic : CovalTest,\n              firstToken ? (firstToken.symbol != 'Coval' ? firstToken : null) : null,\n              secondToken ? (secondToken.symbol != 'Coval' ? secondToken : null) : null,\n            ]\n              .filter((token) => token)\n              .filter((token) => !token?.equals(WETH[token.chainId]))\n              .map((token) => (\n                <Box key={token?.address}>\n                  <TokenBalance token={token as Token} />\n                </Box>\n              ))\n          )}\n        </Stack>\n\n        <Flex flexGrow={1} direction=\"column\" overflow=\"auto\">\n          {children}\n        </Flex>\n\n        <Flex minHeight=\"1.5rem\">\n          {typeof chainId === 'number' && (\n            <LightMode>\n              <Link href=\"/swap\">\n                <Badge\n                  variant=\"solid\"\n                  variantColor={chainId == 137 ? 'blue' : 'orange'/*isTestnet ? 'blue' : undefined*/}\n                  fontSize=\"1rem\"\n                  style={{ borderTopLeftRadius: 0, borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }} >\n                  - {CHAIN_ID_NAMES[chainId]}\n                </Badge>\n                <Text>\n                   change network\n                </Text>\n              </Link>\n            </LightMode>\n          )}\n        </Flex>\n\n        {transactions.length > 0 && (\n          <Stack\n            position=\"absolute\"\n            bottom={0}\n            right={0}\n            m={isTestnet ? '1.5rem' : '1rem'}\n            alignItems=\"flex-end\"\n            spacing=\"1rem\"\n            zIndex={2}\n          >\n            {transactions\n              .filter((transaction) => transaction.chainId === chainId)\n              .map(({ hash }) => (\n                <Box key={hash}>\n                  <TransactionToast hash={hash} />\n                </Box>\n              ))}\n          </Stack>\n        )}\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          left={100}\n          alignItems=\"center\"\n          align=\"center\"\n        >\n          {/* <Popover usePortal>\n            <PopoverTrigger>\n            <IconButton size=\"sm\" icon=\"warning-2\" aria-label=''/>\n            </PopoverTrigger>\n            <PopoverContent zIndex={4} width=\"5000px\">\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverBody><Text fontSize=\"xs\">Emblem Vault is experimental. Before purchasing $COVAL or $FUEL tokens, you must ensure that the nature, complexity and risks inherent in the trading of cryptocurrency are suitable for your objectives in light of your circumstances and financial position. Emblem, Emblem Vault, $COVAL, and/or $FUEL shall be under no obligation to purchase or to broker the purchase back from you of your cryptocurrency in circumstances where there is no viable market for the purchase of the same. The products and services presented on this website may only be purchased in jurisdictions in which their marketing and distribution are authorized. Using or Creating Vaults is done at your own risk.</Text></PopoverBody>\n            </PopoverContent>\n          </Popover> */}\n        </Stack>\n\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          right={1}\n          p={isTestnet ? '1.5rem' : '1rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n        >\n          <Button\n            as=\"a\"\n            {...{\n              href:\n                location.origin +\n                '/buy?chain=' +\n                chainId +\n                '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n              target: '_blank',\n              rel: 'noopener noreferrer',\n            }}\n          >\n            Buy Coval\n          </Button>\n        </Stack>\n      </ColorBox>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}