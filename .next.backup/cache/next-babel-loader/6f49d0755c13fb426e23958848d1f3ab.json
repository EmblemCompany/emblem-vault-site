{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Text, Flex } from '@chakra-ui/core';\nexport class Attributes extends Component {\n  render() {\n    let colorMode = this.props.colorMode;\n    let attributes = this.props.attributes;\n    return __jsx(Flex, {\n      w: \"100%\",\n      flexWrap: \"wrap\",\n      mt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, attributes.map((attribute, index) => {\n      return __jsx(Box, {\n        mt: \"2px\",\n        p: 1,\n        ml: \"3px\",\n        minWidth: \"45%\"\n        /*maxWidth=\"50%\"*/\n        ,\n        width: \"48%\",\n        className: \"NFT newest coin-balance-content\",\n        key: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, __jsx(Text, {\n        ml: 2,\n        mr: Number.isInteger(index / 2) ? 0 : \"2px\",\n        fontSize: \".9em\",\n        textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n        fontWeight: \"bold\",\n        overflow: \"hidden\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, attribute.trait_type), __jsx(Text, {\n        ml: 2,\n        mr: Number.isInteger(index / 2) ? \"2px\" : 0,\n        fontSize: \".7em\",\n        textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, attribute.value));\n    })) // <Flex w=\"100%\" justify=\"center\" >\n    // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n    // <HStack>\n    //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n    //   {\n    //     attributes.map(attribute=>{\n    //       return (\n    //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n    //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n    //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n    //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n    //           </Box>\n    //         </Box>\n    //       )\n    //     })\n    //   }\n    //   </Flex>\n    // </HStack>\n    // </VStack>\n    // </Flex>\n    ;\n  }\n\n}\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Text","Flex","Attributes","render","colorMode","props","attributes","map","attribute","index","Number","isInteger","trait_type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAGEC,IAHF,EAOEC,IAPF,QASO,iBATP;AAkBA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAoD;AACzDK,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,WACE,MAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,QAAQ,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAoB;AACjC,aACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAC,KAAvB;AAA6B,QAAA,QAAQ,EAAC;AAAM;AAA5C;AAA+D,QAAA,KAAK,EAAC,KAArE;AAA2E,QAAA,SAAS,EAAC,iCAArF;AAAuH,QAAA,GAAG,EAAE,CAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,EAAE,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,CAA5B,GAA+B,KAAhD;AAAuD,QAAA,QAAQ,EAAC,MAAhE;AAAuE,QAAA,SAAS,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,MAA5B,GAAoC,OAAtH;AAA+H,QAAA,UAAU,EAAC,MAA1I;AAAiJ,QAAA,QAAQ,EAAC,QAA1J;AAAmK,QAAA,WAAW,EAAE,IAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwLD,SAAS,CAACI,UAAlM,CADF,EAEE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,EAAE,EAAEF,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,KAA5B,GAAmC,CAApD;AAAuD,QAAA,QAAQ,EAAC,MAAhE;AAAuE,QAAA,SAAS,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,MAA5B,GAAoC,OAAtH;AAA+H,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAApL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8LI,SAAS,CAACK,KAAxM,CAFF,CADF;AAMD,KAPD,CAFJ,CADF,CAaE;AAEM;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEN;AAlCF;AAoCD;;AAxCwD;AA2C3D,eAAeX,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n        {\n          attributes.map((attribute, index)=>{\n            return (\n              <Box mt=\"2px\" p={1} ml=\"3px\" minWidth=\"45%\" /*maxWidth=\"50%\"*/ width=\"48%\" className=\"NFT newest coin-balance-content\" key={0}  >\n                <Text ml={2} mr={Number.isInteger(index/2) ? 0: \"2px\"} fontSize=\".9em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} fontWeight=\"bold\" overflow=\"hidden\" isTruncated={true} >{attribute.trait_type}</Text>\n                <Text ml={2} mr={Number.isInteger(index/2) ? \"2px\": 0} fontSize=\".7em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              </Box>\n            )\n          })\n        }\n      </Flex>\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n              // <HStack>\n              //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n              //   {\n              //     attributes.map(attribute=>{\n              //       return (\n              //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n              //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              //           </Box>\n              //         </Box>\n              //       )\n              //     })\n              //   }\n              //   </Flex>\n              // </HStack>\n            // </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}