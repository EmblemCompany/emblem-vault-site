{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Flex } from '@chakra-ui/core';\nimport { Contract } from '@ethersproject/contracts';\n\nconst getContract = (address, abi, library, account) => {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nfunction checkApproval(handler, contract, abi, library, account, amount) {\n  return false;\n}\n\nexport class Approval extends Component {\n  render() {\n    let handler = this.props.handler;\n    let contract = this.props.contract;\n    let amount = this.props.amount;\n    let label = this.props.label;\n    let abi = this.props.abi;\n    let library = this.props.library;\n    let account = this.props.account;\n    let approved = checkApproval(handler, contract, abi, library, account, amount);\n    return approved ? __jsx(React.Fragment, null) : __jsx(Flex, {\n      w: \"100%\",\n      flexWrap: \"wrap\",\n      mt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      backgroundColor: \"#02b402\",\n      color: \"black !important\",\n      fontWeight: \"bold !important\",\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, label));\n  }\n\n}\nexport default Approval;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","Component","Button","Flex","Contract","getContract","address","abi","library","account","getSigner","connectUnchecked","checkApproval","handler","contract","amount","Approval","render","props","label","approved"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAMEC,MANF,EAOEC,IAPF,QASO,iBATP;AAYA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,KAAmC;AACrD,SAAO,IAAIL,QAAJ,CAAaE,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAIA,SAASC,aAAT,CAAuBC,OAAvB,EAAwCC,QAAxC,EAA0DP,GAA1D,EAAoEC,OAApE,EAAkFC,OAAlF,EAAgGM,MAAhG,EAAgH;AAC9G,SAAO,KAAP;AACD;;AAYD,OAAO,MAAMC,QAAN,SAAuBf,SAAvB,CAAkD;AACvDgB,EAAAA,MAAM,GAAG;AACP,QAAIJ,OAAO,GAAG,KAAKK,KAAL,CAAWL,OAAzB;AACA,QAAIC,QAAQ,GAAG,KAAKI,KAAL,CAAWJ,QAA1B;AACA,QAAIC,MAAM,GAAG,KAAKG,KAAL,CAAWH,MAAxB;AACA,QAAII,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIZ,GAAG,GAAG,KAAKW,KAAL,CAAWX,GAArB;AACA,QAAIC,OAAO,GAAG,KAAKU,KAAL,CAAWV,OAAzB;AACA,QAAIC,OAAO,GAAG,KAAKS,KAAL,CAAWT,OAAzB;AACA,QAAIW,QAAQ,GAAGR,aAAa,CAACC,OAAD,EAAUC,QAAV,EAAoBP,GAApB,EAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CM,MAA3C,CAA5B;AACA,WAAOK,QAAQ,GACb,2BADa,GAGb,MAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,QAAQ,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,eAAe,EAAE,SAAzB;AAAoC,MAAA,KAAK,EAAE,kBAA3C;AAA+D,MAAA,UAAU,EAAE,iBAA3E;AAA8F,MAAA,KAAK,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,CADF,CAHF;AASD;;AAnBsD;AAsBzD,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\n\nconst getContract = (address, abi, library, account) =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\nfunction checkApproval(handler: string, contract: string, abi: any, library: any, account: any, amount: number) {\n  return false\n}\n\ntype AttributesProps = {\n  handler: string,\n  contract: string,\n  amount: number,\n  abi: any,\n  label: string,\n  library: any,\n  account: any,\n}\n\nexport class Approval extends Component<AttributesProps> {\n  render() {\n    let handler = this.props.handler\n    let contract = this.props.contract\n    let amount = this.props.amount\n    let label = this.props.label\n    let abi = this.props.abi\n    let library = this.props.library\n    let account = this.props.account\n    let approved = checkApproval(handler, contract, abi, library, account, amount)\n    return approved? (\n      <></>\n    ) : (\n      <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n        <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n          {label}\n        </Button>\n      </Flex>\n    )\n  }\n}\n\nexport default Approval\n\n\n"]},"metadata":{},"sourceType":"module"}