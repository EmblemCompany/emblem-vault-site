{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Button } from '@chakra-ui/core';\nexport class Attributes extends Component {\n  render() {\n    let colorMode = this.props.colorMode;\n    let attributes = this.props.attributes;\n    return __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      justifyContent: \"space-between\",\n      mt: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      className: \"nft_button\",\n      width: \"50%\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Opensea\"), __jsx(Button, {\n      className: \"nft_button\",\n      width: \"50%\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"LooksRare\"), __jsx(Button, {\n      className: \"nft_button\",\n      width: \"50%\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Third\")) // <Flex w=\"100%\" justify=\"center\" >\n    // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n    // <HStack>\n    //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n    //   {\n    //     attributes.map(attribute=>{\n    //       return (\n    //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n    //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n    //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n    //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n    //           </Box>\n    //         </Box>\n    //       )\n    //     })\n    //   }\n    //   </Flex>\n    // </HStack>\n    // </VStack>\n    // </Flex>\n    ;\n  }\n\n}\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Button","Attributes","render","colorMode","props","attributes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAMEC,MANF,QAQO,iBARP;AAiBA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAoD;AACzDI,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,WACE,MAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAc,MAAA,UAAU,EAAC,UAAzB;AAAoC,MAAA,cAAc,EAAC,eAAnD;AAAmE,MAAA,EAAE,EAAC,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,OAAO,EAAE,MAAM,CAAE,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAQI,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,KAFR;AAIE,MAAA,OAAO,EAAE,MAAM,CAAE,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,EAgBI,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,KAFR;AAIE,MAAA,OAAO,EAAE,MAAM,CAAE,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,CADF,CA6BE;AAEM;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEN;AAlDF;AAoDD;;AAxDwD;AA2D3D,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n          <Button\n            className=\"nft_button\"\n            width=\"50%\"\n            onClick={() => {}}\n          >\n            Opensea\n          </Button>\n          <Button\n            className=\"nft_button\"\n            width=\"50%\"\n           \n            onClick={() => {}}\n          >\n            LooksRare\n          </Button>\n          <Button\n            className=\"nft_button\"\n            width=\"50%\"\n           \n            onClick={() => {}}\n          >\n            Third\n          </Button>\n          \n          \n        {/* </Stack> */}\n      </Box>\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n              // <HStack>\n              //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n              //   {\n              //     attributes.map(attribute=>{\n              //       return (\n              //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n              //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              //           </Box>\n              //         </Box>\n              //       )\n              //     })\n              //   }\n              //   </Flex>\n              // </HStack>\n            // </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}