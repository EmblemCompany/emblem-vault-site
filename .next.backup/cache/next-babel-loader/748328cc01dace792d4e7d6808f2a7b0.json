{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Image, Text, Link } from '@chakra-ui/core';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nimport { validImage } from '../../utils';\nexport var CoinBalance = /*#__PURE__*/function (_Component) {\n  _inherits(CoinBalance, _Component);\n\n  var _super = _createSuper(CoinBalance);\n\n  function CoinBalance() {\n    _classCallCheck(this, CoinBalance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CoinBalance, [{\n    key: \"render\",\n    value: function render() {\n      var coin = this.props.coin;\n      var mine = this.props.mine;\n      var onRenew = this.props.onRenew;\n      return __jsx(HStack, {\n        key: coin.name,\n        w: \"300px\",\n        p: 2\n      }, __jsx(Box, {\n        className: \"coin-image-container\",\n        w: \"100%\",\n        \"min-width\": \"40px\"\n      }, coin.image ? __jsx(Image, {\n        className: \"NFT-image-small\",\n        width: \"40px\",\n        src: coin.image\n      }) : coin.address && validImage(\"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://token-icons.s3.amazonaws.com/\" + coin.address + \".png\"\n      }) : coin.coin && validImage(\"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\") ? __jsx(Image, {\n        width: \"40px\",\n        src: \"https://s3.amazonaws.com/token-icons/\" + coin.coin.toLowerCase() + \".png\"\n      }) : __jsx(Circle, {\n        size: \"40px\",\n        bg: \"gray\",\n        color: \"white\",\n        isTruncated: true\n      }, coin.symbol ? coin.symbol.toLowerCase() : coin.name)), __jsx(VStack, {\n        p: \"10px\",\n        w: \"100%\"\n      }, __jsx(HStack, {\n        w: \"300px\"\n      }, __jsx(Text, {\n        \"float\": \"left\",\n        width: \"50%\",\n        fontWeight: \"bold\",\n        color: this.props.colorMode == \"dark\" ? \"white\" : \"black\",\n        isTruncated: true\n      }, coin.name), __jsx(Text, {\n        \"float\": \"right\",\n        width: \"40%\",\n        textAlign: \"right\",\n        fontWeight: \"bold\",\n        color: this.props.colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\"\n      }, \"$\", coin && coin.price && coin.price > 0 ? Number(coin.price.toFixed(2)).toLocaleString() : 0)), __jsx(HStack, {\n        w: \"100%\",\n        mt: 0,\n        spacing: \"4px\",\n        className: \"coin-display-row\"\n      }, __jsx(Text, {\n        position: \"relative\",\n        fontSize: \"xs\",\n        width: \"50%\",\n        left: \"-10px\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\"\n      }, coin && coin.balance ? Number(Number(coin.balance).toFixed(3)).toLocaleString() : null, \" \", (coin.symbol ? coin.symbol : coin.project ? coin.project : coin.name) + \" \"), __jsx(Text, {\n        width: \"45%\",\n        textAlign: \"right\",\n        fontSize: \"xs\",\n        right: \"40px\"\n      }, coin.coin.toLowerCase(), \" chain\")), __jsx(HStack, {\n        width: \"100%\"\n      }, coin.type == 'nft' && coin.external_url ? __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        href: coin.external_url,\n        isExternal: true\n      }, \"View NFT\") : null, coin.coin.toLowerCase() == 'nmc' && mine && coin.type == 'nft' ? __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        onClick: function onClick() {\n          onRenew(coin.name);\n        }\n      }, \"Renew\") : null)));\n    }\n  }]);\n\n  return CoinBalance;\n}(Component);\nexport default CoinBalance;","map":null,"metadata":{},"sourceType":"module"}