{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Flex, Image, Text } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nexport default function Vault() {\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    query,\n    pathname,\n    replace\n  } = useRouter();\n  const [tokenId, setTokenId] = React.useState(query.id);\n  const [vaultName, setVaultName] = React.useState('');\n  const [vaultDesc, setVaultDesc] = React.useState('');\n  const [vaultImage, setVaultImage] = React.useState('');\n  const [vaultValues, setVaultValues] = React.useState([]);\n\n  const getVault = async () => {\n    // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n    const responce = await fetch('https://api.emblemvault.io/meta/' + tokenId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'service': 'evmetadata',\n        'chainId': chainId.toString()\n      }\n    });\n    const jsonData = await responce.json();\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultValues(jsonData.values);\n    setVaultDesc(jsonData.description);\n  };\n\n  useEffect(() => {\n    getVault();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  }, vaultName, __jsx(Image, {\n    src: vaultImage ? vaultImage : \"https://circuitsofvalue.com/public/coval-logo.png\",\n    size: \"250px\"\n  })), __jsx(Box, {\n    p: \"6\"\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\"\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    fontWeight: \"semibold\",\n    letterSpacing: \"wide\",\n    fontSize: \"xs\",\n    ml: \"2\"\n  }, vaultValues.length ? vaultValues.map(coin => {\n    return __jsx(Text, {\n      key: coin.name\n    }, coin.balance, \" \", coin.name);\n  }) : __jsx(Text, null, \"Nothing in here! Fill 'er up!\"))), __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h4\",\n    lineHeight: \"tight\"\n  }, vaultDesc))));\n}","map":null,"metadata":{},"sourceType":"module"}