{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Link } from '@chakra-ui/core';\nimport { HStack } from '@chakra-ui/react';\nexport var Attributes = /*#__PURE__*/function (_Component) {\n  _inherits(Attributes, _Component);\n\n  var _super = _createSuper(Attributes);\n\n  function Attributes() {\n    _classCallCheck(this, Attributes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Attributes, [{\n    key: \"render\",\n    value: function render() {\n      var colorMode = this.props.colorMode;\n      var attributes = this.props.attributes;\n      return __jsx(Box, {\n        d: \"flex\",\n        backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n        alignItems: \"baseline\",\n        className: \"coin-balance-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, __jsx(Box, {\n        color: \"gray.500\",\n        letterSpacing: \"wide\",\n        fontSize: \"sm\",\n        ml: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(HStack, {\n        key: 0,\n        w: \"300px\",\n        p: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        onClick: function onClick() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \"Attributes\"))));\n    }\n  }]);\n\n  return Attributes;\n}(Component);\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Link","HStack","Attributes","colorMode","props","attributes"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAIEC,IAJF,QAOO,iBAPP;AASA,SAAQC,MAAR,QAAsC,kBAAtC;AAOA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,UAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,aACE,MAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,eAAe,EAAEF,SAAS,IAAI,OAAb,GAAsB,UAAtB,GAAkC,UAAjE;AAA6E,QAAA,UAAU,EAAC,UAAxF;AAAmG,QAAA,SAAS,EAAC,sBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,KAAK,EAAC,UAAX;AAAsB,QAAA,aAAa,EAAC,MAApC;AAA2C,QAAA,QAAQ,EAAC,IAApD;AAAyD,QAAA,EAAE,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,CAAb;AAAgB,QAAA,CAAC,EAAC,OAAlB;AAA0B,QAAA,CAAC,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAArF;AAA6F,QAAA,OAAO,EAAE,mBAAI,CAAE,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF,CADF;AASD;AAbH;;AAAA;AAAA,EAAgCL,SAAhC;AAgBA,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Box d=\"flex\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.700\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n        <Box color=\"gray.500\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n          <HStack key={0} w=\"300px\" p={2} >\n            <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} onClick={()=>{}}>Attributes</Link>\n          </HStack>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}