{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Text } from '@chakra-ui/core';\nimport { VStack } from '@chakra-ui/react';\nexport var Attributes = /*#__PURE__*/function (_Component) {\n  _inherits(Attributes, _Component);\n\n  var _super = _createSuper(Attributes);\n\n  function Attributes() {\n    _classCallCheck(this, Attributes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Attributes, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colorMode = this.props.colorMode;\n      var attributes = this.props.attributes;\n      return (// <Flex w=\"100%\" justify=\"center\" >\n        __jsx(VStack, {\n          justify: \"center\",\n          key: 0,\n          w: \"300px\",\n          flexWrap: \"wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, attributes.map(function (attribute) {\n          return __jsx(Box, {\n            d: \"flex\",\n            width: \"100%\",\n            backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.500\",\n            alignItems: \"baseline\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }\n          }, __jsx(Box, {\n            width: \"100%\",\n            color: \"gray.500\",\n            textAlign: \"center\",\n            fontSize: \"sm\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 23\n            }\n          }, __jsx(Text, {\n            color: _this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }\n          }, attribute.trait_type), __jsx(Text, {\n            color: _this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }, attribute.value)));\n        })) // </Flex>\n\n      );\n    }\n  }]);\n\n  return Attributes;\n}(Component);\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Text","VStack","Attributes","colorMode","props","attributes","map","attribute","trait_type","value"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAGEC,IAHF,QAQO,iBARP;AAUA,SAAgBC,MAAhB,QAAsC,kBAAtC;AAOA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AAAA;;AACP,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,UAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,aACE;AAEM,cAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,GAAG,EAAE,CAA9B;AAAiC,UAAA,CAAC,EAAC,OAAnC;AAA2C,UAAA,QAAQ,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEIA,UAAU,CAACC,GAAX,CAAe,UAAAC,SAAS,EAAE;AACxB,iBACE,MAAC,GAAD;AAAK,YAAA,CAAC,EAAC,MAAP;AAAa,YAAA,KAAK,EAAC,MAAnB;AAA0B,YAAA,eAAe,EAAEJ,SAAS,IAAI,OAAb,GAAsB,UAAtB,GAAkC,UAA7E;AAAyF,YAAA,UAAU,EAAC,UAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,GAAD;AAAK,YAAA,KAAK,EAAC,MAAX;AAAkB,YAAA,KAAK,EAAC,UAAxB;AAAmC,YAAA,SAAS,EAAC,QAA7C;AAAsD,YAAA,QAAQ,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE,KAAI,CAACC,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqEI,SAAS,CAACC,UAA/E,CADF,EAEE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE,KAAI,CAACJ,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqEI,SAAS,CAACE,KAA/E,CAFF,CADF,CADF;AAQD,SATD,CAFJ,CAHR,CAkBE;;AAlBF;AAoBD;AAxBH;;AAAA;AAAA,EAAgCX,SAAhC;AA2BA,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            <VStack justify=\"center\" key={0} w=\"300px\" flexWrap=\"wrap\">\n              {\n                attributes.map(attribute=>{\n                  return (\n                    <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" >\n                      <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n                        <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n                        <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n                      </Box>\n                    </Box>\n                  )\n                })\n              }\n            </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}