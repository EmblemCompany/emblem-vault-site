{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Newest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Stack, useColorMode } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed';\nexport default function Newest() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(Number(query.start) || 0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useState2 = useState(query.reverse == 'true' || false),\n      reverse = _useState2[0],\n      setReverse = _useState2[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState3 = useState([]),\n      vaults = _useState3[0],\n      setVaults = _useState3[1];\n\n  var _useState4 = useState({\n    loaded: false\n  }),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useState5 = useState(false),\n      loadingApi = _useState5[0],\n      setLoadingApi = _useState5[1];\n\n  var _useState6 = useState(query.address),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(query.experimental),\n      experimental = _useState7[0],\n      setExperimental = _useState7[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState8 = useState(false),\n      shouldFetchData = _useState8[0],\n      setShouldFetchData = _useState8[1];\n\n  var _useState9 = useState(true),\n      hasMore = _useState9[0],\n      setHasMore = _useState9[1];\n\n  var _useState10 = useState(0),\n      offset = _useState10[0],\n      setOffset = _useState10[1];\n\n  var PAGE_SIZE = 20;\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('getting vaults');\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(EMBLEM_API + '/newest/?start=' + offset + '&size=' + PAGE_SIZE + '&reverse=' + reverse, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainId: chainId.toString()\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              jsonData = _context.sent;\n\n              if (jsonData) {\n                jsonData = jsonData.filter(function (item) {\n                  return item.live && !item.claimedBy;\n                });\n              }\n\n              setVaults(vaults.concat(jsonData));\n              setState({\n                loaded: true\n              });\n              setLoadingApi(false);\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n              setOffset(offset + PAGE_SIZE);\n              setShouldFetchData(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var more = function more() {\n    if (location.href.includes('start')) {\n      location.href = location.href.replace('start=' + pagePosition, 'start=' + (pagePosition + PAGE_SIZE));\n    } else {\n      location.href = location.href + '?start=' + (pagePosition + PAGE_SIZE);\n    } // setPagePosition(pagePosition + PAGE_SIZE)\n    // getVaults()\n\n  };\n\n  var less = function less() {\n    if (pagePosition - PAGE_SIZE < 0) {\n      setPagePosition(PAGE_SIZE);\n    }\n\n    if (location.href.includes('start')) {\n      location.href = location.href.replace('start=' + pagePosition, 'start=' + (pagePosition - PAGE_SIZE));\n    } else {\n      location.href = location.href + '?start=' + (pagePosition - PAGE_SIZE);\n    } // setPagePosition(pagePosition + 3)\n    // getVaults()\n\n  };\n\n  var loadCache = function loadCache() {\n    var vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')); // Load vaults from storage before updating from server!\n\n    if (vaults) {\n      setState({\n        loaded: true\n      });\n      setVaults(vaults);\n      setLoadingApi(true);\n    }\n  };\n\n  var saveCache = function saveCache(vaults) {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)); // Save new state for later\n  };\n\n  var _useState11 = useState(''),\n      acct = _useState11[0],\n      setAcct = _useState11[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState12 = useState(chainId),\n      chain = _useState12[0],\n      setChain = _useState12[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]); // useEffect(() => {\n  //   if (!state.loaded) {\n  //     console.log(\"load fires how many times\")\n  //     vaults.length < 1 ? getVaults() : setState({ loaded: true })\n  //   }\n  // }, [])\n\n  useEffect(function () {\n    if (shouldFetchData) {\n      setShouldFetchData(false);\n      getVaults();\n    } else {}\n  }, [shouldFetchData]);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }) : '', __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    return __jsx(Link, {\n      href: url,\n      className: \"vaultLink\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, __jsx(Box, _extends({\n      className: \"NFT newest\",\n      key: index\n    }, flexSettings, {\n      onClick: redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      pl: 2,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, vault.name, !vault[\"private\"] && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, __jsx(Embed, {\n      className: \"d-block w-100 NFT-newest-image\",\n      url: vault.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    })), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, vault.status == 'claimed' ? __jsx(Text, {\n      color: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 50\n      }\n    }, \"CLAIMED\") : null)));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\")))));\n}\n\n_s(Newest, \"MtDlu+P8+5vlI84hCxMQygy5Yww=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = Newest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newest\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Newest.tsx"],"names":["Box","Flex","Text","Link","Stack","useColorMode","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","InfiniteScroll","Embed","Newest","query","Number","start","pagePosition","setPagePosition","reverse","setReverse","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","hasMore","setHasMore","offset","setOffset","PAGE_SIZE","getVaults","console","log","fetch","method","headers","service","toString","response","json","jsonData","filter","item","live","claimedBy","concat","fetchData","more","location","href","includes","replace","less","loadCache","JSON","parse","localStorage","getItem","saveCache","setItem","stringify","acct","setAcct","chain","setChain","length","textAlign","map","vault","index","pieces","pathname","split","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","name","totalValue","image"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n\nexport default function Newest() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const [reverse, setReverse] = useState(query.reverse == 'true' || false)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const PAGE_SIZE = 20\n\n  const getVaults = async () => {    \n    console.log('getting vaults')\n    try {\n      const response = await fetch(EMBLEM_API + '/newest/?start='+offset+'&size='+PAGE_SIZE+'&reverse='+reverse, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n        },\n      })\n      let jsonData = await response.json()\n      if (jsonData) {\n        jsonData = jsonData.filter(item=>{return item.live && !item.claimedBy})\n      }      \n      setVaults(vaults.concat(jsonData))\n      setState({ loaded: true })\n      setLoadingApi(false)\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }\n\n  const more = ()=>{\n    if (location.href.includes('start')) {\n      location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition + PAGE_SIZE))\n    } else {\n      location.href = location.href + '?start='+(pagePosition + PAGE_SIZE)\n    }\n    // setPagePosition(pagePosition + PAGE_SIZE)\n    // getVaults()\n  }\n\n  const less = ()=>{\n    if (pagePosition - PAGE_SIZE < 0) {\n      setPagePosition(PAGE_SIZE)\n    }\n    if (location.href.includes('start')) {\n      location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition - PAGE_SIZE))\n    } else {\n      location.href = location.href + '?start='+(pagePosition - PAGE_SIZE)\n    }\n    // setPagePosition(pagePosition + 3)\n    // getVaults()\n  }\n\n  const loadCache = () => {\n    let vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')) // Load vaults from storage before updating from server!\n    if (vaults) {\n      setState({ loaded: true })\n      setVaults(vaults)\n      setLoadingApi(true)\n    }\n  }\n\n  const saveCache = (vaults) => {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)) // Save new state for later\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {      \n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  // useEffect(() => {\n  //   if (!state.loaded) {\n  //     console.log(\"load fires how many times\")\n  //     vaults.length < 1 ? getVaults() : setState({ loaded: true })\n  //   }\n  // }, [])\n\n  useEffect(() => {\n    if (shouldFetchData) {\n      setShouldFetchData(false)\n      getVaults()\n    } else {\n    }\n  }, [shouldFetchData])\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n       \n        <InfiniteScroll                \n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={fetchData}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b> \n            </p>\n          }\n        >\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n        {vaults.length ? (\n          vaults.map((vault, index) => {\n            let pieces = location.pathname.split('/')\n            pieces.pop()\n            let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n            const flexSettings = {\n              flex: '1',\n              minW: '200px',\n              maxW: '200px',\n              borderWidth: '1px',\n              // color: 'white',\n              mx: '6',\n              mb: '6',\n              rounded: 'lg',\n              overflow: 'hidden',\n              borderColor: vault.status == 'claimed' ? 'green !important' : '',\n              cursor: 'pointer',\n            }\n            const redirect = function () {\n              setLoadingApi(true)\n              location.href = url\n            }\n            return (\n              <Link href={url} className=\"vaultLink\">\n                <Box className=\"NFT newest\" key={index} {...flexSettings} onClick={redirect}>\n                  <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>\n                    {vault.name}\n                    {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                  </Text>\n                  <Stack align=\"center\">\n                    <Embed className=\"d-block w-100 NFT-newest-image\" url={vault.image}/>\n                  </Stack>\n                  <Stack align=\"center\" mt={3}>\n                    {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                  </Stack>\n                </Box>\n              </Link>\n            )\n          })\n          \n        ) : (\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        )}\n        \n      </Flex>\n      </InfiniteScroll>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}