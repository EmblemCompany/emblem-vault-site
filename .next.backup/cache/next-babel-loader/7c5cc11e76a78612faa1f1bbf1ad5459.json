{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vault.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex, Image, Text } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nexport default function Vault() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query,\n      pathname = _useRouter.pathname,\n      replace = _useRouter.replace;\n\n  var _React$useState = React.useState(query.id),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tokenId = _React$useState2[0],\n      setTokenId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      vaultName = _React$useState4[0],\n      setVaultName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vaultDesc = _React$useState6[0],\n      setVaultDesc = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      vaultImage = _React$useState8[0],\n      setVaultImage = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      vaultValues = _React$useState10[0],\n      setVaultValues = _React$useState10[1];\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://104.154.252.216/meta/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              responce = _context.sent;\n              _context.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context.sent;\n              setVaultName(jsonData.name);\n              setVaultImage(jsonData.image);\n              setVaultDesc(jsonData.description);\n              setVaultValues(jsonData.values);\n              setVaultDesc(jsonData.description);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVault();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, vaultName, __jsx(Image, {\n    src: vaultImage ? vaultImage : \"https://circuitsofvalue.com/public/coval-logo.png\",\n    size: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), __jsx(Box, {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    fontWeight: \"semibold\",\n    letterSpacing: \"wide\",\n    fontSize: \"xs\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(Text, {\n      key: coin.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }\n    }, coin.balance, \" \", coin.name);\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\"))), __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, vaultDesc))));\n}\n\n_s(Vault, \"bVuPvkfWwURCyqBL12BOs+iBZQk=\", false, function () {\n  return [useWeb3React, useRouter];\n});\n\n_c = Vault;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vault\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Vault.tsx"],"names":["Box","Flex","Image","Text","useWeb3React","React","useEffect","useRouter","Vault","account","chainId","query","pathname","replace","useState","id","tokenId","setTokenId","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","vaultValues","setVaultValues","getVault","fetch","method","headers","responce","json","jsonData","name","image","description","values","length","map","coin","balance"],"mappings":"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","sourcesContent":["import {\n    Box,\n    Flex,\n    Image,\n    Text\n} from \"@chakra-ui/core\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from 'next/router'\n\nexport default function Vault() {\n\n    const { account, chainId } = useWeb3React()\n    const { query, pathname, replace } = useRouter()\n    const [tokenId, setTokenId] = React.useState(query.id);\n    const [vaultName, setVaultName] = React.useState('');\n    const [vaultDesc, setVaultDesc] = React.useState('');\n    const [vaultImage, setVaultImage] = React.useState('');\n    const [vaultValues, setVaultValues] = React.useState([]);\n\n    const getVault = async () => {\n      // const responce = await fetch('http://104.154.252.216/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n      const responce = await fetch('http://104.154.252.216/meta/' + tokenId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      const jsonData = await responce.json()\n      setVaultName(jsonData.name)\n      setVaultImage(jsonData.image)\n      setVaultDesc(jsonData.description)\n      setVaultValues(jsonData.values)\n      setVaultDesc(jsonData.description)\n    }\n\n    useEffect(() => {\n      getVault()\n    }, [])\n\n    return (\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n                <Box\n                  mt=\"1\"\n                  fontWeight=\"semibold\"\n                  as=\"h3\"\n                  lineHeight=\"tight\"\n                  p={2}\n                  textAlign=\"center\"\n                  textTransform=\"uppercase\"\n                >\n                  {vaultName}\n\n                    <Image src={vaultImage\n                      ? vaultImage\n                      : \"https://circuitsofvalue.com/public/coval-logo.png\"\n                    }\n                      size=\"250px\"\n                    />              \n                  </Box>\n\n                <Box p=\"6\">\n                  <Box d=\"flex\" alignItems=\"baseline\">\n                    <Box\n                      color=\"gray.500\"\n                      fontWeight=\"semibold\"\n                      letterSpacing=\"wide\"\n                      fontSize=\"xs\"\n                      ml=\"2\"\n                    >\n                      {vaultValues.length \n                      ? vaultValues.map((coin) => {\n                        return (\n                          <Text key={coin.name}>\n                            {coin.balance} {coin.name}\n                          </Text>\n                        )\n                      })\n                      : <Text>Nothing in here! Fill 'er up!</Text>\n                      }\n                    </Box>\n                    \n                </Box>\n                <Box\n                      mt=\"1\"\n                      fontWeight=\"semibold\"\n                      as=\"h4\"\n                      lineHeight=\"tight\"\n                    >\n                      {vaultDesc}\n                    </Box>\n                  </Box>\n              </Box>\n      </Flex>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}