{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Text, Flex } from '@chakra-ui/core';\nexport var Attributes = /*#__PURE__*/function (_Component) {\n  _inherits(Attributes, _Component);\n\n  var _super = _createSuper(Attributes);\n\n  function Attributes() {\n    _classCallCheck(this, Attributes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Attributes, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colorMode = this.props.colorMode;\n      var attributes = this.props.attributes;\n      return __jsx(Flex, {\n        w: \"100%\",\n        flexWrap: \"wrap\",\n        mt: 3\n      }, attributes.map(function (attribute, index) {\n        return __jsx(Box, {\n          mt: \"2px\",\n          p: 1,\n          ml: \"3px\",\n          minWidth: \"45%\"\n          /*maxWidth=\"50%\"*/\n          ,\n          width: \"48%\",\n          className: \"NFT newest coin-balance-content\",\n          key: 0\n        }, __jsx(Text, {\n          ml: 2,\n          mr: Number.isInteger(index / 2) ? 0 : \"4px\",\n          fontSize: \".9em\",\n          textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n          fontWeight: \"bold\",\n          overflow: \"hidden\",\n          isTruncated: true\n        }, attribute.trait_type), __jsx(Text, {\n          ml: 2,\n          mr: Number.isInteger(index / 2) ? 0 : \"4px\",\n          fontSize: \".7em\",\n          textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n          color: _this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\"\n        }, attribute.value));\n      })) // <Flex w=\"100%\" justify=\"center\" >\n      // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n      // <HStack>\n      //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n      //   {\n      //     attributes.map(attribute=>{\n      //       return (\n      //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n      //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n      //           </Box>\n      //         </Box>\n      //       )\n      //     })\n      //   }\n      //   </Flex>\n      // </HStack>\n      // </VStack>\n      // </Flex>\n      ;\n    }\n  }]);\n\n  return Attributes;\n}(Component);\nexport default Attributes;","map":null,"metadata":{},"sourceType":"module"}