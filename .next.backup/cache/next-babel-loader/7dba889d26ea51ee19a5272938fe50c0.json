{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Leaderboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, Text, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nexport default function LeaderBoard() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState = useState({\n    loaded: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingOwners = _useState2[0],\n      setLoadingOwners = _useState2[1];\n\n  var _useState3 = useState({}),\n      owners = _useState3[0],\n      setOwners = _useState3[1];\n\n  var _useState4 = useState(0),\n      totalSupply = _useState4[0],\n      setTotalSupply = _useState4[1];\n\n  var emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true);\n\n  var getOwners = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var totalSupply;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (loadingOwners) {\n                _context.next = 5;\n                break;\n              }\n\n              setOwners({});\n              setLoadingOwners(true);\n              _context.next = 6;\n              break;\n\n            case 5:\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return emblemContract.totalSupply();\n\n            case 8:\n              totalSupply = _context.sent;\n              setTotalSupply(totalSupply.toString());\n              console.log(totalSupply);\n              getTokensByIndex(Number(totalSupply.toString()), 0, function () {\n                console.log('owners', owners);\n                setLoadingOwners(false);\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOwners() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function getTokensByIndex(_x, _x2, _x3) {\n    return _getTokensByIndex.apply(this, arguments);\n  }\n\n  function _getTokensByIndex() {\n    _getTokensByIndex = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(count, index, cb) {\n      var tokenId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return emblemContract.tokenByIndex(index);\n\n            case 2:\n              tokenId = _context2.sent;\n              console.log('tokenId', tokenId.toString(), index);\n              getOwner(tokenId.toString(), function () {\n                if (count - 1 < index + 1) {\n                  return cb();\n                } else {\n                  return getTokensByIndex(count, index + 1, cb);\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getTokensByIndex.apply(this, arguments);\n  }\n\n  function getOwner(_x4, _x5) {\n    return _getOwner.apply(this, arguments);\n  }\n\n  function _getOwner() {\n    _getOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tokenId, cb) {\n      var owner;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return emblemContract.ownerOf(tokenId);\n\n            case 2:\n              owner = _context3.sent;\n\n              if (!(owner === '0x0000000000000000000000000000000000000000' || owner.toLowerCase() === '0x5d152dd902cc9198b97e5b6cf5fc23a8e4330180')) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", cb());\n\n            case 5:\n              if (!owners[owner]) {\n                owners[owner] = [{\n                  tokenId: tokenId\n                }];\n                setOwners(owners);\n              } else {\n                owners[owner].push({\n                  tokenId: tokenId.toString()\n                });\n                setOwners(owners);\n              }\n\n              return _context3.abrupt(\"return\", cb());\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getOwner.apply(this, arguments);\n  }\n\n  var _useState5 = useState(chainId),\n      chain = _useState5[0],\n      setChain = _useState5[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getOwners();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    account && chainId ? getOwners() : setState({\n      loaded: true\n    });\n  }, []);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, loadingOwners ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }\n  }) : '', __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, Object.keys(owners).map(function (owner, index) {\n    return __jsx(Stack, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Address: \", owner, \" Vaults: \", owners[owner].length));\n  }))));\n}\n\n_s(LeaderBoard, \"vA8FR33bZ7RIEj0ePMuZ8MaMpv4=\", false, function () {\n  return [useRouter, useWeb3React, useContract];\n});\n\n_c = LeaderBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Leaderboard.tsx"],"names":["Flex","Text","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","contractAddresses","useContract","LeaderBoard","query","account","chainId","loaded","state","setState","loadingOwners","setLoadingOwners","owners","setOwners","totalSupply","setTotalSupply","emblemContract","emblemVault","emblemAbi","getOwners","toString","console","log","getTokensByIndex","Number","count","index","cb","tokenByIndex","tokenId","getOwner","ownerOf","owner","toLowerCase","push","chain","setChain","Object","keys","map","length"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { validImage } from '../utils'\nimport { Contract } from '@ethersproject/contracts'\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\n\nexport default function LeaderBoard() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [state, setState] = useState({ loaded: false })\n  const [loadingOwners, setLoadingOwners] = useState(false)\n  const [owners, setOwners] = useState({})\n  const [totalSupply, setTotalSupply] = useState(0)\n\n\n  const emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n\n  const getOwners = async () => {\n    if (!loadingOwners) {\n      setOwners({})\n      setLoadingOwners(true)\n    } else {\n      return\n    }\n    let totalSupply = await (emblemContract as Contract).totalSupply()\n    setTotalSupply(totalSupply.toString())\n    console.log(totalSupply)\n    getTokensByIndex(Number(totalSupply.toString()), 0, () => {\n      console.log('owners', owners)\n      setLoadingOwners(false)\n    })\n  }\n\n  async function getTokensByIndex(count, index, cb) {\n    let tokenId = await (emblemContract as Contract).tokenByIndex(index)\n    console.log('tokenId', tokenId.toString(), index)\n    getOwner(tokenId.toString(), ()=>{\n      if (count - 1 < index + 1) {\n          return cb()\n        } else {\n          return getTokensByIndex(count, index + 1, cb)\n        }\n    })\n  }\n\n  async function getOwner(tokenId, cb) {\n    let owner = await (emblemContract as Contract).ownerOf(tokenId)\n    if (owner === '0x0000000000000000000000000000000000000000' || owner.toLowerCase() === '0x5d152dd902cc9198b97e5b6cf5fc23a8e4330180') {\n      return cb()\n    }\n    if (!owners[owner]) {\n      owners[owner] = [{ tokenId: tokenId}]\n      setOwners(owners)\n    } else {\n      owners[owner].push({ tokenId: tokenId.toString() })\n      setOwners(owners)\n    }\n    return cb()\n  }\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getOwners()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    account && chainId ? getOwners() : setState({ loaded: true })\n  }, [])\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingOwners ? <Refreshing /> : ''}\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Stack>\n          {Object.keys(owners).map((owner, index) => {\n            return (\n            <Stack key={index}>  \n              <Text key={index}>Address: {owner} Vaults: {owners[owner].length}</Text>              \n            </Stack>\n            )\n          })}\n        </Stack>        \n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}