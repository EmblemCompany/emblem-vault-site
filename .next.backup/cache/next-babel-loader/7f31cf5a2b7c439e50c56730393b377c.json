{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Listings.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Image, Text, Flex } from '@chakra-ui/core';\nexport class Listings extends Component {\n  render() {\n    let colorMode = this.props.colorMode;\n    let listings = this.props.listings;\n    return __jsx(Flex, {\n      w: \"100%\",\n      flexWrap: \"wrap\",\n      mt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, listings.map((listing, index) => {\n      return __jsx(Box, {\n        mt: \"2px\",\n        p: 1,\n        ml: \"3px\",\n        minWidth: \"45%\"\n        /*maxWidth=\"50%\"*/\n        ,\n        width: \"98%\",\n        className: \"NFT newest coin-balance-content\",\n        key: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, __jsx(Text, {\n        ml: 2,\n        mr: Number.isInteger(index / 2) ? 0 : \"4px\",\n        fontSize: \".9em\",\n        textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n        fontWeight: \"bold\",\n        overflow: \"hidden\",\n        isTruncated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, listing.price.amount.decimal, \" \", listing.price.currency.name, \" ($\", listing.price.amount.usd, \")\"), __jsx(Image, {\n        src: listing.source.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }));\n    }));\n  }\n\n}\nexport default Listings;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Listings.tsx"],"names":["React","Component","Box","Image","Text","Flex","Listings","render","colorMode","props","listings","map","listing","index","Number","isInteger","price","amount","decimal","currency","name","usd","source","icon"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,IAHF,EAOEC,IAPF,QASO,iBATP;AAkBA,OAAO,MAAMC,QAAN,SAAuBL,SAAvB,CAAgD;AACrDM,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACA,WACE,MAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,QAAQ,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAkB;AAC7B,aAEE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAC,KAAvB;AAA6B,QAAA,QAAQ,EAAC;AAAM;AAA5C;AAA+D,QAAA,KAAK,EAAC,KAArE;AAA2E,QAAA,SAAS,EAAC,iCAArF;AAAuH,QAAA,GAAG,EAAE,CAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,EAAE,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,CAA5B,GAA+B,KAAhD;AAAuD,QAAA,QAAQ,EAAC,MAAhE;AAAuE,QAAA,SAAS,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,MAA5B,GAAoC,OAAtH;AAA+H,QAAA,UAAU,EAAC,MAA1I;AAAiJ,QAAA,QAAQ,EAAC,QAA1J;AAAmK,QAAA,WAAW,EAAE,IAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwLD,OAAO,CAACI,KAAR,CAAcC,MAAd,CAAqBC,OAA7M,OAAuNN,OAAO,CAACI,KAAR,CAAcG,QAAd,CAAuBC,IAA9O,SAAuPR,OAAO,CAACI,KAAR,CAAcC,MAAd,CAAqBI,GAA5Q,MADF,EAGE,MAAC,KAAD;AAAO,QAAA,GAAG,EAAET,OAAO,CAACU,MAAR,CAAeC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAFF;AASD,KAVD,CAFJ,CADF;AAiBD;;AArBoD;AAwBvD,eAAejB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype ListingsProps = {\n  listings: any[],\n  colorMode: string,\n}\n\nexport class Listings extends Component<ListingsProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let listings = this.props.listings\n    return (\n      <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n        {\n          listings.map((listing, index)=>{\n            return (\n\n              <Box mt=\"2px\" p={1} ml=\"3px\" minWidth=\"45%\" /*maxWidth=\"50%\"*/ width=\"98%\" className=\"NFT newest coin-balance-content\" key={0}  >\n                <Text ml={2} mr={Number.isInteger(index/2) ? 0: \"4px\"} fontSize=\".9em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} fontWeight=\"bold\" overflow=\"hidden\" isTruncated={true} >{listing.price.amount.decimal} {listing.price.currency.name} (${listing.price.amount.usd})</Text>\n                {/* <Text ml={2} mr={Number.isInteger(index/2) ? 0: \"4px\"} fontSize=\".9em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} fontWeight=\"bold\" overflow=\"hidden\" isTruncated={true} >{listing.source.icon}</Text> */}\n                <Image src={listing.source.icon}></Image>\n                 \n              </Box>\n            )\n          })\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Listings\n"]},"metadata":{},"sourceType":"module"}