{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { resolve } from 'url';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Text, Stack, Slider, SliderTrack, SliderFilledTrack, SliderThumb, useColorMode, Button, Link, Switch } from 'chakra-ui/react';\nimport copy from 'copy-to-clipboard';\nimport { COLOR, DEFAULT_DEADLINE, DEFAULT_SLIPPAGE, QueryParameters } from '../constants';\nimport { useBodyKeyDown } from '../hooks';\nimport { useApproveMax, useDeadline, useSlippage, useFirstToken, useSecondToken } from '../context';\nexport default function Settings({\n  isOpen,\n  onClose\n}) {\n  var _process$env$COMMIT_S;\n\n  const {\n    chainId\n  } = useWeb3React();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const {\n    pathname\n  } = useRouter();\n  useBodyKeyDown('d', toggleColorMode);\n  const [approveMax, toggleApproveMax] = useApproveMax();\n  const [deadline, setDeadline] = useDeadline();\n  const [slippage, setSlippage] = useSlippage();\n  const [firstToken] = useFirstToken();\n  const [secondToken] = useSecondToken();\n  let permalink = null;\n\n  if (typeof chainId === 'number' && (firstToken || secondToken) && (pathname === '/buy' || pathname === '/sell')) {\n    const permalinkParameters = _objectSpread({\n      [QueryParameters.CHAIN]: chainId\n    }, pathname === '/buy' ? _objectSpread(_objectSpread({}, firstToken ? {\n      [QueryParameters.OUTPUT]: firstToken.address\n    } : {}), secondToken ? {\n      [QueryParameters.INPUT]: secondToken.address\n    } : {}) : _objectSpread(_objectSpread({}, firstToken ? {\n      [QueryParameters.INPUT]: firstToken.address\n    } : {}), secondToken ? {\n      [QueryParameters.OUTPUT]: secondToken.address\n    } : {}));\n\n    permalink = resolve('https://emblem.finance', `${pathname}?${Object.entries(permalinkParameters).map(([key, value]) => `${key}=${value}`).join('&')}`);\n  }\n\n  const {\n    0: copied,\n    1: setCopied\n  } = useState(false);\n  useEffect(() => {\n    if (copied) {\n      const timeout = setTimeout(() => {\n        setCopied(false);\n      }, 750);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [copied]);\n\n  function copyWithFlag(content) {\n    copy(content);\n    setCopied(true);\n  }\n\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), __jsx(ModalContent, {\n    color: COLOR[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Settings (Build #2021)\")), __jsx(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Dark Mode\"), __jsx(Switch, {\n    isChecked: colorMode === 'dark',\n    onChange: toggleColorMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), __jsx(Stack, {\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Approve Max\"), __jsx(Switch, {\n    isChecked: approveMax,\n    onChange: toggleApproveMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), __jsx(Stack, {\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Deadline\"), __jsx(Stack, {\n    direction: \"column\",\n    spacing: 0,\n    alignItems: \"flex-end\",\n    w: \"50%\",\n    flexShrink: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, __jsx(Slider, {\n    min: 60,\n    max: 60 * 60,\n    step: 60,\n    value: deadline,\n    onChange: setDeadline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(SliderTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), __jsx(SliderFilledTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }), __jsx(SliderThumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  })), __jsx(Stack, {\n    direction: \"row\",\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, deadline !== DEFAULT_DEADLINE && __jsx(Button, {\n    size: \"xs\",\n    onClick: () => {\n      setDeadline(DEFAULT_DEADLINE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Reset\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, deadline / 60, \" \", deadline === 60 ? 'minute' : 'minutes')))), __jsx(Stack, {\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Slippage Tolerance\"), __jsx(Stack, {\n    direction: \"column\",\n    spacing: 0,\n    alignItems: \"flex-end\",\n    w: \"50%\",\n    flexShrink: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, __jsx(Slider, {\n    min: 0,\n    max: 100 * 4,\n    step: 10,\n    value: slippage,\n    onChange: setSlippage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, __jsx(SliderTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), __jsx(SliderFilledTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }), __jsx(SliderThumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), __jsx(Stack, {\n    direction: \"row\",\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, slippage !== DEFAULT_SLIPPAGE && __jsx(Button, {\n    size: \"xs\",\n    onClick: () => {\n      setSlippage(DEFAULT_SLIPPAGE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Reset\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, (slippage / 100).toFixed(slippage === 0 ? 0 : 1), \"%\")))))), __jsx(ModalFooter, {\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, typeof permalink === 'string' && __jsx(Button, {\n    variant: \"link\",\n    isDisabled: copied,\n    color: \"blue.500\",\n    width: \"min-content\",\n    onClick: () => {\n      try {\n        // eslint-disable-next-line\n        ;\n        window.navigator.share({\n          title: 'Emblem Vault',\n          url: permalink\n        }).catch(() => {});\n      } catch {\n        copyWithFlag(permalink);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, copied ? 'Copied' : 'Share Permalink'), __jsx(Link, {\n    href: 'https://github.com/NoahZinsmeister/hypertext',\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Based on Hypertext.\"), __jsx(Link, {\n    href: `https://github.com/EmblemCompany/emblem-vault-site/tree/${process.env.COMMIT_SHA}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, (_process$env$COMMIT_S = process.env.COMMIT_SHA) === null || _process$env$COMMIT_S === void 0 ? void 0 : _process$env$COMMIT_S.slice(0, 7)))));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Settings.tsx"],"names":["useEffect","useState","useRouter","useWeb3React","resolve","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","Text","Stack","Slider","SliderTrack","SliderFilledTrack","SliderThumb","useColorMode","Button","Link","Switch","copy","COLOR","DEFAULT_DEADLINE","DEFAULT_SLIPPAGE","QueryParameters","useBodyKeyDown","useApproveMax","useDeadline","useSlippage","useFirstToken","useSecondToken","Settings","isOpen","onClose","chainId","colorMode","toggleColorMode","pathname","approveMax","toggleApproveMax","deadline","setDeadline","slippage","setSlippage","firstToken","secondToken","permalink","permalinkParameters","CHAIN","OUTPUT","address","INPUT","Object","entries","map","key","value","join","copied","setCopied","timeout","setTimeout","clearTimeout","copyWithFlag","content","toFixed","window","navigator","share","title","url","catch","process","env","COMMIT_SHA","slice"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,KAAxB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,IARF,EASEC,KATF,EAUEC,MAVF,EAWEC,WAXF,EAYEC,iBAZF,EAaEC,WAbF,EAcEC,YAdF,EAeEC,MAfF,EAgBEC,IAhBF,EAiBEC,MAjBF,QAkBO,iBAlBP;AAmBA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,KAAT,EAAgBC,gBAAhB,EAAkCC,gBAAlC,EAAoDC,eAApD,QAA2E,cAA3E;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,WAArC,EAAkDC,aAAlD,EAAiEC,cAAjE,QAAuF,YAAvF;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,EAA8F;AAAA;;AAC3G,QAAM;AAAEC,IAAAA;AAAF,MAAcjC,YAAY,EAAhC;AACA,QAAM;AAAEkC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCpB,YAAY,EAAnD;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAerC,SAAS,EAA9B;AAEAyB,EAAAA,cAAc,CAAC,GAAD,EAAMW,eAAN,CAAd;AAEA,QAAM,CAACE,UAAD,EAAaC,gBAAb,IAAiCb,aAAa,EAApD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bd,WAAW,EAA3C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0Bf,WAAW,EAA3C;AAEA,QAAM,CAACgB,UAAD,IAAef,aAAa,EAAlC;AACA,QAAM,CAACgB,WAAD,IAAgBf,cAAc,EAApC;AAEA,MAAIgB,SAAwB,GAAG,IAA/B;;AAEA,MAAI,OAAOZ,OAAP,KAAmB,QAAnB,KAAgCU,UAAU,IAAIC,WAA9C,MAA+DR,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAnG,CAAJ,EAAiH;AAC/G,UAAMU,mBAAmB;AACvB,OAACvB,eAAe,CAACwB,KAAjB,GAAyBd;AADF,OAEnBG,QAAQ,KAAK,MAAb,mCAEMO,UAAU,GAAG;AAAE,OAACpB,eAAe,CAACyB,MAAjB,GAA0BL,UAAU,CAACM;AAAvC,KAAH,GAAsD,EAFtE,GAGML,WAAW,GAAG;AAAE,OAACrB,eAAe,CAAC2B,KAAjB,GAAyBN,WAAW,CAACK;AAAvC,KAAH,GAAsD,EAHvE,oCAMMN,UAAU,GAAG;AAAE,OAACpB,eAAe,CAAC2B,KAAjB,GAAyBP,UAAU,CAACM;AAAtC,KAAH,GAAqD,EANrE,GAOML,WAAW,GAAG;AAAE,OAACrB,eAAe,CAACyB,MAAjB,GAA0BJ,WAAW,CAACK;AAAxC,KAAH,GAAuD,EAPxE,CAFmB,CAAzB;;AAYAJ,IAAAA,SAAS,GAAG5C,OAAO,CACjB,wBADiB,EAEhB,GAAEmC,QAAS,IAAGe,MAAM,CAACC,OAAP,CAAeN,mBAAf,EACZO,GADY,CACR,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAmB,GAAED,GAAI,IAAGC,KAAM,EAD1B,EAEZC,IAFY,CAEP,GAFO,CAEF,EAJI,CAAnB;AAMD;;AAED,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsB5D,QAAQ,CAAC,KAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4D,MAAJ,EAAY;AACV,YAAME,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAFyB,EAEvB,GAFuB,CAA1B;AAGA,aAAO,MAAY;AACjBG,QAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACF,MAAD,CATM,CAAT;;AAUA,WAASK,YAAT,CAAsBC,OAAtB,EAA6C;AAC3C5C,IAAAA,IAAI,CAAC4C,OAAD,CAAJ;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,SACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAE3B,MAAf;AAAuB,IAAA,OAAO,EAAEC,OAAhC;AAAyC,IAAA,UAAU,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEZ,KAAK,CAACc,SAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,SAAS,KAAK,MAAjC;AAAyC,IAAA,QAAQ,EAAEC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,UAAnB;AAA+B,IAAA,QAAQ,EAAEC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,CAAnC;AAAsC,IAAA,UAAU,EAAC,UAAjD;AAA4D,IAAA,CAAC,EAAC,KAA9D;AAAoE,IAAA,UAAU,EAAE,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAE,EAAb;AAAiB,IAAA,GAAG,EAAE,KAAK,EAA3B;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAyC,IAAA,KAAK,EAAEC,QAAhD;AAA0D,IAAA,QAAQ,EAAEC,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAKlB,gBAAb,IACC,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAE,MAAY;AACnBmB,MAAAA,WAAW,CAACnB,gBAAD,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAWE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,QAAQ,GAAG,EADd,OACmBA,QAAQ,KAAK,EAAb,GAAkB,QAAlB,GAA6B,SADhD,CAXF,CANF,CAFF,CATF,EAkCE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,CAAnC;AAAsC,IAAA,UAAU,EAAC,UAAjD;AAA4D,IAAA,CAAC,EAAC,KAA9D;AAAoE,IAAA,UAAU,EAAE,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAE,CAAb;AAAgB,IAAA,GAAG,EAAE,MAAM,CAA3B;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,KAAK,EAAEE,QAA/C;AAAyD,IAAA,QAAQ,EAAEC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAKnB,gBAAb,IACC,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAE,MAAY;AACnBoB,MAAAA,WAAW,CAACpB,gBAAD,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAWE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,CAACmB,QAAQ,GAAG,GAAZ,EAAiBuB,OAAjB,CAAyBvB,QAAQ,KAAK,CAAb,GAAiB,CAAjB,GAAqB,CAA9C,CAAP,MAXF,CANF,CAFF,CAlCF,CADF,CALF,EAiEE,MAAC,WAAD;AAAa,IAAA,cAAc,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOI,SAAP,KAAqB,QAArB,IACC,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAEY,MAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,OAAO,EAAE,MAAY;AACnB,UAAI;AACF;AACA;AAAEQ,QAAAA,MAAM,CAACC,SAAR,CAA0BC,KAA1B,CAAgC;AAAEC,UAAAA,KAAK,EAAE,cAAT;AAAyBC,UAAAA,GAAG,EAAExB;AAA9B,SAAhC,EAA2EyB,KAA3E,CAAiF,MAAM,CAAE,CAAzF;AACF,OAHD,CAGE,MAAM;AACNR,QAAAA,YAAY,CAACjB,SAAD,CAAZ;AACD;AACF,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGY,MAAM,GAAG,QAAH,GAAc,iBAdvB,CAFJ,EAoBE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE,8CADR;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BApBF,EA6BE,MAAC,IAAD;AACE,IAAA,IAAI,EAAG,2DAA0Dc,OAAO,CAACC,GAAR,CAAYC,UAAW,EAD1F;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMGF,OAAO,CAACC,GAAR,CAAYC,UANf,0DAMG,sBAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,CAAjC,CANH,CA7BF,CAjEF,CAFF,CADF;AA6GD","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { resolve } from 'url'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Text,\n  Stack,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  useColorMode,\n  Button,\n  Link,\n  Switch,\n} from 'chakra-ui/react'\nimport copy from 'copy-to-clipboard'\n\nimport { COLOR, DEFAULT_DEADLINE, DEFAULT_SLIPPAGE, QueryParameters } from '../constants'\nimport { useBodyKeyDown } from '../hooks'\nimport { useApproveMax, useDeadline, useSlippage, useFirstToken, useSecondToken } from '../context'\n\nexport default function Settings({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }): JSX.Element {\n  const { chainId } = useWeb3React()\n  const { colorMode, toggleColorMode } = useColorMode()\n  const { pathname } = useRouter()\n\n  useBodyKeyDown('d', toggleColorMode)\n\n  const [approveMax, toggleApproveMax] = useApproveMax()\n  const [deadline, setDeadline] = useDeadline()\n  const [slippage, setSlippage] = useSlippage()\n\n  const [firstToken] = useFirstToken()\n  const [secondToken] = useSecondToken()\n\n  let permalink: string | null = null\n  \n  if (typeof chainId === 'number' && (firstToken || secondToken) && (pathname === '/buy' || pathname === '/sell')) {\n    const permalinkParameters = {\n      [QueryParameters.CHAIN]: chainId,\n      ...(pathname === '/buy'\n        ? {\n            ...(firstToken ? { [QueryParameters.OUTPUT]: firstToken.address } : {}),\n            ...(secondToken ? { [QueryParameters.INPUT]: secondToken.address } : {}),\n          }\n        : {\n            ...(firstToken ? { [QueryParameters.INPUT]: firstToken.address } : {}),\n            ...(secondToken ? { [QueryParameters.OUTPUT]: secondToken.address } : {}),\n          }),\n    }\n    permalink = resolve(\n      'https://emblem.finance',\n      `${pathname}?${Object.entries(permalinkParameters)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')}`\n    )\n  }\n\n  const [copied, setCopied] = useState(false)\n  useEffect(() => {\n    if (copied) {\n      const timeout = setTimeout(() => {\n        setCopied(false)\n      }, 750)\n      return (): void => {\n        clearTimeout(timeout)\n      }\n    }\n  }, [copied])\n  function copyWithFlag(content: string): void {\n    copy(content)\n    setCopied(true)\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent color={COLOR[colorMode]}>\n        <ModalHeader>\n          <Text>Settings (Build #2021)</Text>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Stack direction=\"column\">\n            <Stack direction=\"row\" justify=\"space-between\">\n              <Text>Dark Mode</Text>\n              <Switch isChecked={colorMode === 'dark'} onChange={toggleColorMode} />\n            </Stack>\n            <Stack direction=\"row\" justify=\"space-between\">\n              <Text>Approve Max</Text>\n              <Switch isChecked={approveMax} onChange={toggleApproveMax} />\n            </Stack>\n            <Stack direction=\"row\" justify=\"space-between\">\n              <Text>Deadline</Text>\n              <Stack direction=\"column\" spacing={0} alignItems=\"flex-end\" w=\"50%\" flexShrink={0}>\n                <Slider min={60} max={60 * 60} step={60} value={deadline} onChange={setDeadline}>\n                  <SliderTrack />\n                  <SliderFilledTrack />\n                  <SliderThumb />\n                </Slider>\n                <Stack direction=\"row\" minHeight=\"1.5rem\">\n                  {deadline !== DEFAULT_DEADLINE && (\n                    <Button\n                      size=\"xs\"\n                      onClick={(): void => {\n                        setDeadline(DEFAULT_DEADLINE)\n                      }}\n                    >\n                      Reset\n                    </Button>\n                  )}\n                  <Text>\n                    {deadline / 60} {deadline === 60 ? 'minute' : 'minutes'}\n                  </Text>\n                </Stack>\n              </Stack>\n            </Stack>\n            <Stack direction=\"row\" justify=\"space-between\">\n              <Text>Slippage Tolerance</Text>\n              <Stack direction=\"column\" spacing={0} alignItems=\"flex-end\" w=\"50%\" flexShrink={0}>\n                <Slider min={0} max={100 * 4} step={10} value={slippage} onChange={setSlippage}>\n                  <SliderTrack />\n                  <SliderFilledTrack />\n                  <SliderThumb />\n                </Slider>\n                <Stack direction=\"row\" minHeight=\"1.5rem\">\n                  {slippage !== DEFAULT_SLIPPAGE && (\n                    <Button\n                      size=\"xs\"\n                      onClick={(): void => {\n                        setSlippage(DEFAULT_SLIPPAGE)\n                      }}\n                    >\n                      Reset\n                    </Button>\n                  )}\n                  <Text>{(slippage / 100).toFixed(slippage === 0 ? 0 : 1)}%</Text>\n                </Stack>\n              </Stack>\n            </Stack>\n          </Stack>\n        </ModalBody>\n        <ModalFooter justifyContent=\"space-between\">\n          {typeof permalink === 'string' && (\n            <Button\n              variant=\"link\"\n              isDisabled={copied}\n              color=\"blue.500\"\n              width=\"min-content\"\n              onClick={(): void => {\n                try {\n                  // eslint-disable-next-line\n                  ;(window.navigator as any).share({ title: 'Emblem Vault', url: permalink }).catch(() => {})\n                } catch {\n                  copyWithFlag(permalink as string)\n                }\n              }}\n            >\n              {copied ? 'Copied' : 'Share Permalink'}\n            </Button>\n          )}\n\n          <Link\n            href={'https://github.com/NoahZinsmeister/hypertext'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            color=\"blue.500\"\n          >\n            Based on Hypertext.\n          </Link>\n\n          <Link\n            href={`https://github.com/EmblemCompany/emblem-vault-site/tree/${process.env.COMMIT_SHA}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            color=\"blue.500\"\n          >\n            {process.env.COMMIT_SHA?.slice(0, 7)}\n          </Link>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}