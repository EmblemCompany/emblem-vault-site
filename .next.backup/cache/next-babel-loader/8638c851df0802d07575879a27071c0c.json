{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Leaderboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, Text, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API, contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nexport default function LeaderBoard() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState = useState([]),\n      vaults = _useState[0],\n      setVaults = _useState[1];\n\n  var _useState2 = useState({\n    loaded: false\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      loadingApi = _useState3[0],\n      setLoadingApi = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingOwners = _useState4[0],\n      setLoadingOwners = _useState4[1];\n\n  var _useState5 = useState(query.address),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState([]),\n      owners = _useState6[0],\n      setOwners = _useState6[1];\n\n  var _useState7 = useState(0),\n      totalSupply = _useState7[0],\n      setTotalSupply = _useState7[1];\n\n  var emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true);\n\n  var getOwners = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var totalSupply;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setState({\n                loaded: true\n              });\n\n              if (loadingOwners) {\n                _context.next = 6;\n                break;\n              }\n\n              setOwners([]);\n              setLoadingOwners(true);\n              _context.next = 7;\n              break;\n\n            case 6:\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return emblemContract.totalSupply();\n\n            case 9:\n              totalSupply = _context.sent;\n              setTotalSupply(totalSupply.toString());\n              console.log(totalSupply);\n              getTokensByIndex(Number(totalSupply.toString()), 0, function () {\n                function compare(a, b) {\n                  if (a.value > b.value) return 1;\n                  if (b.value > a.value) return -1;\n                  return 0;\n                }\n\n                console.log('sorted owners', JSON.stringify(owners), Object.keys(owners));\n                setLoadingOwners(false);\n                saveCache(owners);\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOwners() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getValueForNft = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenId, cb) {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(EMBLEM_API + '/value/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context2.sent;\n              return _context2.abrupt(\"return\", cb(jsonData.value || 0));\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", cb(0));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function getValueForNft(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function getTokensByIndex(_x3, _x4, _x5) {\n    return _getTokensByIndex.apply(this, arguments);\n  }\n\n  function _getTokensByIndex() {\n    _getTokensByIndex = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(count, index, cb) {\n      var tokenId;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return emblemContract.tokenByIndex(index);\n\n            case 2:\n              tokenId = _context3.sent;\n              console.log('tokenId', tokenId.toString(), index);\n              getOwner(tokenId.toString(), function () {\n                if (count - 1 < index + 1) {\n                  return cb();\n                } else {\n                  return getTokensByIndex(count, index + 1, cb);\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getTokensByIndex.apply(this, arguments);\n  }\n\n  function getOwner(_x6, _x7) {\n    return _getOwner.apply(this, arguments);\n  }\n\n  function _getOwner() {\n    _getOwner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tokenId, cb) {\n      var owner;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return emblemContract.ownerOf(tokenId);\n\n            case 2:\n              owner = _context4.sent;\n\n              if (!(owner === '0x0000000000000000000000000000000000000000' || owner.toLowerCase() === '0x5d152dd902cc9198b97e5b6cf5fc23a8e4330180')) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", cb());\n\n            case 5:\n              if (owners.filter(function (item) {\n                return item.owner === owner;\n              }).length < 1) {\n                getValueForNft(tokenId, function (value) {\n                  console.log(\"tokenId Value\", tokenId, value);\n                  owners.push({\n                    address: owner,\n                    value: value,\n                    vaults: [{\n                      tokenId: tokenId,\n                      value: value\n                    }]\n                  });\n                  setOwners(owners);\n                });\n              } else {\n                getValueForNft(tokenId, function (value) {\n                  console.log(\"tokenId Value\", tokenId, value);\n                  owners.filter(function (item) {\n                    return item.owner === owner;\n                  })[0].vaults.push({\n                    address: owner,\n                    tokenId: tokenId.toString(),\n                    value: value\n                  });\n                  owners.filter(function (item) {\n                    return item.owner === owner;\n                  })[0].value = owners.filter(function (item) {\n                    return item.owner === owner;\n                  })[0].value + value;\n                  setOwners(owners);\n                });\n              }\n\n              return _context4.abrupt(\"return\", cb());\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _getOwner.apply(this, arguments);\n  }\n\n  var saveCache = function saveCache(owners) {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_leader', JSON.stringify(owners)); // Save new state for later\n  };\n\n  var _useState8 = useState(chainId),\n      chain = _useState8[0],\n      setChain = _useState8[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getOwners();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    account && chainId ? getOwners() : setState({\n      loaded: true\n    });\n  }, []);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, loadingOwners ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 24\n    }\n  }) : '', __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, owners.map(function (owner, index) {\n    return __jsx(Stack, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      as: \"a\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Address: \", owners[owner].address, \" Vaults: \", owners[owner].vaults.length, \" TVL: \", owners[owner].value));\n  }))));\n}\n\n_s(LeaderBoard, \"9liHV4DBGG94IaDElyFWRA7b+ZU=\", false, function () {\n  return [useRouter, useWeb3React, useContract];\n});\n\n_c = LeaderBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Leaderboard.tsx"],"names":["Flex","Text","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","contractAddresses","useContract","LeaderBoard","query","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","loadingOwners","setLoadingOwners","address","setAddress","owners","setOwners","totalSupply","setTotalSupply","emblemContract","emblemVault","emblemAbi","getOwners","toString","console","log","getTokensByIndex","Number","compare","a","b","value","JSON","stringify","Object","keys","saveCache","getValueForNft","tokenId","cb","fetch","method","headers","service","response","json","jsonData","count","index","tokenByIndex","getOwner","ownerOf","owner","toLowerCase","filter","item","length","push","localStorage","setItem","chain","setChain","map"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { validImage } from '../utils'\nimport { Contract } from '@ethersproject/contracts'\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\n\nexport default function LeaderBoard() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [loadingOwners, setLoadingOwners] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [owners, setOwners] = useState([])\n  const [totalSupply, setTotalSupply] = useState(0)\n\n\n  const emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n\n  const getOwners = async () => {\n    setState({ loaded: true })\n    if (!loadingOwners) {\n      setOwners([])\n      setLoadingOwners(true)\n    } else {\n      return\n    }\n    let totalSupply = await (emblemContract as Contract).totalSupply()\n    setTotalSupply(totalSupply.toString())\n    console.log(totalSupply)\n    getTokensByIndex(Number(totalSupply.toString()), 0, () => {\n      function compare(a, b) {\n        if (a.value > b.value) return 1;\n        if (b.value > a.value) return -1;      \n        return 0;\n      }\n\n      console.log('sorted owners', JSON.stringify(owners), Object.keys(owners))\n      setLoadingOwners(false)\n      saveCache(owners)\n    })\n  }\n\n  const getValueForNft = async (tokenId, cb) =>{\n    try {\n      const response = await fetch(EMBLEM_API + '/value/' + tokenId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n      })\n      const jsonData = await response.json()\n      return cb(jsonData.value || 0)\n    } catch(err){ return cb(0)    }\n  }\n\n  async function getTokensByIndex(count, index, cb) {\n    let tokenId = await (emblemContract as Contract).tokenByIndex(index)\n    console.log('tokenId', tokenId.toString(), index)\n    getOwner(tokenId.toString(), ()=>{\n      if (count - 1 < index + 1) {\n          return cb()\n        } else {\n          return getTokensByIndex(count, index + 1, cb)\n        }\n    })\n  }\n\n  async function getOwner(tokenId, cb) {\n    let owner = await (emblemContract as Contract).ownerOf(tokenId)\n    if (owner === '0x0000000000000000000000000000000000000000' || owner.toLowerCase() === '0x5d152dd902cc9198b97e5b6cf5fc23a8e4330180') {\n      return cb()\n    }\n    if (owners.filter(item=>{return item.owner === owner}).length < 1) {\n      getValueForNft(tokenId, value=>{\n        console.log(\"tokenId Value\", tokenId, value)\n        owners.push({address: owner, value: value, vaults: [{ tokenId: tokenId, value: value}]})\n        setOwners(owners)\n      })\n    } else {\n      getValueForNft(tokenId, value=>{\n        console.log(\"tokenId Value\", tokenId, value)\n        owners.filter(item=>{return item.owner === owner})[0].vaults.push({ address: owner, tokenId: tokenId.toString(), value: value })\n        owners.filter(item=>{return item.owner === owner})[0].value = owners.filter(item=>{return item.owner === owner})[0].value + value\n        setOwners(owners)\n      })\n    }\n    return cb()\n  }\n\n  const saveCache = (owners) => {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_leader', JSON.stringify(owners)) // Save new state for later\n  }\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getOwners()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    account && chainId ? getOwners() : setState({ loaded: true })\n  }, [])\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingOwners ? <Refreshing /> : ''}\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Stack>\n          {owners.map((owner, index) => {\n            return (\n            <Stack key={index}>  \n              <Text as=\"a\" key={index}>Address: {owners[owner].address} Vaults: {owners[owner].vaults.length} TVL: {owners[owner].value}</Text>\n            </Stack>\n            )\n          })}\n        </Stack>        \n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}