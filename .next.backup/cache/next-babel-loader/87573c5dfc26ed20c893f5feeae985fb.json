{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup } from \"@chakra-ui/core\";\nimport Loader from \"react-loader\";\nimport { useWeb3React } from '@web3-react/core';\nimport React from \"react\";\nexport default function Create(props) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabIndex = _React$useState2[0],\n      setTabIndex = _React$useState2[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState3 = React.useState(account || ''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      vaultAddress = _React$useState4[0],\n      setVaultAddress = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Public'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vaultPubPriv = _React$useState6[0],\n      setVaultPubPriv = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      vaultName = _React$useState8[0],\n      setVaultName = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      vaultDesc = _React$useState10[0],\n      setVaultDesc = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      vaultImage = _React$useState12[0],\n      setVaultImage = _React$useState12[1];\n\n  var _React$useState13 = React.useState({\n    loaded: true,\n    checked: false\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      state = _React$useState14[0],\n      setState = _React$useState14[1];\n\n  var handlePrivateRadio = function handlePrivateRadio(e) {\n    console.log(\"Changed Private visibility\", e);\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    alert(\"Vault properties: name is: \".concat(vaultName, \", description is: \").concat(vaultDesc, \", address is: \").concat(vaultAddress, \", Pub/Priv is: \").concat(vaultPubPriv, \", and image data is: \").concat(vaultImage));\n    setState({\n      loaded: false,\n      checked: state.checked\n    });\n    fetch('https://api.emblemvault.io/mint', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        'service': 'kms'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        \"toAddress\": vaultAddress,\n        \"description\": vaultDesc,\n        \"name\": vaultName,\n        \"image\": vaultImage,\n        \"chainId\": chainId\n      })\n    }).then(function (response) {\n      setState({\n        loaded: true,\n        checked: state.checked\n      });\n      location.href = location.origin + \"/vaultlist\"; // console.log(response.json())\n      // return response.json();\n    });\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('img');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Make\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"My\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    value: vaultAddress,\n    onChange: function onChange(e) {\n      return setVaultAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: function onChange(e) {\n      setVaultPubPriv(e.target.value);\n      setState({\n        loaded: state.loaded,\n        checked: e.target.value === \"Private\"\n      });\n      console.log(\"Private\", e.target.value === \"Private\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, __jsx(Radio, {\n    value: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }, \"Do you want people to be able to see the contents?\")), state.checked ? __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  })) : ''), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Next\")))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    value: vaultName,\n    onChange: function onChange(e) {\n      return setVaultName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }, \"Give it some love so you can find it later.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    value: vaultDesc,\n    onChange: function onChange(e) {\n      return setVaultDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, \"Want to add some fluffy text to tell people what the point is?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"Next\"))))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, \"Vault Image\"), __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: function onChange() {\n      return previewFile();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 27\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 79\n    }\n  }), __jsx(\"img\", {\n    src: \"\",\n    width: \"200\",\n    alt: \"Image preview...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 27\n    }\n  })))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, \"DO IT!\"))))))))));\n}\n\n_s(Create, \"bCr6jn+eE6+2e8xs0hEW4/bOahk=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx"],"names":["FormControl","FormLabel","FormHelperText","Input","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","RadioGroup","Radio","Textarea","Button","ButtonGroup","Loader","useWeb3React","React","Create","props","useState","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","loaded","checked","state","setState","handlePrivateRadio","e","console","log","handleSubmit","evt","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","response","location","href","origin","previewFile","preview","document","querySelector","inputelement","reader","FileReader","addEventListener","src","result","toString","files","readAsDataURL","index","target","value"],"mappings":"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","sourcesContent":["import {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Input,\n    Stack,\n    Tabs, \n    TabList, \n    TabPanels, \n    Tab, \n    TabPanel,\n    Box,\n    Flex,\n    RadioGroup,\n    Radio,\n    Textarea,\n    Button,\n    ButtonGroup\n  } from \"@chakra-ui/core\";\n  \n  import Loader from \"react-loader\"\n  import { useWeb3React } from '@web3-react/core'\n  import React, { useState } from \"react\";\n  \n  export default function Create(props: any) {\n  \n    const [tabIndex, setTabIndex] = React.useState(0)\n    const { account, chainId } = useWeb3React()\n  \n    const [vaultAddress, setVaultAddress] = React.useState(account || '');\n    const [vaultPubPriv, setVaultPubPriv] = React.useState('Public');\n    const [vaultName, setVaultName] = React.useState('');\n    const [vaultDesc, setVaultDesc] = React.useState('');\n    const [vaultImage, setVaultImage] = React.useState('');\n    const [state, setState] = React.useState({loaded: true, checked: false})\n    \n    const handlePrivateRadio = (e)=>{\n      console.log(\"Changed Private visibility\", e)\n    }\n    const handleSubmit = (evt: { preventDefault: () => void; }) => {\n      evt.preventDefault();\n      alert(`Vault properties: name is: ${vaultName}, description is: ${vaultDesc}, address is: ${vaultAddress}, Pub/Priv is: ${vaultPubPriv}, and image data is: ${vaultImage}`)\n      setState({loaded: false, checked: state.checked})\n      fetch('https://api.emblemvault.io/mint', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n          'Content-Type': 'application/json',\n          'service': 'kms'\n        },\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(\n          {\"toAddress\": vaultAddress,\n          \"description\":vaultDesc,\n          \"name\":vaultName,\n          \"image\":vaultImage,\n          \"chainId\":chainId}\n        )\n      }).then(function(response) {\n        setState({loaded: true, checked: state.checked})\n        location.href = location.origin + \"/vaultlist\"\n        // console.log(response.json())\n        // return response.json();\n      });\n    }\n  \n    function previewFile() {\n      const preview = document.querySelector('img');\n      const inputelement = (document.querySelector('input[type=file]') as HTMLInputElement); //.files[0];\n      const reader = new FileReader();\n    \n      reader.addEventListener(\"load\", function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || '';\n        if (preview) setVaultImage(preview.src)\n      }, false);\n    \n      if (inputelement.files) {\n        reader.readAsDataURL(inputelement.files[0]);\n      }\n    }\n  \n    return (\n      <Loader loaded={state.loaded}>\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Make</Tab>\n              <Tab>My</Tab>\n              <Tab>Vault</Tab>\n            </TabList>\n  \n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"owner-address\">Vault Owner Address</FormLabel>\n                      <Input \n                        type=\"text\" \n                        id=\"owner-address\" \n                        aria-describedby=\"owner-helper-text\" \n                        placeholder=\"0xdeadbeef\"\n                        value={vaultAddress}\n                        onChange={e => setVaultAddress(e.target.value)}\n                        />\n                      <FormHelperText id=\"owner-helper-text\">\n                        What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n  \n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl as=\"fieldset\" isRequired>\n                      <FormLabel as=\"legend\">Public or Private?</FormLabel>\n                      <RadioGroup id=\"pubpriv\" defaultValue=\"Public\" onChange = {e => { \n                          setVaultPubPriv(e.target.value); \n                          setState({loaded: state.loaded, checked: e.target.value === \"Private\"})\n                          console.log(\"Private\", e.target.value === \"Private\")\n                        }}>\n                        <Radio value=\"Public\">Public</Radio>\n                        <Radio value=\"Private\">Private</Radio>\n                      </RadioGroup>\n                      <FormHelperText id=\"email-helper-text\">\n                        Do you want people to be able to see the contents?\n                      </FormHelperText>\n                    </FormControl>\n                    {state.checked ? \n                    <FormControl>\n                      <FormLabel as=\"legend\">Password</FormLabel>\n                      <Input \n                        type=\"password\" \n                        id=\"owner-address\" \n                        aria-describedby=\"owner-helper-text\"/>\n                    </FormControl> : ''}\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <Button onClick={() => setTabIndex(1)} >Next</Button>\n                  </Stack>\n                  </Stack>\n              </TabPanel>\n  \n                  <TabPanel>\n                  <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-name\">Vault Name</FormLabel>\n                      <Input \n                        type=\"text\" \n                        id=\"vault-name\" \n                        aria-describedby=\"vault-name-text\"\n                        value={vaultName}\n                        onChange={e => setVaultName(e.target.value)} \n                      />\n                      <FormHelperText id=\"vault-name-text\">\n                        Give it some love so you can find it later.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-desc\">Vault Description</FormLabel>\n                      <Textarea \n                        id=\"vault-desc\" \n                        size=\"lg\" \n                        aria-describedby=\"vault-desc-text\" \n                        value={vaultDesc}\n                        onChange={e => setVaultDesc(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-desc-text\">\n                        Want to add some fluffy text to tell people what the point is?\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(0)} >Back</Button>\n                      <Button onClick={() => setTabIndex(2)} >Next</Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n  \n              <TabPanel>\n                  <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren >\n                      <FormControl>\n                        <FormLabel htmlFor=\"vault-img\">Vault Image</FormLabel>\n                        <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                          <input type=\"file\" onChange={() => previewFile()} /><br/>\n                          <img src=\"\" width=\"200\" alt=\"Image preview...\"></img>\n                        </Box>\n                      </FormControl>\n                    </Stack>\n  \n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                      <ButtonGroup spacing={4}>\n                        <Button onClick={() => setTabIndex(1)} >Back</Button>\n                        <Button onClick={handleSubmit} type=\"submit\">DO IT!</Button>\n                      </ButtonGroup>\n                    </Stack>\n                  </Stack>\n                </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      </Loader>\n    )\n  }"]},"metadata":{},"sourceType":"module"}