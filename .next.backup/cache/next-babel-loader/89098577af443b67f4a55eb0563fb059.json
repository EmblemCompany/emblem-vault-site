{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Text, Flex } from '@chakra-ui/core';\nexport var Attributes = /*#__PURE__*/function (_Component) {\n  _inherits(Attributes, _Component);\n\n  var _super = _createSuper(Attributes);\n\n  function Attributes() {\n    _classCallCheck(this, Attributes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Attributes, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colorMode = this.props.colorMode;\n      var attributes = this.props.attributes;\n      return __jsx(Flex, {\n        w: \"100%\",\n        flexWrap: \"wrap\",\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, attributes.map(function (attribute, index) {\n        return __jsx(Box, {\n          mt: \"2px\",\n          p: 1,\n          ml: \"3px\",\n          minWidth: \"45%\"\n          /*maxWidth=\"50%\"*/\n          ,\n          width: \"48%\",\n          className: \"NFT newest coin-balance-content\",\n          key: 0,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, __jsx(Text, {\n          ml: 2,\n          mr: Number.isInteger(index / 2) ? 2 : 0,\n          fontSize: \".9em\",\n          textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n          fontWeight: \"bold\",\n          overflow: \"hidden\",\n          isTruncated: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, attribute.trait_type), __jsx(Text, {\n          ml: 2,\n          fontSize: \".7em\",\n          textAlign: Number.isInteger(index / 2) ? \"left\" : \"right\",\n          color: _this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, attribute.value));\n      })) // <Flex w=\"100%\" justify=\"center\" >\n      // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n      // <HStack>\n      //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n      //   {\n      //     attributes.map(attribute=>{\n      //       return (\n      //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n      //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n      //           </Box>\n      //         </Box>\n      //       )\n      //     })\n      //   }\n      //   </Flex>\n      // </HStack>\n      // </VStack>\n      // </Flex>\n      ;\n    }\n  }]);\n\n  return Attributes;\n}(Component);\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Text","Flex","Attributes","colorMode","props","attributes","map","attribute","index","Number","isInteger","trait_type","value"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAGEC,IAHF,EAOEC,IAPF,QASO,iBATP;AAkBA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AAAA;;AACP,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,UAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,aACE,MAAC,IAAD;AAAM,QAAA,CAAC,EAAC,MAAR;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,UAAU,CAACC,GAAX,CAAe,UAACC,SAAD,EAAYC,KAAZ,EAAoB;AACjC,eACE,MAAC,GAAD;AAAK,UAAA,EAAE,EAAC,KAAR;AAAc,UAAA,CAAC,EAAE,CAAjB;AAAoB,UAAA,EAAE,EAAC,KAAvB;AAA6B,UAAA,QAAQ,EAAC;AAAM;AAA5C;AAA+D,UAAA,KAAK,EAAC,KAArE;AAA2E,UAAA,SAAS,EAAC,iCAArF;AAAuH,UAAA,GAAG,EAAE,CAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAa,UAAA,EAAE,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,CAA5B,GAA+B,CAAhD;AAAmD,UAAA,QAAQ,EAAC,MAA5D;AAAmE,UAAA,SAAS,EAAEC,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,MAA5B,GAAoC,OAAlH;AAA2H,UAAA,UAAU,EAAC,MAAtI;AAA6I,UAAA,QAAQ,EAAC,QAAtJ;AAA+J,UAAA,WAAW,EAAE,IAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoLD,SAAS,CAACI,UAA9L,CADF,EAEE,MAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAa,UAAA,QAAQ,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAEF,MAAM,CAACC,SAAP,CAAiBF,KAAK,GAAC,CAAvB,IAA4B,MAA5B,GAAoC,OAA5E;AAAqF,UAAA,KAAK,EAAE,KAAI,CAACJ,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoJI,SAAS,CAACK,KAA9J,CAFF,CADF;AAMD,OAPD,CAFJ,CADF,CAaE;AAEM;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEN;AAlCF;AAoCD;AAxCH;;AAAA;AAAA,EAAgCd,SAAhC;AA2CA,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n        {\n          attributes.map((attribute, index)=>{\n            return (\n              <Box mt=\"2px\" p={1} ml=\"3px\" minWidth=\"45%\" /*maxWidth=\"50%\"*/ width=\"48%\" className=\"NFT newest coin-balance-content\" key={0}  >\n                <Text ml={2} mr={Number.isInteger(index/2) ? 2: 0} fontSize=\".9em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} fontWeight=\"bold\" overflow=\"hidden\" isTruncated={true} >{attribute.trait_type}</Text>\n                <Text ml={2} fontSize=\".7em\" textAlign={Number.isInteger(index/2) ? \"left\": \"right\"} color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              </Box>\n            )\n          })\n        }\n      </Flex>\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n              // <HStack>\n              //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n              //   {\n              //     attributes.map(attribute=>{\n              //       return (\n              //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n              //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              //           </Box>\n              //         </Box>\n              //       )\n              //     })\n              //   }\n              //   </Flex>\n              // </HStack>\n            // </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}