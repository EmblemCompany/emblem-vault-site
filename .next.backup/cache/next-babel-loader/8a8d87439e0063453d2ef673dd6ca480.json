{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { abi as HandlerABI } from './abi/handler.json';\nimport { abi as SalesABI } from './abi/sales.json';\nimport { abi as CovalABI } from './abi/coval.json';\nimport { abi as EmblemABI } from './abi/emblem.json';\nimport { abi as NftradeABI } from './abi/nftrade.json';\nimport { abi as ClaimedABI } from './abi/claimed.json';\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json';\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json';\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json';\nimport { abi as ERC721 } from './abi/EmblemVault.json';\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json';\nimport xcpJson from './curated/xcp.json';\nexport var BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nexport var COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nexport var isIPFS = process.env.IPFS === 'true';\nexport var isServerSide = false;\nvar API_OVERLOAD = process.env.API_OVERLOAD;\nexport var ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport var DEFAULT_APPROVE_MAX = true;\nexport var DEFAULT_DEADLINE = 60 * 20;\nexport var DEFAULT_SLIPPAGE = 50;\nexport var GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nexport var ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nexport var PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nexport var ZERO = JSBI.BigInt(0);\nexport var MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport var curatedContracts = [{\n  name: \"Rare Pepe\",\n  1: \"0x7E6027a6A84fC1F6Db6782c523EFe62c923e46ff\",\n  \"chain\": \"xcp\"\n}, {\n  name: \"Emblem Test\",\n  1: \"0xdcFfa2b5cBf288932B009EBA01C8ca772ec6C993\",\n  \"chain\": \"xcp\"\n}, {\n  name: \"Spells of Genesis\",\n  1: \"0xDCA91409018ea80B71d21E818f00e76072969861\",\n  chain: \"xcp\"\n}];\nexport var curatedAssets = {\n  xcp: xcpJson\n};\nexport var contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    // 1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    1: '0xD0C7304156AF0a4be17352D8ce214222Ec66E8ba',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    5: '0x0349E72c3BFc6232B12FD546a9f9CD1851dD5bDD',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0xedb9e7d618dddc081bd56014ea3842c67628b015',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7D1F932B4c2811A70eDfFDD6Ae2EB60e6',\n    5: '0x44aA2ae6a29A1434942EB88cB2eD0Fd1De30de83',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xb8D6eB76dABea5b238e999B3145775E54412B2D2',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1',\n    5: '0x1342F91DC53B6D222614Ad1f981b5683d4653116'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    1: \"0xF314Fa957255AD6Ba189A641e6086C81385040fb\",\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    5: '0xc15235d210c1b1CdA8643a5eA37687E241B031b0',\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135'\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155\n};\nexport var BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180';\nexport var ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport var EMBLEM_API = API_OVERLOAD ? API_OVERLOAD : 'http://localhost:3001'; //'https://api2.emblemvault.io' // 'https://api2.emblemvault.io' //\n\nexport var SIG_API = 'https://tor-us-signer-coval.vercel.app'; //'http://localhost:3002' //'https://tor-us-signer-coval.vercel.app'\n\nexport var QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nexport var ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/constants.ts"],"names":["JSBI","abi","HandlerABI","SalesABI","CovalABI","EmblemABI","NftradeABI","ClaimedABI","VaultHandlerV8","ClonableFactory","ERC20","ERC721","ERC1155","xcpJson","BG","light","dark","COLOR","isIPFS","process","env","IPFS","isServerSide","API_OVERLOAD","ADDRESS_ZERO","DEFAULT_APPROVE_MAX","DEFAULT_DEADLINE","DEFAULT_SLIPPAGE","GAS_LIMIT_WHEN_MOCKING","ROUTER_ADDRESS","PERMIT_AND_CALL_ADDRESS","ZERO","BigInt","MAX_UINT256","curatedContracts","name","chain","curatedAssets","xcp","contractAddresses","salesFactory","salesAbi","vaultHandler","vaultHandlerAbi","emblemVault","emblemAbi","coval","covalAbi","nftrade","nftradeAbi","claimed","claimedAbi","vaultHandlerV8","vaultHandlerV8Abi","clonableFactoryAbi","erc20Abi","erc721Abi","erc1155Abi","BURN_ADDRESS","ZERO_ADDRESS","EMBLEM_API","SIG_API","QueryParameters","ERC20_BYTES32","constant","inputs","outputs","internalType","type","payable","stateMutability"],"mappings":"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","sourcesContent":["import { JSBI } from '@uniswap/sdk'\nimport { abi as HandlerABI } from './abi/handler.json'\nimport { abi as SalesABI } from './abi/sales.json'\nimport { abi as CovalABI } from './abi/coval.json'\nimport { abi as EmblemABI } from './abi/emblem.json'\nimport { abi as NftradeABI } from './abi/nftrade.json'\nimport { abi as ClaimedABI } from './abi/claimed.json'\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json'\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json'\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json'\nimport { abi as ERC721 } from './abi/EmblemVault.json'\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json'\nimport xcpJson from './curated/xcp.json'\n\nexport const BG = { light: 'gray.50', dark: 'gray.900' }\nexport const COLOR = { light: 'black', dark: 'white' }\n\nexport const isIPFS = process.env.IPFS === 'true'\nexport const isServerSide = typeof window === 'undefined'\nconst { API_OVERLOAD } = process.env;\n\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n\nexport const DEFAULT_APPROVE_MAX = true\nexport const DEFAULT_DEADLINE = 60 * 20\nexport const DEFAULT_SLIPPAGE = 50\n\nexport const GAS_LIMIT_WHEN_MOCKING = 500000\n\n// https://uniswap.org/docs/v2/smart-contracts/router02/\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n// https://github.com/NoahZinsmeister/permit-and-call\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B'\nexport const ZERO = JSBI.BigInt(0)\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport const curatedContracts = [\n  {\n    name: \"Rare Pepe\",\n    1: \"0x7E6027a6A84fC1F6Db6782c523EFe62c923e46ff\",\n    \"chain\": \"xcp\"\n  },\n  {\n    name: \"Emblem Test\",\n    1: \"0xdcFfa2b5cBf288932B009EBA01C8ca772ec6C993\",\n    \"chain\": \"xcp\"\n  },\n  {\n    name: \"Spells of Genesis\",\n    1: \"0xDCA91409018ea80B71d21E818f00e76072969861\",\n    chain: \"xcp\"\n  },\n]\nexport const curatedAssets = {\n  xcp: xcpJson\n}\nexport const contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    // 1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    1: '0xD0C7304156AF0a4be17352D8ce214222Ec66E8ba',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    5: '0x0349E72c3BFc6232B12FD546a9f9CD1851dD5bDD',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0xedb9e7d618dddc081bd56014ea3842c67628b015',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20',\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164',\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7D1F932B4c2811A70eDfFDD6Ae2EB60e6',\n    5: '0x44aA2ae6a29A1434942EB88cB2eD0Fd1De30de83',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xb8D6eB76dABea5b238e999B3145775E54412B2D2',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1',\n    5: '0x1342F91DC53B6D222614Ad1f981b5683d4653116'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    1: \"0xF314Fa957255AD6Ba189A641e6086C81385040fb\",\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    5: '0xc15235d210c1b1CdA8643a5eA37687E241B031b0',\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135',\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155\n}\n\nexport const BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180'\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\"\nexport const EMBLEM_API = API_OVERLOAD? API_OVERLOAD : 'http://localhost:3001' //'https://api2.emblemvault.io' // 'https://api2.emblemvault.io' //\nexport const SIG_API = 'https://tor-us-signer-coval.vercel.app' //'http://localhost:3002' //'https://tor-us-signer-coval.vercel.app'\n\nexport enum QueryParameters {\n  INPUT = 'input',\n  OUTPUT = 'output',\n  CHAIN = 'chain',\n}\n\nexport const ERC20_BYTES32 = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n]\n"]},"metadata":{},"sourceType":"module"}