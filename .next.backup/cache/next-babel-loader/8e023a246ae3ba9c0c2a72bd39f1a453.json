{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { overlayEditor } from 'doka';\nimport { sub, unsub } from './events';\n\nclass DokaImageEditorOverlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.elementRef = /*#__PURE__*/React.createRef();\n    this.editor = undefined;\n  }\n\n  componentDidMount() {\n    if (!this.elementRef.current) return;\n\n    const props = _objectSpread({}, this.props);\n\n    this.editor = overlayEditor(this.elementRef.current, props);\n    sub(this, props);\n  }\n\n  componentDidUpdate() {\n    const props = _objectSpread({}, this.props);\n\n    Object.assign(this.editor, props);\n    sub(this, props);\n  }\n\n  componentWillUnmount() {\n    if (!this.editor) return;\n    unsub(this);\n    this.editor.destroy();\n    this.editor = undefined;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement('div', {\n      className: `DokaRootWrapper ${this.props.className}`.trim(),\n      ref: this.elementRef\n    });\n  }\n\n}\n\nexport default DokaImageEditorOverlay;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/node_modules/react-doka/DokaImageEditorOverlay.js"],"names":["React","overlayEditor","sub","unsub","DokaImageEditorOverlay","Component","constructor","props","elementRef","createRef","editor","undefined","componentDidMount","current","componentDidUpdate","Object","assign","componentWillUnmount","destroy","render","createElement","className","trim","ref"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,MAA9B;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,UAA3B;;AAEA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,UAAL,gBAAkBR,KAAK,CAACS,SAAN,EAAlB;AACA,SAAKC,MAAL,GAAcC,SAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKJ,UAAL,CAAgBK,OAArB,EAA8B;;AAC9B,UAAMN,KAAK,qBAAQ,KAAKA,KAAb,CAAX;;AACA,SAAKG,MAAL,GAAcT,aAAa,CAAC,KAAKO,UAAL,CAAgBK,OAAjB,EAA0BN,KAA1B,CAA3B;AACAL,IAAAA,GAAG,CAAC,IAAD,EAAOK,KAAP,CAAH;AACH;;AAEDO,EAAAA,kBAAkB,GAAG;AACjB,UAAMP,KAAK,qBAAQ,KAAKA,KAAb,CAAX;;AACAQ,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKN,MAAnB,EAA2BH,KAA3B;AACAL,IAAAA,GAAG,CAAC,IAAD,EAAOK,KAAP,CAAH;AACH;;AAEDU,EAAAA,oBAAoB,GAAG;AACnB,QAAI,CAAC,KAAKP,MAAV,EAAkB;AAClBP,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,SAAKO,MAAL,CAAYQ,OAAZ;AACA,SAAKR,MAAL,GAAcC,SAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBAAOnB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAC9BC,MAAAA,SAAS,EAAG,mBAAkB,KAAKd,KAAL,CAAWc,SAAU,EAAxC,CAA0CC,IAA1C,EADmB;AAE9BC,MAAAA,GAAG,EAAE,KAAKf;AAFoB,KAA3B,CAAP;AAIH;;AAhCgD;;AAmCrD,eAAeJ,sBAAf","sourcesContent":["import React from 'react';\n\nimport { overlayEditor } from 'doka';\nimport { sub, unsub } from './events';\n\nclass DokaImageEditorOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.elementRef = React.createRef();\n        this.editor = undefined;\n    }\n\n    componentDidMount() {\n        if (!this.elementRef.current) return;\n        const props = { ...this.props };\n        this.editor = overlayEditor(this.elementRef.current, props);\n        sub(this, props);\n    }\n\n    componentDidUpdate() {\n        const props = { ...this.props };\n        Object.assign(this.editor, props);\n        sub(this, props);\n    }\n\n    componentWillUnmount() {\n        if (!this.editor) return;\n        unsub(this);\n        this.editor.destroy();\n        this.editor = undefined;\n    }\n\n    render() {\n        return React.createElement('div', {\n            className: `DokaRootWrapper ${this.props.className}`.trim(),\n            ref: this.elementRef,\n        });\n    }\n}\n\nexport default DokaImageEditorOverlay;\n"]},"metadata":{},"sourceType":"module"}