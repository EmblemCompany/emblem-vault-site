{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Image, Text, Stack, Button, ButtonGroup, Input, Link, Alert, AlertIcon, useDisclosure, Tooltip, Collapse, FormLabel, Select } from '@chakra-ui/core';\nimport Head from \"next/head\";\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Refreshing from './Refreshing';\nimport Loader from 'react-loader';\nimport dynamic from 'next/dynamic';\nimport { isETHAddress, validImage } from '../utils';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nimport Tilt from 'react-tilt';\nimport CryptoJS from 'crypto-js';\nimport { addTokenToWallet } from '../public/web3';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nvar AddrModal = dynamic(_c = function _c() {\n  return import('./AddrModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./AddrModal')];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = dynamic(_c3 = function _c3() {\n  return import('./KeysModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./KeysModal')];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nexport default function Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = useState(query.key),\n      mintPassword = _useState2[0],\n      setMintPassword = _useState2[1];\n\n  var _useState3 = useState(query.id),\n      tokenId = _useState3[0],\n      setTokenId = _useState3[1];\n\n  var _useState4 = useState(query.experimental),\n      experimental = _useState4[0],\n      setExperimental = _useState4[1];\n\n  var _useState5 = useState([]),\n      vaults = _useState5[0],\n      setVaults = _useState5[1];\n\n  var _useState6 = useState(''),\n      vaultName = _useState6[0],\n      setVaultName = _useState6[1];\n\n  var _useState7 = useState(''),\n      vaultDesc = _useState7[0],\n      setVaultDesc = _useState7[1];\n\n  var _useState8 = useState(''),\n      vaultImage = _useState8[0],\n      setVaultImage = _useState8[1];\n\n  var _useState9 = useState([]),\n      vaultValues = _useState9[0],\n      setVaultValues = _useState9[1];\n\n  var _useState10 = useState([]),\n      vaultDataValues = _useState10[0],\n      setVaultDataValues = _useState10[1];\n\n  var _useState11 = useState([]),\n      vaultAddresses = _useState11[0],\n      setVaultAddresses = _useState11[1];\n\n  var _useState12 = useState(false),\n      vaultPrivacy = _useState12[0],\n      setVaultPrivacy = _useState12[1];\n\n  var _useState13 = useState(0),\n      vaultTotalValue = _useState13[0],\n      setVaultTotalValue = _useState13[1];\n\n  var _useState14 = useState(null),\n      vaultChainId = _useState14[0],\n      setVaultChainId = _useState14[1];\n\n  var _useState15 = useState(null),\n      hash = _useState15[0],\n      setHash = _useState15[1];\n\n  var _useState16 = useState(''),\n      currCoin = _useState16[0],\n      setCurrCoin = _useState16[1];\n\n  var _useState17 = useState(''),\n      currAddr = _useState17[0],\n      setCurrAddr = _useState17[1];\n\n  var _useState18 = useState({\n    loaded: false\n  }),\n      state = _useState18[0],\n      setState = _useState18[1];\n\n  var _useState19 = useState(false),\n      mine = _useState19[0],\n      setMine = _useState19[1];\n\n  var _useState20 = useState(false),\n      claiming = _useState20[0],\n      setClaiming = _useState20[1];\n\n  var _useState21 = useState('claimed'),\n      status = _useState21[0],\n      setStatus = _useState21[1];\n\n  var _useState22 = useState(null),\n      claimedBy = _useState22[0],\n      setClaimedBy = _useState22[1];\n\n  var _useState23 = useState(''),\n      mnemonic = _useState23[0],\n      setMnemonic = _useState23[1];\n\n  var _useState24 = useState(''),\n      privKeyBTC = _useState24[0],\n      setPrivKeyBTC = _useState24[1];\n\n  var _useState25 = useState(''),\n      privKeyETH = _useState25[0],\n      setPrivKeyETH = _useState25[1];\n\n  var _useState26 = useState([]),\n      privValues = _useState26[0],\n      setKeyValues = _useState26[1];\n\n  var _useState27 = useState(false),\n      loadingApi = _useState27[0],\n      setLoadingApi = _useState27[1];\n\n  var _useState28 = useState(''),\n      decryptedEffect = _useState28[0],\n      setDecryptedEffect = _useState28[1];\n\n  var _useState29 = useState(false),\n      decryptedEffectRunning = _useState29[0],\n      setDecryptedEffectRunning = _useState29[1];\n\n  var _useState30 = useState(''),\n      decryptPassword = _useState30[0],\n      setDecryptPassword = _useState30[1];\n\n  var _useState31 = useState(false),\n      invalidVault = _useState31[0],\n      setInvalidVault = _useState31[1];\n\n  var _useState32 = useState(false),\n      hasCheckedNft = _useState32[0],\n      setHasCheckedNft = _useState32[1];\n\n  var _useState33 = useState(false),\n      accepting = _useState33[0],\n      setAccepting = _useState33[1];\n\n  var _useState34 = useState(false),\n      approving = _useState34[0],\n      setApproving = _useState34[1];\n\n  var _useState35 = useState(false),\n      acceptable = _useState35[0],\n      setAcceptable = _useState35[1];\n\n  var _useState36 = useState(''),\n      transferPassword = _useState36[0],\n      setTransferPassword = _useState36[1];\n\n  var _useState37 = useState(false),\n      showTransferPassword = _useState37[0],\n      setShowTransferPassword = _useState37[1];\n\n  var _useState38 = useState(false),\n      preTransfering = _useState38[0],\n      setPreTransfering = _useState38[1];\n\n  var _useState39 = useState(null),\n      transferToAddress = _useState39[0],\n      setTransferToAddress = _useState39[1];\n\n  var _useState40 = useState(false),\n      transfering = _useState40[0],\n      setTransfering = _useState40[1];\n\n  var _useState41 = useState([]),\n      offers = _useState41[0],\n      setOffers = _useState41[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true);\n  var emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true);\n\n  var _useDisclosure = useDisclosure(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = useDisclosure(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = useDisclosure(),\n      isOpen = _useDisclosure3.isOpen,\n      onToggle = _useDisclosure3.onToggle;\n\n  var _useDisclosure4 = useDisclosure(),\n      isOffersOpen = _useDisclosure4.isOpen,\n      onOffersToggle = _useDisclosure4.onToggle;\n\n  var transferImage;\n\n  var acceptOffer = function acceptOffer(index) {\n    ;\n    handlerContract.acceptOffer(tokenId, index).then(function (_ref) {\n      var hash = _ref.hash;\n      setHash(hash);\n    });\n  };\n\n  var rejectOffer = function rejectOffer(index) {\n    ;\n    handlerContract.rejectOffer(tokenId, index).then(function (_ref2) {\n      var hash = _ref2.hash;\n      setHash(hash);\n    });\n  };\n\n  var withdrawOffer = function withdrawOffer(index) {\n    ;\n    handlerContract.withdrawOffer(tokenId, index).then(function (_ref3) {\n      var hash = _ref3.hash;\n      setHash(hash);\n    });\n  };\n\n  var getOffers = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenId) {\n      var _offers, offerCount, getOffer, _getOffer;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _getOffer = function _getOffer3() {\n                _getOffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(index, cb) {\n                  var offer;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          console.log(\"Getting offer index\", index);\n                          _context.next = 3;\n                          return handlerContract.getOffer(tokenId, index);\n\n                        case 3:\n                          offer = _context.sent;\n\n                          if (parseInt(offer.tokenId) !== 0) {\n                            _offers.push({\n                              index: index,\n                              tokenId: parseInt(offer.tokenId),\n                              from: offer._from\n                            });\n                          }\n\n                          if (!(index + 1 === offerCount)) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", cb());\n\n                        case 9:\n                          return _context.abrupt(\"return\", getOffer(index + 1, cb));\n\n                        case 10:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return _getOffer.apply(this, arguments);\n              };\n\n              getOffer = function _getOffer2(_x2, _x3) {\n                return _getOffer.apply(this, arguments);\n              };\n\n              if (!(offers.length > 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              _offers = [];\n              _context2.t0 = parseInt;\n              _context2.next = 8;\n              return handlerContract.getOfferCount(tokenId);\n\n            case 8:\n              _context2.t1 = _context2.sent;\n              offerCount = (0, _context2.t0)(_context2.t1);\n              console.log(\"Offer Count\", offerCount);\n              _context2.next = 13;\n              return getOffer(0, function () {\n                _offers.length > 0 ? setOffers(_offers) : null;\n                console.log(\"Done getting offers\", _offers);\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getOffers(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var transferVault = function transferVault() {\n    setTransfering(true);\n    emblemContract.transferFrom(account, transferToAddress, tokenId).then(function (_ref5) {\n      var hash = _ref5.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {});\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref6) {\n        var hash = _ref6.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref7) {\n      var hash = _ref7.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error === null || error === void 0 ? void 0 : error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(contractAddresses.vaultHandler[chainId], true).then(function (_ref8) {\n      var hash = _ref8.hash;\n      setTimeout(function () {\n        setHash(hash); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  }; // \n\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(EMBLEM_API + '/vaults/' + account + (experimental ? '?experimental=true' : ''), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainId: chainId.toString()\n                }\n              });\n\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context3.sent;\n              setState({\n                loaded: true\n              });\n              setVaults(jsonData);\n              setLoadingApi(false);\n              console.log(\"Vaults\", jsonData);\n              _context3.next = 15;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 13]]);\n    }));\n\n    return function getVaults() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              loadCache();\n              _context4.next = 3;\n              return fetch(EMBLEM_API + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context4.sent;\n              _context4.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context4.sent;\n              getVaults(); // console.log('vault response was ', jsonData)\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                setStates(jsonData);\n                saveCache(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getVault() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(cb) {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(EMBLEM_API + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context5.sent;\n              _context5.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context5.sent;\n\n              if (!jsonData.signature) {\n                _context5.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context5.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context5.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getWitness(_x4) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    setVaultValues(vaultValues.concat(jsonData.values));\n    setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    }));\n    setVaultDesc(jsonData.description);\n    setVaultAddresses(jsonData.addresses);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n    setTimeout(function () {\n      !isPvt ? getNftBalance(jsonData.values, jsonData.addresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (_values) {\n        // console.log(\"Have new values\", _values)\n        setVaultValues(_values);\n      }) : null;\n    }, 5);\n  };\n\n  var getEthBalances = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(address, cb) {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(EMBLEM_API + '/eth/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context6.sent;\n              _context6.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context6.sent;\n              // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n              setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue)); // console.log('get eth balances', jsonData.values)\n\n              return _context6.abrupt(\"return\", cb(jsonData.values));\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getEthBalances(_x5, _x6) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getBtcBalance = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(values, address, cb) {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return fetch(EMBLEM_API + '/btc/balance/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context7.sent;\n              _context7.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context7.sent;\n              return _context7.abrupt(\"return\", cb(values.concat(jsonData.values)));\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getBtcBalance(_x7, _x8, _x9) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var getNftBalance = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(values, address, cb) {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return fetch(EMBLEM_API + '/eth/nft/' + address, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context8.sent;\n              _context8.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context8.sent;\n\n              if (!(jsonData.length > 0)) {\n                _context8.next = 10;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(values.concat(jsonData)));\n\n            case 10:\n              return _context8.abrupt(\"return\", cb(values));\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getNftBalance(_x10, _x11, _x12) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var loadCache = function loadCache() {\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  };\n\n  var getKeys = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context9.next = 7;\n              return fetch(EMBLEM_API + '/verify/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context9.sent;\n              _context9.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context9.sent;\n              return _context9.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getKeys(_x13, _x14, _x15) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var owned, owner, _acceptable, isApproved;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              owned = false;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return emblemContract.ownerOf(tokenId);\n\n            case 4:\n              owner = _context10.sent;\n              _context10.next = 7;\n              return handlerContract.getPreTransfer(tokenId);\n\n            case 7:\n              _acceptable = _context10.sent;\n              _context10.next = 10;\n              return emblemContract.isApprovedForAll(account, contractAddresses.vaultHandler[chainId]);\n\n            case 10:\n              isApproved = _context10.sent;\n              setApproved(isApproved);\n              setAcceptable(_acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n              setMine(owner === account);\n              loadPasswordFromLocalStorage();\n              getOffers(tokenId);\n              _context10.next = 20;\n              break;\n\n            case 18:\n              _context10.prev = 18;\n              _context10.t0 = _context10[\"catch\"](1);\n\n            case 20:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 18]]);\n    }));\n\n    return function getContractStates() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // vaults.length == 0 ? getVaults() : null\n    console.log(\"Vaults\", vaults.length); // getVaults()\n    // console.log(\"mine?\", mine)\n    // console.log(\"claiming?\", claiming)\n    // console.log(\"accepting?\", accepting)\n    // console.log(\"acceptable\", acceptable)\n  });\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n              library.getSigner(account).signMessage('Claim: ' + tokenId).then(function (signature) {\n                getKeys(signature, tokenId, function (result) {\n                  // console.log('HandleSign response is ' + result)\n                  setMnemonic(result.decrypted.phrase);\n                  setPrivKeyBTC(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'btc';\n                  })[0].privkey);\n                  setPrivKeyETH(result.decrypted.keys.filter(function (key) {\n                    return key.coin === 'eth';\n                  })[0].privkey);\n                  setKeyValues(result.decrypted.values);\n                  onOpenKeysModal();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function handleSign() {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              emblemContract.transferFrom(account, BURN_ADDRESS, tokenId).then(function (_ref19) {\n                var hash = _ref19.hash;\n                setClaiming(true);\n                setTimeout(function () {\n                  setHash(hash);\n                }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n              });\n\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function handleClaim() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context13.next = 3;\n                break;\n              }\n\n              return _context13.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVault();\n  }, []);\n  useEffect(function () {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null; // console.log('in the usefeect that clls getcontractstates')\n  });\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n');\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = CryptoJS.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      getEthBalances(vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address, function (values) {\n        getBtcBalance(values, vaultAddresses.filter(function (item) {\n          return item.coin === 'BTC';\n        })[0].address, function (_values) {\n          // console.log(\"Have fucking values\", values)\n          getNftBalance(_values, vaultAddresses.filter(function (item) {\n            return item.coin === 'ETH';\n          })[0].address, function (__values) {\n            setVaultValues(__values.concat(vaultValues));\n          });\n        });\n      });\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      var cipherText = item.address.replace('private:', '');\n      item.address = decrypt(cipherText, key);\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = CryptoJS.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }\n  }), __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault ? __jsx(Tilt, {\n    className: \"Tilt\",\n    options: {\n      max: experimental ? 0 : 0,\n      scale: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 15\n    }\n  }, vaultChainId != chainId ? __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"orange.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 19\n    }\n  }, \"BEWARE: Vault is on a different network than you are.\") : null, __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy ? ': ~$' + vaultTotalValue : null), __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: validImage(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png',\n    width: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 19\n    }\n  })), __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }, __jsx(ReactMarkdown, {\n    plugins: [gfm],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 21\n    }\n  })))), __jsx(Box, {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 21\n    }\n  }, __jsx(Text, {\n    as: \"h4\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 23\n    }\n  }, \"Current Contents:\"), vaultPrivacy ? __jsx(React.Fragment, null, __jsx(Text, {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(Input, {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 27\n    }\n  })) : vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(Text, {\n      key: coin.name,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 29\n      }\n    }, coin.address && coin.type !== 'nft' ? __jsx(Tooltip, {\n      \"aria-label\": coin.name,\n      hasArrow: true,\n      label: \"Add \" + coin.symbol + \" to wallet\",\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 33\n      }\n    }, __jsx(Link, {\n      onClick: function onClick() {\n        addTokenToWallet({\n          address: coin.address,\n          symbol: coin.symbol,\n          decimals: coin.decimals,\n          image: coin.image ? coin.image : null\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 35\n      }\n    }, \"+\")) : null, '(', coin.coin.toLowerCase(), ')', \" \", coin.name, \" :\", ' ', coin.balance ? coin.balance : coin.type == 'nft' ? __jsx(Link, {\n      href: coin.external_url,\n      isExternal: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 33\n      }\n    }, \"View NFT\") : null);\n  }) : null, vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 29\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 25\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null)), !vaultPrivacy ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 23\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(Button, {\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 29\n      }\n    }, \"Put \", addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin, \" In\");\n  }))) : null, !(status === 'claimed') && (vaultChainId === 1 || vaultChainId === 4) ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 21\n    }\n  }, __jsx(Button, _extends({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: 'https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + contractAddresses.emblemVault[vaultChainId] + '/' + tokenId,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 23\n    }\n  }), mine ? 'Sell (Opensea)' : 'Make an Offer (Opensea)')) : null, !(status === 'claimed') && mine && !acceptable ? __jsx(React.Fragment, null, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 22\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 27\n    }\n  }, \"Transfer Vault\"), __jsx(Collapse, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 27\n    }\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 29\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 29\n    }\n  }, \"Address\"), __jsx(Input, {\n    mt: 1,\n    type: \"text\",\n    id: \"transferAddress\",\n    value: transferToAddress || '',\n    onChange: function onChange(e) {\n      console.log(\"Transfer to\", e.target.value);\n      setTransferToAddress(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 31\n    }\n  })), __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    isDisabled: !isETHAddress(transferToAddress),\n    onClick: function onClick() {\n      onToggle();\n      transferVault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 31\n    }\n  }, \"Transfer Now\")))))) : null, mine && !acceptable ? __jsx(React.Fragment, null, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      } else {\n        var key = CryptoJS.lib.WordArray.random(128 / 8).toString();\n        var sha = CryptoJS.SHA256(key).toString();\n        console.log('plain', key);\n        console.log('sha', sha);\n        setTransferPassword(key);\n        transferImage = sha;\n        setTimeout(function () {\n          addPreTransfer();\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 23\n    }\n  }, \" \", approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\", \" \"))) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 23\n    }\n  }, __jsx(Link, {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(React.Fragment, null, __jsx(Button, {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(Input, {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 23\n    }\n  })) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null, status !== 'claimed' ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 21\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: onOffersToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 25\n    }\n  }, \"Offers: \", offers.length), __jsx(Collapse, {\n    isOpen: isOffersOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 25\n    }\n  }, offers.map(function (offer, index) {\n    return __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      justifyContent: \"space-between\",\n      mt: \"4\",\n      key: offer.tokenId + '_' + index + '_key',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 31\n      }\n    }, __jsx(Text, {\n      key: offer.tokenId + '_' + index + '_offer',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 33\n      }\n    }, offer.tokenId), __jsx(Button, {\n      key: offer.tokenId + '_' + index + '_accept',\n      m: \"2\",\n      onClick: function onClick() {\n        acceptOffer(offer.index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 33\n      }\n    }, \"Accept\"), __jsx(Button, {\n      key: offer.tokenId + '_' + index + '_reject',\n      m: \"2\",\n      onClick: function onClick() {\n        rejectOffer(offer.index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 33\n      }\n    }, \"Reject\"), offer.from == account ? __jsx(Button, {\n      key: offer.tokenId + '_' + index + '_withdraw',\n      m: \"2\",\n      onClick: function onClick() {\n        withdrawOffer(offer.index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 35\n      }\n    }, \"Withdraw\") : null);\n  }), __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 27\n    }\n  }, __jsx(Select, {\n    placeholder: \"Select option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 29\n    }\n  }, vaults.length > 0 ? vaults.map(function (vault, index) {\n    return __jsx(\"option\", {\n      key: 'vault_' + vault.tokenId + index,\n      value: vault.tokenId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 35\n      }\n    }, vault.name);\n  }) : null), __jsx(Button, {\n    m: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 29\n    }\n  }, \"Offer\"))))) : null), __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(Text, {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : \"Generating Gift Link ...\") : null))) : __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      // location.href = location.origin + '/vault?id=' + tokenId\n      if (claiming && !accepting && !preTransfering) {\n        console.log(111111);\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        handleSign();\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else {\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 11\n    }\n  }) : null));\n}\n\n_s(Nft, \"TarR7ZWZHfa2Kr2WSArYNzZA7f8=\", false, function () {\n  return [useWeb3React, useRouter, useContract, useContract, useDisclosure, useDisclosure, useDisclosure, useDisclosure];\n});\n\n_c5 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"Nft\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx"],"names":["Box","Flex","Image","Text","Stack","Button","ButtonGroup","Input","Link","Alert","AlertIcon","useDisclosure","Tooltip","Collapse","FormLabel","Select","Head","useWeb3React","useEffect","useState","useRouter","Refreshing","Loader","dynamic","isETHAddress","validImage","TransactionToast","EMBLEM_API","BURN_ADDRESS","contractAddresses","useContract","Tilt","CryptoJS","addTokenToWallet","ReactMarkdown","gfm","AddrModal","KeysModal","Nft","account","chainId","library","query","approved","setApproved","key","mintPassword","setMintPassword","id","tokenId","setTokenId","experimental","setExperimental","vaults","setVaults","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","vaultValues","setVaultValues","vaultDataValues","setVaultDataValues","vaultAddresses","setVaultAddresses","vaultPrivacy","setVaultPrivacy","vaultTotalValue","setVaultTotalValue","vaultChainId","setVaultChainId","hash","setHash","currCoin","setCurrCoin","currAddr","setCurrAddr","loaded","state","setState","mine","setMine","claiming","setClaiming","status","setStatus","claimedBy","setClaimedBy","mnemonic","setMnemonic","privKeyBTC","setPrivKeyBTC","privKeyETH","setPrivKeyETH","privValues","setKeyValues","loadingApi","setLoadingApi","decryptedEffect","setDecryptedEffect","decryptedEffectRunning","setDecryptedEffectRunning","decryptPassword","setDecryptPassword","invalidVault","setInvalidVault","hasCheckedNft","setHasCheckedNft","accepting","setAccepting","approving","setApproving","acceptable","setAcceptable","transferPassword","setTransferPassword","showTransferPassword","setShowTransferPassword","preTransfering","setPreTransfering","transferToAddress","setTransferToAddress","transfering","setTransfering","offers","setOffers","handlerContract","vaultHandler","vaultHandlerAbi","emblemContract","emblemVault","emblemAbi","isOpenAddrModal","isOpen","onOpenAddrModal","onOpen","onCloseAddrModal","onClose","isOpenKeysModal","onOpenKeysModal","onCloseKeysModal","onToggle","isOffersOpen","onOffersToggle","transferImage","acceptOffer","index","then","rejectOffer","withdrawOffer","getOffers","getOffer","cb","console","log","offer","parseInt","_offers","push","from","_from","offerCount","length","getOfferCount","transferVault","transferFrom","error","fireMetaMask","getWitness","witness","transferWithCode","nonce","signature","setTimeout","code","addPreTransfer","handleApproveForall","setApprovalForAll","getVaults","fetch","method","headers","service","toString","response","json","jsonData","getVault","loadCache","responce","name","setStates","saveCache","chainid","image","description","totalValue","concat","values","attributes","filter","item","trait_type","addresses","network","isPvt","address","includes","getNftBalance","coin","_values","getEthBalances","Number","getBtcBalance","vault","localStorage","setItem","JSON","stringify","parse","getItem","savePasswordToLocalStorage","loadPasswordFromLocalStorage","storedPw","getKeys","myHeaders","Headers","append","raw","body","redirect","getContractStates","owned","ownerOf","owner","getPreTransfer","isApprovedForAll","isApproved","handleSign","getSigner","signMessage","result","decrypted","phrase","keys","privkey","handleClaim","startDecryptEffect","nextFrame","pos","i","clen","stri","num","Math","floor","theLetters","random","letter","charAt","block","si","increment","fixed","ctnt","speed","rustle","splitDescription","words","desc","split","trim","tryDecrypt","ciphertext","replace","bytes","AES","decrypt","enc","Utf8","decryptAddresses","__values","err","forEach","cipherText","decryptedData","max","scale","e","target","value","map","type","symbol","decimals","toLowerCase","balance","external_url","data","attribute_key","addr","href","rel","lib","WordArray","sha","SHA256","location","protocol","host"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Image,\n  Text,\n  Stack,\n  Button,\n  ButtonGroup,\n  Input,\n  Link,\n  Alert,\n  AlertIcon,\n  useDisclosure,\n  Tooltip,\n  Collapse,\n  FormControl,\n  FormLabel,\n  Select\n} from '@chakra-ui/core'\n\nimport Head from \"next/head\"\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Refreshing from './Refreshing'\nimport Loader from 'react-loader'\nimport dynamic from 'next/dynamic'\nimport { isETHAddress, validImage } from '../utils'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API, BURN_ADDRESS, contractAddresses } from '../constants'\nimport { useContract } from '../hooks'\nimport Tilt from 'react-tilt'\nimport CryptoJS from 'crypto-js'\nimport { addTokenToWallet, addMany } from '../public/web3'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nconst AddrModal = dynamic(() => import('./AddrModal'))\nconst KeysModal = dynamic(() => import('./KeysModal'))\n\nexport default function Nft() {\n  const { account, chainId, library } = useWeb3React()\n  const { query } = useRouter()\n  const [approved, setApproved] = useState(false)\n  const [mintPassword, setMintPassword] = useState(query.key)\n  const [tokenId, setTokenId] = useState(query.id)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const [vaults, setVaults] = useState([])\n  const [vaultName, setVaultName] = useState('')\n  const [vaultDesc, setVaultDesc] = useState('')\n  const [vaultImage, setVaultImage] = useState('')\n  const [vaultValues, setVaultValues] = useState([])\n  const [vaultDataValues, setVaultDataValues] = useState([])\n  const [vaultAddresses, setVaultAddresses] = useState([])\n  const [vaultPrivacy, setVaultPrivacy] = useState(false)\n  const [vaultTotalValue, setVaultTotalValue] = useState(0)\n  const [vaultChainId, setVaultChainId] = useState(null)\n  const [hash, setHash] = useState(null)\n  const [currCoin, setCurrCoin] = useState('')\n  const [currAddr, setCurrAddr] = useState('')\n  const [state, setState] = useState({ loaded: false })\n  const [mine, setMine] = useState(false)\n  const [claiming, setClaiming] = useState(false)\n  const [status, setStatus] = useState('claimed')\n  const [claimedBy, setClaimedBy] = useState(null)\n  const [mnemonic, setMnemonic] = useState('')\n  const [privKeyBTC, setPrivKeyBTC] = useState('')\n  const [privKeyETH, setPrivKeyETH] = useState('')\n  const [privValues, setKeyValues] = useState([])\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [decryptedEffect, setDecryptedEffect] = useState('')\n  const [decryptedEffectRunning, setDecryptedEffectRunning] = useState(false)\n  const [decryptPassword, setDecryptPassword] = useState('')\n  const [invalidVault, setInvalidVault] = useState(false)\n  const [hasCheckedNft, setHasCheckedNft] = useState(false)\n  const [accepting, setAccepting] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [acceptable, setAcceptable] = useState(false)\n  const [transferPassword, setTransferPassword] = useState('')\n  const [showTransferPassword, setShowTransferPassword] = useState(false)\n  const [preTransfering, setPreTransfering] = useState(false)\n  const [transferToAddress, setTransferToAddress] = useState(null)\n  const [transfering, setTransfering] = useState(false)\n  const [offers, setOffers] = useState([])\n  // const [transferImage, setTransferImage] = useState('')\n\n  const handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true)\n  const emblemContract = useContract(contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n\n  const { isOpen: isOpenAddrModal, onOpen: onOpenAddrModal, onClose: onCloseAddrModal } = useDisclosure()\n  const { isOpen: isOpenKeysModal, onOpen: onOpenKeysModal, onClose: onCloseKeysModal } = useDisclosure()\n  const { isOpen, onToggle } = useDisclosure()\n  const { isOpen: isOffersOpen, onToggle: onOffersToggle } = useDisclosure()\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  let transferImage;\n\n  const acceptOffer = (index) =>{\n    ;(handlerContract as Contract)\n    .acceptOffer(tokenId, index)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n  }\n\n  const rejectOffer = (index) =>{\n    ;(handlerContract as Contract)\n    .rejectOffer(tokenId, index)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n  }\n\n  const withdrawOffer = (index) =>{\n    ;(handlerContract as Contract)\n    .withdrawOffer(tokenId, index)\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n  }\n\n  const getOffers = async (tokenId) =>{\n    if (offers.length > 0) return\n    let _offers = []\n    let offerCount = parseInt(await handlerContract.getOfferCount(tokenId))\n    console.log(\"Offer Count\", offerCount)\n    await getOffer(0, ()=>{\n      _offers.length > 0 ? setOffers(_offers): null\n      console.log(\"Done getting offers\", _offers)\n    })\n    async function getOffer(index, cb) {\n      console.log(\"Getting offer index\", index)\n      let offer = await handlerContract.getOffer(tokenId, index)\n      if (parseInt(offer.tokenId) !== 0) {\n        _offers.push({index: index, tokenId: parseInt(offer.tokenId), from: offer._from})\n      }\n      \n      if (index + 1 === offerCount) {\n        return cb()\n      } else {\n        return getOffer(index +1, cb)\n      }\n    }\n  }\n\n  const transferVault = () => {\n    setTransfering(true)\n    ;(emblemContract as Contract).transferFrom(account, transferToAddress, tokenId)\n    .then(({ hash }: { hash: string }) => {\n      setHash(hash)\n    })\n    .catch((error: ErrorWithCode) => {})\n  }\n\n  const fireMetaMask = () => {\n    console.log(mintPassword)\n    setAccepting(true)\n    getWitness(witness=>{\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;(handlerContract as Contract)\n      .transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature)\n      .then(({ hash }: { hash: string }) => {\n        setTimeout(() => {\n          setHash(hash)          \n          // setShowMakingVaultMsg(true)\n        }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })\n      .catch((error: ErrorWithCode) => {\n        setAccepting(false)\n        if (error?.code !== 4001) {\n          console.log(`tx failed.`, error)\n        } else {\n          // setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      })\n    })\n    \n  }\n\n  const addPreTransfer = () => {\n    console.log('transferImage', \"0x\"+transferImage)\n    setPreTransfering(true)\n    ;(handlerContract as Contract)\n      .addPreTransfer(tokenId, \"0x\"+transferImage)\n      .then(({ hash }: { hash: string }) => {\n        // setTimeout(() => {\n          setHash(hash)\n          console.log(\"Set Pre Transfering True\", preTransfering)\n          // setShowMakingVaultMsg(true)\n        // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code){   \n            console.log(\"Error?\")       \n            setPreTransfering(false)\n            setShowTransferPassword(false)\n            setTransferPassword('')\n        } else {\n          // setShowTransferPassword(!showTransferPassword? true : false)\n          // setPreTransfering(false)\n          // setShowPreVaultMsg(false)\n        }\n      })\n  }\n\n  const handleApproveForall = () => {\n    setApproving(true)\n    ;(emblemContract as Contract)\n      .setApprovalForAll(contractAddresses.vaultHandler[chainId], true)\n      .then(({ hash }: { hash: string }) => {\n        setTimeout(() => {\n          setHash(hash)          \n          // setShowMakingVaultMsg(true)\n        }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code !== 4001) {\n          console.log(`tx failed.`, error)\n        } else {\n          setApproving(false)\n          // setShowPreVaultMsg(false)\n        }\n      })\n  }\n\n  // \n\n  const getVaults = async () => {    \n    try {\n      const response = await fetch(EMBLEM_API + '/vaults/' + (account) + (experimental? '?experimental=true' : ''), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n        },\n      })\n      const jsonData = await response.json()\n      setState({ loaded: true })\n      setVaults(jsonData)\n      setLoadingApi(false)\n      console.log(\"Vaults\", jsonData)\n    } catch (error) {}\n  }\n\n  const getVault = async () => {\n    loadCache()\n    const responce = await fetch(EMBLEM_API + '/meta/' + tokenId + '?experimental=true', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n    })\n    const jsonData = await responce.json()\n    getVaults()\n    // console.log('vault response was ', jsonData)\n    if (!jsonData.name) {\n      setState({ loaded: true })\n      setInvalidVault(true)\n    } else {\n      setStates(jsonData)\n      saveCache(jsonData)\n      setLoadingApi(false)\n      setInvalidVault(false)\n      \n    }\n  }\n\n  const getWitness = async (cb) => {\n    \n    const responce = await fetch(EMBLEM_API + '/witness/' + tokenId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n    })\n    const jsonData = await responce.json()\n    // console.log('vault response was ', jsonData)\n    if (jsonData.signature) {\n      console.log('witness', jsonData)\n      return cb(jsonData)\n    } else {\n      return cb(false)\n    }\n  }\n\n  const setStates = (jsonData) => {\n    setVaultName(jsonData.name)\n    setVaultImage(jsonData.image)\n    setVaultDesc(jsonData.description)\n    setVaultTotalValue(jsonData.totalValue || 0)\n    setVaultValues(vaultValues.concat(jsonData.values))\n    setVaultDataValues(jsonData.attributes.filter(item=>{return item.trait_type === \"key\"}))\n    setVaultDesc(jsonData.description)\n    setVaultAddresses(jsonData.addresses)\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137: 97)\n    setStatus(jsonData.status)\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy)\n    }\n    // console.log('inside getstates. mine is ', mine)\n    setState({ loaded: true })\n    let isPvt =\n      jsonData.addresses.filter((item) => {\n        return item.address.includes('private:')\n      }).length > 0\n    setVaultPrivacy(isPvt)\n    setTimeout(() => {\n      !isPvt ?\n      getNftBalance(\n        jsonData.values,\n        jsonData.addresses.filter((item) => {\n          return item.coin === 'ETH'\n        })[0].address,\n        (_values) => {\n          // console.log(\"Have new values\", _values)\n          setVaultValues(_values)\n        }\n      ) : null\n    }, 5)\n  }  \n\n  const getEthBalances = async (address, cb) => {\n    const responce = await fetch(EMBLEM_API + '/eth/balance/' + address, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n    })\n    const jsonData = await responce.json()\n    // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n    setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue))\n    // console.log('get eth balances', jsonData.values)\n    return cb(jsonData.values)\n  }\n\n  const getBtcBalance = async (values, address, cb) => {\n    const responce = await fetch(EMBLEM_API + '/btc/balance/' + address, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n    })\n    const jsonData = await responce.json()\n    // setVaultValues(values.concat(jsonData.values))\n    return cb(values.concat(jsonData.values))\n  }\n\n  const getNftBalance = async (values, address, cb) => {\n    // console.log(address)\n    const responce = await fetch(EMBLEM_API + '/eth/nft/' + address, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n    })\n    const jsonData = await responce.json()\n    if (jsonData.length > 0) {\n      // console.log(\"Fuckling NFT\", jsonData, values.concat(jsonData))\n      return cb(values.concat(jsonData))\n    } else {\n      return cb(values)\n    }\n  }\n\n  const saveCache = (vault) => {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)) // Save new state for later\n  }\n\n  const loadCache = () => {\n    let vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')) // Load vaults from storage before updating from server!\n    if (vault) {\n      setState({ loaded: true })\n      setStates(vault)\n      setLoadingApi(true)\n    }\n  }\n\n  const savePasswordToLocalStorage = () => {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword) // Save new state for later\n  }\n\n  const loadPasswordFromLocalStorage = () => {\n    let storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword')\n    storedPw && acceptable ? setMintPassword(storedPw) : null //setMintPassword(null)\n  }\n\n  const getKeys = async (signature, tokenId, cb) => {\n    var myHeaders = new Headers()\n    myHeaders.append('chainId', chainId.toString())\n    myHeaders.append('service', 'evmetadata')\n    myHeaders.append('Content-Type', 'application/json')\n\n    var raw = JSON.stringify({ signature: signature })\n    const responce = await fetch(EMBLEM_API + '/verify/' + tokenId, {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    })\n    const jsonData = await responce.json()\n    // console.log('getKeys response is ', jsonData)\n    return cb(jsonData)\n  }\n\n  const getContractStates = async () => {\n    let owned = false\n    try {\n      let owner  = await emblemContract.ownerOf(tokenId)\n      let acceptable = await handlerContract.getPreTransfer(tokenId)\n      let isApproved = await emblemContract.isApprovedForAll(account, contractAddresses.vaultHandler[chainId])\n      setApproved(isApproved)\n      setAcceptable(acceptable._from !== \"0x0000000000000000000000000000000000000000\")\n      setMine(owner === account)\n      loadPasswordFromLocalStorage()\n      getOffers(tokenId)\n    } catch(err){}\n    \n  }\n\n  useEffect(()=>{\n    // vaults.length == 0 ? getVaults() : null\n    console.log(\"Vaults\", vaults.length)\n    // getVaults()\n    // console.log(\"mine?\", mine)\n    // console.log(\"claiming?\", claiming)\n    // console.log(\"accepting?\", accepting)\n    // console.log(\"acceptable\", acceptable)\n  })\n\n  const handleSign = async () => {\n    // library. .personal.sign(library.toHex(\"Claim:358746\"),library.eth.defaultAccount, (err,res) => console.log(err,res))\n    library\n      .getSigner(account)\n      .signMessage('Claim: ' + tokenId)\n      .then((signature) => {\n        getKeys(signature, tokenId, (result) => {\n          // console.log('HandleSign response is ' + result)\n          setMnemonic(result.decrypted.phrase)\n          setPrivKeyBTC(\n            result.decrypted.keys.filter((key) => {\n              return key.coin === 'btc'\n            })[0].privkey\n          )\n          setPrivKeyETH(\n            result.decrypted.keys.filter((key) => {\n              return key.coin === 'eth'\n            })[0].privkey\n          )\n          setKeyValues(result.decrypted.values)\n          onOpenKeysModal()\n        })\n      })\n  }\n\n  const handleClaim = async () => {\n    emblemContract.transferFrom(account, BURN_ADDRESS, tokenId).then(({ hash }: { hash: string }) => {\n      setClaiming(true)\n      setTimeout(() => {\n        setHash(hash)\n      }, 100) // Solving State race condition where transaction watcher wouldn't notice we were claiming\n    })\n  }\n\n  const startDecryptEffect = async () => {\n    if (decryptedEffectRunning) {\n      return\n    }\n    setDecryptedEffectRunning(true)\n    var theLetters = 'abcdefghijklmnopqrstuvwxyz' //You can customize what letters it will cycle through\n    var ctnt = 'Decrypting' // Your text goes here\n    var speed = 5 // ms per frame\n    var increment = 8 // frames per step. Must be >2\n\n    var clen = ctnt.length\n    var si = 0\n    var stri = 0\n    var block = ''\n    var fixed = ''\n    ;(function rustle(i) {\n      setTimeout(function () {\n        if (--i) {\n          rustle(i)\n        } else {\n          setDecryptedEffectRunning(false)\n        }\n        nextFrame(i)\n        si = si + 1\n      }, speed)\n    })(clen * increment + 1)\n    function nextFrame(pos) {\n      for (var i = 0; i < clen - stri; i++) {\n        //Random number\n        var num = Math.floor(theLetters.length * Math.random())\n        //Get random letter\n        var letter = theLetters.charAt(num)\n        block = block + letter\n      }\n      if (si == increment - 1) {\n        stri++\n      }\n      if (si == increment) {\n        // Add a letter;\n        // every speed*10 ms\n        fixed = fixed + ctnt.charAt(stri - 1)\n        si = 0\n      }\n      // $(\"#output\").html(fixed + block);\n      setDecryptedEffect(fixed + block)\n      block = ''\n    }\n  }\n\n  useEffect(() => {\n    getVault()\n  }, [])\n\n  useEffect(() => {\n    // console.log('Account chainid = ' + chainId + ' and vaultchainid = ' + vaultChainId)\n    account && chainId && vaultChainId && chainId == vaultChainId ? getContractStates() : null\n    // console.log('in the usefeect that clls getcontractstates')\n  })\n\n  function splitDescription(words) {\n    var desc = words.split('\\n\\n\\n\\n')\n    return desc[0].trim()\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword\n    }\n    startDecryptEffect()\n    let ciphertext = vaultAddresses[0].address.replace('private:', '')\n    try {\n      var bytes = CryptoJS.AES.decrypt(ciphertext, key)\n      JSON.parse(bytes.toString(CryptoJS.enc.Utf8))\n      setVaultPrivacy(false)\n      setDecryptPassword(key)\n      setVaultAddresses(decryptAddresses(key))\n      getEthBalances(\n        vaultAddresses.filter((item) => {\n          return item.coin === 'ETH'\n        })[0].address,\n        (values) => {\n          getBtcBalance(\n            values,\n            vaultAddresses.filter((item) => {\n              return item.coin === 'BTC'\n            })[0].address,\n            (_values) => {\n              // console.log(\"Have fucking values\", values)\n              getNftBalance(\n                _values,\n                vaultAddresses.filter((item) => {\n                  return item.coin === 'ETH'\n                })[0].address,\n                (__values) => {\n                  setVaultValues(__values.concat(vaultValues))\n                }\n              )\n            }\n          )\n        }\n      )\n    } catch (err) {}\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach((item) => {\n      let cipherText = item.address.replace('private:', '')\n      item.address = decrypt(cipherText, key)\n    })\n    return vaultAddresses\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = CryptoJS.AES.decrypt(cipherText, key)\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8))\n    return decryptedData\n  }\n\n  return (\n    <>\n       <Head>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"Emblem.Finance\" />\n        <meta name=\"twitter:title\" content={vaultName} />\n        <meta name=\"twitter:description\" content={splitDescription(vaultDesc)} />\n        <meta name=\"twitter:image\" content={vaultImage} />\n      </Head>\n      <AddrModal isOpen={isOpenAddrModal} onClose={onCloseAddrModal} addrCoin={currCoin} addrAddr={currAddr} />\n\n      <KeysModal\n        isOpen={isOpenKeysModal}\n        onClose={onCloseKeysModal}\n        mnemonic={mnemonic}\n        privKeyBTC={privKeyBTC}\n        privKeyETH={privKeyETH}\n        privValues={privValues}\n      />\n\n      <Loader loaded={state.loaded}>\n        {loadingApi ? <Refreshing /> : ''}\n        {!invalidVault ? (\n          <Tilt className=\"Tilt\" options={{ max: experimental ? 0 : 0, scale: 1 }}>\n            <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n              <Box\n                maxW=\"sm\"\n                borderWidth=\"1px\"\n                borderColor={vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null}\n                rounded=\"lg\"\n                overflow=\"hidden\"\n                alignItems=\"center\"\n                minW={390}\n              >\n                {vaultChainId != chainId ? (\n                  <Box\n                    mt=\"1\"\n                    fontWeight=\"semibold\"\n                    as=\"h3\"\n                    lineHeight=\"tight\"\n                    p={2}\n                    textAlign=\"center\"\n                    textTransform=\"uppercase\"\n                    alignItems=\"center\"\n                    color=\"orange.500\"\n                  >\n                    BEWARE: Vault is on a different network than you are.\n                  </Box>\n                ) : null}\n                <Box\n                  mt=\"1\"\n                  fontWeight=\"semibold\"\n                  as=\"h3\"\n                  lineHeight=\"tight\"\n                  p={2}\n                  textAlign=\"center\"\n                  textTransform=\"uppercase\"\n                  alignItems=\"center\"\n                >\n                  {vaultName}\n                  {!vaultPrivacy ? ': ~$' + vaultTotalValue : null}\n                </Box>\n                <Stack align=\"center\">\n                  <Image\n                    src={validImage(vaultImage) ? vaultImage : 'https://circuitsofvalue.com/public/coval-logo.png'}\n                    width=\"250px\"\n                  />\n                </Stack>\n                <Stack align=\"center\">\n                  <Box mt=\"2\" ml=\"4\" lineHeight=\"tight\">\n                    <Text mt={2} as=\"h4\" ml=\"4\" mr=\"4\" fontSize=\"xs\" fontStyle=\"italic\" >\n                    <ReactMarkdown plugins={[gfm]} children={splitDescription(vaultDesc)} />\n                    </Text>\n                  </Box>\n                </Stack>\n                <Box p=\"6\">\n                  <Box d=\"flex\" alignItems=\"baseline\">\n                    <Box color=\"gray.500\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                      <Text as=\"h4\" fontWeight=\"semibold\">\n                        Current Contents:\n                      </Text>\n                      {vaultPrivacy ? (\n                        <>\n                          <Text pb={2} color={decryptedEffect ? 'green.500' : null}>\n                            {decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'}\n                          </Text>\n                          <Input\n                            type=\"password\"\n                            id=\"vault-password\"\n                            onChange={(e) => tryDecrypt(e.target.value)}\n                            aria-describedby=\"password-helper-text\"\n                          />\n                        </>\n                      ) : vaultValues.length ? (\n                        vaultValues.map((coin) => {\n                          return (                            \n                            <Text key={coin.name} isTruncated>\n                              {/* <Image width={3} src={coin.image} /> */}\n                              {coin.address && coin.type !== 'nft' ? (\n                                <Tooltip aria-label={coin.name} hasArrow label={\"Add \" + coin.symbol + \" to wallet\"} placement=\"top\" >\n                                  <Link onClick={()=>{addTokenToWallet({address:coin.address, symbol:coin.symbol, decimals:coin.decimals, image: coin.image? coin.image : null })}}>\n                                    + \n                                  </Link>\n                                </Tooltip>\n                                \n                              ) : null}\n                              {'('}{coin.coin.toLowerCase()}{')'} {coin.name} :{' '}\n                              {coin.balance ? (\n                                coin.balance\n                              ) : coin.type == 'nft' ? (\n                                <Link href={coin.external_url} isExternal>\n                                  View NFT\n                                </Link>\n                              ) : null}\n                            </Text>\n                          )\n                        })\n                      ) : null } \n                      { vaultDataValues.length ? (\n                        vaultDataValues.map((data) => {\n                          return (\n                            <Text>Data: {data.attribute_key}</Text>\n                          )                        \n                        })\n                      ) : !vaultDataValues.length && !vaultValues.length ? (\n                        <Text>Nothing in here! Fill 'er up!</Text>\n                      ) : null}\n                    </Box>\n                  </Box>\n                  {!vaultPrivacy ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <ButtonGroup justifyContent=\"space-between\" spacing={6}>\n                        {vaultAddresses.map((addr) => {\n                          return (\n                            <Button\n                              key={addr.address}\n                              onClick={() => {\n                                setCurrCoin(addr.coin)\n                                setCurrAddr(addr.address)\n                                onOpenAddrModal()\n                              }}\n                            >\n                              Put {addr.coin == 'ETH' ? addr.coin + '/ERC20' : addr.coin} In\n                            </Button>\n                          )\n                        })}\n                      </ButtonGroup>\n                    </Box>\n                  ) : null}\n\n                  {!(status === 'claimed') && (vaultChainId === 1 || vaultChainId === 4 )? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button\n                        width=\"100%\"\n                        as=\"a\"\n                        {...{\n                          href:\n                            'https://' +\n                            (vaultChainId == 4 ? 'rinkeby.' : '') +\n                            'opensea.io/assets/' +\n                            contractAddresses.emblemVault[vaultChainId] +\n                            '/' +\n                            tokenId,\n                          target: '_blank',\n                          rel: 'noopener noreferrer',\n                        }}\n                      >\n                        {mine ? 'Sell (Opensea)' : 'Make an Offer (Opensea)'}\n                      </Button>\n                    </Box>\n                  ) : null}\n                  {!(status === 'claimed') && mine && !acceptable?  (\n                    <>\n                     <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\" width=\"100%\">\n                        <Stack direction=\"column\" align=\"center\" width=\"100%\">\n                          <Button width=\"100%\" onClick={onToggle}>Transfer Vault</Button>\n                          <Collapse isOpen={isOpen}>\n                            <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"2\" width=\"100%\">\n                            <FormLabel htmlFor=\"owner-address\">Address</FormLabel>\n                              <Input\n                                mt={1}\n                                type=\"text\"\n                                id=\"transferAddress\"\n                                value={transferToAddress || ''}\n                                onChange={(e) => {                              \n                                  console.log(\"Transfer to\", e.target.value)\n                                  setTransferToAddress(e.target.value)\n                                }}\n                                autoComplete=\"off\"\n                              />\n                            </Box>\n                            <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"2\" width=\"100%\">\n                              <Button isDisabled={!isETHAddress(transferToAddress)} onClick={()=>{\n                                onToggle()\n                                transferVault()\n                              }}>Transfer Now</Button> \n                            </Box>\n                          </Collapse>\n                        </Stack>\n                      </Box>\n                    </>\n                  ):null }\n                  {mine && !acceptable ? (<>\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button width=\"100%\" onClick={() => {\n                        if (!approved) {\n                          return handleApproveForall()\n                        } else {\n                          let key = CryptoJS.lib.WordArray.random(128/8).toString()\n                          let sha = CryptoJS.SHA256(key).toString()\n                          console.log('plain', key)\n                          console.log('sha', sha)\n                          setTransferPassword(key)\n                          transferImage = sha                          \n                          setTimeout(()=>{\n                            addPreTransfer()\n                          }, 500)\n                        }                                             \n                      }\n                    }> {approved ? \"Get Link (Send Vault Via Link)\" : \"Approve Gifting\" } </Button>\n                    </Box>\n                  </>) : null }\n                  {(showTransferPassword || mintPassword) && acceptable ? (\n                      <Box>\n                        <Link href={location.protocol +'//'+ location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword)}>Copy Gift Link</Link>\n                        <Text>Password: {(transferPassword || mintPassword)}</Text>\n                      </Box>\n                      ) : null}\n                  {acceptable && claimedBy !== account ? (\n                  <>\n                      <Button mt={2} width=\"100%\" onClick={()=>{fireMetaMask()}}>Accept</Button>\n                      <Input\n                        mt={2}\n                        type=\"password\"\n                        id=\"mintPassword\"\n                        minLength={3}\n                        maxLength={200}\n                        value={mintPassword || ''}\n                        onChange={(e) => {\n                          console.log('grrr', e.target.value, mintPassword)\n                          setMintPassword(e.target.value)}\n                        }\n                        autoComplete=\"off\"\n                      />\n                  </>\n                    ) : null}\n\n                  {!(status === 'claimed') && account && vaultChainId === chainId && mine ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button\n                        width=\"100%\"\n                        onClick={() => {\n                          handleClaim()\n                        }}\n                        isDisabled={claiming}\n                      >\n                        {claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)'}\n                      </Button>\n                    </Box>                    \n                  ) : status === 'claimed' && claimedBy === account && vaultChainId === chainId ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Button width=\"100%\" onClick={handleSign}>\n                        Get Keys\n                      </Button>\n                    </Box>\n                  ) : null}\n                  {status !== 'claimed' ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                      <Stack direction=\"column\" align=\"center\" width=\"100%\">\n                        <Button width=\"100%\" onClick={onOffersToggle}>\n                          Offers: {offers.length}\n                        </Button>\n                        <Collapse isOpen={isOffersOpen}>\n                          {offers.map((offer, index)=>{\n                            return (\n                              <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\" key={offer.tokenId + '_' + index + '_key'}>\n                                <Text key={offer.tokenId + '_' + index + '_offer'}>{offer.tokenId}</Text>\n                                <Button key={offer.tokenId + '_' + index + '_accept'} m=\"2\" onClick={() => {acceptOffer(offer.index)}}>Accept</Button>\n                                <Button key={offer.tokenId + '_' + index + '_reject'} m=\"2\" onClick={() => {rejectOffer(offer.index)}}>Reject</Button>\n                                {offer.from == account ? (\n                                  <Button key={offer.tokenId + '_' + index + '_withdraw'} m=\"2\" onClick={() => {withdrawOffer(offer.index)}}>Withdraw</Button>\n                                ) : null}                                \n                              </Box>\n                            )\n                          })}\n                          <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"4\">\n                            \n                            <Select placeholder=\"Select option\">\n                            {vaults.length > 0 ? vaults.map((vault, index)=>{\n                                return (\n                                  <option key={'vault_'+vault.tokenId+index} value={vault.tokenId}>{vault.name}</option>\n                                )\n                            }): null}\n                            </Select>\n                            <Button m=\"2\">Offer</Button>\n                          </Box>\n                        </Collapse>\n                      </Stack>\n                    </Box>\n                    ) : null }\n                </Box>\n                <Stack direction=\"column\" align=\"center\">\n                  {status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                </Stack>\n                {hash ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    { accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving? \"Handling Approval Flow ...\" : transfering? \"Transfering Vault ...\":  \"Generating Gift Link ...\"}\n                  </Alert>\n                ) : null}\n              </Box>\n            </Flex>\n          </Tilt>\n        ) : (\n          <Stack align=\"center\">\n            <Image\n              width=\"md\"\n              src=\"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\"\n            ></Image>\n            <Text>\n              THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR{' '}\n              <Link color=\"#638cd8\" href=\"../create\">\n                CREATE ONE HERE!\n              </Link>\n            </Text>\n          </Stack>\n        )}\n        {hash ? (\n          <TransactionToast\n            hash={hash}\n            onComplete={() => {\n              // location.href = location.origin + '/vault?id=' + tokenId\n              if (claiming && !accepting && !preTransfering) {\n                console.log(111111)\n                setHash(null)\n                setStatus('claimed')\n                setClaiming(false)\n                setClaimedBy(account)\n                handleSign()\n              } else if (preTransfering) {\n                savePasswordToLocalStorage()\n                setShowTransferPassword(true)\n                setPreTransfering(false)\n                setHash(null)                \n              } else if(accepting) {\n                setAccepting(false)                \n                getVault()\n                setHash(null)\n              } else if(approving) {\n                setApproving(false)\n                getVault()\n                setHash(null)\n              } else if(transfering) {\n                setTransfering(false)\n                getVault()\n                setHash(null)\n              } else {\n                console.log('claiming', claiming) \n                console.log('accepting', accepting) \n                console.log('preTransfering', preTransfering)\n                console.log('approving', approving)\n                console.log(\"Unknown state\")\n              }\n            }}\n          />\n        ) : null}\n      </Loader>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}