{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Flex, Text, Link, Image } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nexport default function VaultList(props) {\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const [vaults, setVaults] = React.useState([]);\n\n  const validImage = function (data) {\n    if (data.includes('http')) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const getVaults = async () => {\n    // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n    const responce = await fetch('https://api.emblemvault.io/vaults/' + account, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'service': 'evmetadata',\n        'chainId': chainId.toString()\n      }\n    });\n    const jsonData = await responce.json();\n    setVaults(jsonData);\n  };\n\n  useEffect(() => {\n    getVaults();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(vault => {\n    var url = './vault/?id=' + vault.tokenId;\n    const flexSettings = {\n      flex: \"1\",\n      minW: \"300px\",\n      maxW: \"300px\",\n      // textAlign: \"center\",\n      color: \"white\",\n      mx: \"6\",\n      mb: \"6\"\n    };\n    return __jsx(Flex, {\n      w: \"100%\",\n      justify: \"center\",\n      flexWrap: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(Box, _extends({\n      borderWidth: \"1px\",\n      rounded: \"lg\",\n      overflow: \"hidden\"\n    }, flexSettings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), __jsx(Image, {\n      src: validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\",\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      as: \"h2\",\n      textAlign: \"center\",\n      w: \"100%\",\n      p: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Nothing in here! Fill 'er up!\")), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"blue.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), \"I'm a box 2\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), \"I'm a box 3\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), \"I'm a box 3\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), \"I'm a box 3\"), __jsx(Box, _extends({}, flexSettings, {\n      bg: \"green.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), \"I'm a box 3\")) // <Grid key={vault.tokenId} templateColumns=\"repeat(5, 1fr)\" gap={6}>\n    //     <Link href={url}>\n    //       <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n    //         <Box\n    //           mt=\"1\"\n    //           fontWeight=\"semibold\"\n    //           as=\"h4\"\n    //           lineHeight=\"tight\"\n    //           isTruncated\n    //           p={1}\n    //           textAlign=\"center\"\n    //         >\n    //           {vault.name}\n    //           <Image src={validImage(vault.image)\n    //             ? vault.image\n    //             : \"https://circuitsofvalue.com/public/coval-logo.png\"\n    //           }\n    //             size=\"250px\"\n    //           />\n    //         </Box>\n    //         <Box p=\"4\">\n    //           <Box d=\"flex\" alignItems=\"baseline\">\n    //             <Box\n    //               color=\"gray.500\"\n    //               fontWeight=\"semibold\"\n    //               letterSpacing=\"wide\"\n    //               fontSize=\"xs\"\n    //               textTransform=\"uppercase\"\n    //               ml=\"1\"\n    //             >\n    //               {vault.values.length\n    //                 ? vault.values.map((coin) => {\n    //                   return (\n    //                     <Text key={coin.name}>\n    //                       {coin.balance} {coin.name}\n    //                     </Text>\n    //                   )\n    //                 })\n    //                 : <Text  w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n    //               }\n    //             </Box>\n    //           </Box>\n    //         </Box>\n    //       </Box>\n    //     </Link>\n    //   </Grid>\n    ;\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS. \", \" \", __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\")));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx"],"names":["Box","Flex","Text","Link","Image","useWeb3React","React","useEffect","VaultList","props","account","chainId","vaults","setVaults","useState","validImage","data","includes","getVaults","responce","fetch","method","headers","toString","jsonData","json","length","map","vault","url","tokenId","flexSettings","flex","minW","maxW","color","mx","mb","image"],"mappings":"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","sourcesContent":["import {\n    Box,\n    Flex,\n    Grid,\n    Text,\n    Link,\n    Image,\n    SimpleGrid\n} from \"@chakra-ui/core\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from \"react\";\n\nexport default function VaultList(props: any) {\n\n    const { account, chainId } = useWeb3React()\n    const [vaults, setVaults] = React.useState([])\n    const validImage = function(data){\n      if (data.includes('http')) {\n        return true\n      } else {\n        return false\n      }\n    }\n    const getVaults = async () => {\n      // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n      const responce = await fetch('https://api.emblemvault.io/vaults/' + account, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'service': 'evmetadata',\n          'chainId': chainId.toString()\n        },\n      })\n      const jsonData = await responce.json()\n      setVaults(jsonData)\n    }\n\n    useEffect(() => {\n        getVaults()\n      }, [])\n\n    return (\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\" justifyItems=\"center\">\n        {vaults.length ? vaults.map((vault) => {\n            var url = './vault/?id=' + vault.tokenId\n            const flexSettings = {\n              flex: \"1\",\n              minW: \"300px\",\n              maxW: \"300px\",\n              // textAlign: \"center\",\n              color: \"white\",\n              mx: \"6\",\n              mb: \"6\"\n            };\n            return (\n              <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\">\n                <Box borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" {...flexSettings} > \n                  \n                  <Image src={validImage(vault.image) ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\" } p={2}/>\n                  <Text as=\"h2\" textAlign=\"center\" w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n                </Box>\n                <Box {...flexSettings} bg={\"blue.500\"}>I'm a box 2</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 3</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 3</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 3</Box>\n                <Box {...flexSettings} bg={\"green.500\"}>I'm a box 3</Box>\n              </Flex>\n              // <Grid key={vault.tokenId} templateColumns=\"repeat(5, 1fr)\" gap={6}>\n              //     <Link href={url}>\n              //       <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n              //         <Box\n              //           mt=\"1\"\n              //           fontWeight=\"semibold\"\n              //           as=\"h4\"\n              //           lineHeight=\"tight\"\n              //           isTruncated\n              //           p={1}\n              //           textAlign=\"center\"\n              //         >\n              //           {vault.name}\n\n              //           <Image src={validImage(vault.image)\n              //             ? vault.image\n              //             : \"https://circuitsofvalue.com/public/coval-logo.png\"\n              //           }\n              //             size=\"250px\"\n              //           />\n              //         </Box>\n\n              //         <Box p=\"4\">\n              //           <Box d=\"flex\" alignItems=\"baseline\">\n              //             <Box\n              //               color=\"gray.500\"\n              //               fontWeight=\"semibold\"\n              //               letterSpacing=\"wide\"\n              //               fontSize=\"xs\"\n              //               textTransform=\"uppercase\"\n              //               ml=\"1\"\n              //             >\n              //               {vault.values.length\n              //                 ? vault.values.map((coin) => {\n              //                   return (\n              //                     <Text key={coin.name}>\n              //                       {coin.balance} {coin.name}\n              //                     </Text>\n              //                   )\n              //                 })\n              //                 : <Text  w=\"100%\" p={0}>Nothing in here! Fill 'er up!</Text>\n              //               }\n              //             </Box>\n              //           </Box>\n              //         </Box>\n              //       </Box>\n              //     </Link>\n              //   </Grid>\n\n            )\n          })\n          :\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS. {\" \"}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        }\n      </Flex>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}