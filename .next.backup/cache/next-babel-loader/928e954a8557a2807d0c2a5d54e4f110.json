{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, Button, ButtonGroup, Divider, Select, Image } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API, curatedContracts, curatedAssets } from '../constants';\nvar tokenId = null;\nexport default function CreateCurated(props) {\n  var _useState = useState(0),\n      tabIndex = _useState[0],\n      setTabIndex = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState(account || ''),\n      vaultAddress = _useState2[0],\n      setVaultAddress = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: true,\n    \"private\": false\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState({\n    name: '',\n    image: ''\n  }),\n      targetAsset = _useState4[0],\n      setTargetAsset = _useState4[1];\n\n  var _useState5 = useState({\n    name: '',\n    chain: ''\n  }),\n      targetContract = _useState5[0],\n      setTargetContract = _useState5[1];\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    var body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      chainId: chainId,\n      experimental: true,\n      targetContract: targetContract,\n      targetAsset: targetAsset\n    };\n    var apiSuffix = '/v2/create-curated';\n    fetch(EMBLEM_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      body: JSON.stringify(body)\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context.sent;\n                tokenId = body.data.tokenId;\n                setTimeout(function () {\n                  location.href = location.origin + '/nft2?id=' + tokenId;\n                }, 500);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  var _useState6 = useState(''),\n      acct = _useState6[0],\n      setAcct = _useState6[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  return __jsx(Loader, {\n    loaded: state.loaded\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    }\n  }, __jsx(TabList, null, __jsx(Tab, null, \"Create Curated Vault\")), __jsx(TabPanels, null, __jsx(TabPanel, null, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(FormControl, null, __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1\n  }, __jsx(Divider, null), __jsx(FormLabel, {\n    htmlFor: \"project-selector\"\n  }, \"Choose Curated Collection\"), __jsx(Select, {\n    id: \"project-selector\",\n    w: \"100%\",\n    value: targetContract.name,\n    onChange: function onChange(e) {\n      var contractData = curatedContracts.filter(function (item) {\n        return item.name == e.target.value;\n      })[0];\n      setTargetContract(contractData);\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"---Choose Project---\"), curatedContracts.map(function (project) {\n    return __jsx(\"option\", {\n      value: project.name\n    }, project.name);\n  })), targetContract.name ? __jsx(Select, {\n    id: \"asset-selector\",\n    w: \"100%\",\n    value: targetAsset.name,\n    onChange: function onChange(e) {\n      setTargetAsset(curatedAssets[targetContract.chain][targetContract.name].filter(function (item) {\n        return item.name == e.target.value;\n      })[0]);\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"---Choose One---\"), curatedAssets[targetContract.chain][targetContract.name] ? curatedAssets[targetContract.chain][targetContract.name].map(function (asset) {\n    return __jsx(\"option\", {\n      value: asset.name\n    }, asset.name);\n  }) : null) : null, targetAsset.name ? __jsx(Image, {\n    p: \"20px\",\n    h: \"100%\",\n    className: \"d-block w-100\",\n    src: targetAsset.image,\n    width: \"250px\"\n  }) : null)))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true\n  }, __jsx(ButtonGroup, {\n    spacing: 4\n  }, !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\"\n  }, \"No Wallet Connected!\") : __jsx(Button, {\n    onClick: function onClick(e) {\n      handleSubmit(e);\n    },\n    type: \"submit\"\n  }, \"Create Vault\"))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}