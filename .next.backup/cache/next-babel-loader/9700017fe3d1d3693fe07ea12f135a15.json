{"ast":null,"code":"const isEvent = key => /^on[A-Z]/.test(key);\n\nconst getEventsFromProps = props => Object.keys(props).filter(isEvent).map(getEventFromKey);\n\nconst getEventFromKey = key => key.substr(2).toLowerCase();\n\nexport const unsub = (component, events = undefined) => {\n  (component.unsubs || [] // events not supplied, or event is in events list\n  ).filter(([event]) => !events || events.includes(event)).forEach(([, unsub]) => unsub());\n};\nexport const sub = (component, props) => {\n  // unsub existing subscriptions\n  unsub(component, getEventsFromProps(props)); // subscribe\n\n  component.unsubs = Object.keys(props).filter(isEvent).map(key => {\n    const type = getEventFromKey(key);\n    return [type, component.editor.on(type, props[key])];\n  });\n};","map":null,"metadata":{},"sourceType":"module"}