{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Text } from '@chakra-ui/core';\nimport { VStack } from '@chakra-ui/react';\nexport class Attributes extends Component {\n  render() {\n    let colorMode = this.props.colorMode;\n    let attributes = this.props.attributes;\n    return (// <Flex w=\"100%\" justify=\"center\" >\n      __jsx(VStack, {\n        justify: \"center\",\n        key: 0,\n        w: \"300px\",\n        flexWrap: \"wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, attributes.map(attribute => {\n        return __jsx(Box, {\n          d: \"flex\",\n          width: \"100%\",\n          backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n          alignItems: \"baseline\",\n          className: \"coin-balance-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        }, __jsx(Box, {\n          width: \"100%\",\n          color: \"gray.200\",\n          textAlign: \"center\",\n          fontSize: \"sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }\n        }, __jsx(Text, {\n          color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, attribute.trait_type), __jsx(Text, {\n          color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, attribute.value)));\n      })) // </Flex>\n\n    );\n  }\n\n}\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Text","VStack","Attributes","render","colorMode","props","attributes","map","attribute","trait_type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAGEC,IAHF,QAQO,iBARP;AAUA,SAAgBC,MAAhB,QAAsC,kBAAtC;AAOA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAoD;AACzDK,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,WACE;AAEM,YAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,GAAG,EAAE,CAA9B;AAAiC,QAAA,CAAC,EAAC,OAAnC;AAA2C,QAAA,QAAQ,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,UAAU,CAACC,GAAX,CAAeC,SAAS,IAAE;AACxB,eACE,MAAC,GAAD;AAAK,UAAA,CAAC,EAAC,MAAP;AAAa,UAAA,KAAK,EAAC,MAAnB;AAA0B,UAAA,eAAe,EAAEJ,SAAS,IAAI,OAAb,GAAsB,UAAtB,GAAkC,UAA7E;AAAyF,UAAA,UAAU,EAAC,UAApG;AAA+G,UAAA,SAAS,EAAC,sBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAC,UAAxB;AAAmC,UAAA,SAAS,EAAC,QAA7C;AAAsD,UAAA,QAAQ,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqEI,SAAS,CAACC,UAA/E,CADF,EAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqEI,SAAS,CAACE,KAA/E,CAFF,CADF,CADF;AAQD,OATD,CAFJ,CAHR,CAkBE;;AAlBF;AAoBD;;AAxBwD;AA2B3D,eAAeR,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            <VStack justify=\"center\" key={0} w=\"300px\" flexWrap=\"wrap\">\n              {\n                attributes.map(attribute=>{\n                  return (\n                    <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.700\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n                      <Box width=\"100%\" color=\"gray.200\" textAlign=\"center\" fontSize=\"sm\" >\n                        <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n                        <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n                      </Box>\n                    </Box>\n                  )\n                })\n              }\n            </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}