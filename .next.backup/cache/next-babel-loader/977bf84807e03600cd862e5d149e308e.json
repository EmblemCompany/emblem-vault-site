{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { walletconnect } from '../connectors';\nimport { UserRejectedRequestError } from '@web3-react/walletconnect-connector';\nexport default function WalletConnect() {\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      error = _useWeb3React.error,\n      activate = _useWeb3React.activate,\n      setError = _useWeb3React.setError;\n\n  var _useState = useState(false),\n      connecting = _useState[0],\n      setConnecting = _useState[1];\n\n  useEffect(function () {\n    if (active || error) {\n      setConnecting(false);\n    }\n  }, [active, error]);\n\n  if (error) {\n    return null;\n  }\n\n  return __jsx(Button, {\n    isLoading: connecting,\n    leftIcon: 'walletconnect',\n    onClick: function onClick() {\n      var _walletconnect$wallet, _walletconnect$wallet2;\n\n      setConnecting(true); // reset the connector if it was tried already\n\n      if (walletconnect !== null && walletconnect !== void 0 && (_walletconnect$wallet = walletconnect.walletConnectProvider) !== null && _walletconnect$wallet !== void 0 && (_walletconnect$wallet2 = _walletconnect$wallet.wc) !== null && _walletconnect$wallet2 !== void 0 && _walletconnect$wallet2.uri) {\n        walletconnect.walletConnectProvider = undefined;\n      }\n\n      activate(walletconnect, undefined, true)[\"catch\"](function (error) {\n        if (error instanceof UserRejectedRequestError) {\n          setConnecting(false);\n        } else {\n          setError(error);\n        }\n      });\n    }\n  }, \"WalletConnect\");\n}","map":null,"metadata":{},"sourceType":"module"}