{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TradeControls.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, Button, Select } from '@chakra-ui/core';\nimport { contractAddresses } from '../constants';\nimport { TransactionToast } from './TransactionToast';\nexport var TradeControls = /*#__PURE__*/function (_Component) {\n  _inherits(TradeControls, _Component);\n\n  var _super = _createSuper(TradeControls);\n\n  function TradeControls(props) {\n    _classCallCheck(this, TradeControls);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TradeControls, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      function checkOfferingAllowance(_x) {\n        return _checkOfferingAllowance.apply(this, arguments);\n      }\n\n      function _checkOfferingAllowance() {\n        _checkOfferingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenId) {\n          var allowed;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return this.props.nftContract.getApproved(tokenId);\n\n                case 2:\n                  allowed = _context.sent;\n                  this.props.setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n        return _checkOfferingAllowance.apply(this, arguments);\n      }\n\n      function checkAcceptingAllowance(_x2) {\n        return _checkAcceptingAllowance.apply(this, arguments);\n      }\n\n      function _checkAcceptingAllowance() {\n        _checkAcceptingAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenId) {\n          var allowed;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return this.props.nftContract.getApproved(tokenId);\n\n                case 2:\n                  allowed = _context2.sent;\n                  this.props.setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\");\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n        return _checkAcceptingAllowance.apply(this, arguments);\n      }\n\n      var approveOffer = function approveOffer(tokenId) {\n        // debugger\n        console.log(\"checking offer for\", tokenId);\n\n        _this.props.nftContract.approve(contractAddresses.nftrade[_this.props.chainId], tokenId && typeof tokenId === \"string\" ? tokenId : _this.props.offeringTokenId).then(function (_ref) {\n          var hash = _ref.hash;\n\n          _this.props.setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var makeOffer = function makeOffer(tokenId) {\n        ;\n\n        _this.props.tradeContract.addOffer(contractAddresses.emblemVault[_this.props.chainId], _this.props.offeringTokenId, contractAddresses.emblemVault[_this.props.chainId], tokenId).then(function (_ref2) {\n          var hash = _ref2.hash;\n\n          _this.props.setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var acceptOffer = function acceptOffer() {\n        ;\n\n        _this.props.tradeContract.acceptOffer(contractAddresses.emblemVault[_this.props.chainId], _this.props.acceptingTokenId, Number(_this.props.acceptingOfferingIndex)).then(function (_ref3) {\n          var hash = _ref3.hash;\n\n          _this.props.setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var rejectOffer = function rejectOffer() {\n        ;\n\n        _this.props.tradeContract.rejectOffer(contractAddresses.emblemVault[_this.props.chainId], _this.props.acceptingTokenId, Number(_this.props.acceptingOfferingIndex)).then(function (_ref4) {\n          var hash = _ref4.hash;\n\n          _this.props.setHash(hash);\n        }); // .catch((error: ErrorWithCode) => {\n        //   if (error?.code == 4001) {\n        //     setApproving(false)\n        //   }\n        // })\n\n      };\n\n      var flexSettings = {\n        flex: '1',\n        minW: '300px',\n        maxW: '300px',\n        borderWidth: '1px',\n        color: 'white',\n        mx: '6',\n        mb: '6',\n        rounded: 'lg',\n        overflow: 'hidden',\n        borderColor: this.props.vault.status == 'claimed' ? 'green !important' : '',\n        cursor: 'pointer'\n      };\n      return __jsx(Box, _extends({}, flexSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }), !this.props.vault.mine ? __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"94%\",\n        placeholder: \"Offer NFT\",\n        onChange: function onChange(e) {\n          var tokenId = e.target.value; // console.log(e.target.value)\n\n          _this.props.setOfferingTokenId(tokenId);\n\n          checkOfferingAllowance(tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 35\n        }\n      }, this.props.myVaults.map(function (vault, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: _this.props.vault.tokenId,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 20\n          }\n        }, vault.name);\n      })) : __jsx(Select, {\n        p: 2,\n        m: 2,\n        w: \"94%\",\n        placeholder: \"Offers\",\n        onChange: function onChange(e) {\n          var index = e.target.value;\n          console.log(e.target.value);\n\n          _this.props.setAcceptingOfferIndex(index);\n\n          _this.props.setAcceptingTokenId(_this.props.vault.tokenId);\n\n          checkAcceptingAllowance(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, this.props.vault.offers.map(function (offer, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 22\n          }\n        }, Number(offer.tokenId));\n      })), this.props.offeringTokenId && !this.props.vault.mine ? this.props.offeringTokenAllowed ? __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          makeOffer(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 99\n        }\n      }, \"Make Offer\") : __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: approveOffer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 34\n        }\n      }, \"Approve\") : null, this.props.acceptingOfferingIndex && this.props.vault.mine ? this.props.acceptingTokenAllowed ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          acceptOffer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 106\n        }\n      }, \"Accept Offer\") : __jsx(Button, {\n        m: 2,\n        onClick: function onClick() {\n          approveOffer(_this.props.vault.tokenId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 36\n        }\n      }, \"Approve\") : null, this.props.acceptingOfferingIndex && this.props.vault.mine ? __jsx(Button, {\n        m: 2,\n        w: \"94%\",\n        onClick: function onClick() {\n          rejectOffer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 71\n        }\n      }, \"Reject Offer\") : null, this.props.hash ? __jsx(TransactionToast, {\n        hash: this.props.hash,\n        onComplete: function onComplete() {\n          _this.props.setHash(null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }) : null);\n    }\n  }]);\n\n  return TradeControls;\n}(Component);\nexport default TradeControls;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/TradeControls.tsx"],"names":["React","Component","Box","Button","Select","contractAddresses","TransactionToast","TradeControls","props","checkOfferingAllowance","tokenId","nftContract","getApproved","allowed","setOfferingTokenAllowed","checkAcceptingAllowance","setAcceptingTokenAllowed","approveOffer","console","log","approve","nftrade","chainId","offeringTokenId","then","hash","setHash","makeOffer","tradeContract","addOffer","emblemVault","acceptOffer","acceptingTokenId","Number","acceptingOfferingIndex","rejectOffer","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","borderColor","vault","status","cursor","mine","e","target","value","setOfferingTokenId","myVaults","map","index","name","setAcceptingOfferIndex","setAcceptingTokenId","offers","offer","offeringTokenAllowed","acceptingTokenAllowed"],"mappings":"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","sourcesContent":["import React, { Component, Dispatch, useState } from 'react'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Input, FormHelperText, Select } from '@chakra-ui/core'\nimport { Contract } from '@ethersproject/contracts';\nimport { contractAddresses } from '../constants';\nimport { TransactionToast } from './TransactionToast';\n\n\ntype Vault = {\n  name: string,\n  tokenId: string\n}\ntype PropSettings = {\n  vault: {\n    mine: boolean,\n    status: string,\n    tokenId: string,\n    name: string,\n    offers: Array<Vault>\n  },\n  myVaults: Array<Vault>,\n  nftContract: Contract,\n  tradeContract: Contract,\n  chainId: number,\n  setOfferingTokenAllowed,\n  offeringTokenId,\n  setOfferingTokenId,\n  acceptingOfferingIndex,\n  setAcceptingOfferIndex,\n  offeringTokenAllowed,\n  acceptingTokenAllowed,\n  setAcceptingTokenAllowed,\n  acceptingTokenId,\n  setAcceptingTokenId,\n  hash,\n  setHash\n}\n\n\n\nexport class TradeControls extends Component<PropSettings> {\n\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    async function checkOfferingAllowance(tokenId) {\n      let allowed = await this.props.nftContract.getApproved(tokenId)\n      this.props.setOfferingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n    }\n\n    async function checkAcceptingAllowance(tokenId) {\n      let allowed = await this.props.nftContract.getApproved(tokenId)\n      this.props.setAcceptingTokenAllowed(allowed != \"0x0000000000000000000000000000000000000000\")\n    }\n\n    const approveOffer = (tokenId) => {\n      // debugger\n      console.log(\"checking offer for\", tokenId)\n        ; (this.props.nftContract as Contract)\n          .approve(contractAddresses.nftrade[this.props.chainId], (tokenId && typeof tokenId === \"string\" ? tokenId : this.props.offeringTokenId))\n          .then(({ hash }: { hash: string }) => {\n            this.props.setHash(hash)\n          })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const makeOffer = (tokenId) => {\n      ; (this.props.tradeContract as Contract)\n        .addOffer(contractAddresses.emblemVault[this.props.chainId], this.props.offeringTokenId, contractAddresses.emblemVault[this.props.chainId], tokenId)\n        .then(({ hash }: { hash: string }) => {\n          this.props.setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const acceptOffer = () => {\n      ; (this.props.tradeContract as Contract)\n        .acceptOffer(contractAddresses.emblemVault[this.props.chainId], this.props.acceptingTokenId, Number(this.props.acceptingOfferingIndex))\n        .then(({ hash }: { hash: string }) => {\n          this.props.setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const rejectOffer = () => {\n      ; (this.props.tradeContract as Contract)\n        .rejectOffer(contractAddresses.emblemVault[this.props.chainId], this.props.acceptingTokenId, Number(this.props.acceptingOfferingIndex))\n        .then(({ hash }: { hash: string }) => {\n          this.props.setHash(hash)\n        })\n      // .catch((error: ErrorWithCode) => {\n      //   if (error?.code == 4001) {\n      //     setApproving(false)\n      //   }\n      // })\n    }\n\n    const flexSettings = {\n      flex: '1',\n      minW: '300px',\n      maxW: '300px',\n      borderWidth: '1px',\n      color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: this.props.vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer',\n    }\n    return (\n      <Box {...flexSettings}>\n        {!this.props.vault.mine ? <Select p={2} m={2} w=\"94%\" placeholder=\"Offer NFT\" onChange={e => {\n          let tokenId = e.target.value; // console.log(e.target.value)\n\n          this.props.setOfferingTokenId(tokenId);\n          checkOfferingAllowance(tokenId);\n        }}>\n          {this.props.myVaults.map((vault, index) => {\n            return <option key={index} value={this.props.vault.tokenId}>{vault.name}</option>;\n          })}\n        </Select> : <Select p={2} m={2} w=\"94%\" placeholder=\"Offers\" onChange={e => {\n          let index = e.target.value;\n          console.log(e.target.value);\n          this.props.setAcceptingOfferIndex(index);\n          this.props.setAcceptingTokenId(this.props.vault.tokenId);\n          checkAcceptingAllowance(this.props.vault.tokenId);\n        }}>\n            {this.props.vault.offers.map((offer, index) => {\n              return <option key={index} value={index}>{Number(offer.tokenId)}</option>;\n            })}\n          </Select>}\n        {this.props.offeringTokenId && !this.props.vault.mine ? this.props.offeringTokenAllowed ? <Button m={2} onClick={() => {\n          makeOffer(this.props.vault.tokenId);\n        }}>Make Offer</Button> : <Button m={2} w=\"94%\" onClick={approveOffer}>Approve</Button> : null}\n        {this.props.acceptingOfferingIndex && this.props.vault.mine ? this.props.acceptingTokenAllowed ? <Button m={2} w=\"94%\" onClick={() => {\n          acceptOffer();\n        }}>Accept Offer</Button> : <Button m={2} onClick={() => {\n          approveOffer(this.props.vault.tokenId);\n        }}>Approve</Button> : null}\n        {this.props.acceptingOfferingIndex && this.props.vault.mine ? <Button m={2} w=\"94%\" onClick={() => {\n          rejectOffer();\n        }}>Reject Offer</Button> : null}\n        {this.props.hash ? (\n      <TransactionToast\n          hash={this.props.hash}\n          onComplete={() => {\n            this.props.setHash(null)\n          }}\n        />\n      ): null }\n      </Box>\n    );\n  }\n}\nexport default TradeControls"]},"metadata":{},"sourceType":"module"}