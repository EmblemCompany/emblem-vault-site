{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\n\nvar ErrorBoundary = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary() {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hasError: false,\n      error: null\n    });\n\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return this.props.fallback;\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true,\n        error: error\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport { ErrorBoundary as default };","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/ErrorBoundary.tsx"],"names":["Component","ErrorBoundary","hasError","error","state","props","fallback","children"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAAqC,OAArC;;IAGqBC,a;;;;;;;;;;;;;;;;4DACX;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,K;;;;;;;6BAOY;AAClB,UAAI,KAAKC,KAAL,CAAWF,QAAf,EAAyB;AACvB,eAAO,KAAKG,KAAL,CAAWC,QAAlB;AACD;;AACD,aAAO,KAAKD,KAAL,CAAWE,QAAlB;AACD;;;6CAX+BJ,K,EAAmD;AACjF,aAAO;AACLD,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,KAAK,EAALA;AAFK,OAAP;AAID;;;;EAPwCH,S;;SAAtBC,a","sourcesContent":["import { Component, ReactNode } from 'react'\nimport { TrackJS } from 'trackjs';\n\nexport default class ErrorBoundary extends Component<{ fallback: ReactNode; children: ReactNode }> {\n  state = { hasError: false, error: null }\n  static getDerivedStateFromError(error: Error): { hasError: boolean; error: Error } {\n    return {\n      hasError: true,\n      error,\n    }\n  }\n  render(): ReactNode {\n    if (this.state.hasError) {\n      return this.props.fallback\n    }\n    return this.props.children\n  }\n}\n"]},"metadata":{},"sourceType":"module"}