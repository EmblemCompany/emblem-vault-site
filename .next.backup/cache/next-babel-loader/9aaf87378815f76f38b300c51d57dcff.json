{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Text, Flex } from '@chakra-ui/core';\nexport var Attributes = /*#__PURE__*/function (_Component) {\n  _inherits(Attributes, _Component);\n\n  var _super = _createSuper(Attributes);\n\n  function Attributes() {\n    _classCallCheck(this, Attributes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Attributes, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colorMode = this.props.colorMode;\n      var attributes = this.props.attributes;\n      return __jsx(Flex, {\n        w: \"100%\",\n        justify: \"center\",\n        flexWrap: \"wrap\",\n        mt: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, attributes.map(function (attribute) {\n        return __jsx(Text, {\n          maxWidth: \"40px\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, attribute.trait_type);\n      })) // <Flex w=\"100%\" justify=\"center\" >\n      // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n      // <HStack>\n      //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n      //   {\n      //     attributes.map(attribute=>{\n      //       return (\n      //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n      //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n      //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n      //           </Box>\n      //         </Box>\n      //       )\n      //     })\n      //   }\n      //   </Flex>\n      // </HStack>\n      // </VStack>\n      // </Flex>\n      ;\n    }\n  }]);\n\n  return Attributes;\n}(Component);\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Text","Flex","Attributes","colorMode","props","attributes","map","attribute","trait_type"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAGEC,IAHF,EAOEC,IAPF,QAQO,iBARP;AAiBA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AAAA;;AACP,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,UAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,aACE,MAAC,IAAD;AAAM,QAAA,CAAC,EAAC,MAAR;AAAe,QAAA,OAAO,EAAC,QAAvB;AAAgC,QAAA,QAAQ,EAAC,MAAzC;AAAgD,QAAA,EAAE,EAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,UAAU,CAACC,GAAX,CAAe,UAAAC,SAAS,EAAE;AACxB,eACE,MAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBA,SAAS,CAACC,UAAlC,CADF;AAGD,OAJD,CAFJ,CADF,CAUE;AAEM;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEN;AA/BF;AAiCD;AArCH;;AAAA;AAAA,EAAgCT,SAAhC;AAwCA,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>\n        {\n          attributes.map(attribute=>{\n            return (\n              <Text maxWidth=\"40px\" >{attribute.trait_type}</Text>\n            )\n          })\n        }\n      </Flex>\n      // <Flex w=\"100%\" justify=\"center\" >\n       \n            // <VStack justify=\"center\" mt={10} key={0} w=\"340px\" >\n              // <HStack>\n              //   <Flex w={50} justify=\"center\" flexWrap=\"wrap\">\n              //   {\n              //     attributes.map(attribute=>{\n              //       return (\n              //         <Box d=\"flex\"width=\"100%\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.500\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n              //           <Box width=\"100%\" color=\"gray.500\" textAlign=\"center\" fontSize=\"sm\" >\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.trait_type}</Text>\n              //             <Text color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} >{attribute.value}</Text>\n              //           </Box>\n              //         </Box>\n              //       )\n              //     })\n              //   }\n              //   </Flex>\n              // </HStack>\n            // </VStack>\n          \n      // </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}