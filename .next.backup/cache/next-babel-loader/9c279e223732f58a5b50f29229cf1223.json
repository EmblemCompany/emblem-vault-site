{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/ApprovalButton.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Button, Flex } from '@chakra-ui/core';\nimport { Contract } from '@ethersproject/contracts';\nimport { useWeb3React } from '@web3-react/core';\n\nconst getContract = (address, abi, library, account) => {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nexport default function ApprovalButton(props) {\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    0: approved,\n    1: setApproved\n  } = useState(false);\n  const {\n    0: decimals,\n    1: setDecimals\n  } = useState(null);\n  const {\n    0: spendingContract,\n    1: setSpendingContract\n  } = useState(null);\n  const {\n    0: handlerContract,\n    1: setHandlerContract\n  } = useState(null);\n  useEffect(() => {\n    if (!handlerContract && props.handler) {\n      createHandlerContract(props.handler);\n    }\n  });\n  useEffect(() => {\n    if (!spendingContract && props.spending) {\n      createSpendingContract(props.spending);\n    }\n  });\n  useEffect(() => {\n    if (spendingContract) {\n      checkApproval(props.handler, props.spending, props.amount);\n    }\n  });\n  return account && !approved ? __jsx(Flex, {\n    w: \"100%\",\n    flexWrap: \"wrap\",\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: chooseApprovalFlow,\n    backgroundColor: \"#02b402\",\n    color: \"black !important\",\n    fontWeight: \"bold !important\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, props.label)) : null;\n\n  function createSpendingContract(spending) {\n    let _contract = getContract(spending.address, spending.abi, library, account);\n\n    setSpendingContract(_contract);\n  }\n\n  function createHandlerContract(handler) {\n    let _contract = getContract(handler.address, handler.abi, library, account);\n\n    setHandlerContract(_contract);\n  }\n\n  function checkApproval(handler, spending, amount) {\n    if (amount > 0) {\n      // IS ERC20 Approval Check\n      spendingContract.decimals().then(decimals => {\n        setDecimals(decimals);\n        spendingContract.allowance(account, handler.address).then(allowance => {\n          setApproved(allowance >= amount * 10 ** decimals);\n        });\n      });\n    } else {\n      // IS NFT Approval Check\n      spendingContract.isApprovedForAll(account, handler.address).then(approved => {\n        setApproved(approved);\n      });\n    }\n  }\n\n  function chooseApprovalFlow() {\n    if (props.amount > 0) {\n      return approveCovalFlow();\n    } else {\n      return approveNFTFlow();\n    }\n  }\n\n  function approveCovalFlow() {\n    spendingContract.approve(props.handler.address, 1000000 * 10 ** decimals).then(tx => {\n      props.watcher(tx.hash, receipt => {\n        if (receipt.status === 1) {\n          setApproved(true);\n        }\n      });\n    });\n  }\n\n  function approveNFTFlow() {\n    spendingContract.setApprovalForAll(props.handler.address, true).then(tx => {\n      props.watcher(tx.hash, receipt => {\n        if (receipt.status === 1) {\n          setApproved(true);\n        }\n      });\n    });\n  }\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/ApprovalButton.tsx"],"names":["React","useEffect","useState","Button","Flex","Contract","useWeb3React","getContract","address","abi","library","account","getSigner","connectUnchecked","ApprovalButton","props","approved","setApproved","decimals","setDecimals","spendingContract","setSpendingContract","handlerContract","setHandlerContract","handler","createHandlerContract","spending","createSpendingContract","checkApproval","amount","chooseApprovalFlow","label","_contract","then","allowance","isApprovedForAll","approveCovalFlow","approveNFTFlow","approve","tx","watcher","hash","receipt","status","setApprovalForAll"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { Button, Flex} from '@chakra-ui/core'\n\nimport { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  watcher: any\n}\nexport default function ApprovalButton(props: AttributesProps) {\n  \n  const { account, library } = useWeb3React()\n  const [approved, setApproved] = useState(false)\n  const [decimals, setDecimals] = useState(null)\n  const [spendingContract, setSpendingContract] = useState(null)\n  const [handlerContract, setHandlerContract] = useState(null)\n\n  useEffect(()=>{\n    if (!handlerContract && props.handler) {\n      createHandlerContract(props.handler)\n    }    \n  })\n\n  useEffect(()=>{\n    if (!spendingContract && props.spending) {\n      createSpendingContract(props.spending)\n    }    \n  })\n\n  useEffect(()=>{\n    if (spendingContract){\n      checkApproval(props.handler, props.spending, props.amount)\n    }\n  })\n  \n  return account && !approved? (\n    <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n      <Button onClick={chooseApprovalFlow} backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n        {props.label}\n      </Button>\n    </Flex>\n  ):null\n\n  function createSpendingContract(spending){\n    let _contract = getContract(spending.address, spending.abi, library, account)\n      setSpendingContract(_contract)\n  }\n\n  function createHandlerContract(handler){\n    let _contract = getContract(handler.address, handler.abi, library, account)\n      setHandlerContract(_contract)\n  }\n\n  function checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, amount: number) {\n    if (amount > 0) { // IS ERC20 Approval Check\n      spendingContract.decimals().then((decimals: any) => {\n        setDecimals(decimals)\n        spendingContract.allowance(account, handler.address).then((allowance: any) => {\n          setApproved(allowance >= amount * 10 ** decimals)\n        })\n      })\n    } else { // IS NFT Approval Check\n      spendingContract.isApprovedForAll(account, handler.address).then((approved: any) => {\n        setApproved(approved)\n      })\n    }\n  }\n\n\n  function chooseApprovalFlow() {\n    if (props.amount > 0) { \n      return approveCovalFlow()\n    } else {\n      return approveNFTFlow()\n    }\n  }\n  function approveCovalFlow () {\n    spendingContract.approve(props.handler.address, 1000000 * 10 ** decimals).then((tx: any) => {\n      props.watcher(tx.hash, (receipt: any) => {\n        if (receipt.status === 1) {\n          setApproved(true)\n        }\n      })\n    })\n  }\n  function approveNFTFlow () {\n    spendingContract.setApprovalForAll(props.handler.address, true).then((tx: any) => {\n      props.watcher(tx.hash, (receipt: any) => {\n        if (receipt.status === 1) {\n          setApproved(true)\n        }\n      })\n    })\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}