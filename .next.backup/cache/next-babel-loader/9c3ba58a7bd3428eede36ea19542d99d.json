{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { abi as HandlerABI } from './abi/handler.json';\nimport { abi as CovalABI } from './abi/coval.json';\nimport { abi as EmblemABI } from './abi/emblem.json';\nexport const BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nexport const COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nexport const isIPFS = process.env.IPFS === 'true';\nexport const isServerSide = true;\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport const DEFAULT_APPROVE_MAX = true;\nexport const DEFAULT_DEADLINE = 60 * 20;\nexport const DEFAULT_SLIPPAGE = 50;\nexport const GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nexport const ZERO = JSBI.BigInt(0);\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const contractAddresses = {\n  vaultHandler: {\n    1: '0x26C40CE48EE3fc0B2d3C07eA7a64479F3B34F428',\n    4: '0xb03D438771478e22a177df6595b287b2D20f7c52'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7d1f932b4c2811a70edffdd6ae2eb60e6'\n  },\n  covalAbi: CovalABI\n};\nexport const EMBLEM_API = 'https://api.emblemvault.io';\nexport let QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nexport const ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];","map":null,"metadata":{},"sourceType":"module"}