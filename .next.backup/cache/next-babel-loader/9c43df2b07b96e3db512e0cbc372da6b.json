{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Box, Link, Flex } from '@chakra-ui/core';\nimport { HStack } from '@chakra-ui/react';\nexport class Attributes extends Component {\n  render() {\n    let colorMode = this.props.colorMode;\n    let attributes = this.props.attributes;\n    return __jsx(Flex, {\n      w: \"100%\",\n      justify: \"center\",\n      flexWrap: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Box, {\n      mt: 5,\n      d: \"flex\",\n      backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n      alignItems: \"baseline\",\n      className: \"coin-balance-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      ml: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(HStack, {\n      key: 0,\n      w: \"300px\",\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, attributes.map(attribute => {\n      return __jsx(Link, {\n        className: \"view-nft-link\",\n        color: this.props.colorMode == \"dark\" ? \"navajowhite\" : \"gray\",\n        onClick: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"attrib\");\n    })))));\n  }\n\n}\nexport default Attributes;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Attributes.tsx"],"names":["React","Component","Box","Link","Flex","HStack","Attributes","render","colorMode","props","attributes","map","attribute"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,GADF,EAIEC,IAJF,EAOEC,IAPF,QAQO,iBARP;AAUA,SAAQC,MAAR,QAAsC,kBAAtC;AAOA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAoD;AACzDM,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,WACE,MAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,OAAO,EAAC,QAAvB;AAAgC,MAAA,QAAQ,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,CAAC,EAAC,MAAd;AAAqB,MAAA,eAAe,EAAEF,SAAS,IAAI,OAAb,GAAsB,UAAtB,GAAkC,UAAxE;AAAoF,MAAA,UAAU,EAAC,UAA/F;AAA0G,MAAA,SAAS,EAAC,sBAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,aAAa,EAAC,MAApC;AAA2C,MAAA,QAAQ,EAAC,IAApD;AAAyD,MAAA,EAAE,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,CAAb;AAAgB,MAAA,CAAC,EAAC,OAAlB;AAA0B,MAAA,CAAC,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIE,UAAU,CAACC,GAAX,CAAeC,SAAS,IAAE;AACxB,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWD,SAAX,IAAsB,MAAtB,GAA+B,aAA/B,GAA8C,MAArF;AAA6F,QAAA,OAAO,EAAE,MAAI,CAAE,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,KAJD,CAFJ,CADF,CADF,CADF,CADF;AAiBD;;AArBwD;AAwB3D,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\ntype AttributesProps = {\n  attributes: any[],\n  colorMode: string,\n}\n\nexport class Attributes extends Component<AttributesProps> {\n  render() {\n    let colorMode = this.props.colorMode\n    let attributes = this.props.attributes\n    return (\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\">\n        <Box mt={5} d=\"flex\" backgroundColor={colorMode == \"light\"? \"gray.100\": \"gray.700\"} alignItems=\"baseline\" className=\"coin-balance-content\">\n          <Box color=\"gray.500\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n            <HStack key={0} w=\"300px\" p={2} >\n              {\n                attributes.map(attribute=>{\n                  return (\n                    <Link className=\"view-nft-link\" color={this.props.colorMode==\"dark\" ? \"navajowhite\": \"gray\"} onClick={()=>{}}>attrib</Link>\n                  )\n                })\n              }\n            </HStack>\n          </Box>\n        </Box>\n      </Flex>\n    )\n  }\n}\n\nexport default Attributes\n"]},"metadata":{},"sourceType":"module"}