{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from 'react';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API } from '../constants';\nexport default function Create(props) {\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const [vaultAddress, setVaultAddress] = React.useState(account || '');\n  const [vaultPubPriv, setVaultPubPriv] = React.useState('Public');\n  const [vaultName, setVaultName] = React.useState('');\n  const [vaultDesc, setVaultDesc] = React.useState('');\n  const [vaultImage, setVaultImage] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [service, setService] = React.useState('');\n  const [state, setState] = React.useState({\n    loaded: true,\n    private: false\n  });\n  const [hash, setHash] = React.useState(null);\n\n  const handlePrivateRadio = e => {\n    console.log('Changed Private visibility', e);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setState({\n      loaded: false,\n      private: state.private\n    });\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        service: service\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        fromAddress: account,\n        toAddress: vaultAddress,\n        description: vaultDesc,\n        name: vaultName,\n        image: vaultImage,\n        chainId: chainId,\n        private: state.private,\n        password: password || ''\n      })\n    }).then(async function (response) {\n      setState({\n        loaded: true,\n        private: state.private\n      });\n      let body = await response.json();\n      setHash(body.data.tx);\n    });\n  };\n\n  function previewFile() {\n    const preview = document.querySelector('img');\n    const inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    const reader = new FileReader();\n    reader.addEventListener('load', function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  const [acct, setAcct] = React.useState('');\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: index => setTabIndex(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Make\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"My\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    value: vaultAddress,\n    onChange: e => setVaultAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: e => {\n      setVaultPubPriv(e.target.value);\n      setState({\n        loaded: state.loaded,\n        private: e.target.value === 'Private'\n      });\n      console.log('Private', e.target.value === 'Private');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, __jsx(Radio, {\n    value: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, \"Do you want people to be able to see the contents?\")), state.private ? __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: e => setPassword(e.target.value),\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), __jsx(FormHelperText, {\n    id: \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \"This password will encrypt and decrypt the contents of this vault\")) : ''), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Next\")))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 23\n    }\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    value: vaultName,\n    onChange: e => setVaultName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"Give it some love so you can find it later.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    value: vaultDesc,\n    onChange: e => setVaultDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }, \"Want to add some fluffy text to tell people what the point is?\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: () => setTabIndex(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, \"Next\"))))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, \"Vault Image\"), __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: () => previewFile(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }), __jsx(\"img\", {\n    src: \"\",\n    width: \"200\",\n    alt: \"Image preview...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  })))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"service\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 23\n    }\n  }, \"Password:\"), __jsx(Input, {\n    type: \"password\",\n    id: \"service\",\n    \"aria-describedby\": \"service\",\n    onChange: e => setService(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 23\n    }\n  }))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: () => setTabIndex(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    isDisabled: !account || !vaultAddress || !vaultName || !vaultDesc || !service,\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, \"DO IT!\"))))))))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: () => {\n      alert(\"Done\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 16\n    }\n  }) : '');\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx"],"names":["FormControl","FormLabel","FormHelperText","Input","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","RadioGroup","Radio","Textarea","Button","ButtonGroup","Loader","useWeb3React","React","useEffect","TransactionToast","EMBLEM_API","Create","props","tabIndex","setTabIndex","useState","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","password","setPassword","service","setService","state","setState","loaded","private","hash","setHash","handlePrivateRadio","e","console","log","handleSubmit","evt","preventDefault","fetch","method","headers","Authorization","body","JSON","stringify","fromAddress","toAddress","description","name","image","then","response","json","data","tx","previewFile","preview","document","querySelector","inputelement","reader","FileReader","addEventListener","src","result","toString","files","readAsDataURL","acct","setAcct","index","target","value","alert"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex,\n  RadioGroup,\n  Radio,\n  Textarea,\n  Button,\n  ButtonGroup,\n} from '@chakra-ui/core'\n\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from 'react'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API } from '../constants'\n\nexport default function Create(props: any) {\n  const [tabIndex, setTabIndex] = React.useState(0)\n  const { account, chainId } = useWeb3React()\n\n  const [vaultAddress, setVaultAddress] = React.useState(account || '')\n  const [vaultPubPriv, setVaultPubPriv] = React.useState('Public')\n  const [vaultName, setVaultName] = React.useState('')\n  const [vaultDesc, setVaultDesc] = React.useState('')\n  const [vaultImage, setVaultImage] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [service, setService] = React.useState('')\n  const [state, setState] = React.useState({ loaded: true, private: false })\n  const [hash, setHash] = React.useState(null)\n\n  const handlePrivateRadio = (e) => {\n    console.log('Changed Private visibility', e)\n  }\n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n    setState({ loaded: false, private: state.private })\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Basic YWRtaW46c3VwZXJzZWNyZXQ=',\n        'Content-Type': 'application/json',\n        service: service,\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        fromAddress: account,\n        toAddress: vaultAddress,\n        description: vaultDesc,\n        name: vaultName,\n        image: vaultImage,\n        chainId: chainId,\n        private: state.private,\n        password: password || '',\n      }),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      setHash(body.data.tx)\n    })\n  }\n\n  function previewFile() {\n    const preview = document.querySelector('img')\n    const inputelement = document.querySelector('input[type=file]') as HTMLInputElement //.files[0];\n    const reader = new FileReader()\n\n    reader.addEventListener(\n      'load',\n      function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || ''\n        if (preview) setVaultImage(preview.src)\n      },\n      false\n    )\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0])\n    }\n  }\n\n  const [acct, setAcct] = React.useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n    }\n  }, [account, acct])\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Make</Tab>\n              <Tab>My</Tab>\n              <Tab>Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"owner-address\">Vault Owner Address</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"owner-address\"\n                        aria-describedby=\"owner-helper-text\"\n                        placeholder=\"0xdeadbeef\"\n                        value={vaultAddress}\n                        onChange={(e) => setVaultAddress(e.target.value)}\n                      />\n                      <FormHelperText id=\"owner-helper-text\">\n                        What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet,\n                        this will populate automagically with your address.\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl as=\"fieldset\" isRequired>\n                      <FormLabel>Public or Private?</FormLabel>\n                      <RadioGroup\n                        id=\"pubpriv\"\n                        defaultValue=\"Public\"\n                        onChange={(e) => {\n                          setVaultPubPriv(e.target.value)\n                          setState({ loaded: state.loaded, private: e.target.value === 'Private' })\n                          console.log('Private', e.target.value === 'Private')\n                        }}\n                      >\n                        <Radio value=\"Public\">Public</Radio>\n                        <Radio value=\"Private\">Private</Radio>\n                      </RadioGroup>\n                      <FormHelperText id=\"email-helper-text\">\n                        Do you want people to be able to see the contents?\n                      </FormHelperText>\n                    </FormControl>\n                    {state.private ? (\n                      <FormControl>\n                        <FormLabel>Password</FormLabel>\n                        <Input\n                          type=\"password\"\n                          id=\"vault-password\"\n                          onChange={(e) => setPassword(e.target.value)}\n                          aria-describedby=\"password-helper-text\"\n                        />\n                        <FormHelperText id=\"password-helper-text\">\n                          This password will encrypt and decrypt the contents of this vault\n                        </FormHelperText>\n                      </FormControl>\n                    ) : (\n                      ''\n                    )}\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <Button onClick={() => setTabIndex(1)}>Next</Button>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-name\">Vault Name</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"vault-name\"\n                        aria-describedby=\"vault-name-text\"\n                        value={vaultName}\n                        onChange={(e) => setVaultName(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-name-text\">Give it some love so you can find it later.</FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired>\n                      <FormLabel htmlFor=\"vault-desc\">Vault Description</FormLabel>\n                      <Textarea\n                        id=\"vault-desc\"\n                        size=\"lg\"\n                        aria-describedby=\"vault-desc-text\"\n                        value={vaultDesc}\n                        onChange={(e) => setVaultDesc(e.target.value)}\n                      />\n                      <FormHelperText id=\"vault-desc-text\">\n                        Want to add some fluffy text to tell people what the point is?\n                      </FormHelperText>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(0)}>Back</Button>\n                      <Button onClick={() => setTabIndex(2)}>Next</Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"vault-img\">Vault Image</FormLabel>\n                      <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <input type=\"file\" onChange={() => previewFile()} />\n                        <br />\n                        <img src=\"\" width=\"200\" alt=\"Image preview...\"></img>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"service\">Password:</FormLabel>\n                      <Input\n                        type=\"password\"\n                        id=\"service\"\n                        aria-describedby=\"service\"\n                        onChange={(e) => setService(e.target.value)}\n                      />\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(1)}>Back</Button>\n                      <Button\n                        isDisabled={!account || !vaultAddress || !vaultName || !vaultDesc || !service}\n                        onClick={handleSubmit}\n                        type=\"submit\"\n                      >\n                        DO IT!\n                      </Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      { hash ? <TransactionToast hash={hash} onComplete={()=>{alert(\"Done\")}} /> : ''}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}