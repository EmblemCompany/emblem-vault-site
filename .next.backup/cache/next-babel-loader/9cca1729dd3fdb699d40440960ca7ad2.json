{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Flex, Text, Link, Image, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from 'react';\nimport { validImage } from '../utils';\nimport { EMBLEM_API } from '../constants';\nexport default function VaultList() {\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const [vaults, setVaults] = React.useState([]);\n  const [state, setState] = React.useState({\n    loaded: false\n  });\n\n  const getVaults = async () => {\n    const responce = await fetch(EMBLEM_API + '/vaults/' + account, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainId: chainId.toString()\n      }\n    });\n    const jsonData = await responce.json();\n    setState({\n      loaded: true\n    });\n    setVaults(jsonData);\n  };\n\n  useEffect(() => {\n    getVaults();\n  }, []);\n  return __jsx(Loader, {\n    loaded: state.loaded\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\"\n  }, vaults.length ? vaults.map((vault, index) => {\n    let pieces = location.pathname.split('/');\n    pieces.pop();\n    let url = location.origin + pieces.join('/') + '/vault?id=' + vault.tokenId;\n    const flexSettings = {\n      flex: '1',\n      minW: '300px',\n      maxW: '300px',\n      borderWidth: '1px',\n      color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden'\n    };\n\n    const redirect = function () {\n      location.href = url;\n    };\n\n    return __jsx(Box, _extends({\n      key: index\n    }, flexSettings, {\n      onClick: redirect\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\"\n    }, vault.name), __jsx(Stack, {\n      align: \"center\"\n    }, __jsx(Image, {\n      src: validImage(vault.image) ? vault.image : 'https://circuitsofvalue.com/public/coval-logo.png',\n      p: 2\n    })), __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\"\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      ml: \"2\"\n    }, vault.isPrivate ? __jsx(React.Fragment, null, __jsx(Text, null, \"Contents hidden. Click to view the vault and unlock values.\")) : vault.values.length ? vault.values.map(coin => {\n      return __jsx(Text, {\n        key: coin.name,\n        isTruncated: true\n      }, coin.name, \": \", coin.balance);\n    }) : __jsx(Text, null, \"Nothing in here! Fill 'er up!\"))));\n  }) : __jsx(Text, null, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\"\n  }, \"CREATE ONE HERE!\"))));\n}","map":null,"metadata":{},"sourceType":"module"}