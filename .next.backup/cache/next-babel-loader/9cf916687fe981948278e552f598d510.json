{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport dynamic from 'next/dynamic';\nimport { CHAIN_ID_NAMES } from '../utils';\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks';\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context';\nimport ColorBox from './ColorBox';\nimport Account from './Account';\nimport { TransactionToast } from './TransactionToast';\nimport TokenBalance from './TokenBalance';\nimport { WETH, ChainId } from '@uniswap/sdk';\nimport WalletConnect from './WalletConnect';\nimport { QueryParameters } from '../constants';\nvar Settings = dynamic(_c = function _c() {\n  return import('./Settings');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./Settings')];\n    },\n    modules: ['./Settings']\n  }\n});\n_c2 = Settings;\nexport default function Layout(_ref) {\n  _s();\n\n  var _this = this;\n\n  var children = _ref.children;\n\n  var _useWeb3React = useWeb3React(),\n      chainId = _useWeb3React.chainId,\n      account = _useWeb3React.account;\n\n  var isTestnet = typeof chainId === 'number' && chainId !== 1;\n\n  var _useDisclosure = useDisclosure(),\n      isOpenSettings = _useDisclosure.isOpen,\n      onOpenSettings = _useDisclosure.onOpen,\n      onCloseSettings = _useDisclosure.onClose;\n\n  var _useFirstToken = useFirstToken(),\n      _useFirstToken2 = _slicedToArray(_useFirstToken, 1),\n      firstToken = _useFirstToken2[0];\n\n  var _useSecondToken = useSecondToken(),\n      _useSecondToken2 = _slicedToArray(_useSecondToken, 1),\n      secondToken = _useSecondToken2[0];\n\n  var _useShowUSD = useShowUSD(),\n      _useShowUSD2 = _slicedToArray(_useShowUSD, 2),\n      showUSD = _useShowUSD2[0],\n      setShowUSD = _useShowUSD2[1];\n\n  var _useTransactions = useTransactions(),\n      _useTransactions2 = _slicedToArray(_useTransactions, 1),\n      transactions = _useTransactions2[0]; // automatically try connecting to the injected connector on pageload\n\n\n  var triedToEagerConnect = useEagerConnect();\n  var queryParameters = useQueryParameters();\n  var requiredChainId = queryParameters[QueryParameters.CHAIN];\n  var USDETHPrice = useUSDETHPrice();\n\n  var handleNavigationclick = function handleNavigationclick() {\n    console.log(location.pathname);\n\n    if (location.pathname.includes(\"vaultlist\")) {\n      location.pathname = \"/vaultlist\";\n    } else {\n      location.pathname = \"/create\";\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Settings, {\n    isOpen: isOpenSettings,\n    onClose: onCloseSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(ColorBox, {\n    as: Flex,\n    flexDirection: \"column\",\n    borderColor: \"orange.500\",\n    borderWidth: isTestnet ? '.5rem' : '0',\n    minHeight: \"100vh\",\n    maxHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexShrink: 0,\n    overflowX: \"auto\",\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(IconButton, {\n    m: 2,\n    icon: \"settings\",\n    variant: \"ghost\",\n    onClick: onOpenSettings,\n    \"aria-label\": \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    m: 2,\n    variant: \"ghost\",\n    onClick: handleNavigationclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \" \", location.pathname.includes(\"vaultlist\") ? \"Home\" : \"My Vaults\")), __jsx(Account, {\n    triedToEagerConnect: triedToEagerConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    mt: isTestnet ? '5rem' : '4.5rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, typeof account !== 'string' ? !triedToEagerConnect || (typeof chainId === 'number' ? chainId !== ChainId.MAINNET : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, __jsx(WalletConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })) : [firstToken, secondToken].filter(function (token) {\n    return token;\n  }).filter(function (token) {\n    return !(token === null || token === void 0 ? void 0 : token.equals(WETH[token.chainId]));\n  }).map(function (token) {\n    return __jsx(Box, {\n      key: token === null || token === void 0 ? void 0 : token.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(TokenBalance, {\n      token: token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Flex, {\n    flexGrow: 1,\n    direction: \"column\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, children), __jsx(Flex, {\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, typeof chainId === 'number' && __jsx(LightMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(Badge, {\n    variant: \"solid\",\n    variantColor: isTestnet ? 'orange' : undefined,\n    fontSize: \"1rem\",\n    style: {\n      borderTopLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, CHAIN_ID_NAMES[chainId]))), transactions.length > 0 && __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, transactions.filter(function (transaction) {\n    return transaction.chainId === chainId;\n  }).map(function (_ref2) {\n    var hash = _ref2.hash;\n    return __jsx(Box, {\n      key: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, __jsx(TransactionToast, {\n      hash: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }));\n  }))));\n}\n\n_s(Layout, \"2i6ifyng28hYCLGD7nYfehpK3X0=\", false, function () {\n  return [useWeb3React, useDisclosure, useFirstToken, useSecondToken, useShowUSD, useTransactions, useEagerConnect, useQueryParameters, useUSDETHPrice];\n});\n\n_c3 = Layout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Settings$dynamic\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"Layout\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx"],"names":["Flex","IconButton","useDisclosure","Badge","LightMode","Stack","Box","Button","useWeb3React","dynamic","CHAIN_ID_NAMES","useEagerConnect","useQueryParameters","useUSDETHPrice","useTransactions","useFirstToken","useSecondToken","useShowUSD","ColorBox","Account","TransactionToast","TokenBalance","WETH","ChainId","WalletConnect","QueryParameters","Settings","Layout","children","chainId","account","isTestnet","isOpenSettings","isOpen","onOpenSettings","onOpen","onCloseSettings","onClose","firstToken","secondToken","showUSD","setShowUSD","transactions","triedToEagerConnect","queryParameters","requiredChainId","CHAIN","USDETHPrice","handleNavigationclick","console","log","location","pathname","includes","MAINNET","filter","token","equals","map","address","undefined","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","length","transaction","hash"],"mappings":"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","sourcesContent":["import { ReactNode } from 'react'\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Radio, Button } from '@chakra-ui/core'\nimport { useWeb3React } from '@web3-react/core'\nimport dynamic from 'next/dynamic'\n\nimport { CHAIN_ID_NAMES } from '../utils'\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks'\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context'\nimport ColorBox from './ColorBox'\nimport Account from './Account'\nimport { TransactionToast } from './TransactionToast'\nimport TokenBalance from './TokenBalance'\nimport { WETH, ChainId, Token } from '@uniswap/sdk'\nimport WalletConnect from './WalletConnect'\nimport { QueryParameters } from '../constants'\n\nconst Settings = dynamic(() => import('./Settings'))\n\nexport default function Layout({ children }: { children: ReactNode }): JSX.Element {\n  const { chainId, account } = useWeb3React()\n  const isTestnet = typeof chainId === 'number' && chainId !== 1\n\n  const { isOpen: isOpenSettings, onOpen: onOpenSettings, onClose: onCloseSettings } = useDisclosure()\n\n  const [firstToken] = useFirstToken()\n  const [secondToken] = useSecondToken()\n  const [showUSD, setShowUSD] = useShowUSD()\n\n  const [transactions] = useTransactions()\n\n  // automatically try connecting to the injected connector on pageload\n  const triedToEagerConnect = useEagerConnect()\n\n  const queryParameters = useQueryParameters()\n  const requiredChainId = queryParameters[QueryParameters.CHAIN]\n\n  const USDETHPrice = useUSDETHPrice()\n  const handleNavigationclick = ()=>{\n    console.log(location.pathname)\n    if (location.pathname.includes(\"vaultlist\")) {\n      location.pathname=\"/vaultlist\"\n    } else {\n      location.pathname=\"/create\"\n    }\n    \n  }\n  return (\n    <>\n      <Settings isOpen={isOpenSettings} onClose={onCloseSettings} />\n\n      <ColorBox\n        as={Flex}\n        flexDirection=\"column\"\n        borderColor=\"orange.500\"\n        borderWidth={isTestnet ? '.5rem' : '0'}\n        minHeight=\"100vh\"\n        maxHeight=\"100vh\"\n      >\n        <Flex justifyContent=\"space-between\" flexShrink={0} overflowX=\"auto\" p=\"1rem\">\n          <Stack spacing={0} direction=\"row\">\n            <IconButton m={2} icon=\"settings\" variant=\"ghost\" onClick={onOpenSettings} aria-label=\"Settings\" />            \n              <Button m={2} variant=\"ghost\"  onClick={handleNavigationclick}> {\n                  location.pathname.includes(\"vaultlist\") ? \"Home\" : \"My Vaults\"\n              }\n              </Button>\n          </Stack>\n          <Account triedToEagerConnect={triedToEagerConnect} />\n        </Flex>\n\n        <Stack\n          position=\"absolute\"\n          top={0}\n          right={0}\n          m={isTestnet ? '1.5rem' : '1rem'}\n          mt={isTestnet ? '5rem' : '4.5rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n          zIndex={2}\n        >\n          {typeof account !== 'string' ? (\n            !triedToEagerConnect ||\n            (typeof chainId === 'number'\n              ? chainId !== ChainId.MAINNET\n              : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : (\n              <Box>\n                <WalletConnect />\n              </Box>\n            )\n          ) : (\n            [firstToken, secondToken]\n              .filter((token) => token)\n              .filter((token) => !token?.equals(WETH[token.chainId]))\n              .map((token) => (\n                <Box key={token?.address}>\n                  <TokenBalance token={token as Token} />\n                </Box>\n              ))\n          )}\n        </Stack>\n\n        <Flex flexGrow={1} direction=\"column\" overflow=\"auto\">\n          {children}\n        </Flex>\n\n        <Flex minHeight=\"1.5rem\">\n          {typeof chainId === 'number' && (\n            <LightMode>\n              <Badge\n                variant=\"solid\"\n                variantColor={isTestnet ? 'orange' : undefined}\n                fontSize=\"1rem\"\n                style={{ borderTopLeftRadius: 0, borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}\n              >\n                {CHAIN_ID_NAMES[chainId]}\n              </Badge>\n            </LightMode>\n          )}\n        </Flex>\n\n        {transactions.length > 0 && (\n          <Stack\n            position=\"absolute\"\n            bottom={0}\n            right={0}\n            m={isTestnet ? '1.5rem' : '1rem'}\n            alignItems=\"flex-end\"\n            spacing=\"1rem\"\n            zIndex={2}\n          >\n            {transactions\n              .filter((transaction) => transaction.chainId === chainId)\n              .map(({ hash }) => (\n                <Box key={hash}>\n                  <TransactionToast hash={hash} />\n                </Box>\n              ))}\n          </Stack>\n        )}\n      </ColorBox>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}