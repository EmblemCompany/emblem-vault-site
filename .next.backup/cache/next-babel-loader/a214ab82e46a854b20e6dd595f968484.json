{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Image, Text } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nexport default function Vault() {\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query,\n      pathname = _useRouter.pathname,\n      replace = _useRouter.replace;\n\n  var _React$useState = React.useState(query.id),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tokenId = _React$useState2[0],\n      setTokenId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      vaultName = _React$useState4[0],\n      setVaultName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vaultDesc = _React$useState6[0],\n      setVaultDesc = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      vaultImage = _React$useState8[0],\n      setVaultImage = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      vaultValues = _React$useState10[0],\n      setVaultValues = _React$useState10[1];\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.emblemvault.io/meta/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'service': 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context.sent;\n              _context.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context.sent;\n              setVaultName(jsonData.name);\n              setVaultImage(jsonData.image);\n              setVaultDesc(jsonData.description);\n              setVaultValues(jsonData.values);\n              setVaultDesc(jsonData.description);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVault() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVault();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\"\n  }, __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  }, vaultName, __jsx(Image, {\n    src: vaultImage ? vaultImage : \"https://circuitsofvalue.com/public/coval-logo.png\",\n    size: \"250px\"\n  })), __jsx(Box, {\n    p: \"6\"\n  }, __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\"\n  }, __jsx(Box, {\n    color: \"gray.500\",\n    fontWeight: \"semibold\",\n    letterSpacing: \"wide\",\n    fontSize: \"xs\",\n    ml: \"2\"\n  }, vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(Text, {\n      key: coin.name\n    }, coin.balance, \" \", coin.name);\n  }) : __jsx(Text, null, \"Nothing in here! Fill 'er up!\"))), __jsx(Box, {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h4\",\n    lineHeight: \"tight\"\n  }, vaultDesc))));\n}","map":null,"metadata":{},"sourceType":"module"}