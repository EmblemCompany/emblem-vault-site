{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Contract } from '@ethersproject/contracts';\nimport { useWeb3React } from '@web3-react/core';\n\nconst getContract = (address, abi, library, account) => {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nexport default function Approval(props) {\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    console.log('--------------', account);\n    let approved = checkApproval(props.handler, props.spending, props.library, props.account, props.amount);\n    console.log('--------------', approved);\n  });\n  return account ? __jsx(React.Fragment, null, \"test\") : null;\n\n  function checkApproval(handler, spending, library, account, amount) {\n    if (amount > 0) {\n      let check = async () => {\n        let spendingContract = getContract(spending.address, spending.abi, library, account);\n        let allowance = await spendingContract.allowance(account, handler.address);\n        return allowance >= amount;\n      };\n\n      let wtf = check().then(result => {\n        return result;\n      });\n      return wtf;\n    }\n\n    return false;\n  }\n} // export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n// export default Approval","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","useEffect","Contract","useWeb3React","getContract","address","abi","library","account","getSigner","connectUnchecked","Approval","props","console","log","approved","checkApproval","handler","spending","amount","check","spendingContract","allowance","wtf","then","result"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,SAA3B,QAA4C,OAA5C;AAaA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,KAAwC;AAC1D,SAAO,IAAIN,QAAJ,CAAaG,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAcA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAEvD,QAAM;AAAEJ,IAAAA;AAAF,MAAcL,YAAY,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BN,OAA7B;AACA,QAAIO,QAAQ,GAAGC,aAAa,CAACJ,KAAK,CAACK,OAAP,EAAgBL,KAAK,CAACM,QAAtB,EAAgCN,KAAK,CAACL,OAAtC,EAA+CK,KAAK,CAACJ,OAArD,EAA8DI,KAAK,CAACO,MAApE,CAA5B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,QAA9B;AACH,GAJQ,CAAT;AAMA,SAAOP,OAAO,GACV,mCADU,GAIX,IAJH;;AAMA,WAASQ,aAAT,CAAuBC,OAAvB,EAA+DC,QAA/D,EAAwGX,OAAxG,EAAsHC,OAAtH,EAAoIW,MAApI,EAAoJ;AAClJ,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,UAAIC,KAAK,GAAG,YAAU;AACpB,YAAIC,gBAAgB,GAAGjB,WAAW,CAACc,QAAQ,CAACb,OAAV,EAAmBa,QAAQ,CAACZ,GAA5B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAlC;AACA,YAAIc,SAAS,GAAG,MAAMD,gBAAgB,CAACC,SAAjB,CAA2Bd,OAA3B,EAAoCS,OAAO,CAACZ,OAA5C,CAAtB;AACA,eAAOiB,SAAS,IAAIH,MAApB;AACD,OAJD;;AAKA,UAAII,GAAG,GAAGH,KAAK,GAAGI,IAAR,CAAcC,MAAD,IAAU;AAAC,eAAOA,MAAP;AAAc,OAAtC,CAAV;AACA,aAAOF,GAAP;AACD;;AACD,WAAO,KAAP;AACD;AACF,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, useEffect } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\n\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  library: any,\n  account: any,\n}\nexport default function Approval(props: AttributesProps) {\n  \n  const { account } = useWeb3React()\n\n  useEffect(()=>{\n      console.log('--------------',account)\n      let approved = checkApproval(props.handler, props.spending, props.library, props.account, props.amount)\n      console.log('--------------', approved)\n  })\n  \n  return account? (\n      <>\n          test\n      </>\n  ): null\n\n  function checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, library: any, account: any, amount: number) {\n    if (amount > 0) {\n      let check = async ()=>{\n        let spendingContract = getContract(spending.address, spending.abi, library, account)\n        let allowance = await spendingContract.allowance(account, handler.address)\n        return allowance >= amount\n      }\n      let wtf = check().then((result)=>{return result})\n      return wtf\n    }\n    return false\n  }\n}\n// export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n\n// export default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}