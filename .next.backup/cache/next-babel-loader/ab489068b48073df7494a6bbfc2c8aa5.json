{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { overlayEditor } from 'doka';\nimport { sub, unsub } from './events';\n\nclass DokaImageEditorOverlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.elementRef = React.createRef();\n    this.editor = undefined;\n  }\n\n  componentDidMount() {\n    if (!this.elementRef.current) return;\n\n    const props = _objectSpread({}, this.props);\n\n    this.editor = overlayEditor(this.elementRef.current, props);\n    sub(this, props);\n  }\n\n  componentDidUpdate() {\n    const props = _objectSpread({}, this.props);\n\n    Object.assign(this.editor, props);\n    sub(this, props);\n  }\n\n  componentWillUnmount() {\n    if (!this.editor) return;\n    unsub(this);\n    this.editor.destroy();\n    this.editor = undefined;\n  }\n\n  render() {\n    return React.createElement('div', {\n      className: `DokaRootWrapper ${this.props.className}`.trim(),\n      ref: this.elementRef\n    });\n  }\n\n}\n\nexport default DokaImageEditorOverlay;","map":null,"metadata":{},"sourceType":"module"}