{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Newest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Link, Stack, useColorMode } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport CoinBalance from './partials/CoinBalance';\nimport Embed from './Embed';\nexport default function Newest() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState([]),\n      vaults = _useState2[0],\n      setVaults = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: false\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingApi = _useState4[0],\n      setLoadingApi = _useState4[1];\n\n  var _useState5 = useState(query.address),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState(query.experimental),\n      experimental = _useState6[0],\n      setExperimental = _useState6[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadCache();\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(EMBLEM_API + '/newest/?start=' + pagePosition + '&size=3', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainId: chainId.toString()\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              jsonData = _context.sent;\n              setState({\n                loaded: true\n              });\n              setVaults(jsonData);\n              saveCache(jsonData);\n              setLoadingApi(false); // console.log(jsonData)\n\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var more = function more() {\n    location.hash = (pagePosition + 3).toString();\n    setPagePosition(Number(location.hash));\n    getVaults();\n  };\n\n  var less = function less() {\n    location.hash = (pagePosition - 3).toString();\n    setPagePosition(pagePosition - 3);\n    getVaults();\n  };\n\n  var loadCache = function loadCache() {\n    var vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')); // Load vaults from storage before updating from server!\n\n    if (vaults) {\n      setState({\n        loaded: true\n      });\n      setVaults(vaults);\n      setLoadingApi(true);\n    }\n  };\n\n  var saveCache = function saveCache(vaults) {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)); // Save new state for later\n  };\n\n  var _useState7 = useState(''),\n      acct = _useState7[0],\n      setAcct = _useState7[1];\n\n  useEffect(function () {\n    if (!location.hash) {\n      location.hash = \"0\";\n      setPagePosition(0);\n    }\n\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState8 = useState(chainId),\n      chain = _useState8[0],\n      setChain = _useState8[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    vaults.length < 1 ? getVaults() : setState({\n      loaded: true\n    });\n  }, []);\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Stack, {\n    \"float\": \"left\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, pagePosition > 0 ? __jsx(Link, {\n    onClick: function onClick() {\n      less();\n    },\n    mt: 10,\n    ml: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 31\n    }\n  }, \"Previous\") : null), __jsx(Stack, {\n    \"float\": \"right\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    onClick: function onClick() {\n      more();\n    },\n    mt: 10,\n    mr: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Next\")), __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: '1',\n      minW: '390px',\n      maxW: '390px',\n      borderWidth: '1px',\n      color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      location.href = url;\n    };\n\n    return __jsx(Box, _extends({\n      className: \"NFT\",\n      key: index\n    }, flexSettings, {\n      onClick: redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, vault.name, !vault[\"private\"] ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, __jsx(Embed, {\n      url: vault.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      ml: \"2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, vault[\"private\"] ? __jsx(React.Fragment, null, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Contents hidden. Click to view the vault and unlock values.\")) : vault.values.length ? vault.values.map(function (coin, index) {\n      if (index < 4) return __jsx(Stack, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, __jsx(CoinBalance, {\n        colorMode: colorMode,\n        coin: coin,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 31\n        }\n      }));else if (index == 4) return __jsx(Text, {\n        fontWeight: \"bold\",\n        mt: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }, \"... Click to see the rest ...\");\n    }) : __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, \"Nothing in here! \", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 42\n      }\n    }), \"Click to fill 'er up!\"))), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, vault.status == 'claimed' ? __jsx(Text, {\n      color: \"green.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 48\n      }\n    }, \"CLAIMED\") : null));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\"))));\n}\n\n_s(Newest, \"UVyXXt6MQpiANkTijfoGKRQaNbA=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = Newest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newest\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Newest.tsx"],"names":["Box","Flex","Text","Link","Stack","useColorMode","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","CoinBalance","Embed","Newest","query","pagePosition","setPagePosition","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","getVaults","loadCache","fetch","method","headers","service","toString","response","json","jsonData","saveCache","more","location","hash","Number","less","JSON","parse","localStorage","getItem","setItem","stringify","acct","setAcct","chain","setChain","length","map","vault","index","pieces","pathname","split","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","color","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","href","name","totalValue","image","values","coin"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { validImage } from '../utils'\nimport { EMBLEM_API } from '../constants'\nimport CoinBalance from './partials/CoinBalance'\nimport Embed from './Embed'\n\nexport default function Newest() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(0)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n\n  const getVaults = async () => {\n    \n    loadCache()\n    try {\n      const response = await fetch(EMBLEM_API + '/newest/?start='+pagePosition+'&size=3', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n        },\n      })\n      const jsonData = await response.json()\n      setState({ loaded: true })\n      setVaults(jsonData)\n      saveCache(jsonData)\n      setLoadingApi(false)\n      // console.log(jsonData)\n    } catch (error) {}\n  }\n\n  const more = ()=>{\n    location.hash = (pagePosition + 3).toString()\n    setPagePosition(Number(location.hash))\n    getVaults()\n  }\n\n  const less = ()=>{\n    location.hash = (pagePosition - 3).toString()\n    setPagePosition(pagePosition - 3)\n    getVaults()\n  }\n\n  const loadCache = () => {\n    let vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')) // Load vaults from storage before updating from server!\n    if (vaults) {\n      setState({ loaded: true })\n      setVaults(vaults)\n      setLoadingApi(true)\n    }\n  }\n\n  const saveCache = (vaults) => {\n    localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)) // Save new state for later\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (!location.hash) {\n      location.hash = \"0\"\n      setPagePosition(0)\n    }\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n\n    vaults.length < 1 ? getVaults() : setState({ loaded: true })\n  }, [])\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n        <Stack float=\"left\" align=\"left\">\n          {pagePosition > 0 ? <Link onClick={()=>{less()}} mt={10} ml={5}>Previous</Link> : null }\n        </Stack>\n        <Stack float=\"right\" align=\"right\">\n          <Link onClick={()=>{more()}} mt={10} mr={5}>Next</Link>\n        </Stack>\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>\n        \n      \n        {vaults.length ? (\n          vaults.map((vault, index) => {\n            let pieces = location.pathname.split('/')\n            pieces.pop()\n            let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n            const flexSettings = {\n              flex: '1',\n              minW: '390px',\n              maxW: '390px',\n              borderWidth: '1px',\n              color: 'white',\n              mx: '6',\n              mb: '6',\n              rounded: 'lg',\n              overflow: 'hidden',\n              borderColor: vault.status == 'claimed' ? 'green !important' : '',\n              cursor: 'pointer',\n            }\n            const redirect = function () {\n              location.href = url\n            }\n            return (\n              <Box className=\"NFT\" key={index} {...flexSettings} onClick={redirect}>\n                <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2}>\n                  {vault.name}\n                  {!vault.private ? ': ~$' + vault.totalValue : null}\n                </Text>\n                <Stack align=\"center\">\n                  <Embed url={vault.image}/>\n                </Stack>\n                <Box d=\"flex\" alignItems=\"baseline\">\n                  <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                    {vault.private ? (\n                      <>\n                        <Text>Contents hidden. Click to view the vault and unlock values.</Text>\n                      </>\n                    ) : vault.values.length ? (\n                      vault.values.map((coin, index) => {\n                        if (index < 4)\n                          return (\n                            <Stack> \n                              <CoinBalance colorMode={colorMode} coin={coin}/>  \n                            </Stack>\n                          )\n                        else if (index == 4)\n                          return (\n                            <Text fontWeight=\"bold\" mt={2}>\n                              ... Click to see the rest ...\n                            </Text>\n                          )\n                      })\n                    ) : (\n                      <Text>\n                        Nothing in here! <br />\n                        Click to fill 'er up!\n                      </Text>\n                    )}\n                  </Box>\n                </Box>\n                {/* <Box d=\"flex\" alignItems=\"baseline\">\n                  <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"sm\" ml=\"2\">\n                    <Text>\n                      Total Computable Value: {vault.totalValue}\n                    </Text>\n                  </Box>\n                  </Box> */}\n                <Stack align=\"center\" mt={3}>\n                  {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                </Stack>\n              </Box>\n            )\n          })\n        ) : (\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        )}        \n      </Flex>\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}