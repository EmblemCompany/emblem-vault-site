{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormControl, FormLabel, FormHelperText, FormErrorMessage, Input, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, RadioGroup, Radio, Textarea, Button, ButtonGroup, Text, Divider, Alert, AlertIcon } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API, contractAddresses } from '../constants';\nimport { useContract } from '../hooks';\nimport { isETHAddress } from '../utils';\nvar tokenId = null;\nvar mintPassword = null;\nexport default function Create(props) {\n  _s();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(0),\n      tabIndex = _useState[0],\n      setTabIndex = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState(account || ''),\n      vaultAddress = _useState2[0],\n      setVaultAddress = _useState2[1];\n\n  var _useState3 = useState('Public'),\n      vaultPubPriv = _useState3[0],\n      setVaultPubPriv = _useState3[1];\n\n  var _useState4 = useState(''),\n      vaultName = _useState4[0],\n      setVaultName = _useState4[1];\n\n  var _useState5 = useState(''),\n      vaultDesc = _useState5[0],\n      setVaultDesc = _useState5[1];\n\n  var _useState6 = useState(''),\n      vaultImage = _useState6[0],\n      setVaultImage = _useState6[1];\n\n  var _useState7 = useState(''),\n      password = _useState7[0],\n      setPassword = _useState7[1]; // const [service, setService] = useState('')\n\n\n  var _useState8 = useState(false),\n      isCovalApproved = _useState8[0],\n      setIsCovalApproved = _useState8[1];\n\n  var _useState9 = useState({\n    loaded: true,\n    \"private\": false\n  }),\n      state = _useState9[0],\n      setState = _useState9[1];\n\n  var _useState10 = useState(null),\n      hash = _useState10[0],\n      setHash = _useState10[1]; // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n\n\n  var _useState11 = useState(query.experimental),\n      experimental = _useState11[0],\n      setExperimental = _useState11[1];\n\n  var _useState12 = useState(false),\n      showPreVaultMsg = _useState12[0],\n      setShowPreVaultMsg = _useState12[1];\n\n  var _useState13 = useState(false),\n      showMakingVaultMsg = _useState13[0],\n      setShowMakingVaultMsg = _useState13[1];\n\n  var _useState14 = useState(null),\n      decimals = _useState14[0],\n      setDecimals = _useState14[1];\n\n  var _useState15 = useState(null),\n      allowance = _useState15[0],\n      setAllowance = _useState15[1];\n\n  var _useState16 = useState(null),\n      balance = _useState16[0],\n      setBalance = _useState16[1];\n\n  var _useState17 = useState(null),\n      price = _useState17[0],\n      setPrice = _useState17[1];\n\n  var _useState18 = useState(false),\n      creating = _useState18[0],\n      setCreating = _useState18[1];\n\n  var _useState19 = useState(false),\n      approving = _useState19[0],\n      setApproving = _useState19[1];\n\n  var _useState20 = useState(''),\n      vaultKey = _useState20[0],\n      setVaultKey = _useState20[1];\n\n  var _useState21 = useState(''),\n      vaultValue = _useState21[0],\n      setVaultValue = _useState21[1];\n\n  var handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true);\n  var covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true);\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setDecimals;\n              _context.next = 3;\n              return covalContract.decimals();\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.t2 = setAllowance;\n              _context.next = 8;\n              return covalContract.allowance(account, contractAddresses.vaultHandler[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 8:\n              _context.t3 = _context.sent;\n              (0, _context.t2)(_context.t3);\n              _context.t4 = setBalance;\n              _context.next = 13;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 13:\n              _context.t5 = _context.sent;\n              (0, _context.t4)(_context.t5);\n              _context.t6 = setPrice;\n              _context.next = 18;\n              return handlerContract.price().then(function (balance) {\n                return balance.toString();\n              });\n\n            case 18:\n              _context.t7 = _context.sent;\n              (0, _context.t6)(_context.t7);\n\n              // console.log(\n              //   'balance',\n              //   balance,\n              //   'allowance',\n              //   allowance,\n              //   'price',\n              //   price,\n              //   Number(allowance) >= Number(price),\n              //   Number(balance) > Number(price)\n              // )\n              if (Number(allowance) >= Number(price)) {\n                setIsCovalApproved(true);\n              } else {\n                setIsCovalApproved(false);\n              }\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getContractStates() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fireMetaMask = function fireMetaMask() {\n    setCreating(true);\n    handlerContract.buyWithPaymentOnly(vaultAddress, tokenId, mintPassword).then(function (_ref2) {\n      var hash = _ref2.hash;\n      setTimeout(function () {\n        setHash(hash); // setCreating(false)\n\n        setShowMakingVaultMsg(true);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setCreating(false);\n        setShowPreVaultMsg(false);\n      }\n    });\n  };\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    covalContract.approve(contractAddresses.vaultHandler[chainId], '100000000000000').then(function (_ref3) {\n      var hash = _ref3.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault(); // if (service !== 'kms') {\n    //   return alert('incorrect password')\n    // }\n\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    var body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      image: vaultImage,\n      chainId: chainId,\n      \"private\": state[\"private\"],\n      password: password || '',\n      values: []\n    };\n\n    if (vaultKey && vaultValue) {\n      body.values[vaultKey] = vaultValue;\n    }\n\n    console.log(JSON.stringify(body));\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body)\n    }).then( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context2.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context2.sent;\n                tokenId = body.data.tokenId;\n                mintPassword = body.password;\n                setHash(body.data.tx);\n                setShowPreVaultMsg(true);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('#preview');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  var _useState22 = useState(''),\n      acct = _useState22[0],\n      setAcct = _useState22[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  useEffect(function () {\n    account && chainId ? getContractStates() : null;\n  });\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Make\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"My\"), __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    isInvalid: vaultAddress && !isETHAddress(vaultAddress),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"owner-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 23\n    }\n  }, \"Vault Owner Address\"), __jsx(Input, {\n    type: \"text\",\n    id: \"owner-address\",\n    \"aria-describedby\": \"owner-helper-text\",\n    placeholder: \"0xdeadbeef\",\n    maxLength: 42,\n    value: vaultAddress,\n    onChange: function onChange(e) {\n      return setVaultAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"owner-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, \"What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet, this will populate automagically with your address.\"), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, \"Address is not a valid ETH address\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    as: \"fieldset\",\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, \"Public or Private?\"), __jsx(RadioGroup, {\n    id: \"pubpriv\",\n    defaultValue: \"Public\",\n    onChange: function onChange(e) {\n      setVaultPubPriv(e.target.value);\n      setState({\n        loaded: state.loaded,\n        \"private\": e.target.value === 'Private'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, __jsx(Radio, {\n    value: \"Public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"Public\"), __jsx(Radio, {\n    value: \"Private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"Private\")), __jsx(FormHelperText, {\n    id: \"email-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, \"Do you want the contents and addresses to be password protected?\")), state[\"private\"] ? __jsx(FormControl, {\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, __jsx(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }), __jsx(FormHelperText, {\n    id: \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, \"Used to encrypt/decrypt\")) : ''), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, \"Next\")))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    isInvalid: vaultName && vaultName.length < 3 && vaultName.length > 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, \"Vault Name\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-name\",\n    \"aria-describedby\": \"vault-name-text\",\n    minLength: 3,\n    maxLength: 200,\n    value: vaultName,\n    onChange: function onChange(e) {\n      return setVaultName(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-name-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 23\n    }\n  }, \"Give it some love so you can find it later.\"), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  }, \"Name needs at least 3 characters. 200 is max.\"))), __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    isRequired: true,\n    isInvalid: vaultDesc && vaultDesc.length < 3 && vaultDesc.length > 1024,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }\n  }, \"Vault Description\"), __jsx(Textarea, {\n    id: \"vault-desc\",\n    size: \"lg\",\n    \"aria-describedby\": \"vault-desc-text\",\n    minLength: 3,\n    maxLength: 1024,\n    value: vaultDesc,\n    onChange: function onChange(e) {\n      return setVaultDesc(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-desc-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 23\n    }\n  }, \"Add some fluffy text to tell people what the point is!\"), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 23\n    }\n  }, \"Description needs to be at least 3 characters. 1024 is max.\"))), experimental ? __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }, \"Key\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-key\",\n    \"aria-describedby\": \"vault-key-text\",\n    maxLength: 200,\n    value: vaultKey,\n    onChange: function onChange(e) {\n      return setVaultKey(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-key-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  }, \"Key Name (Public)\"), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 23\n    }\n  }, \"---Some Error\")), __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 23\n    }\n  }, \"Value\"), __jsx(Input, {\n    type: \"text\",\n    id: \"vault-value\",\n    \"aria-describedby\": \"vault-value-text\",\n    maxLength: 200,\n    value: vaultValue,\n    onChange: function onChange(e) {\n      return setVaultValue(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 23\n    }\n  }), __jsx(FormHelperText, {\n    id: \"vault-value-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 23\n    }\n  }, \"Key Value (Encrypted)\"), __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 23\n    }\n  }, \"---Some Error\"))) : null, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 23\n    }\n  }, \"Back\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 23\n    }\n  }, \"Next\"))))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"vault-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 23\n    }\n  }, \"Vault Image\"), __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 23\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: function onChange() {\n      return previewFile();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 27\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 27\n    }\n  }), __jsx(\"img\", {\n    id: \"preview\",\n    src: \"\",\n    width: \"250\",\n    \"margin-top\": \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 27\n    }\n  }))))), isCovalApproved ? __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, \"Creating a vault spends \", price * Math.pow(10, -decimals), \" Coval from your wallet\"))) : null, Number(balance) < Number(price) ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, __jsx(Button, _extends({\n    width: \"100%\",\n    as: \"a\"\n  }, {\n    href: location.origin + '/buy?chain=' + chainId + '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }), \"Buy coval\")) : null, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setTabIndex(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 23\n    }\n  }, \"Back\"), !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  }, \"No Wallet Connected!\") : !vaultAddress || !isETHAddress(vaultAddress) || !vaultName || vaultName.length < 3 || !vaultDesc || vaultDesc.length < 3 ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 25\n    }\n  }, \"Check Fields!\") // ) : !service ? (\n  //   <Button isDisabled type=\"submit\">\n  //     Creation Password?\n  //   </Button>\n  : !isCovalApproved && !approving ? __jsx(Button, {\n    onClick: approveCovalFlow,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, \"Approve Coval\") : !isCovalApproved && approving ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 25\n    }\n  }, \"Approving ...\") : Number(balance) < Number(price) ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, \"Insufficient Balance\") : hash || creating || showPreVaultMsg || showMakingVaultMsg ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 25\n    }\n  }, \"Making Vault ...\") : __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 25\n    }\n  }, \"DO IT!\")))), showPreVaultMsg ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }), \"Talking to contract ...\") : null, showMakingVaultMsg ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 21\n    }\n  }), \"Making vault ... one moment\") : null, approving ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }\n  }), \"Handling approval flow ...\") : null))))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      setHash(null);\n\n      if (!creating) {\n        if (!approving) {\n          fireMetaMask();\n          setShowPreVaultMsg(false);\n        } else {\n          setApproving(false);\n        }\n      } else {\n        setTimeout(function () {\n          setShowMakingVaultMsg(false);\n          location.href = location.origin + '/vault?id=' + tokenId;\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }\n  }) : null);\n}\n\n_s(Create, \"tvuSuzuHdnTpSkndXzyAqiSjS7c=\", false, function () {\n  return [useRouter, useWeb3React, useContract, useContract];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Create.tsx"],"names":["FormControl","FormLabel","FormHelperText","FormErrorMessage","Input","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","RadioGroup","Radio","Textarea","Button","ButtonGroup","Text","Divider","Alert","AlertIcon","Loader","useWeb3React","useEffect","useState","useRouter","TransactionToast","EMBLEM_API","contractAddresses","useContract","isETHAddress","tokenId","mintPassword","Create","props","query","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","password","setPassword","isCovalApproved","setIsCovalApproved","loaded","state","setState","hash","setHash","experimental","setExperimental","showPreVaultMsg","setShowPreVaultMsg","showMakingVaultMsg","setShowMakingVaultMsg","decimals","setDecimals","allowance","setAllowance","balance","setBalance","price","setPrice","creating","setCreating","approving","setApproving","vaultKey","setVaultKey","vaultValue","setVaultValue","handlerContract","vaultHandler","vaultHandlerAbi","covalContract","coval","covalAbi","getContractStates","then","toString","balanceOf","Number","fireMetaMask","buyWithPaymentOnly","setTimeout","error","code","console","log","approveCovalFlow","approve","handleSubmit","evt","preventDefault","body","fromAddress","toAddress","description","name","image","values","JSON","stringify","fetch","method","headers","service","response","json","data","tx","previewFile","preview","document","querySelector","inputelement","reader","FileReader","addEventListener","src","result","files","readAsDataURL","acct","setAcct","index","e","target","value","length","Math","pow","href","location","origin","rel"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  Input,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex,\n  RadioGroup,\n  Radio,\n  Textarea,\n  Button,\n  ButtonGroup,\n  Text,\n  Divider,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/core'\n\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API, contractAddresses } from '../constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { useContract } from '../hooks'\nimport { isETHAddress } from '../utils'\n\nlet tokenId = null\nlet mintPassword = null\n\nexport default function Create(props: any) {\n  const { query } = useRouter()\n  const [tabIndex, setTabIndex] = useState(0)\n  const { account, chainId } = useWeb3React()\n  const [vaultAddress, setVaultAddress] = useState(account || '')\n  const [vaultPubPriv, setVaultPubPriv] = useState('Public')\n  const [vaultName, setVaultName] = useState('')\n  const [vaultDesc, setVaultDesc] = useState('')\n  const [vaultImage, setVaultImage] = useState('')\n  const [password, setPassword] = useState('')\n  // const [service, setService] = useState('')\n  const [isCovalApproved, setIsCovalApproved] = useState(false)\n  const [state, setState] = useState({ loaded: true, private: false })\n  const [hash, setHash] = useState(null)\n  // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const [showPreVaultMsg, setShowPreVaultMsg] = useState(false)\n  const [showMakingVaultMsg, setShowMakingVaultMsg] = useState(false)\n  const [decimals, setDecimals] = useState(null)\n  const [allowance, setAllowance] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [price, setPrice] = useState(null)\n  const [creating, setCreating] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [vaultKey, setVaultKey] = useState('')  \n  const [vaultValue, setVaultValue] = useState('')\n  \n\n  const handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true)\n  const covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  const getContractStates = async () => {\n    setDecimals(await covalContract.decimals())\n    setAllowance(\n      await covalContract\n        .allowance(account, contractAddresses.vaultHandler[chainId])\n        .then((balance: { toString: () => string }) => balance.toString())\n    )\n    setBalance(await covalContract.balanceOf(account).then((balance: { toString: () => string }) => balance.toString()))\n    setPrice(await handlerContract.price().then((balance: { toString: () => string }) => balance.toString()))\n    // console.log(\n    //   'balance',\n    //   balance,\n    //   'allowance',\n    //   allowance,\n    //   'price',\n    //   price,\n    //   Number(allowance) >= Number(price),\n    //   Number(balance) > Number(price)\n    // )\n    if (Number(allowance) >= Number(price)) {\n      setIsCovalApproved(true)\n    } else {\n      setIsCovalApproved(false)\n    }\n  }\n\n  const fireMetaMask = () => {\n    setCreating(true)\n    ;(handlerContract as Contract)\n      .buyWithPaymentOnly(vaultAddress, tokenId, mintPassword)\n      .then(({ hash }: { hash: string }) => {\n        setTimeout(() => {\n          setHash(hash)\n          // setCreating(false)\n          setShowMakingVaultMsg(true)\n        }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code !== 4001) {\n          console.log(`tx failed.`, error)\n        } else {\n          setCreating(false)\n          setShowPreVaultMsg(false)\n        }\n      })\n  }\n\n  const approveCovalFlow = () => {\n    setApproving(true)\n    ;(covalContract as Contract)\n      .approve(contractAddresses.vaultHandler[chainId], '100000000000000')\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code == 4001) {\n          setApproving(false)\n        }\n      })\n  }\n\n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n    // if (service !== 'kms') {\n    //   return alert('incorrect password')\n    // }\n    setState({ loaded: false, private: state.private })\n    let body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      image: vaultImage,\n      chainId: chainId,\n      private: state.private,\n      password: password || '',\n      values: []\n    }\n    if (vaultKey && vaultValue) {\n      body.values[vaultKey] = vaultValue\n    }\n    console.log(JSON.stringify(body))\n    fetch(EMBLEM_API + '/mint', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      tokenId = body.data.tokenId\n      mintPassword = body.password\n      setHash(body.data.tx)\n      setShowPreVaultMsg(true)\n    })\n  }\n\n  function previewFile() {\n    const preview = document.querySelector('#preview') as HTMLImageElement\n    const inputelement = document.querySelector('input[type=file]') as HTMLInputElement //.files[0];\n    const reader = new FileReader()\n\n    reader.addEventListener(\n      'load',\n      function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || ''\n        if (preview) setVaultImage(preview.src)\n      },\n      false\n    )\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0])\n    }\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n    }\n  }, [account, acct])\n\n  useEffect(() => {\n    account && chainId ? getContractStates() : null\n  })\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Make</Tab>\n              <Tab>My</Tab>\n              <Tab>Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired isInvalid={vaultAddress && !isETHAddress(vaultAddress)}>\n                      <FormLabel htmlFor=\"owner-address\">Vault Owner Address</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"owner-address\"\n                        aria-describedby=\"owner-helper-text\"\n                        placeholder=\"0xdeadbeef\"\n                        maxLength={42}\n                        value={vaultAddress}\n                        onChange={(e) => setVaultAddress(e.target.value)}\n                      />\n                      <FormHelperText id=\"owner-helper-text\">\n                        What is the address of the first owner of this vault? Pro tip: When you connect a web3 wallet,\n                        this will populate automagically with your address.\n                      </FormHelperText>\n                      <FormErrorMessage>Address is not a valid ETH address</FormErrorMessage>\n                    </FormControl>\n                  </Stack>\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl as=\"fieldset\" isRequired>\n                      <FormLabel>Public or Private?</FormLabel>\n                      <RadioGroup\n                        id=\"pubpriv\"\n                        defaultValue=\"Public\"\n                        onChange={(e) => {\n                          setVaultPubPriv(e.target.value)\n                          setState({ loaded: state.loaded, private: e.target.value === 'Private' })\n                        }}\n                      >\n                        <Radio value=\"Public\">Public</Radio>\n                        <Radio value=\"Private\">Private</Radio>\n                      </RadioGroup>\n                      <FormHelperText id=\"email-helper-text\">\n                        Do you want the contents and addresses to be password protected?\n                      </FormHelperText>\n                    </FormControl>\n                    {state.private ? (\n                      <FormControl isRequired>\n                        <FormLabel>Password</FormLabel>\n                        <Input\n                          type=\"password\"\n                          id=\"vault-password\"\n                          onChange={(e) => setPassword(e.target.value)}\n                          aria-describedby=\"password-helper-text\"\n                          autoComplete=\"off\"\n                        />\n                        <FormHelperText id=\"password-helper-text\">Used to encrypt/decrypt</FormHelperText>\n                      </FormControl>\n                    ) : (\n                      ''\n                    )}\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <Button onClick={() => setTabIndex(1)}>Next</Button>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired isInvalid={vaultName && vaultName.length < 3 && vaultName.length > 200}>\n                      <FormLabel htmlFor=\"vault-name\">Vault Name</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"vault-name\"\n                        aria-describedby=\"vault-name-text\"\n                        minLength={3}\n                        maxLength={200}\n                        value={vaultName}\n                        onChange={(e) => setVaultName(e.target.value)}\n                        autoComplete=\"off\"\n                      />\n                      <FormHelperText id=\"vault-name-text\">Give it some love so you can find it later.</FormHelperText>\n                      <FormErrorMessage>Name needs at least 3 characters. 200 is max.</FormErrorMessage>\n                    </FormControl>\n                  </Stack>\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl isRequired isInvalid={vaultDesc && vaultDesc.length < 3 && vaultDesc.length > 1024}>\n                      <FormLabel htmlFor=\"vault-desc\">Vault Description</FormLabel>\n                      <Textarea\n                        id=\"vault-desc\"\n                        size=\"lg\"\n                        aria-describedby=\"vault-desc-text\"\n                        minLength={3}\n                        maxLength={1024}\n                        value={vaultDesc}\n                        onChange={(e) => setVaultDesc(e.target.value)}\n                        autoComplete=\"off\"\n                      />\n                      <FormHelperText id=\"vault-desc-text\">\n                        Add some fluffy text to tell people what the point is!\n                      </FormHelperText>\n                      <FormErrorMessage>Description needs to be at least 3 characters. 1024 is max.</FormErrorMessage>\n                    </FormControl>\n                  </Stack>\n                  {experimental? (\n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"vault-key\">Key</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"vault-key\"\n                        aria-describedby=\"vault-key-text\"\n                        maxLength={200}\n                        value={vaultKey}\n                        onChange={(e) => setVaultKey(e.target.value)}\n                        autoComplete=\"off\"\n                      />\n                      <FormHelperText id=\"vault-key-text\">Key Name (Public)</FormHelperText>\n                      <FormErrorMessage>---Some Error</FormErrorMessage>\n                    </FormControl>\n                    <FormControl>\n                      <FormLabel htmlFor=\"vault-value\">Value</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"vault-value\"\n                        aria-describedby=\"vault-value-text\"\n                        maxLength={200}\n                        value={vaultValue}\n                        onChange={(e) => setVaultValue(e.target.value)}\n                        autoComplete=\"off\"\n                      />\n                      <FormHelperText id=\"vault-value-text\">Key Value (Encrypted)</FormHelperText>\n                      <FormErrorMessage>---Some Error</FormErrorMessage>\n                    </FormControl>\n                  </Stack>\n                  ) : null}\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(0)}>Back</Button>\n                      <Button onClick={() => setTabIndex(2)}>Next</Button>\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n              </TabPanel>\n\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"vault-img\">Vault Image</FormLabel>\n                      <Box p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Stack align=\"center\" p={1}>\n                          <input type=\"file\" onChange={() => previewFile()} />\n                          <Divider />\n                          <img id=\"preview\" src=\"\" width=\"250\" margin-top=\"6\"></img>\n                        </Stack>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n\n                  {/* <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      <FormLabel htmlFor=\"service\">API password:</FormLabel>\n                      <Input\n                        type=\"password\"\n                        id=\"service\"\n                        aria-describedby=\"service\"\n                        onChange={(e) => setService(e.target.value)}\n                        autoComplete=\"off\"\n                      />\n                    </FormControl>\n                  </Stack> */}\n\n                  {isCovalApproved ? (\n                    <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                      <Box maxW=\"sm\" borderWidth=\"1px\" p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Text>Creating a vault spends {price * Math.pow(10, -decimals)} Coval from your wallet</Text>\n                      </Box>\n                    </Stack>\n                  ) : null}\n\n                  {Number(balance) < Number(price) ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"2\">\n                      <Button\n                        width=\"100%\"\n                        as=\"a\"\n                        {...{\n                          href:\n                            location.origin +\n                            '/buy?chain=' +\n                            chainId +\n                            '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n                          target: '_blank',\n                          rel: 'noopener noreferrer',\n                        }}\n                      >\n                        Buy coval\n                      </Button>\n                    </Box>\n                  ) : null}\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      <Button onClick={() => setTabIndex(1)}>Back</Button>\n                      {!account ? (\n                        <Button isDisabled type=\"submit\">\n                          No Wallet Connected!\n                        </Button>\n                      ) : !vaultAddress ||\n                        !isETHAddress(vaultAddress) ||\n                        !vaultName ||\n                        vaultName.length < 3 ||\n                        !vaultDesc ||\n                        vaultDesc.length < 3 ? (\n                        <Button isDisabled type=\"submit\">\n                          Check Fields!\n                        </Button>\n                      // ) : !service ? (\n                      //   <Button isDisabled type=\"submit\">\n                      //     Creation Password?\n                      //   </Button>\n                      ) : !isCovalApproved && !approving ? (\n                        <Button onClick={approveCovalFlow} type=\"submit\">\n                          Approve Coval\n                        </Button>\n                      ) : !isCovalApproved && approving ? (\n                        <Button isDisabled type=\"submit\">\n                          Approving ...\n                        </Button>\n                      ) : Number(balance) < Number(price) ? (\n                        <Button isDisabled type=\"submit\">\n                          Insufficient Balance\n                        </Button>\n                      ) : hash || creating || showPreVaultMsg || showMakingVaultMsg ? (\n                        <Button isDisabled type=\"submit\">\n                          Making Vault ...\n                        </Button>\n                      ) : (\n                        <Button onClick={handleSubmit} type=\"submit\">\n                          DO IT!\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n                {showPreVaultMsg ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Talking to contract ...\n                  </Alert>\n                ) : null}\n                {showMakingVaultMsg ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Making vault ... one moment\n                  </Alert>\n                ) : null}\n                {approving ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Handling approval flow ...\n                  </Alert>\n                ) : null}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      {hash ? (\n        <TransactionToast\n          hash={hash}\n          onComplete={() => {\n            setHash(null)\n            if (!creating) {\n              if (!approving) {\n                fireMetaMask()\n                setShowPreVaultMsg(false)\n              } else {\n                setApproving(false)\n              }\n            } else {\n              setTimeout(() => {\n                setShowMakingVaultMsg(false)\n                location.href = location.origin + '/vault?id=' + tokenId\n              }, 500)\n            }\n          }}\n        />\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}