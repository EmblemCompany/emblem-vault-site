{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/MyVaults.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Box, Flex, Text, Link, Stack, useColorMode, Button } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { curatedContracts } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed';\nexport default function MyVaults() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(Number(query.start) || 0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useState2 = useState('live'),\n      curatedType = _useState2[0],\n      setCuratedType = _useState2[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState3 = useState([]),\n      vaults = _useState3[0],\n      setVaults = _useState3[1];\n\n  var _useState4 = useState([]),\n      liveVaults = _useState4[0],\n      setLiveVaults = _useState4[1];\n\n  var _useState5 = useState([]),\n      unMintedVaults = _useState5[0],\n      setUnMintedVaults = _useState5[1];\n\n  var _useState6 = useState([]),\n      claimedVaults = _useState6[0],\n      setClaimedVaults = _useState6[1];\n\n  var _useState7 = useState({\n    loaded: false\n  }),\n      state = _useState7[0],\n      setState = _useState7[1];\n\n  var _useState8 = useState(false),\n      loadingApi = _useState8[0],\n      setLoadingApi = _useState8[1];\n\n  var _useState9 = useState(query.address),\n      address = _useState9[0],\n      setAddress = _useState9[1];\n\n  var _useState10 = useState(query.type || \"unclaimed\"),\n      vaultType = _useState10[0],\n      setVaultType = _useState10[1];\n\n  var _useState11 = useState(query.experimental),\n      experimental = _useState11[0],\n      setExperimental = _useState11[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState12 = useState(false),\n      shouldFetchData = _useState12[0],\n      setShouldFetchData = _useState12[1];\n\n  var _useState13 = useState(query.version != null),\n      version = _useState13[0],\n      setVersion = _useState13[1];\n\n  var _useState14 = useState(version ? true : false),\n      hasMore = _useState14[0],\n      setHasMore = _useState14[1];\n\n  var _useState15 = useState(0),\n      offset = _useState15[0],\n      setOffset = _useState15[1];\n\n  var _useState16 = useState([]),\n      liveCollections = _useState16[0],\n      setLiveCollections = _useState16[1];\n\n  var _useState17 = useState([]),\n      unMintedCollections = _useState17[0],\n      setUnMintedCollections = _useState17[1];\n\n  var _useState18 = useState([]),\n      claimedCollections = _useState18[0],\n      setClaimedCollections = _useState18[1];\n\n  var _useState19 = useState(query.jump == \"true\"),\n      showJump = _useState19[0],\n      setShowHJump = _useState19[1];\n\n  var PAGE_SIZE = 20;\n\n  var isAllowedHop = function isAllowedHop(vaultData) {\n    // console.log('here', vaultData)\n    var found = curatedContracts.some(function (contract) {\n      return contract.allowedHop && contract.allowedHop(vaultData.ownership, []);\n    }); // console.log('-------', found)\n\n    return found;\n  };\n\n  var allowedJumpContracts = function allowedJumpContracts(vaultData) {\n    var foundContracts = curatedContracts.filter(function (contract) {\n      return contract.allowedJump && contract.allowedJump(vaultData.ownership, []);\n    });\n    return foundContracts;\n  };\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('https://metadata.emblemvault.io' + \"/\".concat(version || vaultType == \"curated\" ? 'v1-' : '', \"myvaults/\") + (address ? address : account) + '?start=' + offset + '&size=' + PAGE_SIZE, {\n                //+'&_vercel_no_cache=1'\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  '_vercel_no_cache': '1',\n                  service: 'evmetadata',\n                  chainId: chainId.toString(),\n                  vaultType: vaultType.toString()\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context.sent;\n\n              if (vaultType.toString() != 'curated') {\n                setVaults(vaults.concat(jsonData));\n                setState({\n                  loaded: true\n                });\n                setLoadingApi(false);\n                console.log(\"Records received\", jsonData.length);\n              } else if (vaultType.toString() == 'curated') {\n                setLiveVaults(groupItemsByTargetTokenId(jsonData.live));\n                setUnMintedVaults(jsonData.unMinted);\n                setClaimedVaults(jsonData.claimed);\n                setVaults(groupItemsByTargetTokenId(jsonData.live));\n                setState({\n                  loaded: true\n                });\n                setLoadingApi(false);\n                setHasMore(false);\n                setLiveCollections(Array.from(new Set(jsonData.live.map(function (item) {\n                  return item.targetContract.name;\n                }))));\n                setUnMintedCollections(Array.from(new Set(jsonData.unMinted.map(function (item) {\n                  return item.targetContract.name;\n                }))));\n                setClaimedCollections(Array.from(new Set(jsonData.claimed.map(function (item) {\n                  return item.targetContract.name;\n                }))));\n              } else if (jsonData.length < PAGE_SIZE) {\n                setHasMore(false);\n              }\n\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n              setOffset(offset + PAGE_SIZE);\n              setShouldFetchData(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function groupItemsByTargetTokenId(data) {\n    // const data = JSON.parse(jsonData);\n    var itemsMap = new Map(); // Iterate through the data and group items by targetTokenId\n\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var targetTokenId = item.targetTokenId;\n\n        if (itemsMap.has(targetTokenId)) {\n          itemsMap.get(targetTokenId).push(item);\n        } else {\n          itemsMap.set(targetTokenId, [item]);\n        }\n      } // Convert the itemsMap to an array of objects\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var items = Array.from(itemsMap.entries()).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          targetTokenId = _ref4[0],\n          items = _ref4[1];\n\n      return {\n        targetTokenId: targetTokenId,\n        items: items\n      };\n    });\n    return items;\n  } // const more = ()=>{\n  //   if (location.href.includes('start')) {\n  //     location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition + PAGE_SIZE))\n  //   } else {\n  //     location.href = location.href + '?start='+(pagePosition + PAGE_SIZE)\n  //   }\n  //   // setPagePosition(pagePosition + PAGE_SIZE)\n  //   // getVaults()\n  // }\n  // const less = ()=>{\n  //   if (pagePosition - PAGE_SIZE < 0) {\n  //     setPagePosition(PAGE_SIZE)\n  //   }\n  //   if (location.href.includes('start')) {\n  //     location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition - PAGE_SIZE))\n  //   } else {\n  //     location.href = location.href + '?start='+(pagePosition - PAGE_SIZE)\n  //   }\n  //   // setPagePosition(pagePosition + 3)\n  //   // getVaults()\n  // }\n  // const loadCache = () => {\n  //   let vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')) // Load vaults from storage before updating from server!\n  //   if (vaults) {\n  //     setState({ loaded: true })\n  //     setVaults(vaults)\n  //     setLoadingApi(true)\n  //   }\n  // }\n  // const saveCache = (vaults) => {\n  //   localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)) // Save new state for later\n  // }\n\n\n  var _useState20 = useState(''),\n      acct = _useState20[0],\n      setAcct = _useState20[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState21 = useState(chainId),\n      chain = _useState21[0],\n      setChain = _useState21[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n\n  var showOrHideNavLink = function showOrHideNavLink(path) {\n    return vaultType == path ? true : false;\n  };\n\n  var handleNewNavigationClick = function handleNewNavigationClick(path) {\n    if (!address) {\n      location.href = location.origin + location.pathname + \"?type=\" + path;\n    } else {\n      location.href = location.origin + location.pathname + \"?address=\" + address + \"&type=\" + path;\n    }\n  };\n\n  var handleNftsNavigationClick = function handleNftsNavigationClick() {\n    if (!address) {\n      location.href = location.origin + '/nfts';\n    } else {\n      location.href = location.origin + '/nfts' + \"?address=\" + address;\n    }\n  };\n\n  useEffect(function () {\n    if (shouldFetchData) {\n      setShouldFetchData(false);\n      getVaults();\n    } else {}\n  }, [shouldFetchData]);\n  return __jsx(React.Fragment, null, __jsx(Stack, {\n    pl: \"10\",\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    isDisabled: showOrHideNavLink('curated'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('curated');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, \"Curated\"), __jsx(Button, {\n    isDisabled: showOrHideNavLink('unclaimed'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('unclaimed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, \"Locked\"), __jsx(Button, {\n    isDisabled: showOrHideNavLink('claimed'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('claimed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \"Unlocked\"), __jsx(Button, {\n    isDisabled: showOrHideNavLink('unminted'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('unminted');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, \"Not Minted\")), showOrHideNavLink('curated') ? __jsx(React.Fragment, null, __jsx(Stack, {\n    pl: \"8.7rem\",\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, liveVaults.length ? __jsx(Button, {\n    isDisabled: curatedType == 'live',\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      setVaults(liveVaults);\n      setCuratedType('live');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"Unclaimed (curated) \", liveVaults.length) : null, claimedVaults.length ? __jsx(Button, {\n    isDisabled: curatedType == 'claimed',\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      setVaults(claimedVaults);\n      setCuratedType('claimed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Claimed (curated) \", claimedVaults.length) : null, unMintedVaults.length ? __jsx(Button, {\n    isDisabled: curatedType == 'unminted',\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      setVaults(unMintedVaults);\n      setCuratedType('unminted');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Not Minted (curated) \", unMintedVaults.length) : null), __jsx(Stack, {\n    pl: \"12.7rem\",\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, liveCollections.length && curatedType == 'live' ? liveCollections.map(function (name, index) {\n    return __jsx(Button, {\n      isDisabled: true,\n      key: index,\n      m: 2,\n      variant: \"ghost\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, name);\n  }) : null, claimedCollections.length && curatedType == 'claimed' ? claimedCollections.map(function (name, index) {\n    return __jsx(Button, {\n      isDisabled: true,\n      key: index,\n      m: 2,\n      variant: \"ghost\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, name);\n  }) : null, unMintedCollections.length && curatedType == 'unminted' ? unMintedCollections.map(function (name, index) {\n    return __jsx(Button, {\n      isDisabled: true,\n      key: index,\n      m: 2,\n      variant: \"ghost\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, name);\n  }) : null)) : null, __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }) : '', __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: !showOrHideNavLink('curated') ? fetchData : function () {},\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(React.Fragment, null) // <p style={{ textAlign: 'center' }}>\n    //   <b>No more vaults to load.</b> \n    // </p>\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var isERC721a = vault.items && vault.items[0].targetContract && vault.items[0].targetContract.collectionType == 'ERC721a' ? true : false;\n    var isLiveCurated = curatedType == 'live' && vaultType == 'curated';\n    var url = location.origin + pieces.join('/') + '/nft' + (vaultType == 'curated' || vault.targetContract ? '2' : '') + '?id=' + (isLiveCurated ? isERC721a ? vault.items[0].tokenId : vault.targetTokenId : vault.tokenId) + '&cc=t';\n    var vaultContainerSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      minH: '250px',\n      maxH: '250px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.network == 'matic' ? '#7145db !important' : vault.network == 'rinkeby' ? '#ed6d20 !important' : '#627eea !important',\n      cursor: 'pointer'\n    };\n    var infoContainerSettings = {\n      borderColor: '',\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden'\n    };\n\n    var redirect = function redirect() {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    return __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      href: url,\n      className: \"vaultLink\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, __jsx(Box, _extends({\n      className: \"NFT newest\",\n      key: index\n    }, vaultContainerSettings, {\n      onClick: redirect,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"center\",\n      mt: 2,\n      pl: 2,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, curatedType == 'live' && vaultType == 'curated' ? vault.items[0].name : vault.name, !vault[\"private\"] && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, __jsx(Embed, {\n      className: \"d-block NFT-image-v3\",\n      url: curatedType == 'live' && vaultType == 'curated' ? vault.items[0].image : vault.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }), curatedType == 'live' && vaultType == 'curated' && vault.items.length > 1 ? __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 101\n      }\n    }, ' you own ' + vault.items.length) : null), __jsx(Stack, {\n      align: \"center\",\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, curatedType == 'live' && vaultType == 'curated' && vault.items.length > 1 ? ' you own ' + vault.items.length : null))), __jsx(Box, _extends({\n      className: \"NFT newest\",\n      key: index\n    }, infoContainerSettings, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }), __jsx(Text, {\n      fontWeight: \"semibold\",\n      textAlign: \"left\",\n      pl: 2,\n      isTruncated: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, \"Network: \", vault.network), allowedJumpContracts(vault).length > 0 && showJump ? __jsx(React.Fragment, null, allowedJumpContracts(vault).map(function (contract, index) {\n      return __jsx(Link, {\n        fontSize: 'x-small',\n        textAlign: \"left\",\n        pl: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 27\n        }\n      }, \" Circuit jump to: \", contract.name, \" Collection\");\n    })) : null));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\"))))));\n}\n\n_s(MyVaults, \"c5YVsYJTt6G2zOGCNrdFOk9JEgA=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = MyVaults;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyVaults\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/MyVaults.tsx"],"names":["Box","Flex","Text","Link","Stack","useColorMode","Button","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","curatedContracts","InfiniteScroll","Embed","MyVaults","query","Number","start","pagePosition","setPagePosition","curatedType","setCuratedType","account","chainId","vaults","setVaults","liveVaults","setLiveVaults","unMintedVaults","setUnMintedVaults","claimedVaults","setClaimedVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","type","vaultType","setVaultType","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","version","setVersion","hasMore","setHasMore","offset","setOffset","liveCollections","setLiveCollections","unMintedCollections","setUnMintedCollections","claimedCollections","setClaimedCollections","jump","showJump","setShowHJump","PAGE_SIZE","isAllowedHop","vaultData","found","some","contract","allowedHop","ownership","allowedJumpContracts","foundContracts","filter","allowedJump","getVaults","fetch","method","headers","service","toString","response","json","jsonData","concat","console","log","length","groupItemsByTargetTokenId","live","unMinted","claimed","Array","from","Set","map","item","targetContract","name","fetchData","data","itemsMap","Map","targetTokenId","has","get","push","set","items","entries","acct","setAcct","chain","setChain","showOrHideNavLink","path","handleNewNavigationClick","location","href","origin","pathname","handleNftsNavigationClick","index","vault","pieces","split","pop","isERC721a","collectionType","isLiveCurated","url","join","tokenId","vaultContainerSettings","flex","minW","maxW","minH","maxH","borderWidth","mx","mb","rounded","overflow","borderColor","network","cursor","infoContainerSettings","redirect","totalValue","image"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode, Button } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API, curatedContracts } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n\nexport default function MyVaults() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const [curatedType, setCuratedType] = useState('live')\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [liveVaults, setLiveVaults] = useState([])\n  const [unMintedVaults, setUnMintedVaults] = useState([])\n  const [claimedVaults, setClaimedVaults] = useState([])\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [vaultType, setVaultType] = useState(query.type || \"unclaimed\")\n  const [experimental, setExperimental] = useState(query.experimental)\n  const {colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [version, setVersion] = useState(query.version != null)\n  const [hasMore, setHasMore] = useState(version? true: false)\n  const [offset, setOffset] = useState(0)\n  const [liveCollections, setLiveCollections] = useState([])\n  const [unMintedCollections, setUnMintedCollections] = useState([])\n  const [claimedCollections, setClaimedCollections] = useState([])\n  const [showJump, setShowHJump] = useState(query.jump == \"true\")\n  \n  const PAGE_SIZE = 20\n\n  const isAllowedHop = (vaultData) => {\n    // console.log('here', vaultData)\n    let found =  curatedContracts.some(contract => \n      contract.allowedHop && contract.allowedHop(vaultData.ownership, [])\n    );\n    // console.log('-------', found)\n    return found\n  }\n\n  const allowedJumpContracts = (vaultData) => {\n    let foundContracts = curatedContracts.filter(contract => \n      contract.allowedJump && contract.allowedJump(vaultData.ownership, [])\n    );\n    return foundContracts;\n  }\n\n  const getVaults = async () => {\n    try {\n      const response = await fetch('https://metadata.emblemvault.io' + `/${version || vaultType == \"curated\"? 'v1-':''}myvaults/`+(address ? address : account)+'?start='+offset+'&size='+PAGE_SIZE, { //+'&_vercel_no_cache=1'\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          '_vercel_no_cache':'1',\n          service: 'evmetadata',\n          chainId: chainId.toString(),\n          vaultType: vaultType.toString()\n        },\n      })\n      let jsonData = await response.json()\n      if (vaultType.toString() != 'curated') {\n        setVaults(vaults.concat(jsonData))\n        setState({ loaded: true })\n        setLoadingApi(false)\n        console.log(\"Records received\", jsonData.length)\n      } else if (vaultType.toString() == 'curated'){\n        setLiveVaults(groupItemsByTargetTokenId(jsonData.live))\n        setUnMintedVaults(jsonData.unMinted)\n        setClaimedVaults(jsonData.claimed)\n        setVaults(groupItemsByTargetTokenId(jsonData.live))\n        setState({ loaded: true })\n        setLoadingApi(false)\n        setHasMore(false)\n        setLiveCollections(Array.from(new Set(jsonData.live.map(item=>{return item.targetContract.name}))))\n        setUnMintedCollections(Array.from(new Set(jsonData.unMinted.map(item=>{return item.targetContract.name}))))\n        setClaimedCollections(Array.from(new Set(jsonData.claimed.map(item=>{return item.targetContract.name}))))\n      } else if (jsonData.length < PAGE_SIZE) {\n        setHasMore(false)\n      }\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }\n\n  function groupItemsByTargetTokenId(data) {\n    // const data = JSON.parse(jsonData);\n    const itemsMap = new Map();\n  \n    // Iterate through the data and group items by targetTokenId\n    for (const item of data) {\n      const targetTokenId = item.targetTokenId;\n      if (itemsMap.has(targetTokenId)) {\n        itemsMap.get(targetTokenId).push(item);\n      } else {\n        itemsMap.set(targetTokenId, [item]);\n      }\n    }\n  \n    // Convert the itemsMap to an array of objects\n    const items = Array.from(itemsMap.entries()).map(([targetTokenId, items]) => {\n      return {\n        targetTokenId: targetTokenId,\n        items: items\n      };\n    });\n  \n    return items;\n  }\n\n  // const more = ()=>{\n  //   if (location.href.includes('start')) {\n  //     location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition + PAGE_SIZE))\n  //   } else {\n  //     location.href = location.href + '?start='+(pagePosition + PAGE_SIZE)\n  //   }\n  //   // setPagePosition(pagePosition + PAGE_SIZE)\n  //   // getVaults()\n  // }\n\n  // const less = ()=>{\n  //   if (pagePosition - PAGE_SIZE < 0) {\n  //     setPagePosition(PAGE_SIZE)\n  //   }\n  //   if (location.href.includes('start')) {\n  //     location.href = location.href.replace('start='+pagePosition, 'start='+(pagePosition - PAGE_SIZE))\n  //   } else {\n  //     location.href = location.href + '?start='+(pagePosition - PAGE_SIZE)\n  //   }\n  //   // setPagePosition(pagePosition + 3)\n  //   // getVaults()\n  // }\n\n  // const loadCache = () => {\n  //   let vaults = JSON.parse(localStorage.getItem((address ? address : account) + '_' + chainId + '_newest')) // Load vaults from storage before updating from server!\n  //   if (vaults) {\n  //     setState({ loaded: true })\n  //     setVaults(vaults)\n  //     setLoadingApi(true)\n  //   }\n  // }\n\n  // const saveCache = (vaults) => {\n  //   localStorage.setItem((address ? address : account) + '_' + chainId + '_newest', JSON.stringify(vaults)) // Save new state for later\n  // }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  const showOrHideNavLink = (path: string)=> {\n    return vaultType == path ? true: false\n  }\n\n  const handleNewNavigationClick = (path)=>{\n    if (!address) {\n      location.href = location.origin + location.pathname + \"?type=\" + path\n    } else {\n      location.href = location.origin + location.pathname + \"?address=\" + address + \"&type=\" + path\n    }\n  }\n\n  const handleNftsNavigationClick = ()=>{\n    if (!address) {\n      location.href = location.origin + '/nfts'\n    } else {\n      location.href = location.origin + '/nfts' + \"?address=\" + address\n    }\n  }\n\n  useEffect(() => {\n    if (shouldFetchData) {\n      setShouldFetchData(false)\n      getVaults()\n    } else {\n    }\n  }, [shouldFetchData])\n\n  return (\n    <>\n    <Stack pl=\"10\" spacing={0} direction=\"row\">\n      <Button isDisabled={showOrHideNavLink('curated')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('curated')}}>\n          Curated\n      </Button>\n      <Button isDisabled={showOrHideNavLink('unclaimed')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('unclaimed')}}>\n          Locked\n      </Button>\n      <Button isDisabled={showOrHideNavLink('claimed')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('claimed')}}>\n          Unlocked\n      </Button>\n      <Button isDisabled={showOrHideNavLink('unminted')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('unminted')}}>\n          Not Minted\n      </Button>\n      {/* <Button isDisabled={showOrHideNavLink('created')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('created')}}>\n          Created by me\n      </Button>\n      <Button isDisabled={false} m={2} variant=\"ghost\" onClick={()=>{handleNftsNavigationClick()}}>\n          Other NFT's\n      </Button> */}\n    </Stack>\n    {showOrHideNavLink('curated')? (\n      <>\n        <Stack pl=\"8.7rem\" spacing={0} direction=\"row\">\n          {liveVaults.length? (\n            <Button isDisabled={curatedType=='live'} m={2} variant=\"ghost\" onClick={()=>{setVaults(liveVaults); setCuratedType('live')}}>\n              Unclaimed (curated) {liveVaults.length}\n            </Button>\n          ): null}\n          {claimedVaults.length? (\n            <Button isDisabled={curatedType=='claimed'} m={2} variant=\"ghost\" onClick={()=>{setVaults(claimedVaults); setCuratedType('claimed')}}>\n              Claimed (curated) {claimedVaults.length}\n            </Button>\n          ): null}\n          {unMintedVaults.length? (\n            <Button isDisabled={curatedType=='unminted'} m={2} variant=\"ghost\" onClick={()=>{setVaults(unMintedVaults); setCuratedType('unminted')}}>\n              Not Minted (curated) {unMintedVaults.length}\n            </Button>\n          ): null}\n          \n        </Stack>\n          <Stack pl=\"12.7rem\" spacing={0} direction=\"row\">\n            {liveCollections.length && curatedType == 'live' ? (\n              liveCollections.map((name, index) => {\n                return (\n                  <Button isDisabled={true} key={index} m={2} variant=\"ghost\">{name}</Button>\n                )\n              })\n            ) : null}\n            {claimedCollections.length && curatedType == 'claimed' ? (\n              claimedCollections.map((name, index) => {\n                return (\n                  <Button isDisabled={true} key={index} m={2} variant=\"ghost\">{name}</Button>\n                )\n              })\n            ) : null}\n            {unMintedCollections.length && curatedType == 'unminted' ? (\n              unMintedCollections.map((name, index) => {\n                return (\n                  <Button isDisabled={true} key={index} m={2} variant=\"ghost\">{name}</Button>\n                )\n              })\n            ) : null}\n          </Stack>\n      </>\n    ): null}\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n        \n        <InfiniteScroll                \n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={!showOrHideNavLink('curated')? fetchData: ()=>{}}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <></>\n            // <p style={{ textAlign: 'center' }}>\n            //   <b>No more vaults to load.</b> \n            // </p>\n          }\n        >\n      <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n        {vaults.length ? (\n          vaults.map((vault, index) => {\n            let pieces = location.pathname.split('/')\n            pieces.pop()\n            let isERC721a = vault.items && vault.items[0].targetContract && vault.items[0].targetContract.collectionType == 'ERC721a'? true : false\n            let isLiveCurated = curatedType == 'live' && vaultType == 'curated'\n            let url = location.origin + pieces.join('/') + '/nft'+(vaultType == 'curated' || vault.targetContract ? '2': '')+'?id=' + (isLiveCurated? (isERC721a ? vault.items[0].tokenId: vault.targetTokenId) : vault.tokenId) + '&cc=t'\n            const vaultContainerSettings = {\n              flex: '1',\n              minW: '200px',\n              maxW: '200px',\n              minH: '250px',\n              maxH: '250px',\n              borderWidth: '1px',\n              // color: 'white',\n              mx: '6',\n              mb: '6',\n              rounded: 'lg',\n              overflow: 'hidden',\n              borderColor: vault.network == 'matic' ? '#7145db !important' : vault.network == 'rinkeby'? '#ed6d20 !important': '#627eea !important',\n              cursor: 'pointer',\n            }\n            let infoContainerSettings = {\n              borderColor : '',\n              flex: '1',\n              minW: '200px',\n              maxW: '200px',\n              borderWidth: '1px',\n              // color: 'white',\n              mx: '6',\n              mb: '6',\n              rounded: 'lg',\n              overflow: 'hidden'\n            }\n            const redirect = function () {\n              setLoadingApi(true)\n              location.href = url\n            }\n            return (\n              <Box>\n                <Link href={url} className=\"vaultLink\">\n                  <Box className=\"NFT newest\" key={index} {...vaultContainerSettings} onClick={redirect}>\n                    <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>                    \n                      {curatedType == 'live' && vaultType == 'curated' ? vault.items[0].name: vault.name}\n                      {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                      \n                    </Text>\n                    <Stack align=\"center\">\n                      <Embed className=\"d-block NFT-image-v3\" url={curatedType == 'live' && vaultType == 'curated'? vault.items[0].image : vault.image}/>                    \n                      {curatedType == 'live' && vaultType == 'curated' && vault.items.length > 1 ? (<Text>{' you own '+ vault.items.length}</Text>) : null}\n                    </Stack>\n                    <Stack align=\"center\" mt={3}>\n                      {curatedType == 'live' && vaultType == 'curated' && vault.items.length > 1 ? ' you own '+ vault.items.length : null}\n                    </Stack>\n                  </Box>                \n                </Link>\n                \n                  <Box className=\"NFT newest\" key={index} {...infoContainerSettings} >\n                  <Text fontWeight=\"semibold\" textAlign=\"left\" pl={2} isTruncated={true}>   \n                    Network: {vault.network}                    \n                  </Text>\n                  {allowedJumpContracts(vault).length > 0 && showJump ? (\n                    <>                      \n                      {allowedJumpContracts(vault).map((contract, index) => {\n                        return (\n                          <Link fontSize={'x-small'} textAlign=\"left\" pl={2}> Circuit jump to: {contract.name} Collection</Link>\n                        )\n                      })}\n                    </>\n                  ) : null}\n                  \n                </Box>\n                \n                \n              </Box>\n            )\n          })\n          \n        ) : (\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        )}\n        \n      </Flex>\n      </InfiniteScroll>\n    </Loader>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}