{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport BackgroundVideo from './BackgroundVideo';\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Text, Link } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport dynamic from 'next/dynamic';\nimport { CHAIN_ID_NAMES } from '../utils';\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks';\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context';\nimport ColorBox from './ColorBox';\nimport Account from './Account';\nimport { TransactionToast } from './TransactionToast';\nimport TokenBalance from './TokenBalance';\nimport { WETH, ChainId } from '@uniswap/sdk';\nimport WalletConnect from './WalletConnect';\nimport { QueryParameters } from '../constants';\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic, CovalxDai, CovalBSC, CovalFantom } from '../tokens';\nimport transakSDK from '@transak/transak-sdk';\nimport { useRouter } from 'next/router'; // import Gun from 'gun';\n// import 'gun/sea'\n// import { GunProvider } from 'react-gun';\n\nvar Settings = dynamic(_c = function _c() {\n  return import('./Settings');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./Settings')];\n    },\n    modules: ['./Settings']\n  }\n});\n_c2 = Settings;\nexport default function Layout(_ref) {\n  _s();\n\n  var _this = this;\n\n  var children = _ref.children;\n\n  var _useWeb3React = useWeb3React(),\n      chainId = _useWeb3React.chainId,\n      account = _useWeb3React.account;\n\n  var isTestnet = typeof chainId === 'number' && chainId !== 1;\n\n  var _useDisclosure = useDisclosure(),\n      isOpenSettings = _useDisclosure.isOpen,\n      onOpenSettings = _useDisclosure.onOpen,\n      onCloseSettings = _useDisclosure.onClose;\n\n  var _useFirstToken = useFirstToken(),\n      _useFirstToken2 = _slicedToArray(_useFirstToken, 1),\n      firstToken = _useFirstToken2[0];\n\n  var _useSecondToken = useSecondToken(),\n      _useSecondToken2 = _slicedToArray(_useSecondToken, 1),\n      secondToken = _useSecondToken2[0];\n\n  var _useShowUSD = useShowUSD(),\n      _useShowUSD2 = _slicedToArray(_useShowUSD, 2),\n      showUSD = _useShowUSD2[0],\n      setShowUSD = _useShowUSD2[1]; // const [gun, setGun] = useState(Gun(['https://emblem-gun.herokuapp.com/gun']))\n\n\n  var _useTransactions = useTransactions(),\n      _useTransactions2 = _slicedToArray(_useTransactions, 1),\n      transactions = _useTransactions2[0]; // automatically try connecting to the injected connector on pageload\n\n\n  var triedToEagerConnect = useEagerConnect();\n  var queryParameters = useQueryParameters();\n  var requiredChainId = queryParameters[QueryParameters.CHAIN];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(!query.noLayout && query.noLayout !== 'true'),\n      useLayout = _useState[0],\n      setNoLayout = _useState[1];\n\n  var USDETHPrice = useUSDETHPrice();\n  var transak;\n\n  var initializeTransak = function initializeTransak(address, coin) {\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',\n      // Your API Key\n      environment: 'PRODUCTION',\n      // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '',\n      // Your customer's wallet address\n      themeColor: '000000',\n      // App theme color\n      fiatCurrency: 'USD',\n      // INR/GBP\n      // fiatAmount: 350,\n      email: '',\n      // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px' // networks: 'matic,bsc,eth,mainnet'\n\n    }); // To get all the events\n\n    transak.on(transak.ALL_EVENTS, function (data) {\n      console.log(data);\n    }); // This will trigger when the user marks payment is made.\n\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, function (orderData) {\n      console.log(orderData);\n      transak.close();\n    });\n    transak.init();\n  };\n\n  var showOrHideNavLink = function showOrHideNavLink(path) {\n    return location.pathname.includes(path) ? 'none' : 'block';\n  };\n\n  var handleNewNavigationClick = function handleNewNavigationClick(path) {\n    location.href = location.origin + '/' + path;\n  };\n\n  var handleSearchClick = function handleSearchClick() {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    location.href = location.origin + pieces.join('/') + '/search';\n  };\n\n  var handleNavigationclick = function handleNavigationclick() {\n    console.log(location.pathname);\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create';\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist';\n    }\n  };\n\n  var handleNavigationFeaturedclick = function handleNavigationFeaturedclick() {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n\n    if (location.pathname.includes('featured')) {\n      location.href = location.origin + pieces.join('/') + '/create';\n    } else {\n      location.href = location.origin + pieces.join('/') + '/featured';\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Settings, {\n    isOpen: isOpenSettings,\n    onClose: onCloseSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), __jsx(BackgroundVideo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), __jsx(ColorBox, {\n    as: Flex,\n    flexDirection: \"column\",\n    borderColor: Number(chainId) === 137 ? \"blue.500\" : Number(chainId) === 1 ? \"blue.500\" : Number(chainId) === 56 ? \"orange\" : \"orange.500\",\n    borderWidth: isTestnet ? '.5rem' : '.5rem',\n    minHeight: \"100vh\",\n    maxHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexShrink: 0,\n    overflowX: \"auto\",\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Testing No Layout \", useLayout.toString()), __jsx(IconButton, {\n    m: 2,\n    icon: \"settings\",\n    variant: \"ghost\",\n    onClick: onOpenSettings,\n    \"aria-label\": \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), __jsx(IconButton, {\n    m: 2,\n    icon: \"search\",\n    variant: \"ghost\",\n    onClick: handleSearchClick,\n    \"aria-label\": \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    display: showOrHideNavLink('create'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('create');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Create\"), __jsx(Button, {\n    display: showOrHideNavLink('vaults'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('vaults');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"My Vaults\"), __jsx(Button, {\n    display: showOrHideNavLink('featured'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('featured');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Featured\"), __jsx(Button, {\n    display: showOrHideNavLink('newest'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: function onClick() {\n      handleNewNavigationClick('newest');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Newest\")), __jsx(Account, {\n    triedToEagerConnect: triedToEagerConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    mt: isTestnet ? '5rem' : '4.5rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, typeof account !== 'string' ? !triedToEagerConnect || (typeof chainId === 'number' ? chainId !== ChainId.MAINNET : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(WalletConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })) : // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n  [chainId == 1 ? Coval : chainId == 80001 ? CovalTestMatic : chainId == 137 ? CovalMatic : chainId == 100 ? CovalxDai : chainId == 56 ? CovalBSC : chainId == 250 ? CovalFantom : CovalTest, firstToken ? firstToken.symbol != 'Coval' ? firstToken : null : null, secondToken ? secondToken.symbol != 'Coval' ? secondToken : null : null].filter(function (token) {\n    return token;\n  }).filter(function (token) {\n    return !(token === null || token === void 0 ? void 0 : token.equals(WETH[token.chainId]));\n  }).map(function (token) {\n    return __jsx(Box, {\n      key: token === null || token === void 0 ? void 0 : token.address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, __jsx(TokenBalance, {\n      token: token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Flex, {\n    id: \"shannon-container\",\n    flexGrow: 1,\n    direction: \"column\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, children), __jsx(Flex, {\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, typeof chainId === 'number'\n  /*&& chainId !== 1*/\n  ? __jsx(LightMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, __jsx(Badge, {\n    variant: \"solid\",\n    variantColor: chainId == 137 || chainId == 1 ? 'blue' : chainId == Number(56) ? 'orange' : 'orange'\n    /*isTestnet ? 'blue' : undefined*/\n    ,\n    fontSize: \"1rem\",\n    style: {\n      borderTopLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"On \", CHAIN_ID_NAMES[chainId].toLowerCase(), \" (click to swap networks)\"))) : null), transactions.length > 0 && __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, transactions.filter(function (transaction) {\n    return transaction.chainId === chainId;\n  }).map(function (_ref2) {\n    var hash = _ref2.hash;\n    return __jsx(Box, {\n      key: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, __jsx(TransactionToast, {\n      hash: hash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    left: 100,\n    alignItems: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    right: 1,\n    p: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, __jsx(Button // as=\"a\"\n  // {...{\n  //   href:\n  //     location.origin +\n  //     '/buy?chain=' +\n  //     chainId +\n  //     '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  //   target: '_blank',\n  //   rel: 'noopener noreferrer',\n  // }}\n  , {\n    onClick: function onClick() {\n      initializeTransak(account, 'COVAL');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, \"Buy $Coval\"))));\n}\n\n_s(Layout, \"WSpXAmV/7iFQm5EY1IX1Ox46TUE=\", false, function () {\n  return [useWeb3React, useDisclosure, useFirstToken, useSecondToken, useShowUSD, useTransactions, useEagerConnect, useQueryParameters, useRouter, useUSDETHPrice];\n});\n\n_c3 = Layout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Settings$dynamic\");\n$RefreshReg$(_c2, \"Settings\");\n$RefreshReg$(_c3, \"Layout\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx"],"names":["useState","BackgroundVideo","Flex","IconButton","useDisclosure","Badge","LightMode","Stack","Box","Button","Text","Link","useWeb3React","dynamic","CHAIN_ID_NAMES","useEagerConnect","useQueryParameters","useUSDETHPrice","useTransactions","useFirstToken","useSecondToken","useShowUSD","ColorBox","Account","TransactionToast","TokenBalance","WETH","ChainId","WalletConnect","QueryParameters","Coval","CovalTest","CovalTestMatic","CovalMatic","CovalxDai","CovalBSC","CovalFantom","transakSDK","useRouter","Settings","Layout","children","chainId","account","isTestnet","isOpenSettings","isOpen","onOpenSettings","onOpen","onCloseSettings","onClose","firstToken","secondToken","showUSD","setShowUSD","transactions","triedToEagerConnect","queryParameters","requiredChainId","CHAIN","query","noLayout","useLayout","setNoLayout","USDETHPrice","transak","initializeTransak","address","coin","apiKey","environment","defaultCryptoCurrency","walletAddress","themeColor","fiatCurrency","email","redirectURL","hostURL","window","location","origin","widgetHeight","widgetWidth","on","ALL_EVENTS","data","console","log","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","close","init","showOrHideNavLink","path","pathname","includes","handleNewNavigationClick","href","handleSearchClick","pieces","split","pop","join","handleNavigationclick","handleNavigationFeaturedclick","Number","toString","MAINNET","symbol","filter","token","equals","map","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","toLowerCase","length","transaction","hash"],"mappings":"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","sourcesContent":["import { ReactNode, useState } from 'react'\nimport BackgroundVideo from './BackgroundVideo'\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverCloseButton, PopoverBody, Text, Link} from '@chakra-ui/core'\nimport { useWeb3React } from '@web3-react/core'\nimport dynamic from 'next/dynamic'\nimport { CHAIN_ID_NAMES } from '../utils'\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks'\n\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context'\nimport ColorBox from './ColorBox'\nimport Account from './Account'\nimport { TransactionToast } from './TransactionToast'\nimport TokenBalance from './TokenBalance'\nimport { WETH, ChainId, Token } from '@uniswap/sdk'\nimport WalletConnect from './WalletConnect'\nimport { QueryParameters } from '../constants'\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic, CovalxDai, CovalBSC, CovalFantom, DEFAULT_TOKENS } from '../tokens'\nimport Head from 'next/head'\nimport transakSDK from '@transak/transak-sdk'\nimport { useRouter } from 'next/router'\n\n// import Gun from 'gun';\n// import 'gun/sea'\n// import { GunProvider } from 'react-gun';\n\nconst Settings = dynamic(() => import('./Settings'))\n\nexport default function Layout({ children }: { children: ReactNode}): JSX.Element {\n  const { chainId, account } = useWeb3React()\n  const isTestnet = typeof chainId === 'number' && chainId !== 1\n\n  const { isOpen: isOpenSettings, onOpen: onOpenSettings, onClose: onCloseSettings } = useDisclosure()\n\n  const [firstToken] = useFirstToken()\n  const [secondToken] = useSecondToken()\n  const [showUSD, setShowUSD] = useShowUSD()\n\n  // const [gun, setGun] = useState(Gun(['https://emblem-gun.herokuapp.com/gun']))\n\n  const [transactions] = useTransactions()\n\n  // automatically try connecting to the injected connector on pageload\n  const triedToEagerConnect = useEagerConnect()\n\n  const queryParameters = useQueryParameters()\n  const requiredChainId = queryParameters[QueryParameters.CHAIN]\n  const { query } = useRouter()\n  const [useLayout, setNoLayout] = useState(!query.noLayout && query.noLayout !== 'true')\n  const USDETHPrice = useUSDETHPrice()\n\n  let transak\n  const initializeTransak = (address?: string, coin? : string)=>{\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',  // Your API Key\n      environment: 'PRODUCTION', // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '', // Your customer's wallet address\n      themeColor: '000000', // App theme color\n      fiatCurrency: 'USD', // INR/GBP\n      // fiatAmount: 350,\n      email: '', // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px',\n      // networks: 'matic,bsc,eth,mainnet'\n\n    });\n  \n    // To get all the events\n    transak.on(transak.ALL_EVENTS, (data) => {\n      console.log(data)\n    });\n  \n    // This will trigger when the user marks payment is made.\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, (orderData) => {\n      console.log(orderData);\n      transak.close();\n    });\n  \n    transak.init()\n  }\n\n  const showOrHideNavLink = (path: string)=> {\n    return location.pathname.includes(path) ? 'none': 'block'\n  }\n\n  const handleNewNavigationClick = (path)=>{\n    location.href = location.origin + '/'+path\n  }\n  \n  const handleSearchClick = ()=>{\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    location.href = location.origin + pieces.join('/') + '/search'\n  }\n  \n  const handleNavigationclick = () => {\n    console.log(location.pathname)\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create'\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist'\n    }\n  }\n\n  const handleNavigationFeaturedclick = ()=>{\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    if (location.pathname.includes('featured')) {\n      location.href = location.origin + pieces.join('/') + '/create'\n    } else {\n      location.href = location.origin + pieces.join('/') + '/featured'\n    }\n  }\n  return (\n    <>\n      <Settings isOpen={isOpenSettings} onClose={onCloseSettings} />\n      <BackgroundVideo />\n      \n      <ColorBox\n        as={Flex}\n        flexDirection=\"column\"\n        borderColor={\n          Number(chainId) === 137 ? \"blue.500\" : \n          Number(chainId) === 1? \"blue.500\" : \n          Number(chainId) === 56? \"orange\" : \n          \"orange.500\"}\n        borderWidth={isTestnet ? '.5rem' : '.5rem'}\n        minHeight=\"100vh\"\n        maxHeight=\"100vh\"\n      >\n        <Flex justifyContent=\"space-between\" flexShrink={0} overflowX=\"auto\" p=\"1rem\">\n          <Stack spacing={0} direction=\"row\">\n            <Text>Testing No Layout {useLayout.toString()}</Text>\n            <IconButton m={2} icon=\"settings\" variant=\"ghost\" onClick={onOpenSettings} aria-label=\"Settings\" />\n            <IconButton m={2} icon=\"search\" variant=\"ghost\" onClick={handleSearchClick} aria-label=\"Search\" />\n            <Button display={showOrHideNavLink('create')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('create')}}>\n              Create\n            </Button>\n            <Button display={showOrHideNavLink('vaults')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('vaults')}}>\n              My Vaults\n            </Button>\n            <Button display={showOrHideNavLink('featured')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('featured')}}>\n              Featured\n            </Button>\n            <Button display={showOrHideNavLink('newest')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('newest')}}>\n              Newest\n            </Button>\n            {/* <Button m={2} variant=\"ghost\" onClick={handleNavigationclick}>\n              {' '}\n              {location.pathname.includes('vaultlist') ? 'Create' : 'Wallet (Vaults)'}\n            </Button>\n            <Button m={2} variant=\"ghost\" onClick={handleNavigationFeaturedclick}>\n              {' '}\n              {location.pathname.includes('featured') ? 'Create' : 'Featured Vaults'}\n            </Button>\n            <Button m={2} variant=\"ghost\" onClick={handleNavigationFeaturedclick}>\n              {' '}\n              {location.pathname.includes('featured') ? 'Create' : 'Featured Vaults'}\n            </Button> */}\n          </Stack>\n          <Account triedToEagerConnect={triedToEagerConnect} />\n        </Flex>\n\n        <Stack\n          position=\"absolute\"\n          top={0}\n          right={0}\n          m={isTestnet ? '1.5rem' : '1rem'}\n          mt={isTestnet ? '5rem' : '4.5rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n          zIndex={2}\n        >\n          {typeof account !== 'string' ? (\n            !triedToEagerConnect ||\n            (typeof chainId === 'number'\n              ? chainId !== ChainId.MAINNET\n              : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : (\n              <Box>\n                <WalletConnect />\n              </Box>\n            )\n          ) : (\n            // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n            [\n              chainId == 1 ? Coval : \n              chainId == 80001 ? CovalTestMatic : \n              chainId == 137 ? CovalMatic : \n              chainId == 100? CovalxDai : \n              chainId == 56 ? CovalBSC :\n              chainId == 250 ? CovalFantom :\n              CovalTest,\n              firstToken ? (firstToken.symbol != 'Coval' ? firstToken : null) : null,\n              secondToken ? (secondToken.symbol != 'Coval' ? secondToken : null) : null,\n            ]\n              .filter((token) => token)\n              .filter((token) => !token?.equals(WETH[token.chainId]))\n              .map((token) => (\n                <Box key={token?.address}>\n                  <TokenBalance token={token as Token} />\n                </Box>\n              ))\n          )}\n        </Stack>\n\n        <Flex id=\"shannon-container\" flexGrow={1} direction=\"column\" overflow=\"auto\">\n          {children}\n        </Flex>\n\n        <Flex minHeight=\"1.5rem\">\n          {typeof chainId === 'number' /*&& chainId !== 1*/ ? (\n            <LightMode>\n              <Link href=\"/swap\">\n                <Badge\n                  variant=\"solid\"\n                  variantColor={\n                    chainId == 137 || chainId == 1 ? 'blue' : \n                    chainId == Number(56) ? 'orange':\n                    'orange'/*isTestnet ? 'blue' : undefined*/}\n                  fontSize=\"1rem\"\n                  style={{ borderTopLeftRadius: 0, borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }} >\n                  On {CHAIN_ID_NAMES[chainId].toLowerCase()} (click to swap networks)\n                  {/* (Swap to {chainId == 1 ? 'Matic' : 'Ethereum'}) */}\n                </Badge>\n              </Link>\n            </LightMode>\n          ):null}\n        </Flex>\n\n        {transactions.length > 0 && (\n          <Stack\n            position=\"absolute\"\n            bottom={0}\n            right={0}\n            m={isTestnet ? '1.5rem' : '1rem'}\n            alignItems=\"flex-end\"\n            spacing=\"1rem\"\n            zIndex={2}\n          >\n            {transactions\n              .filter((transaction) => transaction.chainId === chainId)\n              .map(({ hash }) => (\n                <Box key={hash}>\n                  <TransactionToast hash={hash} />\n                </Box>\n              ))}\n          </Stack>\n        )}\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          left={100}\n          alignItems=\"center\"\n          align=\"center\"\n        >\n          {/* <Popover usePortal>\n            <PopoverTrigger>\n            <IconButton size=\"sm\" icon=\"warning-2\" aria-label=''/>\n            </PopoverTrigger>\n            <PopoverContent zIndex={4} width=\"5000px\">\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverBody><Text fontSize=\"xs\">Emblem Vault is experimental. Before purchasing $COVAL or $FUEL tokens, you must ensure that the nature, complexity and risks inherent in the trading of cryptocurrency are suitable for your objectives in light of your circumstances and financial position. Emblem, Emblem Vault, $COVAL, and/or $FUEL shall be under no obligation to purchase or to broker the purchase back from you of your cryptocurrency in circumstances where there is no viable market for the purchase of the same. The products and services presented on this website may only be purchased in jurisdictions in which their marketing and distribution are authorized. Using or Creating Vaults is done at your own risk.</Text></PopoverBody>\n            </PopoverContent>\n          </Popover> */}\n        </Stack>\n\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          right={1}\n          p={isTestnet ? '1.5rem' : '1rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n        >\n          <Button\n            // as=\"a\"\n            // {...{\n            //   href:\n            //     location.origin +\n            //     '/buy?chain=' +\n            //     chainId +\n            //     '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            //   target: '_blank',\n            //   rel: 'noopener noreferrer',\n            // }}\n            onClick={()=>{initializeTransak(account, 'COVAL')}}\n          >\n            Buy $Coval\n          </Button>\n        </Stack>\n      </ColorBox>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}