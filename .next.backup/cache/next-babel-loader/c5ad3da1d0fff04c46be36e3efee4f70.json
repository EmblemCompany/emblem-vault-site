{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Stack, Button, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, Select, useColorMode } from '@chakra-ui/core';\nimport { HStack, VStack } from '@chakra-ui/react';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { EMBLEM_API } from '../constants';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed';\nexport default function Find() {\n  _s();\n\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(Number(query.start) || 0),\n      pagePosition = _useState[0],\n      setPagePosition = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState2 = useState([]),\n      vaults = _useState2[0],\n      setVaults = _useState2[1];\n\n  var _useState3 = useState({\n    loaded: true\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingApi = _useState4[0],\n      setLoadingApi = _useState4[1];\n\n  var _useState5 = useState(query.address),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState(query.experimental),\n      experimental = _useState6[0],\n      setExperimental = _useState6[1];\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState7 = useState(false),\n      shouldFetchData = _useState7[0],\n      setShouldFetchData = _useState7[1];\n\n  var _useState8 = useState(true),\n      hasMore = _useState8[0],\n      setHasMore = _useState8[1];\n\n  var _useState9 = useState(0),\n      offset = _useState9[0],\n      setOffset = _useState9[1];\n\n  var _useState10 = useState(query && Object.keys(query).length > 0),\n      q = _useState10[0],\n      setQ = _useState10[1];\n\n  var _useState11 = useState(false),\n      hideClaimed = _useState11[0],\n      setHideClaimed = _useState11[1];\n\n  var _useState12 = useState(false),\n      hideUnminted = _useState12[0],\n      setHideUnminted = _useState12[1];\n\n  var _useState13 = useState(query.name),\n      assetName = _useState13[0],\n      setAssetName = _useState13[1];\n\n  var _useState14 = useState(assetName || ''),\n      tempAssetName = _useState14[0],\n      setTempAssetName = _useState14[1];\n\n  var _useState15 = useState(query.coin),\n      coin = _useState15[0],\n      setCoin = _useState15[1];\n\n  var _useState16 = useState(coin || ''),\n      tempCoin = _useState16[0],\n      setTempCoin = _useState16[1];\n\n  var _useState17 = useState(query.project),\n      project = _useState17[0],\n      setProject = _useState17[1];\n\n  var _useState18 = useState(project || ''),\n      tempProject = _useState18[0],\n      setTempProject = _useState18[1];\n\n  var _useState19 = useState([]),\n      projects = _useState19[0],\n      setProjects = _useState19[1];\n\n  var _useState20 = useState(false),\n      loadedProjects = _useState20[0],\n      setLoadedProjects = _useState20[1];\n\n  var _useState21 = useState(query.searchType || 'filter'),\n      searchType = _useState21[0],\n      setSearchType = _useState21[1];\n\n  var _useState22 = useState(searchType.toString()),\n      tempSearchType = _useState22[0],\n      setTempSearchType = _useState22[1];\n\n  var _useState23 = useState(query.vaultName),\n      vaultName = _useState23[0],\n      setVaultName = _useState23[1];\n\n  var _useState24 = useState(vaultName || ''),\n      tempVaultName = _useState24[0],\n      setTempVaultName = _useState24[1];\n\n  var _useState25 = useState(query.vaultDescription),\n      vaultDescription = _useState25[0],\n      setVaultDescription = _useState25[1];\n\n  var _useState26 = useState(vaultDescription),\n      tempVaultDescription = _useState26[0],\n      setTempVaultDescription = _useState26[1];\n\n  var _useState27 = useState(query.network || null),\n      network = _useState27[0],\n      setNetwork = _useState27[1];\n\n  var _useState28 = useState(Object.keys(query).filter(function (key) {\n    return key !== \"vaultName\" && key !== \"vaultDescription\" && key !== \"searchType\";\n  })),\n      balanceChecks = _useState28[0],\n      setBalanceChecks = _useState28[1];\n\n  var _useState29 = useState(Object.keys(query).filter(function (key) {\n    return key !== \"name\" && key !== \"coin\" && key !== \"project\" && key !== \"searchType\";\n  })),\n      metadataChecks = _useState29[0],\n      setMetadataChecks = _useState29[1];\n\n  var PAGE_SIZE = 20;\n\n  var getProjects = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(EMBLEM_API + '/search/projects', {\n                method: 'GET',\n                headers: {\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context.sent;\n              setProjects(jsonData);\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getProjects() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var body, response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              body = {};\n\n              if (metadataChecks.length > 0) {\n                body.metadata = {};\n                metadataChecks.forEach(function (key) {\n                  if (key == \"vaultDescription\") {\n                    body.metadata[\"description\"] = tempVaultDescription;\n                  }\n\n                  if (key == \"vaultName\") {\n                    body.metadata[\"name\"] = tempVaultName;\n                  }\n                });\n              }\n\n              if (balanceChecks.length > 0) {\n                body.balance = {};\n                balanceChecks.forEach(function (key) {\n                  if (key == \"name\") {\n                    body.balance[\"name\"] = tempAssetName;\n                  }\n\n                  if (key == \"coin\") {\n                    body.balance[\"coin\"] = tempCoin;\n                  }\n\n                  if (key == \"project\") {\n                    body.balance[\"project\"] = tempProject;\n                  }\n                });\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return fetch(EMBLEM_API + '/find/' + tempSearchType + '?start=' + offset + '&size=' + PAGE_SIZE, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n\n            case 9:\n              jsonData = _context2.sent;\n              console.log('------ vaults', jsonData);\n              jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true);\n              setVaults(vaults.concat(jsonData));\n              setState({\n                loaded: true\n              });\n              setLoadingApi(false);\n              _context2.next = 19;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](3);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 17]]);\n    }));\n\n    return function getVaults() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(offset, PAGE_SIZE, offset + PAGE_SIZE);\n              setOffset(offset + PAGE_SIZE);\n              setShouldFetchData(true);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fetchData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _useState30 = useState(''),\n      acct = _useState30[0],\n      setAcct = _useState30[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [account, acct]);\n\n  var _useState31 = useState(chainId),\n      chain = _useState31[0],\n      setChain = _useState31[1];\n\n  useEffect(function () {\n    if (chainId && chain != chainId) {\n      setChain(chainId);\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {\n      setState({\n        loaded: false\n      });\n      getVaults();\n    }\n  }, [chainId, chain]);\n  useEffect(function () {\n    if (shouldFetchData) {\n      console.log('here 1');\n      setShouldFetchData(false);\n      setLoadingApi(true);\n      getVaults();\n    } else {\n      console.log('no fetch');\n    }\n  }, [shouldFetchData]);\n  useEffect(function () {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2');\n      setShouldFetchData(true); // getVaults()\n    } else {\n      console.log('no fetch', q, vaults);\n    }\n  }, [q, vaults]);\n  useEffect(function () {\n    if (projects.length == 0 && !loadedProjects) {\n      setLoadedProjects(true);\n      getProjects();\n    }\n  }); // useEffect(() => {\n  //   if (query.assetName && !balanceChecks.includes('assetName')) {      \n  //     setBalanceChecks(balanceChecks.concat('assetName'))\n  //   }    \n  // })\n  // useEffect(() => {\n  //   if (query.coin && !balanceChecks.includes('coin')) {      \n  //     setBalanceChecks(balanceChecks.concat('coin'))\n  //   }\n  // })\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setBalanceChecks(balanceChecks.concat(target));\n    }\n\n    console.log('balance checks', balanceChecks);\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(function (item) {\n        return item !== target;\n      }));\n    } else {\n      setMetadataChecks(metadataChecks.concat(target));\n    }\n\n    console.log('metadata checks', metadataChecks);\n  }\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }) : '', __jsx(VStack, {\n    width: \"100%\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    onChange: function onChange(e) {\n      setTempSearchType(e.target.value);\n    },\n    defaultValue: tempSearchType,\n    value: tempSearchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    isChecked: tempSearchType == \"filter\" ? true : false,\n    value: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"Filter (AND)\"), __jsx(Radio, {\n    isChecked: tempSearchType === \"or\" ? true : false,\n    value: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Search (OR)\"))), __jsx(CheckboxGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, __jsx(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check1\",\n    isChecked: balanceChecks.includes('name'),\n    value: \"name\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Asset Name\"), __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check2\",\n    isChecked: balanceChecks.includes('coin'),\n    value: \"coin\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Blockchain\"), __jsx(Checkbox, {\n    isDisabled: metadataChecks.length > 0,\n    key: \"check3\",\n    isChecked: balanceChecks.includes('project'),\n    value: \"project\",\n    onChange: function onChange(e) {\n      addOrRemoveBalanceFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Project\"), __jsx(Checkbox, {\n    isDisabled: balanceChecks.length > 0,\n    key: \"check4\",\n    isChecked: metadataChecks.includes('vaultName'),\n    value: \"vaultName\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Vault Name\"), __jsx(Checkbox, {\n    isDisabled: balanceChecks.length > 0,\n    key: \"check5\",\n    isChecked: metadataChecks.includes('vaultDescription'),\n    value: \"vaultDescription\",\n    onChange: function onChange(e) {\n      addOrRemoveMetadataFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Vault Description\"), __jsx(Checkbox, {\n    isChecked: hideClaimed == true,\n    key: \"check6\",\n    value: \"hideClaimed\",\n    onChange: function onChange(e) {\n      setHideClaimed(!hideClaimed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Hide Claimed\"), __jsx(Checkbox, {\n    isChecked: hideUnminted == true,\n    key: \"check6\",\n    value: \"hideUnminted\",\n    onChange: function onChange(e) {\n      setHideUnminted(!hideUnminted);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Hide Un-Minted\"))), balanceChecks.map(function (check, index) {\n    return __jsx(VStack, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, index == 0 ? null : tempSearchType == \"or\" ? \"or\" : \"and\", \" \", check == \"coin\" ? \"from Blockchain\" : check == \"name\" ? \"within balances for the Asset Name of\" : \"of the Project\"), check == \"name\" ? __jsx(Input, {\n      value: tempAssetName,\n      onChange: function onChange(e) {\n        return setTempAssetName(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }) : check == \"coin\" ? __jsx(Select, {\n      value: tempCoin,\n      onChange: function onChange(e) {\n        setTempCoin(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      key: \"1\",\n      value: \"POLYGON\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, \"Polygon (Matic)\"), __jsx(\"option\", {\n      key: \"2\",\n      value: \"XCP\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, \"Counterparty\"), __jsx(\"option\", {\n      key: \"3\",\n      value: \"BTC\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, \"Bitcoin\"), __jsx(\"option\", {\n      key: \"4\",\n      value: \"BCH\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, \"Bitcoin Cash\"), __jsx(\"option\", {\n      key: \"5\",\n      value: \"DGB\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, \"Digibyte\"), __jsx(\"option\", {\n      key: \"6\",\n      value: \"DOGE\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, \"Dogecoin\"), __jsx(\"option\", {\n      key: \"7\",\n      value: \"ETH\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, \"Ethereum\"), __jsx(\"option\", {\n      key: \"8\",\n      value: \"FTM\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"Fantom\"), __jsx(\"option\", {\n      key: \"9\",\n      value: \"LTC\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, \"Litecoin\"), __jsx(\"option\", {\n      key: \"10\",\n      value: \"NMC\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, \"Namecoin\"), __jsx(\"option\", {\n      key: \"11\",\n      value: \"OMNI\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"Omni\"), __jsx(\"option\", {\n      key: \"12\",\n      value: \"xDai\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, \"xDai\"), __jsx(\"option\", {\n      key: \"13\",\n      value: \"OMNI\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }, \"Omni\"), __jsx(\"option\", {\n      key: \"14\",\n      value: \"XDP\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, \"Doge Party\"), __jsx(\"option\", {\n      key: \"15\",\n      value: \"XMP\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, \"Mona Party\"), __jsx(\"option\", {\n      key: \"16\",\n      value: \"XTZ\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, \"Tezos\")) : check == \"project\" ? __jsx(Select, {\n      value: tempProject,\n      onChange: function onChange(e) {\n        setTempProject(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, projects.map(function (project, index) {\n      return __jsx(\"option\", {\n        key: \"project-\" + index,\n        value: project,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }\n      }, project);\n    })) : null);\n  }), metadataChecks.map(function (check, index) {\n    return __jsx(VStack, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, index == 0 ? null : tempSearchType == \"or\" ? \"or\" : \"and\", \" \", check == \"vaultName\" ? \"within vault name\" : check == \"vaultDescription\" ? \"within vault description\" : null), check == \"vaultName\" ? __jsx(Input, {\n      value: tempVaultName,\n      onChange: function onChange(e) {\n        return setTempVaultName(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }) : check == \"vaultDescription\" ? __jsx(Input, {\n      value: tempVaultDescription,\n      onChange: function onChange(e) {\n        return setTempVaultDescription(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }) : null);\n  }), __jsx(Button, {\n    m: 2,\n    isDisabled: balanceChecks.length < 1 && metadataChecks.length < 1,\n    onClick: function onClick() {\n      setOffset(0);\n      setState({\n        loaded: false\n      });\n      setVaults([]);\n      setQ(true);\n      var loc = location.href.split('?')[0] + '?';\n      metadataChecks.forEach(function (key) {\n        if (key == \"vaultDescription\") {\n          loc = loc + key + '=' + tempVaultDescription + \"&\";\n        }\n\n        if (key == \"vaultName\") {\n          loc = loc + key + '=' + tempVaultName + \"&\";\n        }\n      });\n      balanceChecks.forEach(function (key) {\n        console.log(key);\n\n        if (key == \"name\") {\n          loc = loc + key + '=' + tempAssetName + \"&\";\n        }\n\n        if (key == \"coin\") {\n          loc = loc + key + '=' + tempCoin + \"&\";\n        }\n\n        if (key == \"project\") {\n          loc = loc + key + '=' + tempProject + \"&\";\n        }\n      });\n\n      if (tempSearchType) {\n        loc = loc + \"searchType=\" + tempSearchType + \"&\";\n      } // let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n\n\n      console.log(\"SEARCH\", loc);\n      window.history.pushState('', 'Title', loc);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, \"Search\")), q ? __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: vaults.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, vaults.length ? vaults.map(function (vault, index) {\n    var pieces = location.pathname.split('/');\n    pieces.pop();\n    var url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId;\n    var flexSettings = {\n      flex: '1',\n      minW: '200px',\n      maxW: '200px',\n      borderWidth: '1px',\n      // color: 'white',\n      mx: '6',\n      mb: '6',\n      rounded: 'lg',\n      overflow: 'hidden',\n      borderColor: vault.status == 'claimed' ? 'green !important' : '',\n      cursor: 'pointer'\n    };\n\n    var redirect = function redirect() {\n      setLoadingApi(true);\n      location.href = url;\n    };\n\n    if (hideClaimed && vault.status == 'claimed' || hideUnminted && !vault.live) {\n      return null;\n    } else {\n      return __jsx(Link, {\n        href: url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 23\n        }\n      }, __jsx(Box, _extends({\n        className: \"NFT newest\",\n        key: index\n      }, flexSettings, {\n        onClick: redirect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }\n      }), __jsx(Text, {\n        fontWeight: \"semibold\",\n        textAlign: \"center\",\n        mt: 2,\n        pl: 2,\n        isTruncated: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 27\n        }\n      }, vault.name, !vault[\"private\"] && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null), __jsx(Stack, {\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 27\n        }\n      }, __jsx(Embed, {\n        className: \"d-block w-100 NFT-newest-image\",\n        url: vault.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      })), __jsx(Box, {\n        d: \"flex\",\n        alignItems: \"baseline\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 27\n        }\n      }), __jsx(Stack, {\n        align: \"center\",\n        mt: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 27\n        }\n      }, vault.status == 'claimed' ? __jsx(Text, {\n        color: \"green.500\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 58\n        }\n      }, \"CLAIMED\") : null, __jsx(Text, {\n        fontSize: \"xs\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }, \"Id: \", vault.tokenId))));\n    }\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS.\", ' ', __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  }, \"CREATE ONE HERE!\")))) : null);\n}\n\n_s(Find, \"nEbYOpiU5l2vumIWDRs59gFxLIU=\", false, function () {\n  return [useRouter, useWeb3React, useColorMode];\n});\n\n_c = Find;\n\nvar _c;\n\n$RefreshReg$(_c, \"Find\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Find.tsx"],"names":["Box","Flex","Text","Link","Stack","Button","Checkbox","CheckboxGroup","Radio","RadioGroup","Input","Select","useColorMode","HStack","VStack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","EMBLEM_API","InfiniteScroll","Embed","Find","query","Number","start","pagePosition","setPagePosition","account","chainId","vaults","setVaults","loaded","state","setState","loadingApi","setLoadingApi","address","setAddress","experimental","setExperimental","colorMode","shouldFetchData","setShouldFetchData","hasMore","setHasMore","offset","setOffset","Object","keys","length","q","setQ","hideClaimed","setHideClaimed","hideUnminted","setHideUnminted","name","assetName","setAssetName","tempAssetName","setTempAssetName","coin","setCoin","tempCoin","setTempCoin","project","setProject","tempProject","setTempProject","projects","setProjects","loadedProjects","setLoadedProjects","searchType","setSearchType","toString","tempSearchType","setTempSearchType","vaultName","setVaultName","tempVaultName","setTempVaultName","vaultDescription","setVaultDescription","tempVaultDescription","setTempVaultDescription","network","setNetwork","filter","key","balanceChecks","setBalanceChecks","metadataChecks","setMetadataChecks","PAGE_SIZE","getProjects","fetch","method","headers","service","response","json","jsonData","getVaults","body","metadata","forEach","balance","JSON","stringify","console","log","concat","fetchData","acct","setAcct","chain","setChain","addOrRemoveBalanceFilter","target","includes","item","addOrRemoveMetadataFilter","e","value","map","check","index","loc","location","href","split","window","history","pushState","textAlign","vault","pieces","pathname","pop","url","origin","join","tokenId","flexSettings","flex","minW","maxW","borderWidth","mx","mb","rounded","overflow","borderColor","status","cursor","redirect","live","totalValue","image"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAuCC,KAAvC,EAA8CC,MAA9C,EAA8EC,QAA9E,EAAwFC,aAAxF,EAAuGC,KAAvG,EAA8GC,UAA9G,EAA0HC,KAA1H,EAAiJC,MAAjJ,EAAyJC,YAAzJ,QAA6K,iBAA7K;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,mBACXP,SAAS,EADE;AAAA,MACrBQ,KADqB,cACrBA,KADqB;;AAAA,kBAEWL,QAAQ,CAACM,MAAM,CAACD,KAAK,CAACE,KAAP,CAAN,IAAuB,CAAxB,CAFnB;AAAA,MAEtBC,YAFsB;AAAA,MAERC,eAFQ;;AAAA,sBAGAX,YAAY,EAHZ;AAAA,MAGrBY,OAHqB,iBAGrBA,OAHqB;AAAA,MAGZC,OAHY,iBAGZA,OAHY;;AAAA,mBAIDX,QAAQ,CAAC,EAAD,CAJP;AAAA,MAItBY,MAJsB;AAAA,MAIdC,SAJc;;AAAA,mBAKHb,QAAQ,CAAC;AAAEc,IAAAA,MAAM,EAAE;AAAV,GAAD,CALL;AAAA,MAKtBC,KALsB;AAAA,MAKfC,QALe;;AAAA,mBAMOhB,QAAQ,CAAC,KAAD,CANf;AAAA,MAMtBiB,UANsB;AAAA,MAMVC,aANU;;AAAA,mBAOClB,QAAQ,CAACK,KAAK,CAACc,OAAP,CAPT;AAAA,MAOtBA,OAPsB;AAAA,MAObC,UAPa;;AAAA,mBAQWpB,QAAQ,CAACK,KAAK,CAACgB,YAAP,CARnB;AAAA,MAQtBA,YARsB;AAAA,MAQRC,eARQ;;AAAA,sBASP9B,YAAY,EATL;AAAA,MASrB+B,SATqB,iBASrBA,SATqB;;AAAA,mBAUiBvB,QAAQ,CAAC,KAAD,CAVzB;AAAA,MAUtBwB,eAVsB;AAAA,MAULC,kBAVK;;AAAA,mBAWCzB,QAAQ,CAAC,IAAD,CAXT;AAAA,MAWtB0B,OAXsB;AAAA,MAWbC,UAXa;;AAAA,mBAYD3B,QAAQ,CAAC,CAAD,CAZP;AAAA,MAYtB4B,MAZsB;AAAA,MAYdC,SAZc;;AAAA,oBAaX7B,QAAQ,CAACK,KAAK,IAAIyB,MAAM,CAACC,IAAP,CAAY1B,KAAZ,EAAmB2B,MAAnB,GAA4B,CAAtC,CAbG;AAAA,MAatBC,CAbsB;AAAA,MAanBC,IAbmB;;AAAA,oBAcSlC,QAAQ,CAAC,KAAD,CAdjB;AAAA,MActBmC,WAdsB;AAAA,MAcTC,cAdS;;AAAA,oBAeWpC,QAAQ,CAAC,KAAD,CAfnB;AAAA,MAetBqC,YAfsB;AAAA,MAeRC,eAfQ;;AAAA,oBAiBKtC,QAAQ,CAACK,KAAK,CAACkC,IAAP,CAjBb;AAAA,MAiBtBC,SAjBsB;AAAA,MAiBXC,YAjBW;;AAAA,oBAkBazC,QAAQ,CAACwC,SAAS,IAAI,EAAd,CAlBrB;AAAA,MAkBtBE,aAlBsB;AAAA,MAkBPC,gBAlBO;;AAAA,oBAoBL3C,QAAQ,CAACK,KAAK,CAACuC,IAAP,CApBH;AAAA,MAoBtBA,IApBsB;AAAA,MAoBhBC,OApBgB;;AAAA,oBAqBG7C,QAAQ,CAAC4C,IAAI,IAAI,EAAT,CArBX;AAAA,MAqBtBE,QArBsB;AAAA,MAqBZC,WArBY;;AAAA,oBAuBC/C,QAAQ,CAACK,KAAK,CAAC2C,OAAP,CAvBT;AAAA,MAuBtBA,OAvBsB;AAAA,MAuBbC,UAvBa;;AAAA,oBAwBSjD,QAAQ,CAACgD,OAAO,IAAI,EAAZ,CAxBjB;AAAA,MAwBtBE,WAxBsB;AAAA,MAwBTC,cAxBS;;AAAA,oBA0BGnD,QAAQ,CAAC,EAAD,CA1BX;AAAA,MA0BtBoD,QA1BsB;AAAA,MA0BZC,WA1BY;;AAAA,oBA2BerD,QAAQ,CAAC,KAAD,CA3BvB;AAAA,MA2BtBsD,cA3BsB;AAAA,MA2BNC,iBA3BM;;AAAA,oBA6BOvD,QAAQ,CAACK,KAAK,CAACmD,UAAN,IAAoB,QAArB,CA7Bf;AAAA,MA6BtBA,UA7BsB;AAAA,MA6BVC,aA7BU;;AAAA,oBA8BezD,QAAQ,CAACwD,UAAU,CAACE,QAAX,EAAD,CA9BvB;AAAA,MA8BtBC,cA9BsB;AAAA,MA8BNC,iBA9BM;;AAAA,oBAgCK5D,QAAQ,CAACK,KAAK,CAACwD,SAAP,CAhCb;AAAA,MAgCtBA,SAhCsB;AAAA,MAgCXC,YAhCW;;AAAA,oBAiCa9D,QAAQ,CAAC6D,SAAS,IAAI,EAAd,CAjCrB;AAAA,MAiCtBE,aAjCsB;AAAA,MAiCPC,gBAjCO;;AAAA,oBAmCmBhE,QAAQ,CAACK,KAAK,CAAC4D,gBAAP,CAnC3B;AAAA,MAmCtBA,gBAnCsB;AAAA,MAmCJC,mBAnCI;;AAAA,oBAoC2BlE,QAAQ,CAACiE,gBAAD,CApCnC;AAAA,MAoCtBE,oBApCsB;AAAA,MAoCAC,uBApCA;;AAAA,oBAsCCpE,QAAQ,CAACK,KAAK,CAACgE,OAAN,IAAiB,IAAlB,CAtCT;AAAA,MAsCtBA,OAtCsB;AAAA,MAsCbC,UAtCa;;AAAA,oBAwCatE,QAAQ,CAAC8B,MAAM,CAACC,IAAP,CAAY1B,KAAZ,EAAmBkE,MAAnB,CAA0B,UAAAC,GAAG,EAAE;AAAC,WAAOA,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,kBAA/B,IAAqDA,GAAG,KAAK,YAApE;AAAiF,GAAjH,CAAD,CAxCrB;AAAA,MAwCtBC,aAxCsB;AAAA,MAwCPC,gBAxCO;;AAAA,oBAyCe1E,QAAQ,CAAC8B,MAAM,CAACC,IAAP,CAAY1B,KAAZ,EAAmBkE,MAAnB,CAA0B,UAAAC,GAAG,EAAE;AAAC,WAAOA,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,MAA1B,IAAoCA,GAAG,KAAK,SAA5C,IAAyDA,GAAG,KAAK,YAAxE;AAAqF,GAArH,CAAD,CAzCvB;AAAA,MAyCtBG,cAzCsB;AAAA,MAyCNC,iBAzCM;;AA2C7B,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEOC,KAAK,CAAC9E,UAAU,GAAG,kBAAd,EAAkC;AAC5D+E,gBAAAA,MAAM,EAAE,KADoD;AAE5DC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,OAAO,EAAE;AADF;AAFmD,eAAlC,CAFZ;;AAAA;AAEVC,cAAAA,QAFU;AAAA;AAAA,qBAQKA,QAAQ,CAACC,IAAT,EARL;;AAAA;AAQZC,cAAAA,QARY;AAUhBhC,cAAAA,WAAW,CAACgC,QAAD,CAAX;AAVgB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXP,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAcA,MAAMQ,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,IADY,GACA,EADA;;AAEhB,kBAAIZ,cAAc,CAAC3C,MAAf,GAAwB,CAA5B,EAA+B;AAC7BuD,gBAAAA,IAAI,CAACC,QAAL,GAAgB,EAAhB;AACAb,gBAAAA,cAAc,CAACc,OAAf,CAAuB,UAAAjB,GAAG,EAAI;AAC5B,sBAAIA,GAAG,IAAI,kBAAX,EAA+B;AAC7Be,oBAAAA,IAAI,CAACC,QAAL,CAAc,aAAd,IAA+BrB,oBAA/B;AACD;;AACD,sBAAIK,GAAG,IAAI,WAAX,EAAwB;AACtBe,oBAAAA,IAAI,CAACC,QAAL,CAAc,MAAd,IAAwBzB,aAAxB;AACD;AACF,iBAPD;AASD;;AACD,kBAAIU,aAAa,CAACzC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BuD,gBAAAA,IAAI,CAACG,OAAL,GAAe,EAAf;AACAjB,gBAAAA,aAAa,CAACgB,OAAd,CAAsB,UAAAjB,GAAG,EAAI;AAC3B,sBAAIA,GAAG,IAAI,MAAX,EAAmB;AACjBe,oBAAAA,IAAI,CAACG,OAAL,CAAa,MAAb,IAAuBhD,aAAvB;AACD;;AACD,sBAAI8B,GAAG,IAAI,MAAX,EAAmB;AACjBe,oBAAAA,IAAI,CAACG,OAAL,CAAa,MAAb,IAAuB5C,QAAvB;AACD;;AACD,sBAAI0B,GAAG,IAAI,SAAX,EAAsB;AACpBe,oBAAAA,IAAI,CAACG,OAAL,CAAa,SAAb,IAA0BxC,WAA1B;AACD;AACF,iBAVD;AAWD;;AA3Be;AAAA;AAAA,qBA6BS6B,KAAK,CAAC9E,UAAU,GAAG,QAAb,GAAsB0D,cAAtB,GAAqC,SAArC,GAA+C/B,MAA/C,GAAsD,QAAtD,GAA+DiD,SAAhE,EAA2E;AACrGG,gBAAAA,MAAM,EAAE,MAD6F;AAErGC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBAF4F;AAMrGK,gBAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAN+F,eAA3E,CA7Bd;;AAAA;AA6BRJ,cAAAA,QA7BQ;AAAA;AAAA,qBAqCOA,QAAQ,CAACC,IAAT,EArCP;;AAAA;AAqCVC,cAAAA,QArCU;AAsCdQ,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,QAA7B;AACAA,cAAAA,QAAQ,CAACrD,MAAT,IAAmB,CAAnB,IAAwBqD,QAAQ,CAACrD,MAAT,GAAkB6C,SAA1C,GAAsDlD,UAAU,CAAC,KAAD,CAAhE,GAA0EA,UAAU,CAAC,IAAD,CAApF;AACAd,cAAAA,SAAS,CAACD,MAAM,CAACmF,MAAP,CAAcV,QAAd,CAAD,CAAT;AACArE,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,MAAM,EAAE;AAAV,eAAD,CAAR;AACAI,cAAAA,aAAa,CAAC,KAAD,CAAb;AA1Cc;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAToE,SAAS;AAAA;AAAA;AAAA,KAAf;;AA8CA,MAAMU,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAChBH,cAAAA,OAAO,CAACC,GAAR,CAAYlE,MAAZ,EAAoBiD,SAApB,EAA+BjD,MAAM,GAACiD,SAAtC;AACAhD,cAAAA,SAAS,CAACD,MAAM,GAACiD,SAAR,CAAT;AACApD,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATuE,SAAS;AAAA;AAAA;AAAA,KAAf;;AAzG6B,oBA+GLhG,QAAQ,CAAC,EAAD,CA/GH;AAAA,MA+GtBiG,IA/GsB;AAAA,MA+GhBC,OA/GgB;;AAgH7BnG,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,OAAO,IAAIuF,IAAI,IAAIvF,OAAvB,EAAgC;AAC9BwF,MAAAA,OAAO,CAACxF,OAAD,CAAP;AACAM,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAR;AACAwE,MAAAA,SAAS;AACV;AACF,GANQ,EAMN,CAAC5E,OAAD,EAAUuF,IAAV,CANM,CAAT;;AAhH6B,oBAwHHjG,QAAQ,CAACW,OAAD,CAxHL;AAAA,MAwHtBwF,KAxHsB;AAAA,MAwHfC,QAxHe;;AAyH7BrG,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,OAAO,IAAIwF,KAAK,IAAIxF,OAAxB,EAAiC;AAC/ByF,MAAAA,QAAQ,CAACzF,OAAD,CAAR;AACAK,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAR;AACAwE,MAAAA,SAAS;AACV;AACF,GANQ,EAMN,CAAC3E,OAAD,EAAUwF,KAAV,CANM,CAAT;AAQApG,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI,CAACW,OAAD,IAAY,CAACK,KAAK,CAACD,MAAvB,EAA+B;AAC7BE,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAR;AACAwE,MAAAA,SAAS;AACV;AACF,GANQ,EAMN,CAAC3E,OAAD,EAAUwF,KAAV,CANM,CAAT;AAQApG,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,eAAJ,EAAqB;AACnBqE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACArE,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAoE,MAAAA,SAAS;AACV,KALD,MAKO;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,GATQ,EASN,CAACtE,eAAD,CATM,CAAT;AAWAzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkC,CAAC,IAAIrB,MAAM,CAACoB,MAAP,IAAiB,CAAtB,IAA2B,CAACf,UAAhC,EAA4C;AAC1C4E,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACArE,MAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAF0C,CAG1C;AACD,KAJD,MAIO;AACLoE,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB7D,CAAxB,EAA2BrB,MAA3B;AACD;AACF,GARQ,EAQN,CAACqB,CAAD,EAAIrB,MAAJ,CARM,CAAT;AAUAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIqD,QAAQ,CAACpB,MAAT,IAAmB,CAAnB,IAAwB,CAACsB,cAA7B,EAA6C;AAC3CC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAuB,MAAAA,WAAW;AACZ;AACF,GALQ,CAAT,CA9J6B,CAqK7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAASuB,wBAAT,CAAkCC,MAAlC,EAA0C;AACxC,QAAI7B,aAAa,CAAC8B,QAAd,CAAuBD,MAAvB,CAAJ,EAAoC;AAClC5B,MAAAA,gBAAgB,CAACD,aAAa,CAACF,MAAd,CAAqB,UAAAiC,IAAI;AAAA,eAAIA,IAAI,KAAKF,MAAb;AAAA,OAAzB,CAAD,CAAhB;AACD,KAFD,MAEO;AACL5B,MAAAA,gBAAgB,CAACD,aAAa,CAACsB,MAAd,CAAqBO,MAArB,CAAD,CAAhB;AACD;;AACDT,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BrB,aAA7B;AACD;;AAED,WAASgC,yBAAT,CAAmCH,MAAnC,EAA2C;AACzC,QAAI3B,cAAc,CAAC4B,QAAf,CAAwBD,MAAxB,CAAJ,EAAqC;AACnC1B,MAAAA,iBAAiB,CAACD,cAAc,CAACJ,MAAf,CAAsB,UAAAiC,IAAI;AAAA,eAAIA,IAAI,KAAKF,MAAb;AAAA,OAA1B,CAAD,CAAjB;AACD,KAFD,MAEO;AACL1B,MAAAA,iBAAiB,CAACD,cAAc,CAACoB,MAAf,CAAsBO,MAAtB,CAAD,CAAjB;AACD;;AACDT,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BnB,cAA9B;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAE5D,KAAK,CAACD,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,EADjC,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAoC,IAAA,cAAc,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,kBAACyF,CAAD,EAAK;AAAE9C,MAAAA,iBAAiB,CAAC8C,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAjB;AAAmC,KAAhE;AAAkE,IAAA,YAAY,EAAEhD,cAAhF;AAAgG,IAAA,KAAK,EAAEA,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEA,cAAc,IAAI,QAAlB,GAA4B,IAA5B,GAAmC,KAArD;AAA4D,IAAA,KAAK,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEA,cAAc,KAAK,IAAnB,GAAyB,IAAzB,GAAgC,KAAlD;AAAyD,IAAA,KAAK,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CADF,EAOE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEgB,cAAc,CAAC3C,MAAf,GAAwB,CAA9C;AAAiD,IAAA,GAAG,EAAC,QAArD;AAA8D,IAAA,SAAS,EAAEyC,aAAa,CAAC8B,QAAd,CAAuB,MAAvB,CAAzE;AAAyG,IAAA,KAAK,EAAC,MAA/G;AAAsH,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAK;AAACL,MAAAA,wBAAwB,CAACK,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAxB;AAAyC,KAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEhC,cAAc,CAAC3C,MAAf,GAAwB,CAA9C;AAAiD,IAAA,GAAG,EAAC,QAArD;AAA8D,IAAA,SAAS,EAAEyC,aAAa,CAAC8B,QAAd,CAAuB,MAAvB,CAAzE;AAAyG,IAAA,KAAK,EAAC,MAA/G;AAAsH,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAK;AAACL,MAAAA,wBAAwB,CAACK,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAxB;AAAyC,KAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEhC,cAAc,CAAC3C,MAAf,GAAwB,CAA9C;AAAiD,IAAA,GAAG,EAAC,QAArD;AAA8D,IAAA,SAAS,EAAEyC,aAAa,CAAC8B,QAAd,CAAuB,SAAvB,CAAzE;AAA4G,IAAA,KAAK,EAAC,SAAlH;AAA4H,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAK;AAACL,MAAAA,wBAAwB,CAACK,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAxB;AAAyC,KAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAElC,aAAa,CAACzC,MAAd,GAAuB,CAA7C;AAAgD,IAAA,GAAG,EAAC,QAApD;AAA6D,IAAA,SAAS,EAAE2C,cAAc,CAAC4B,QAAf,CAAwB,WAAxB,CAAxE;AAA8G,IAAA,KAAK,EAAC,WAApH;AAAgI,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAK;AAACD,MAAAA,yBAAyB,CAACC,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAzB;AAA0C,KAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAElC,aAAa,CAACzC,MAAd,GAAuB,CAA7C;AAAgD,IAAA,GAAG,EAAC,QAApD;AAA6D,IAAA,SAAS,EAAE2C,cAAc,CAAC4B,QAAf,CAAwB,kBAAxB,CAAxE;AAAqH,IAAA,KAAK,EAAC,kBAA3H;AAA8I,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAK;AAACD,MAAAA,yBAAyB,CAACC,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAzB;AAA0C,KAAxM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME,MAAC,QAAD;AAAU,IAAA,SAAS,EAAExE,WAAW,IAAI,IAApC;AAA0C,IAAA,GAAG,EAAC,QAA9C;AAAuD,IAAA,KAAK,EAAC,aAA7D;AAA2E,IAAA,QAAQ,EAAE,kBAACuE,CAAD,EAAK;AAACtE,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA6B,KAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEE,YAAY,IAAI,IAArC;AAA2C,IAAA,GAAG,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAC,cAA9D;AAA6E,IAAA,QAAQ,EAAE,kBAACqE,CAAD,EAAK;AAACpE,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AAA+B,KAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF,CAPF,EAmBGoC,aAAa,CAACmC,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR,EAAgB;AACjC,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAK,IAAI,CAAT,GAAa,IAAb,GAAqBnD,cAAc,IAAI,IAAlB,GAAwB,IAAxB,GAA8B,KAA1D,OAAmEkD,KAAK,IAAI,MAAT,GAAkB,iBAAlB,GAAqCA,KAAK,IAAE,MAAP,GAAgB,uCAAhB,GAAyD,gBAAjK,CADF,EAEGA,KAAK,IAAI,MAAT,GACC,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEnE,aAAd;AAA6B,MAAA,QAAQ,EAAE,kBAACgE,CAAD;AAAA,eAAO/D,gBAAgB,CAAC+D,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAvB;AAAA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEGE,KAAK,IAAI,MAAT,GACF,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE/D,QAAf;AAAyB,MAAA,QAAQ,EAAE,kBAAC4D,CAAD,EAAK;AAAC3D,QAAAA,WAAW,CAAC2D,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAX;AAA4B,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAYE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAaE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,EAeE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,EAgBE;AAAQ,MAAA,GAAG,EAAC,IAAZ;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,CADE,GAmBAE,KAAK,IAAI,SAAT,GACF,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE3D,WAAf;AAA4B,MAAA,QAAQ,EAAE,kBAACwD,CAAD,EAAK;AAACvD,QAAAA,cAAc,CAACuD,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAd;AAA+B,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvD,QAAQ,CAACwD,GAAT,CAAa,UAAC5D,OAAD,EAAU8D,KAAV,EAAkB;AAC9B,aAAQ;AAAQ,QAAA,GAAG,EAAE,aAAWA,KAAxB;AAA+B,QAAA,KAAK,EAAE9D,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,OAAhD,CAAR;AACD,KAFA,CADH,CADE,GAMA,IA7BN,CADF;AAiCD,GAlCA,CAnBH,EAsDG2B,cAAc,CAACiC,GAAf,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAgB;AAClC,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAK,IAAI,CAAT,GAAa,IAAb,GAAqBnD,cAAc,IAAI,IAAlB,GAAwB,IAAxB,GAA8B,KAA1D,OAAmEkD,KAAK,IAAI,WAAT,GAAuB,mBAAvB,GAA4CA,KAAK,IAAE,kBAAP,GAA4B,0BAA5B,GAAwD,IAAvK,CADF,EAEGA,KAAK,IAAI,WAAT,GACC,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE9C,aAAd;AAA6B,MAAA,QAAQ,EAAE,kBAAC2C,CAAD;AAAA,eAAO1C,gBAAgB,CAAC0C,CAAC,CAACJ,MAAF,CAASK,KAAV,CAAvB;AAAA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEGE,KAAK,IAAG,kBAAR,GACF,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE1C,oBAAd;AAAoC,MAAA,QAAQ,EAAE,kBAACuC,CAAD;AAAA,eAAOtC,uBAAuB,CAACsC,CAAC,CAACJ,MAAF,CAASK,KAAV,CAA9B;AAAA,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAEA,IANN,CADF;AASE,GAVH,CAtDH,EAiEI,MAAC,MAAD;AACI,IAAA,CAAC,EAAE,CADP;AAEI,IAAA,UAAU,EAAElC,aAAa,CAACzC,MAAd,GAAuB,CAAvB,IAA4B2C,cAAc,CAAC3C,MAAf,GAAwB,CAFpE;AAGI,IAAA,OAAO,EAAE,mBAAM;AACbH,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAb,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAR;AACAD,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAqB,MAAAA,IAAI,CAAC,IAAD,CAAJ;AACA,UAAI6E,GAAG,GAAGC,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,IAA8B,GAAxC;AACAvC,MAAAA,cAAc,CAACc,OAAf,CAAuB,UAAAjB,GAAG,EAAI;AAC5B,YAAIA,GAAG,IAAI,kBAAX,EAA+B;AAC7BuC,UAAAA,GAAG,GAAGA,GAAG,GAAGvC,GAAN,GAAY,GAAZ,GAAkBL,oBAAlB,GAAyC,GAA/C;AACD;;AACD,YAAIK,GAAG,IAAI,WAAX,EAAwB;AACtBuC,UAAAA,GAAG,GAAGA,GAAG,GAAGvC,GAAN,GAAY,GAAZ,GAAkBT,aAAlB,GAAkC,GAAxC;AACD;AACF,OAPD;AAQAU,MAAAA,aAAa,CAACgB,OAAd,CAAsB,UAAAjB,GAAG,EAAI;AAC3BqB,QAAAA,OAAO,CAACC,GAAR,CAAYtB,GAAZ;;AACA,YAAIA,GAAG,IAAI,MAAX,EAAmB;AACjBuC,UAAAA,GAAG,GAAGA,GAAG,GAAGvC,GAAN,GAAY,GAAZ,GAAkB9B,aAAlB,GAAkC,GAAxC;AACD;;AACD,YAAI8B,GAAG,IAAI,MAAX,EAAmB;AACjBuC,UAAAA,GAAG,GAAGA,GAAG,GAAGvC,GAAN,GAAY,GAAZ,GAAkB1B,QAAlB,GAA6B,GAAnC;AACD;;AACD,YAAI0B,GAAG,IAAI,SAAX,EAAsB;AACpBuC,UAAAA,GAAG,GAAGA,GAAG,GAAGvC,GAAN,GAAY,GAAZ,GAAkBtB,WAAlB,GAAgC,GAAtC;AACD;AACF,OAXD;;AAYA,UAAIS,cAAJ,EAAoB;AAClBoD,QAAAA,GAAG,GAAGA,GAAG,GAAG,aAAN,GAAsBpD,cAAtB,GAAuC,GAA7C;AACD,OA5BY,CA6Bb;;;AACAkC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiB,GAAtB;AACAI,MAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,OAA7B,EAAsCN,GAAtC;AACD,KAnCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEJ,CAFF,EA2GG9E,CAAC,GACA,MAAC,cAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,gBAAgB,EAAC,mBAFnB,CAGE;AAHF;AAIE,IAAA,UAAU,EAAErB,MAAM,CAACoB,MAJrB,CAI6B;AAJ7B;AAKE,IAAA,IAAI,EAAEgE,SALR;AAME,IAAA,OAAO,EAAEtE,OANX;AAOE,IAAA,MAAM,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPV;AAQE,IAAA,UAAU,EACR;AAAG,MAAA,KAAK,EAAE;AAAE4F,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,MAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAgC,IAAA,QAAQ,EAAC,MAAzC;AAAgD,IAAA,EAAE,EAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1G,MAAM,CAACoB,MAAP,GACCpB,MAAM,CAACgG,GAAP,CAAW,UAACW,KAAD,EAAQT,KAAR,EAAkB;AAC3B,QAAIU,MAAM,GAAGR,QAAQ,CAACS,QAAT,CAAkBP,KAAlB,CAAwB,GAAxB,CAAb;AACAM,IAAAA,MAAM,CAACE,GAAP;AACA,QAAIC,GAAG,GAAGX,QAAQ,CAACY,MAAT,GAAkBJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAlB,GAAqC,UAArC,GAAkDN,KAAK,CAACO,OAAlE;AACA,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE,GADa;AAEnBC,MAAAA,IAAI,EAAE,OAFa;AAGnBC,MAAAA,IAAI,EAAE,OAHa;AAInBC,MAAAA,WAAW,EAAE,KAJM;AAKnB;AACAC,MAAAA,EAAE,EAAE,GANe;AAOnBC,MAAAA,EAAE,EAAE,GAPe;AAQnBC,MAAAA,OAAO,EAAE,IARU;AASnBC,MAAAA,QAAQ,EAAE,QATS;AAUnBC,MAAAA,WAAW,EAAEjB,KAAK,CAACkB,MAAN,IAAgB,SAAhB,GAA4B,kBAA5B,GAAiD,EAV3C;AAWnBC,MAAAA,MAAM,EAAE;AAXW,KAArB;;AAaA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAY;AAC3BzH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA8F,MAAAA,QAAQ,CAACC,IAAT,GAAgBU,GAAhB;AACD,KAHD;;AAIA,QAAIxF,WAAW,IAAIoF,KAAK,CAACkB,MAAN,IAAgB,SAA/B,IAA4CpG,YAAY,IAAI,CAACkF,KAAK,CAACqB,IAAvE,EAA6E;AAC3E,aAAO,IAAP;AACD,KAFD,MAEO;AACH,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEjB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEb;AAAjC,SAA4CiB,YAA5C;AAA0D,QAAA,OAAO,EAAEY,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,MAAC,IAAD;AAAM,QAAA,UAAU,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAA+C,QAAA,EAAE,EAAE,CAAnD;AAAsD,QAAA,EAAE,EAAE,CAA1D;AAA6D,QAAA,WAAW,EAAE,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,KAAK,CAAChF,IADT,EAEG,CAACgF,KAAK,WAAN,IAAkBA,KAAK,CAACsB,UAAN,GAAmB,CAArC,GAAyC,SAAStB,KAAK,CAACsB,UAAxD,GAAqE,IAFxE,CADF,EAKE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAkD,QAAA,GAAG,EAAEtB,KAAK,CAACuB,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EAQE,MAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,UAAU,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAYE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGvB,KAAK,CAACkB,MAAN,IAAgB,SAAhB,GAA4B,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B,GAAqE,IADxE,EAEE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyBlB,KAAK,CAACO,OAA/B,CAFF,CAZF,CADF,CADF;AAqBH;AACF,GA9CD,CADD,GAkDC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqC,GADrC,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CAnDJ,CAdF,CADA,GA4EE,IAvLN,CADF;AA2LD;;GA9XuB1H,I;UACJP,S,EAEWC,Y,EAMPN,Y;;;KATAY,I","sourcesContent":["// import { Box, Flex, Text, Link, Image, Stack, Spinner, useColorMode } from '@chakra-ui/core'\nimport { Box, Flex, Text, Link, Image, Stack, Button, FormControl, FormLabel, Checkbox, CheckboxGroup, Radio, RadioGroup, Input, FormHelperText, Select, useColorMode } from '@chakra-ui/core'\nimport {HStack, VStack } from '@chakra-ui/react'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { EMBLEM_API } from '../constants'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Embed from './Embed'\n\nexport default function Find() {\n  const { query } = useRouter()\n  const [pagePosition, setPagePosition] = useState(Number(query.start) || 0)\n  const { account, chainId } = useWeb3React()\n  const [vaults, setVaults] = useState([])\n  const [state, setState] = useState({ loaded: true })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [address, setAddress] = useState(query.address)\n  const [experimental, setExperimental] = useState(query.experimental)\n  const { colorMode } = useColorMode()\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n  const [offset, setOffset] = useState(0)\n  const [q, setQ] = useState(query && Object.keys(query).length > 0)\n  const [hideClaimed, setHideClaimed] = useState(false)\n  const [hideUnminted, setHideUnminted] = useState(false)\n\n  const [assetName, setAssetName] = useState(query.name)\n  const [tempAssetName, setTempAssetName] = useState(assetName || '')\n\n  const [coin, setCoin] = useState(query.coin)\n  const [tempCoin, setTempCoin] = useState(coin || '')\n\n  const [project, setProject] = useState(query.project)\n  const [tempProject, setTempProject] = useState(project || '')\n\n  const [projects, setProjects] = useState([])\n  const [loadedProjects, setLoadedProjects] = useState(false)\n\n  const [searchType, setSearchType] = useState(query.searchType || 'filter')\n  const [tempSearchType, setTempSearchType] = useState(searchType.toString())\n\n  const [vaultName, setVaultName] = useState(query.vaultName)\n  const [tempVaultName, setTempVaultName] = useState(vaultName || '')\n\n  const [vaultDescription, setVaultDescription] = useState(query.vaultDescription)\n  const [tempVaultDescription, setTempVaultDescription] = useState(vaultDescription)\n\n  const [network, setNetwork] = useState(query.network || null)\n  \n  const [balanceChecks, setBalanceChecks] = useState(Object.keys(query).filter(key=>{return key !== \"vaultName\" && key !== \"vaultDescription\" && key !== \"searchType\"}))\n  const [metadataChecks, setMetadataChecks] = useState(Object.keys(query).filter(key=>{return key !== \"name\" && key !== \"coin\" && key !== \"project\" && key !== \"searchType\"}))\n\n  const PAGE_SIZE = 20\n\n  const getProjects = async () => { \n    try {\n      const response = await fetch(EMBLEM_API + '/search/projects', {\n        method: 'GET',\n        headers: {\n          service: 'evmetadata'\n        }\n      })\n      let jsonData = await response.json()\n      \n      setProjects(jsonData)\n    } catch (error) {}\n  } \n\n  const getVaults = async () => {    \n    let body: any = {}\n    if (metadataChecks.length > 0) {\n      body.metadata = {}\n      metadataChecks.forEach(key => {\n        if (key == \"vaultDescription\") {\n          body.metadata[\"description\"] = tempVaultDescription\n        }\n        if (key == \"vaultName\") {\n          body.metadata[\"name\"] = tempVaultName\n        }\n      })\n      \n    }\n    if (balanceChecks.length > 0) {\n      body.balance = {}\n      balanceChecks.forEach(key => {\n        if (key == \"name\") {\n          body.balance[\"name\"] = tempAssetName\n        }\n        if (key == \"coin\") {\n          body.balance[\"coin\"] = tempCoin\n        }\n        if (key == \"project\") {\n          body.balance[\"project\"] = tempProject\n        }\n      })\n    }\n    try {\n      const response = await fetch(EMBLEM_API + '/find/'+tempSearchType+'?start='+offset+'&size='+PAGE_SIZE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify(body)\n      })\n      let jsonData = await response.json()\n      console.log('------ vaults', jsonData)\n      jsonData.length == 0 || jsonData.length < PAGE_SIZE ? setHasMore(false) : setHasMore(true)\n      setVaults(vaults.concat(jsonData))\n      setState({ loaded: true })\n      setLoadingApi(false)\n    } catch (error) {}\n  }\n\n  const fetchData = async() =>{\n    console.log(offset, PAGE_SIZE, offset+PAGE_SIZE)\n    setOffset(offset+PAGE_SIZE)\n    setShouldFetchData(true)\n  }  \n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [account, acct])\n\n  const [chain, setChain] = useState(chainId)\n  useEffect(() => {\n    if (chainId && chain != chainId) {\n      setChain(chainId)\n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {\n    // console.log('here', chainId, chain, account, state)\n    if (!account && !state.loaded) {      \n      setState({ loaded: false })\n      getVaults()\n    }\n  }, [chainId, chain])\n\n  useEffect(() => {    \n    if (shouldFetchData) {\n      console.log('here 1')\n      setShouldFetchData(false)\n      setLoadingApi(true)\n      getVaults()\n    } else {\n      console.log('no fetch')\n    }\n  }, [shouldFetchData])\n\n  useEffect(() => {\n    if (q && vaults.length == 0 && !loadingApi) {\n      console.log('here 2')\n      setShouldFetchData(true)\n      // getVaults()\n    } else {\n      console.log('no fetch', q, vaults)\n    }\n  }, [q, vaults])\n\n  useEffect(() => {\n    if (projects.length == 0 && !loadedProjects) {      \n      setLoadedProjects(true)\n      getProjects()\n    }\n  })\n\n  // useEffect(() => {\n  //   if (query.assetName && !balanceChecks.includes('assetName')) {      \n  //     setBalanceChecks(balanceChecks.concat('assetName'))\n  //   }    \n  // })\n\n  // useEffect(() => {\n  //   if (query.coin && !balanceChecks.includes('coin')) {      \n  //     setBalanceChecks(balanceChecks.concat('coin'))\n  //   }\n  // })\n\n  function addOrRemoveBalanceFilter(target) {\n    if (balanceChecks.includes(target)) {\n      setBalanceChecks(balanceChecks.filter(item => item !== target))\n    } else {\n      setBalanceChecks(balanceChecks.concat(target))\n    }\n    console.log('balance checks',balanceChecks)\n  }\n\n  function addOrRemoveMetadataFilter(target) {\n    if (metadataChecks.includes(target)) {\n      setMetadataChecks(metadataChecks.filter(item => item !== target))\n    } else {\n      setMetadataChecks(metadataChecks.concat(target))\n    }\n    console.log('metadata checks',metadataChecks)\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n      <VStack width=\"100%\" align=\"center\" justifyContent=\"center\" >\n        <RadioGroup onChange={(e)=>{ setTempSearchType(e.target.value) }} defaultValue={tempSearchType} value={tempSearchType}>\n          <Stack spacing={4} direction=\"row\">                \n            <Radio isChecked={tempSearchType == \"filter\"? true : false} value=\"filter\">Filter (AND)</Radio>\n            <Radio isChecked={tempSearchType === \"or\"? true : false} value=\"or\">Search (OR)</Radio>\n          </Stack>\n        </RadioGroup>\n        <CheckboxGroup>\n          <HStack>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check1\" isChecked={balanceChecks.includes('name')} value=\"name\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Asset Name</Checkbox>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check2\" isChecked={balanceChecks.includes('coin')} value=\"coin\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Blockchain</Checkbox>\n            <Checkbox isDisabled={metadataChecks.length > 0} key=\"check3\" isChecked={balanceChecks.includes('project')} value=\"project\" onChange={(e)=>{addOrRemoveBalanceFilter(e.target.value)}} >Project</Checkbox>\n            <Checkbox isDisabled={balanceChecks.length > 0} key=\"check4\" isChecked={metadataChecks.includes('vaultName')} value=\"vaultName\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Name</Checkbox>\n            <Checkbox isDisabled={balanceChecks.length > 0} key=\"check5\" isChecked={metadataChecks.includes('vaultDescription')} value=\"vaultDescription\" onChange={(e)=>{addOrRemoveMetadataFilter(e.target.value)}} >Vault Description</Checkbox>\n            <Checkbox isChecked={hideClaimed == true} key=\"check6\" value=\"hideClaimed\" onChange={(e)=>{setHideClaimed(!hideClaimed)}} >Hide Claimed</Checkbox>\n            <Checkbox isChecked={hideUnminted == true} key=\"check6\" value=\"hideUnminted\" onChange={(e)=>{setHideUnminted(!hideUnminted)}} >Hide Un-Minted</Checkbox>\n\n          </HStack>\n        </CheckboxGroup>\n        {balanceChecks.map((check, index)=>{\n          return (\n            <VStack>\n              <Text>{index == 0 ? null : (tempSearchType == \"or\"? \"or\": \"and\")} {check == \"coin\" ? \"from Blockchain\": check==\"name\" ? \"within balances for the Asset Name of\": \"of the Project\"}</Text>\n              {check == \"name\" ? (\n                <Input value={tempAssetName} onChange={(e) => setTempAssetName(e.target.value)} ></Input>\n              ) : check == \"coin\" ? (\n                <Select value={tempCoin} onChange={(e)=>{setTempCoin(e.target.value)}}>\n                  <option key=\"1\" value=\"POLYGON\">Polygon (Matic)</option>\n                  <option key=\"2\" value=\"XCP\">Counterparty</option>\n                  <option key=\"3\" value=\"BTC\">Bitcoin</option>\n                  <option key=\"4\" value=\"BCH\">Bitcoin Cash</option>\n                  <option key=\"5\" value=\"DGB\">Digibyte</option>\n                  <option key=\"6\" value=\"DOGE\">Dogecoin</option>\n                  <option key=\"7\" value=\"ETH\">Ethereum</option>\n                  <option key=\"8\" value=\"FTM\">Fantom</option>\n                  <option key=\"9\" value=\"LTC\">Litecoin</option>\n                  <option key=\"10\" value=\"NMC\">Namecoin</option>\n                  <option key=\"11\" value=\"OMNI\">Omni</option>\n                  <option key=\"12\" value=\"xDai\">xDai</option>\n                  <option key=\"13\" value=\"OMNI\">Omni</option>\n                  <option key=\"14\" value=\"XDP\">Doge Party</option>\n                  <option key=\"15\" value=\"XMP\">Mona Party</option>\n                  <option key=\"16\" value=\"XTZ\">Tezos</option>\n                </Select>\n              ) : check == \"project\" ? (\n                <Select value={tempProject} onChange={(e)=>{setTempProject(e.target.value)}}>\n                  {projects.map((project, index)=>{\n                    return (<option key={\"project-\"+index} value={project}>{project}</option>)\n                  })}\n                </Select>\n              ) : null}\n            </VStack>\n          )\n        })}\n        {metadataChecks.map((check, index)=>{\n          return (\n            <VStack>\n              <Text>{index == 0 ? null : (tempSearchType == \"or\"? \"or\": \"and\")} {check == \"vaultName\" ? \"within vault name\": check==\"vaultDescription\" ? \"within vault description\": null}</Text>\n              {check == \"vaultName\" ? (\n                <Input value={tempVaultName} onChange={(e) => setTempVaultName(e.target.value)}></Input>\n              ) : check== \"vaultDescription\" ? (\n                <Input value={tempVaultDescription} onChange={(e) => setTempVaultDescription(e.target.value)}></Input>\n              ) : null}              \n            </VStack>\n          )})}\n          <Button\n              m={2}\n              isDisabled={balanceChecks.length < 1 && metadataChecks.length < 1}\n              onClick={() => {\n                setOffset(0)\n                setState({ loaded: false })\n                setVaults([])                \n                setQ(true)\n                let loc = location.href.split('?')[0] + '?'\n                metadataChecks.forEach(key => {\n                  if (key == \"vaultDescription\") {\n                    loc = loc + key + '=' + tempVaultDescription + \"&\"\n                  }\n                  if (key == \"vaultName\") {\n                    loc = loc + key + '=' + tempVaultName + \"&\"\n                  }\n                })\n                balanceChecks.forEach(key => {\n                  console.log(key)\n                  if (key == \"name\") {\n                    loc = loc + key + '=' + tempAssetName + \"&\"\n                  }\n                  if (key == \"coin\") {\n                    loc = loc + key + '=' + tempCoin + \"&\"\n                  }\n                  if (key == \"project\") {\n                    loc = loc + key + '=' + tempProject + \"&\"\n                  }\n                })\n                if (tempSearchType) {\n                  loc = loc + \"searchType=\" + tempSearchType + \"&\"\n                }\n                // let loc = location.href.split('?')[0]+\"?q=\"+temp_q +  \"&network=\" + network\n                console.log(\"SEARCH\", loc)\n                window.history.pushState('', 'Title', loc);\n              }}\n            >Search\n          </Button>\n      </VStack>\n            \n      {q? (\n        <InfiniteScroll\n          className=\"infinite-scroll\"\n          scrollableTarget=\"shannon-container\"\n          // height={200}\n          dataLength={vaults.length} //This is important field to render the next data\n          next={fetchData}\n          hasMore={hasMore}\n          loader={<Refreshing />}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b> \n            </p>\n          }\n        >\n          <Flex w=\"100%\" justify=\"center\" flexWrap=\"wrap\" mt={10}>        \n            {vaults.length ? (\n              vaults.map((vault, index) => {\n                let pieces = location.pathname.split('/')\n                pieces.pop()\n                let url = location.origin + pieces.join('/') + '/nft?id=' + vault.tokenId\n                const flexSettings = {\n                  flex: '1',\n                  minW: '200px',\n                  maxW: '200px',\n                  borderWidth: '1px',\n                  // color: 'white',\n                  mx: '6',\n                  mb: '6',\n                  rounded: 'lg',\n                  overflow: 'hidden',\n                  borderColor: vault.status == 'claimed' ? 'green !important' : '',\n                  cursor: 'pointer',\n                }\n                const redirect = function () {\n                  setLoadingApi(true)\n                  location.href = url\n                }\n                if (hideClaimed && vault.status == 'claimed' || hideUnminted && !vault.live) {\n                  return null\n                } else {\n                    return (\n                      <Link href={url}>\n                        <Box className=\"NFT newest\" key={index} {...flexSettings} onClick={redirect}>\n                          <Text fontWeight=\"semibold\" textAlign=\"center\" mt={2} pl={2} isTruncated={true}>\n                            {vault.name}\n                            {!vault.private && vault.totalValue > 0 ? ': ~$' + vault.totalValue : null}\n                          </Text>\n                          <Stack align=\"center\">\n                            <Embed className=\"d-block w-100 NFT-newest-image\" url={vault.image}/>\n                          </Stack>\n                          <Box d=\"flex\" alignItems=\"baseline\">\n                            \n                          </Box>\n                          \n                          <Stack align=\"center\" mt={3}>\n                            {vault.status == 'claimed' ? <Text color=\"green.500\">CLAIMED</Text> : null}\n                            <Text fontSize=\"xs\">Id: {vault.tokenId}</Text>\n                          </Stack>\n                        </Box>\n                      </Link>\n                    )\n                }\n              })\n              \n            ) : (\n              <Text>\n                YOU DON'T SEEM TO HAVE ANY VAULTS.{' '}\n                <Link color=\"#638cd8\" href=\"../create\">\n                  CREATE ONE HERE!\n                </Link>\n              </Text>\n            )}\n            \n          </Flex>\n        </InfiniteScroll>\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}