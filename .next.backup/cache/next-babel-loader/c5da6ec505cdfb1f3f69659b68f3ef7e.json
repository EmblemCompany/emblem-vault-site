{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Contract } from '@ethersproject/contracts';\n\nconst getContract = (address, abi, library, account) => {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nfunction checkApproval(handler, spending, library, account, amount) {\n  if (amount > 0) {\n    let spendingContract = getContract(spending.address, spending.abi, library, account);\n    return spendingContract.allowance(account, handler.address).then(allowance => {\n      alert('test');\n      return allowance >= amount;\n    });\n  }\n\n  return false;\n}\n\nexport default function Approval(props) {\n  let previousChainId;\n  const {\n    account\n  } = useWeb3React();\n  const [showPending, setShowPending] = useState(false);\n  const [hasDataRows, setHasDataRows] = useState(false);\n  const [dataRows, setDataRows] = useState([]);\n  const [chainId, setChainId] = useState(props.chainId);\n  const classes = useStyles();\n  React.useEffect(() => {\n    console.log(chainId, props.chainId);\n\n    if (chainId !== props.chainId) {\n      setChainId(props.chainId);\n      console.log(\"refresh data\");\n      setHasDataRows(false);\n    }\n  });\n  !hasDataRows ? getDeposits(deposits => {\n    setHasDataRows(true);\n    setDataRows(deposits);\n  }) : null;\n  return __jsx(React.Fragment, null);\n} // export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n// export default Approval","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","Contract","getContract","address","abi","library","account","getSigner","connectUnchecked","checkApproval","handler","spending","amount","spendingContract","allowance","then","alert","Approval","props","previousChainId","useWeb3React","showPending","setShowPending","useState","hasDataRows","setHasDataRows","dataRows","setDataRows","chainId","setChainId","classes","useStyles","useEffect","console","log","getDeposits","deposits"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAaA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,KAAwC;AAC1D,SAAO,IAAIL,QAAJ,CAAaE,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAIA,SAASC,aAAT,CAAuBC,OAAvB,EAA+DC,QAA/D,EAAwGN,OAAxG,EAAsHC,OAAtH,EAAoIM,MAApI,EAAoJ;AAClJ,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,QAAIC,gBAAgB,GAAGX,WAAW,CAACS,QAAQ,CAACR,OAAV,EAAmBQ,QAAQ,CAACP,GAA5B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAlC;AACA,WAAOO,gBAAgB,CAACC,SAAjB,CAA2BR,OAA3B,EAAoCI,OAAO,CAACP,OAA5C,EAAqDY,IAArD,CAA2DD,SAAD,IAAoB;AACnFE,MAAAA,KAAK,CAAC,MAAD,CAAL;AACA,aAAOF,SAAS,IAAIF,MAApB;AACD,KAHM,CAAP;AAID;;AACD,SAAO,KAAP;AACD;;AAUD,eAAe,SAASK,QAAT,CAAkBC,KAAlB,EAA0C;AACvD,MAAIC,eAAJ;AAEA,QAAM;AAAEb,IAAAA;AAAF,MAAcc,YAAY,EAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACL,KAAK,CAACU,OAAP,CAAtC;AACA,QAAME,OAAO,GAAGC,SAAS,EAAzB;AAEA/B,EAAAA,KAAK,CAACgC,SAAN,CAAgB,MAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBV,KAAK,CAACU,OAA3B;;AACA,QAAIA,OAAO,KAAKV,KAAK,CAACU,OAAtB,EAA+B;AAC3BC,MAAAA,UAAU,CAACX,KAAK,CAACU,OAAP,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAPD;AASA,GAACD,WAAD,GACIW,WAAW,CAACC,QAAQ,IAAI;AACpBX,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,WAAW,CAACS,QAAD,CAAX;AACH,GAHU,CADf,GAKI,IALJ;AAMA,SACI,2BADJ;AAKD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\nfunction checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, library: any, account: any, amount: number) {\n  if (amount > 0) {\n    let spendingContract = getContract(spending.address, spending.abi, library, account)\n    return spendingContract.allowance(account, handler.address).then((allowance: any) => {\n      alert('test')\n      return allowance >= amount\n    })\n  }\n  return false\n}\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  library: any,\n  account: any,\n}\nexport default function Approval(props: AttributesProps) {\n  let previousChainId\n  \n  const { account } = useWeb3React()\n  const [showPending, setShowPending] = useState(false)\n  const [hasDataRows, setHasDataRows] = useState(false)\n  const [dataRows, setDataRows] = useState([])\n  const [chainId, setChainId] = useState(props.chainId)\n  const classes = useStyles();\n\n  React.useEffect(()=>{\n      console.log(chainId, props.chainId)\n      if (chainId !== props.chainId) {\n          setChainId(props.chainId)\n          console.log(\"refresh data\")\n          setHasDataRows(false)\n      }        \n  })\n  \n  !hasDataRows ? (\n      getDeposits(deposits => {\n          setHasDataRows(true)\n          setDataRows(deposits)\n      })\n  ) : null\n  return (\n      <>\n          \n      </>\n  );\n}\n// export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n\n// export default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}