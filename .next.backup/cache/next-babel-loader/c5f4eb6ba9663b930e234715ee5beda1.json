{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormLabel, Stack, Tabs, TabList, TabPanels, Tab, TabPanel, Box, Flex, Button, ButtonGroup, Divider, Alert, AlertIcon, useDisclosure, Select } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { TransactionToast } from './TransactionToast';\nimport { EMBLEM_API, contractAddresses, curatedContracts, curatedAssets } from '../constants';\nimport { useContract } from '../hooks';\nimport { isETHAddress } from '../utils';\nimport transakSDK from '@transak/transak-sdk'; // doka\n\nimport { // editor\nlocale_en_gb, createDefaultImageReader, createDefaultImageWriter, // plugins\nsetPlugins, plugin_crop, plugin_crop_locale_en_gb, plugin_finetune, plugin_finetune_locale_en_gb, plugin_finetune_defaults, plugin_filter, plugin_filter_locale_en_gb, plugin_filter_defaults, plugin_annotate, plugin_annotate_locale_en_gb, markup_editor_defaults, markup_editor_locale_en_gb } from 'doka';\nsetPlugins(plugin_crop, plugin_finetune, plugin_filter, plugin_annotate);\n\nvar editorDefaults = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  imageReader: createDefaultImageReader(),\n  imageWriter: createDefaultImageWriter()\n}, plugin_finetune_defaults), plugin_filter_defaults), markup_editor_defaults), {}, {\n  locale: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, locale_en_gb), plugin_crop_locale_en_gb), plugin_finetune_locale_en_gb), plugin_filter_locale_en_gb), plugin_annotate_locale_en_gb), markup_editor_locale_en_gb)\n});\n\nvar tokenId,\n    cipherTextHash,\n    nonce,\n    signature = null;\nvar mintPassword = null;\nexport default function CreateCurated(props) {\n  _s();\n\n  var _this = this;\n\n  // modal\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(''),\n      modalResult = _useState2[0],\n      setModalResult = _useState2[1];\n\n  var _useState3 = useState(true),\n      showEditorButton = _useState3[0],\n      setShowEditorButton = _useState3[1];\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onToggle = _useDisclosure.onToggle;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState4 = useState(0),\n      tabIndex = _useState4[0],\n      setTabIndex = _useState4[1];\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState5 = useState(account || ''),\n      vaultAddress = _useState5[0],\n      setVaultAddress = _useState5[1];\n\n  var _useState6 = useState('Public'),\n      vaultPubPriv = _useState6[0],\n      setVaultPubPriv = _useState6[1];\n\n  var _useState7 = useState(''),\n      vaultName = _useState7[0],\n      setVaultName = _useState7[1];\n\n  var _useState8 = useState(''),\n      vaultDesc = _useState8[0],\n      setVaultDesc = _useState8[1];\n\n  var _useState9 = useState(''),\n      vaultImage = _useState9[0],\n      setVaultImage = _useState9[1];\n\n  var _useState10 = useState(''),\n      ownedImage = _useState10[0],\n      setOwnedImage = _useState10[1];\n\n  var _useState11 = useState(''),\n      password = _useState11[0],\n      setPassword = _useState11[1]; // const [service, setService] = useState('')\n\n\n  var _useState12 = useState(false),\n      isCovalApproved = _useState12[0],\n      setIsCovalApproved = _useState12[1];\n\n  var _useState13 = useState({\n    loaded: true,\n    \"private\": false\n  }),\n      state = _useState13[0],\n      setState = _useState13[1];\n\n  var _useState14 = useState(null),\n      hash = _useState14[0],\n      setHash = _useState14[1]; // const [cipherTextHash, setCipherTextHash] = useState(null)\n  // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n  // const [nonce, setNonce] = useState(null)\n  // const [signature, setSignature] = useState(null)\n\n\n  var _useState15 = useState(true),\n      experimental = _useState15[0],\n      setExperimental = _useState15[1];\n\n  var _useState16 = useState(false),\n      showPreVaultMsg = _useState16[0],\n      setShowPreVaultMsg = _useState16[1];\n\n  var _useState17 = useState(false),\n      showMakingVaultMsg = _useState17[0],\n      setShowMakingVaultMsg = _useState17[1];\n\n  var _useState18 = useState(null),\n      decimals = _useState18[0],\n      setDecimals = _useState18[1];\n\n  var _useState19 = useState(null),\n      allowance = _useState19[0],\n      setAllowance = _useState19[1];\n\n  var _useState20 = useState(null),\n      balance = _useState20[0],\n      setBalance = _useState20[1];\n\n  var _useState21 = useState(null),\n      price = _useState21[0],\n      setPrice = _useState21[1];\n\n  var _useState22 = useState(false),\n      creating = _useState22[0],\n      setCreating = _useState22[1];\n\n  var _useState23 = useState(false),\n      approving = _useState23[0],\n      setApproving = _useState23[1];\n\n  var _useState24 = useState(''),\n      vaultKey = _useState24[0],\n      setVaultKey = _useState24[1];\n\n  var _useState25 = useState(''),\n      vaultValue = _useState25[0],\n      setVaultValue = _useState25[1];\n\n  var _useState26 = useState(null),\n      targetContract = _useState26[0],\n      setTargetContract = _useState26[1];\n\n  var _useState27 = useState(false),\n      showEmbed = _useState27[0],\n      setShowEmbed = _useState27[1];\n\n  var handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true);\n  var covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true);\n  var transak;\n\n  var initializeTransak = function initializeTransak(address, coin) {\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',\n      // Your API Key\n      environment: 'PRODUCTION',\n      // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '',\n      // Your customer's wallet address\n      themeColor: '000000',\n      // App theme color\n      fiatCurrency: 'USD',\n      // INR/GBP\n      // fiatAmount: 350,\n      email: '',\n      // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px'\n    }); // To get all the events\n\n    transak.on(transak.ALL_EVENTS, function (data) {\n      console.log(data);\n    }); // This will trigger when the user marks payment is made.\n\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, function (orderData) {\n      console.log(orderData);\n      transak.close();\n    });\n    transak.init();\n  };\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setDecimals;\n              _context.next = 3;\n              return covalContract.decimals();\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.t2 = setAllowance;\n              _context.next = 8;\n              return covalContract.allowance(account, contractAddresses.vaultHandler[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 8:\n              _context.t3 = _context.sent;\n              (0, _context.t2)(_context.t3);\n              _context.t4 = setBalance;\n              _context.next = 13;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 13:\n              _context.t5 = _context.sent;\n              (0, _context.t4)(_context.t5);\n              _context.t6 = setPrice;\n              _context.next = 18;\n              return handlerContract.price().then(function (balance) {\n                return balance.toString();\n              });\n\n            case 18:\n              _context.t7 = _context.sent;\n              (0, _context.t6)(_context.t7);\n\n              // console.log(\n              //   'balance',\n              //   balance,\n              //   'allowance',\n              //   allowance,\n              //   'price',\n              //   price,\n              //   Number(allowance) >= Number(price),\n              //   Number(balance) > Number(price)\n              // )\n              if (Number(allowance) >= Number(price)) {\n                setIsCovalApproved(true);\n              } else {\n                setIsCovalApproved(false);\n              }\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getContractStates() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    covalContract.approve(contractAddresses.vaultHandler[chainId], '100000000000000').then(function (_ref2) {\n      var hash = _ref2.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, cb) {\n    fetch(EMBLEM_API + '/liveliness-curated', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context2.sent;\n                console.log(\"Liveliness check\", data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    return cb();\n  };\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault(); // if (service !== 'kms') {\n    //   return alert('incorrect password')\n    // }\n\n    setState({\n      loaded: false,\n      \"private\": state[\"private\"]\n    });\n    var body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      ownedImage: ownedImage,\n      image: vaultImage,\n      chainId: chainId,\n      \"private\": state[\"private\"],\n      password: password || '',\n      values: [],\n      experimental: true,\n      targetContract: targetContract\n    };\n\n    if (vaultKey && vaultValue) {\n      body.values.push({\n        \"key\": vaultKey,\n        value: vaultValue\n      });\n    }\n\n    console.log(JSON.stringify(body));\n    var apiSuffix = '/mint-curated'; //(chainId == 137 || chainId == 1) ? '/mint3' : '/mint'\n\n    fetch(EMBLEM_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body)\n    }).then( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(response) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setState({\n                  loaded: true,\n                  \"private\": state[\"private\"]\n                });\n                _context3.next = 3;\n                return response.json();\n\n              case 3:\n                body = _context3.sent;\n                tokenId = body.data.tokenId; // console.log(body.data.nonce, body.data.signature, body.data.cipherTextHash)\n                // if (chainId === 137 || chainId == 1) {\n\n                nonce = body.data.nonce;\n                signature = body.data.signature;\n                cipherTextHash = body.data.cipherTextHash; // fireMetaMask()\n                // alert(\"Minting has been disabled temporarily while we work with Opensea to solve a bug where new vaults are not showing. Mint ONLY if you don't plan on using Opensea\")\n\n                setShowPreVaultMsg(false);\n                setTimeout(function () {\n                  checkLiveliness(tokenId, function () {\n                    location.href = location.origin + '/nft2?id=' + tokenId;\n                  });\n                }, 500); // } else {\n                //   mintPassword = body.password\n                //   setHash(body.data.tx)\n                //   setShowPreVaultMsg(true)\n                // }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  function previewFile() {\n    var preview = document.querySelector('#preview');\n    var inputelement = document.querySelector('input[type=file]'); //.files[0];\n\n    var reader = new FileReader();\n\n    if (inputelement.files[0].size > 5000000) {\n      delete inputelement.files;\n      return alert('File too large');\n    } else {// alert('under')\n    }\n\n    reader.addEventListener('load', function () {\n      var _reader$result;\n\n      // convert image file to base64 string\n      if (preview) preview.src = ((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '';\n      if (preview) setVaultImage(preview.src);\n      setShowEditorButton(true);\n      setModalResult('');\n    }, false);\n\n    if (inputelement.files) {\n      reader.readAsDataURL(inputelement.files[0]);\n    }\n  }\n\n  var _useState28 = useState(''),\n      acct = _useState28[0],\n      setAcct = _useState28[1];\n\n  useEffect(function () {\n    if (account && acct != account) {\n      setAcct(account);\n      setVaultAddress(account);\n    }\n  }, [account, acct]);\n  useEffect(function () {\n    account && chainId ? getContractStates() : null;\n  });\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultIndex: 0,\n    index: tabIndex,\n    onChange: function onChange(index) {\n      return setTabIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, __jsx(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, __jsx(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, \"Create Curated Vault\")), __jsx(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"2rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2rem\",\n    py: \"2rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 25\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 27\n    }\n  }), __jsx(FormLabel, {\n    htmlFor: \"type-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 27\n    }\n  }, \"Choose Curated Collection\"), __jsx(Select, {\n    id: \"type-selector\",\n    w: \"100%\",\n    value: targetContract,\n    onChange: function onChange(e) {\n      var contractData = curatedContracts.filter(function (item) {\n        return item.name == targetContract;\n      })[0];\n      console.log(\"contract data\", curatedContracts);\n      setTargetContract(contractData);\n      console.log(\"type\", targetContract);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 27\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, \"---Choose Project---\"), curatedContracts.map(function (token) {\n    return __jsx(\"option\", {\n      value: token.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 33\n      }\n    }, token.name);\n  }), targetContract ? __jsx(Select, {\n    id: \"type-selector\",\n    w: \"100%\",\n    value: targetContract,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 31\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, \"---Choose One---\"), curatedAssets[targetContract.chain].map(function (asset) {\n    console.log(asset);\n  })) : null))))), Number(balance) < Number(price) ? __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    width: \"100%\",\n    onClick: function onClick() {\n      initializeTransak(vaultAddress, 'COVAL');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 23\n    }\n  }, \"Buy $Coval\")) : null, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, !account ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, \"No Wallet Connected!\") : !vaultAddress || !isETHAddress(vaultAddress) ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, \"Check Fields!\") // ) : !service ? (\n  //   <Button isDisabled type=\"submit\">\n  //     Creation Password?\n  //   </Button>\n  : !isCovalApproved && !approving ? __jsx(Button, {\n    onClick: approveCovalFlow,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, \"Approve Coval\") : !isCovalApproved && approving ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  }, \"Approving ...\") : Number(balance) < Number(price) ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, \"Insufficient Balance\") : hash || creating || showPreVaultMsg || showMakingVaultMsg ? __jsx(Button, {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, \"Making Vault ...\") : __jsx(Button, {\n    onClick: function onClick(e) {\n      handleSubmit(e);\n      console.log(\"test\");\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 25\n    }\n  }, \"Create Vault\")))), showPreVaultMsg ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 21\n    }\n  }), \"Talking to contract ...\") : null, showMakingVaultMsg ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }), \"Making vault ... one moment\") : null, approving ? __jsx(Alert, {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }, __jsx(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }), \"Handling approval flow ...\") : null))))), hash ? __jsx(TransactionToast, {\n    hash: hash,\n    onComplete: function onComplete() {\n      setHash(null);\n\n      if (!creating) {\n        if (!approving) {\n          // fireMetaMask()\n          setShowPreVaultMsg(false);\n        } else {\n          setApproving(false);\n        }\n      } else {\n        setTimeout(function () {\n          setShowMakingVaultMsg(false);\n          checkLiveliness(tokenId, function () {\n            location.href = location.origin + '/nft?id=' + tokenId;\n          });\n        }, 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }) : null);\n}\n\n_s(CreateCurated, \"VMMmQFq7ljOSmyB8snYKPliXvCM=\", false, function () {\n  return [useDisclosure, useRouter, useWeb3React, useContract, useContract];\n});\n\n_c = CreateCurated;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCurated\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/CreateCurated.tsx"],"names":["FormControl","FormLabel","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Box","Flex","Button","ButtonGroup","Divider","Alert","AlertIcon","useDisclosure","Select","Loader","useWeb3React","useEffect","useState","useRouter","TransactionToast","EMBLEM_API","contractAddresses","curatedContracts","curatedAssets","useContract","isETHAddress","transakSDK","locale_en_gb","createDefaultImageReader","createDefaultImageWriter","setPlugins","plugin_crop","plugin_crop_locale_en_gb","plugin_finetune","plugin_finetune_locale_en_gb","plugin_finetune_defaults","plugin_filter","plugin_filter_locale_en_gb","plugin_filter_defaults","plugin_annotate","plugin_annotate_locale_en_gb","markup_editor_defaults","markup_editor_locale_en_gb","editorDefaults","imageReader","imageWriter","locale","tokenId","cipherTextHash","nonce","signature","mintPassword","CreateCurated","props","modalVisible","setModalVisible","modalResult","setModalResult","showEditorButton","setShowEditorButton","isOpen","onToggle","query","tabIndex","setTabIndex","account","chainId","vaultAddress","setVaultAddress","vaultPubPriv","setVaultPubPriv","vaultName","setVaultName","vaultDesc","setVaultDesc","vaultImage","setVaultImage","ownedImage","setOwnedImage","password","setPassword","isCovalApproved","setIsCovalApproved","loaded","state","setState","hash","setHash","experimental","setExperimental","showPreVaultMsg","setShowPreVaultMsg","showMakingVaultMsg","setShowMakingVaultMsg","decimals","setDecimals","allowance","setAllowance","balance","setBalance","price","setPrice","creating","setCreating","approving","setApproving","vaultKey","setVaultKey","vaultValue","setVaultValue","targetContract","setTargetContract","showEmbed","setShowEmbed","handlerContract","vaultHandler","vaultHandlerAbi","covalContract","coval","covalAbi","transak","initializeTransak","address","coin","apiKey","environment","defaultCryptoCurrency","walletAddress","themeColor","fiatCurrency","email","redirectURL","hostURL","window","location","origin","widgetHeight","widgetWidth","on","ALL_EVENTS","data","console","log","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","close","init","getContractStates","then","toString","balanceOf","Number","approveCovalFlow","approve","error","code","checkLiveliness","cb","fetch","method","headers","service","chainid","body","JSON","stringify","response","json","handleSubmit","evt","preventDefault","fromAddress","toAddress","description","name","image","values","push","value","apiSuffix","setTimeout","href","previewFile","preview","document","querySelector","inputelement","reader","FileReader","files","size","alert","addEventListener","src","result","readAsDataURL","acct","setAcct","index","e","contractData","filter","item","map","token","chain","asset"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  Input,\n  Stack,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex,\n  RadioGroup,\n  Radio,\n  Textarea,\n  Button,\n  ButtonGroup,\n  Text,\n  Divider,\n  Alert,\n  AlertIcon,\n  Collapse,\n  useDisclosure,\n  Select\n} from '@chakra-ui/core'\n\nimport Loader from 'react-loader'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { TransactionToast } from './TransactionToast'\nimport { EMBLEM_API, contractAddresses, curatedContracts, curatedAssets } from '../constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { useContract } from '../hooks'\nimport { isETHAddress } from '../utils'\nimport Embed from './Embed'\n// react-doka\nimport { DokaImageEditorModal } from 'react-doka';\nimport transakSDK from '@transak/transak-sdk'\n\n// doka\nimport {\n    // editor\n    locale_en_gb,\n    createDefaultImageReader,\n    createDefaultImageWriter,\n\n    // plugins\n    setPlugins,\n    plugin_crop,\n    plugin_crop_locale_en_gb,\n    plugin_finetune,\n    plugin_finetune_locale_en_gb,\n    plugin_finetune_defaults,\n    plugin_filter,\n    plugin_filter_locale_en_gb,\n    plugin_filter_defaults,\n    plugin_annotate,\n    plugin_annotate_locale_en_gb,\n    markup_editor_defaults,\n    markup_editor_locale_en_gb,\n} from 'doka';\n\nsetPlugins(plugin_crop, plugin_finetune, plugin_filter, plugin_annotate);\n\nconst editorDefaults = {\n    imageReader: createDefaultImageReader(),\n    imageWriter: createDefaultImageWriter(),\n    ...plugin_finetune_defaults,\n    ...plugin_filter_defaults,\n    ...markup_editor_defaults,\n    locale: {\n        ...locale_en_gb,\n        ...plugin_crop_locale_en_gb,\n        ...plugin_finetune_locale_en_gb,\n        ...plugin_filter_locale_en_gb,\n        ...plugin_annotate_locale_en_gb,\n        ...markup_editor_locale_en_gb,\n    },\n};\n\nlet tokenId, cipherTextHash, nonce, signature = null\nlet mintPassword = null\n\nexport default function CreateCurated(props: any) {\n  // modal\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalResult, setModalResult] = useState('');\n  const [showEditorButton, setShowEditorButton] = useState(true);\n\n  const { isOpen, onToggle } = useDisclosure()\n  const { query } = useRouter()\n  const [tabIndex, setTabIndex] = useState(0)\n  const { account, chainId } = useWeb3React()\n  const [vaultAddress, setVaultAddress] = useState(account || '')\n  const [vaultPubPriv, setVaultPubPriv] = useState('Public')\n  const [vaultName, setVaultName] = useState('')\n  const [vaultDesc, setVaultDesc] = useState('')\n  const [vaultImage, setVaultImage] = useState('')\n  const [ownedImage, setOwnedImage] = useState('')\n  const [password, setPassword] = useState('')\n  // const [service, setService] = useState('')\n  const [isCovalApproved, setIsCovalApproved] = useState(false)\n  const [state, setState] = useState({ loaded: true, private: false })\n  const [hash, setHash] = useState(null)\n  // const [cipherTextHash, setCipherTextHash] = useState(null)\n  // const [tokenId, setTokenId] = useState(null)\n  // const [mintPassword, setMintPassword] = useState(null)\n  // const [nonce, setNonce] = useState(null)\n  // const [signature, setSignature] = useState(null)\n  const [experimental, setExperimental] = useState(true)\n  const [showPreVaultMsg, setShowPreVaultMsg] = useState(false)\n  const [showMakingVaultMsg, setShowMakingVaultMsg] = useState(false)\n  const [decimals, setDecimals] = useState(null)\n  const [allowance, setAllowance] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [price, setPrice] = useState(null)\n  const [creating, setCreating] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [vaultKey, setVaultKey] = useState('')  \n  const [vaultValue, setVaultValue] = useState('')\n  const [targetContract, setTargetContract] = useState(null)\n  const [showEmbed, setShowEmbed] = useState(false)\n  \n\n  const handlerContract = useContract(contractAddresses.vaultHandler[chainId], contractAddresses.vaultHandlerAbi, true)\n  const covalContract = useContract(contractAddresses.coval[chainId], contractAddresses.covalAbi, true)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  let transak\n  const initializeTransak = (address?: string, coin? : string)=>{\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',  // Your API Key\n      environment: 'PRODUCTION', // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '', // Your customer's wallet address\n      themeColor: '000000', // App theme color\n      fiatCurrency: 'USD', // INR/GBP\n      // fiatAmount: 350,\n      email: '', // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px'\n    });\n  \n    // To get all the events\n    transak.on(transak.ALL_EVENTS, (data) => {\n      console.log(data)\n    });\n  \n    // This will trigger when the user marks payment is made.\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, (orderData) => {\n      console.log(orderData);\n      transak.close();\n    });\n  \n    transak.init()\n  }\n\n  const getContractStates = async () => {\n    setDecimals(await covalContract.decimals())\n    setAllowance(\n      await covalContract\n        .allowance(account, contractAddresses.vaultHandler[chainId])\n        .then((balance: { toString: () => string }) => balance.toString())\n    )\n    setBalance(await covalContract.balanceOf(account).then((balance: { toString: () => string }) => balance.toString()))\n    setPrice(await handlerContract.price().then((balance: { toString: () => string }) => balance.toString()))\n    // console.log(\n    //   'balance',\n    //   balance,\n    //   'allowance',\n    //   allowance,\n    //   'price',\n    //   price,\n    //   Number(allowance) >= Number(price),\n    //   Number(balance) > Number(price)\n    // )\n    if (Number(allowance) >= Number(price)) {\n      setIsCovalApproved(true)\n    } else {\n      setIsCovalApproved(false)\n    }\n  }\n\n  const approveCovalFlow = () => {\n    setApproving(true)\n    ;(covalContract as Contract)\n      .approve(contractAddresses.vaultHandler[chainId], '100000000000000')\n      .then(({ hash }: { hash: string }) => {\n        setHash(hash)\n      })\n      .catch((error: ErrorWithCode) => {\n        if (error?.code == 4001) {\n          setApproving(false)\n        }\n      })\n  }\n\n  const checkLiveliness = (tokenId, cb)=>{\n    fetch(EMBLEM_API + '/liveliness-curated', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({tokenId: tokenId}),\n    }).then(async function (response) {\n      let data = await response.json()\n      console.log(\"Liveliness check\", data)\n    })\n    return cb()\n  }\n\n  const handleSubmit = (evt: { preventDefault: () => void }) => {\n    evt.preventDefault()\n    // if (service !== 'kms') {\n    //   return alert('incorrect password')\n    // }\n    setState({ loaded: false, private: state.private })\n    let body = {\n      fromAddress: account,\n      toAddress: vaultAddress,\n      description: vaultDesc,\n      name: vaultName,\n      ownedImage: ownedImage,\n      image: vaultImage,\n      chainId: chainId,\n      private: state.private,\n      password: password || '',\n      values: [],\n      experimental: true,\n      targetContract: targetContract\n    }\n    if (vaultKey && vaultValue) {\n      body.values.push({\"key\": vaultKey, value: vaultValue})\n    }\n    console.log(JSON.stringify(body))\n    let apiSuffix = '/mint-curated' //(chainId == 137 || chainId == 1) ? '/mint3' : '/mint'\n    fetch(EMBLEM_API + apiSuffix, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(body),\n    }).then(async function (response) {\n      setState({ loaded: true, private: state.private })\n      let body = await response.json()\n      tokenId = body.data.tokenId\n      // console.log(body.data.nonce, body.data.signature, body.data.cipherTextHash)\n      // if (chainId === 137 || chainId == 1) {\n        nonce = body.data.nonce\n        signature = body.data.signature\n        cipherTextHash = body.data.cipherTextHash\n        // fireMetaMask()\n        // alert(\"Minting has been disabled temporarily while we work with Opensea to solve a bug where new vaults are not showing. Mint ONLY if you don't plan on using Opensea\")\n        setShowPreVaultMsg(false)\n        setTimeout(() => {\n        checkLiveliness(tokenId, ()=>{\n          location.href = location.origin + '/nft2?id=' + tokenId\n        })\n      }, 500)\n      // } else {\n      //   mintPassword = body.password\n      //   setHash(body.data.tx)\n      //   setShowPreVaultMsg(true)\n      // }\n    })\n  }\n\n  function previewFile() {\n    const preview = document.querySelector('#preview') as HTMLImageElement\n    const inputelement = document.querySelector('input[type=file]') as HTMLInputElement //.files[0];\n    const reader = new FileReader()\n    if (inputelement.files[0].size > 5000000) {\n      delete inputelement.files\n      return alert('File too large')\n    } else {\n      // alert('under')\n    }\n    reader.addEventListener(\n      'load',\n      function () {\n        // convert image file to base64 string\n        if (preview) preview.src = reader.result?.toString() || ''\n        if (preview) setVaultImage(preview.src)\n        setShowEditorButton(true)\n        setModalResult('')\n      },\n      false\n    )\n\n    if (inputelement.files) {\n\n      \n      reader.readAsDataURL(inputelement.files[0])\n    }\n  }\n\n  const [acct, setAcct] = useState('')\n  useEffect(() => {\n    if (account && acct != account) {\n      setAcct(account)\n      setVaultAddress(account)\n    }\n  }, [account, acct])\n\n  useEffect(() => {\n    account && chainId ? getContractStates() : null\n  })\n\n  return (\n    <Loader loaded={state.loaded}>\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n        <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n          <Tabs defaultIndex={0} index={tabIndex} onChange={(index) => setTabIndex(index)}>\n            <TabList>\n              <Tab>Create Curated Vault</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <Stack\n                  direction=\"column\"\n                  align=\"center\"\n                  spacing=\"2rem\"\n                  flexGrow={1}\n                  justifyContent=\"center\"\n                  px=\"2rem\"\n                  py=\"2rem\"\n                  shouldWrapChildren\n                >\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <FormControl>\n                      \n                      <Box p={1} rounded=\"lg\" overflow=\"hidden\">\n                        <Stack align=\"center\" p={1}>\n                          <Divider />\n                          <FormLabel htmlFor=\"type-selector\">Choose Curated Collection</FormLabel>\n                          <Select id=\"type-selector\" w=\"100%\" value={targetContract}\n                            onChange={(e)=>{\n                              let contractData:any = curatedContracts.filter(item=>{return item.name == targetContract})[0]\n                              console.log(\"contract data\", curatedContracts)\n                              setTargetContract(contractData)\n                              console.log(\"type\", targetContract)\n                            }}\n                          >\n                            <option value=\"\" >---Choose Project---</option>\n                            {curatedContracts.map(token=>{\n                              return (\n                                <option value={token.name} >{token.name}</option>\n                              )\n                            })}\n                            {targetContract ? (\n                              <Select id=\"type-selector\" w=\"100%\" value={targetContract}>\n                                <option value=\"\" >---Choose One---</option>\n\n                                {curatedAssets[targetContract.chain].map(asset=>{\n                                 console.log(asset)\n                                })}\n                              </Select>\n                            ) : null}\n                          </Select>\n                        </Stack>\n                      </Box>\n                    </FormControl>\n                  </Stack>\n\n                  {Number(balance) < Number(price) ? (\n                    <Box d=\"flex\" alignItems=\"baseline\" justifyContent=\"space-between\" mt=\"2\">\n                      <Button\n                        width=\"100%\"\n                        onClick={()=>{initializeTransak(vaultAddress, 'COVAL')}}\n                      >\n                        Buy $Coval\n                      </Button>\n                    </Box>\n                  ) : null}\n\n                  <Stack direction=\"row\" align=\"flex-start\" spacing=\"0rem\" flexWrap=\"wrap\" shouldWrapChildren>\n                    <ButtonGroup spacing={4}>\n                      \n                      {!account ? (\n                        <Button isDisabled type=\"submit\">\n                          No Wallet Connected!\n                        </Button>\n                      ) : !vaultAddress ||\n                        !isETHAddress(vaultAddress) ? (\n                        <Button isDisabled type=\"submit\">\n                          Check Fields!\n                        </Button>\n                      // ) : !service ? (\n                      //   <Button isDisabled type=\"submit\">\n                      //     Creation Password?\n                      //   </Button>\n                      ) : !isCovalApproved && !approving ? (\n                        <Button onClick={approveCovalFlow} type=\"submit\">\n                          Approve Coval\n                        </Button>\n                      ) : !isCovalApproved && approving ? (\n                        <Button isDisabled type=\"submit\">\n                          Approving ...\n                        </Button>\n                      ) : Number(balance) < Number(price) ? (\n                        <Button isDisabled type=\"submit\">\n                          Insufficient Balance\n                        </Button>\n                      ) : hash || creating || showPreVaultMsg || showMakingVaultMsg ? (\n                        <Button isDisabled type=\"submit\">\n                          Making Vault ...\n                        </Button>\n                      ) : (\n                        <Button onClick={(e)=>{handleSubmit(e);console.log(\"test\")}} type=\"submit\">\n                          Create Vault\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Stack>\n                </Stack>\n                {showPreVaultMsg ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Talking to contract ...\n                  </Alert>\n                ) : null}\n                {showMakingVaultMsg ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Making vault ... one moment\n                  </Alert>\n                ) : null}\n                {approving ? (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Handling approval flow ...\n                  </Alert>\n                ) : null}\n              </TabPanel>\n              {/* <TabPanel>\n                <Stack>\n                <div style={{ height: '70vh', backgroundColor: 'white' }}>\n                  <DokaImageEditor\n                      {...editorDefaults}\n                      className='doka'\n                      src={'./image.jpeg'}\n                      onLoad={(res: any) => console.log('load inline image', res)}\n                      onProcess={({ dest }) => setInlineResult(URL.createObjectURL(dest))}\n                  />\n                </div>\n                </Stack>\n              </TabPanel> */}\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </Flex>\n      {hash ? (\n        <TransactionToast\n          hash={hash}\n          onComplete={() => {\n            setHash(null)\n            if (!creating) {\n              if (!approving) {\n                // fireMetaMask()\n                setShowPreVaultMsg(false)\n              } else {\n                setApproving(false)\n              }\n            } else {\n              setTimeout(() => {\n                setShowMakingVaultMsg(false)\n                checkLiveliness(tokenId, ()=>{\n                  location.href = location.origin + '/nft?id=' + tokenId\n                })                \n              }, 500)\n            }\n          }}\n        />\n      ) : null}\n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}