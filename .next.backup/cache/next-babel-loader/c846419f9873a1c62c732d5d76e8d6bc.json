{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Contract } from '@ethersproject/contracts';\nimport { useWeb3React } from '@web3-react/core';\n\nvar getContract = function getContract(address, abi, library, account) {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nfunction checkApproval(_x, _x2, _x3, _x4, _x5) {\n  return _checkApproval.apply(this, arguments);\n}\n\nfunction _checkApproval() {\n  _checkApproval = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(handler, spending, library, account, amount) {\n    var spendingContract, allowance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(amount > 0)) {\n              _context.next = 7;\n              break;\n            }\n\n            spendingContract = getContract(spending.address, spending.abi, library, account);\n            _context.next = 4;\n            return spendingContract.allowance(account, handler.address);\n\n          case 4:\n            allowance = _context.sent;\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkApproval.apply(this, arguments);\n}\n\nexport default function Approval(props) {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account;\n\n  useEffect(function () {\n    console.log('--------------', account);\n    var approved = checkApproval(props.handler, props.spending, props.library, props.account, props.amount);\n    console.log('--------------', approved);\n  });\n  return account ? __jsx(React.Fragment, null, \"test\") : null;\n} // export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n// export default Approval\n\n_s(Approval, \"tWAgYu2fF1waEiZXLSGmvTQNWT0=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Approval;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approval\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","useEffect","Contract","useWeb3React","getContract","address","abi","library","account","getSigner","connectUnchecked","checkApproval","handler","spending","amount","spendingContract","allowance","Approval","props","console","log","approved"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAA2BC,SAA3B,QAA4C,OAA5C;AAaA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,EAAwC;AAC1D,SAAO,IAAIN,QAAJ,CAAaG,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;SAIeC,a;;;;;4EAAf,iBAA6BC,OAA7B,EAAqEC,QAArE,EAA8GN,OAA9G,EAA4HC,OAA5H,EAA0IM,MAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMA,MAAM,GAAG,CADf;AAAA;AAAA;AAAA;;AAEQC,YAAAA,gBAFR,GAE2BX,WAAW,CAACS,QAAQ,CAACR,OAAV,EAAmBQ,QAAQ,CAACP,GAA5B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAFtC;AAAA;AAAA,mBAG0BO,gBAAgB,CAACC,SAAjB,CAA2BR,OAA3B,EAAoCI,OAAO,CAACP,OAA5C,CAH1B;;AAAA;AAGQW,YAAAA,SAHR;AAAA,6CAIW,IAJX;;AAAA;AAAA,6CAOS,KAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAAA;;AAEvD,sBAAoBf,YAAY,EAAhC;AAAA,MAAQK,OAAR,iBAAQA,OAAR;;AAEAP,EAAAA,SAAS,CAAC,YAAI;AACVkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BZ,OAA7B;AACA,QAAIa,QAAQ,GAAGV,aAAa,CAACO,KAAK,CAACN,OAAP,EAAgBM,KAAK,CAACL,QAAtB,EAAgCK,KAAK,CAACX,OAAtC,EAA+CW,KAAK,CAACV,OAArD,EAA8DU,KAAK,CAACJ,MAApE,CAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,QAA9B;AACH,GAJQ,CAAT;AAMA,SAAOb,OAAO,GACV,mCADU,GAIX,IAJH;AAKD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GArCwBS,Q;UAEFd,Y;;;KAFEc,Q","sourcesContent":["import React, { Component, useEffect } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\nasync function checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, library: any, account: any, amount: number) {\n  if (amount > 0) {\n    let spendingContract = getContract(spending.address, spending.abi, library, account)\n    let allowance = await spendingContract.allowance(account, handler.address)\n    return true\n    return spendingContract.allowance(account, handler.address)\n  }\n  return false\n}\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  library: any,\n  account: any,\n}\nexport default function Approval(props: AttributesProps) {\n  \n  const { account } = useWeb3React()\n\n  useEffect(()=>{\n      console.log('--------------',account)\n      let approved = checkApproval(props.handler, props.spending, props.library, props.account, props.amount)\n      console.log('--------------', approved)\n  })\n  \n  return account? (\n      <>\n          test\n      </>\n  ): null\n}\n// export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n\n// export default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}