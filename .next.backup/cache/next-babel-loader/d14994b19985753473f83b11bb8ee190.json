{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Text, Image, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { HStack, VStack, Circle } from '@chakra-ui/react';\nexport default function PnL() {\n  const {\n    query\n  } = useRouter();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    loaded: false\n  });\n  const {\n    0: loadingApi,\n    1: setLoadingApi\n  } = useState(false);\n  const {\n    0: stats,\n    1: setStats\n  } = useState([]);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\");\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(10);\n  const {\n    0: shouldFetchData,\n    1: setShouldFetchData\n  } = useState(false);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false);\n      getPnL();\n    }\n  }, []);\n  useEffect(() => {\n    if (shouldFetchData) {\n      console.log(\"Should load api after setting consts\", offset);\n      setShouldFetchData(false);\n      getPnL();\n    } else {\n      console.log(\"wtf\");\n    }\n  }, [shouldFetchData, offset]);\n\n  const fetchData = async () => {\n    console.log('setting new offset to', offset + limit);\n    setOffset(offset + limit);\n    setShouldFetchData(true);\n  };\n\n  const getPnL = async () => {\n    console.log(\"getting logs\");\n    fetch('https://api.emblemvault.io/s:osautomate/offer/' + address + '?limit=' + limit + '&offset=' + offset, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false);\n      setState({\n        loaded: true\n      });\n      let jsonData = await response.json();\n      setStats(stats.concat(jsonData.intelligences));\n      console.log(jsonData);\n\n      if (jsonData.intelligences.length == 0) {\n        setHasMore(false);\n      }\n    });\n  };\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, stats.length > 0 ? __jsx(React.Fragment, null, __jsx(InfiniteScroll, {\n    className: \"infinite-scroll\",\n    scrollableTarget: \"shannon-container\" // height={200}\n    ,\n    dataLength: stats.length //This is important field to render the next data\n    ,\n    next: fetchData,\n    hasMore: hasMore,\n    loader: __jsx(Refreshing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }),\n    endMessage: __jsx(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, stats.map((item, index) => {\n    return __jsx(React.Fragment, null, __jsx(HStack, {\n      key: \"container-\" + index,\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    }, __jsx(Box, {\n      className: \"coin-image-container\",\n      m: 2,\n      \"min-width\": \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, item.image ? __jsx(Image, {\n      width: \"40px\",\n      src: item.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }) : __jsx(Circle, {\n      size: \"40px\",\n      bg: \"gray\",\n      color: \"white\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, item.collection[0])), __jsx(VStack, {\n      p: \"10px\",\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, __jsx(HStack, {\n      w: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      float: \"left\",\n      width: \"100%\",\n      fontWeight: \"bold\",\n      color: \"white\",\n      isTruncated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, item.collection, \" : \", item.name ? item.name : '#' + item.tokenId), __jsx(Text, {\n      float: \"right\",\n      width: \"40%\",\n      textAlign: \"right\",\n      fontWeight: \"bold\",\n      color: \"forestgreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"Floor \", item.floor)), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"15%\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Purchased for \", item.totalCost, \" \\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, \"BestOffer: \", item.offerAmount, \" \\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"For Sale: \", item.salePrice, \" \\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, \"Floor: \", item.floor, \" \\u039E\")), __jsx(HStack, {\n      w: \"100%\",\n      mt: 0,\n      spacing: \"4px\",\n      className: \"coin-display-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, __jsx(Text, {\n      position: \"relative\",\n      fontSize: \"xs\",\n      width: \"15%\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Purchased for \", item.totalCost, \"\\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Offer / Cost \\u25B3 : \", item.offerPnL.toFixed(4), \" \\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"Offer / Cost \\u25B3 : \", item.offerPnL, \" \\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"For Sale: \", item.salePrice, \"\\u039E\"), __jsx(Text, {\n      width: \"15%\",\n      fontSize: \"xs\",\n      right: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Floor: \", item.floor, \"\\u039E\")))));\n  }))) : null)));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx"],"names":["Box","Flex","Text","Image","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","InfiniteScroll","HStack","VStack","Circle","PnL","query","account","chainId","state","setState","loaded","loadingApi","setLoadingApi","stats","setStats","address","setAddress","offset","setOffset","limit","setLimit","shouldFetchData","setShouldFetchData","hasMore","setHasMore","getPnL","console","log","fetchData","fetch","method","headers","then","response","jsonData","json","concat","intelligences","length","textAlign","map","item","index","image","collection","name","tokenId","floor","totalCost","offerAmount","salePrice","offerPnL","toFixed"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\n\nexport default function PnL() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState([])\n  const [address, setAddress] = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\")\n  const [offset, setOffset] = useState(0)\n  const [limit, setLimit] = useState(10)\n  const [shouldFetchData, setShouldFetchData] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false)\n      getPnL()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (shouldFetchData) {\n      console.log(\"Should load api after setting consts\", offset)\n      setShouldFetchData(false)\n      getPnL()\n    } else {\n      console.log(\"wtf\")\n    }\n  }, [shouldFetchData, offset])\n\n  const fetchData = async() =>{\n    console.log('setting new offset to', offset+limit)\n    setOffset(offset+limit)\n    setShouldFetchData(true)\n  }\n\n  const getPnL = async() =>{\n    console.log(\"getting logs\")\n    fetch('https://api.emblemvault.io/s:osautomate/offer/'+address+'?limit='+limit+'&offset='+offset, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false)\n      setState({ loaded: true })\n      let jsonData = await response.json()\n      setStats(stats.concat(jsonData.intelligences))\n      console.log(jsonData)\n      if (jsonData.intelligences.length == 0) {\n        setHasMore(false)\n      }\n    })\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\" w={\"100%\"}>\n          {stats.length > 0? (\n            <>\n              {/* <Text>Total Offers in USD: ${stats.offers.toFixed(2)}</Text>\n              <Text>Total Number of offers: ${stats.offerCount.toFixed(2)}</Text> */}\n              <InfiniteScroll\n                className=\"infinite-scroll\"\n                scrollableTarget=\"shannon-container\"\n                // height={200}\n                dataLength={stats.length} //This is important field to render the next data\n                next={fetchData}\n                hasMore={hasMore}\n                loader={<Refreshing />}\n                endMessage={\n                  <p style={{ textAlign: 'center' }}>\n                    <b>Yay! You have seen it all</b> \n                  </p>\n                }\n              >\n                {stats.map((item, index)=>{\n                  return (\n                    <>\n                      <HStack key={\"container-\"+index} p={2} >\n                        <Box className=\"coin-image-container\" m={2} min-width=\"40px\">\n                          { item.image ? (\n                            <Image width=\"40px\" src={item.image}></Image>\n                          ) : (\n                            <Circle size=\"40px\" bg=\"gray\" color=\"white\" isTruncated>\n                              {item.collection[0]}\n                            </Circle>\n                          ) }\n                        </Box>\n                        <VStack p=\"10px\" w=\"100%\">\n                          <HStack w=\"100%\">\n                            <Text float=\"left\" width=\"100%\" fontWeight=\"bold\" color=\"white\" isTruncated={true}>\n                              {item.collection} : {item.name? item.name : '#'+item.tokenId}\n                            </Text>\n                            <Text float=\"right\" width=\"40%\" textAlign=\"right\" fontWeight=\"bold\" color=\"forestgreen\" >\n                             Floor {item.floor}\n                            </Text>\n                          </HStack>\n                          <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n                            <Text position=\"relative\" fontSize=\"xs\" width=\"15%\" color=\"gray\">\n                              Purchased for {item.totalCost} Ξ\n                            </Text>                           \n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              BestOffer: {item.offerAmount} Ξ\n                            </Text>                            \n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              For Sale: {item.salePrice} Ξ\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              Floor: {item.floor} Ξ\n                            </Text>\n                          </HStack>\n                          <HStack w=\"100%\" mt={0} spacing=\"4px\" className = \"coin-display-row\">\n                            <Text position=\"relative\" fontSize=\"xs\" width=\"15%\" color=\"gray\">\n                              Purchased for {item.totalCost}Ξ\n                            </Text>                           \n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              Offer / Cost △ : {item.offerPnL.toFixed(4)} Ξ\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              Offer / Cost △ : {item.offerPnL} Ξ\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              For Sale: {item.salePrice}Ξ\n                            </Text>\n                            <Text width=\"15%\" fontSize=\"xs\" right=\"40px\">\n                              Floor: {item.floor}Ξ\n                            </Text>\n                          </HStack>\n                        </VStack>\n                        \n                      </HStack>\n                    </>\n                  )\n                })}\n              </InfiniteScroll>\n            </>\n          ) : null }\n        </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}