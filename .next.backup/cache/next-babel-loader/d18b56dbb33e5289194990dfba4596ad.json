{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { validImage } from '../utils';\nimport { Image } from '@chakra-ui/core';\nimport SketchFab from './embed/SketchFab';\nimport ShaderToy from './embed/ShaderToy';\nimport Bandcamp from './embed/Bandcamp';\nimport SoundCloud from './embed/SoundCloud';\nimport Clyp from './embed/Clyp';\nimport Sketchup from './embed/Sketchup';\nimport Clara from './embed/Clara';\nimport MyMiniFactory from './embed/MyMiniFactory';\nimport { Audius } from './embed/Audius';\n\nasync function readMeta(url) {\n  const responce = await fetch(url, {\n    method: 'GET',\n    redirect: 'follow',\n    mode: 'no-cors'\n  });\n  console.log(responce); // const jsonData = await responce.json()\n  // return responce.image || \"\"\n}\n\nexport class Embed extends Component {\n  render() {\n    let url = this.props.url || \"\";\n    return __jsx(React.Fragment, null, url.includes('sketchfab.com/') ? __jsx(SketchFab, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }) : url.includes('shadertoy.com/') ? __jsx(ShaderToy, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }) : url.includes('bandcamp.com/') ? __jsx(Bandcamp, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }) : url.includes('soundcloud.com/') ? __jsx(SoundCloud, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }) : url.includes('clyp.it/') ? __jsx(Clyp, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }) : url.includes('sketchup.com/') ? __jsx(Sketchup, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }) : url.includes('clara.io/') ? __jsx(Clara, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }) : url.includes('myminifactory.com/') ? __jsx(MyMiniFactory, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }) : url.includes('audius.co/') ? __jsx(Audius, {\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }) : url.includes('.json') ? __jsx(Image, {\n      className: \"d-block w-100\",\n      src: validImage(readMeta(url)) ? url : 'https://circuitsofvalue.com/public/coval-logo.png',\n      width: \"250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }) : __jsx(Image, {\n      className: \"d-block w-100\",\n      src: validImage(url) ? url : 'https://circuitsofvalue.com/public/coval-logo.png',\n      width: \"250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\nexport default Embed;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Embed.tsx"],"names":["React","Component","validImage","Image","SketchFab","ShaderToy","Bandcamp","SoundCloud","Clyp","Sketchup","Clara","MyMiniFactory","Audius","readMeta","url","responce","fetch","method","redirect","mode","console","log","Embed","render","props","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validImage } from '../utils'\nimport { Image } from '@chakra-ui/core'\nimport SketchFab from './embed/SketchFab'\nimport ShaderToy from './embed/ShaderToy'\nimport Bandcamp from './embed/Bandcamp'\nimport SoundCloud from './embed/SoundCloud'\nimport Clyp from './embed/Clyp'\nimport Sketchup from './embed/Sketchup'\nimport Clara from './embed/Clara'\nimport MyMiniFactory from './embed/MyMiniFactory'\nimport { Audius } from './embed/Audius'\n\ntype EmbedProps = {\n  url: string\n}\n\nasync function readMeta(url){\n  const responce = await fetch(url, {\n    method: 'GET',\n    redirect: 'follow',\n    mode: 'no-cors'    \n  })\n  console.log(responce)\n  // const jsonData = await responce.json()\n  // return responce.image || \"\"\n}\n\nexport class Embed extends Component<EmbedProps> {\n  render() {\n    let url = this.props.url || \"\"\n    return (\n      <>\n        {url.includes('sketchfab.com/') ? (\n          <SketchFab\n            url={url}\n          />\n        ) : url.includes('shadertoy.com/') ? (\n          <ShaderToy\n            url={url}\n          />\n        ) : url.includes('bandcamp.com/') ? (\n          <Bandcamp\n            url={url}\n          />\n        ) : url.includes('soundcloud.com/') ? (\n          <SoundCloud\n            url={url}\n          />\n        ) : url.includes('clyp.it/') ? (\n          <Clyp\n            url={url}\n          />\n        ) : url.includes('sketchup.com/') ? (\n          <Sketchup\n            url={url}\n          />\n        ) : url.includes('clara.io/') ? (\n          <Clara\n            url={url}\n          />\n        ) : url.includes('myminifactory.com/') ? (\n          <MyMiniFactory\n            url={url}\n          />\n        ) : url.includes('audius.co/') ? (\n          <Audius\n            url={url}\n          />\n        ) : url.includes('.json') ? (\n          <Image\n              className=\"d-block w-100\"\n              src={validImage(readMeta(url)) ? url : 'https://circuitsofvalue.com/public/coval-logo.png'}\n              width=\"250px\"\n            />\n        ) : (\n              <Image\n                className=\"d-block w-100\"\n                src={validImage(url) ? url : 'https://circuitsofvalue.com/public/coval-logo.png'}\n                width=\"250px\"\n              />\n            )}\n      </>\n    )\n  }\n}\n\nexport default Embed\n"]},"metadata":{},"sourceType":"module"}