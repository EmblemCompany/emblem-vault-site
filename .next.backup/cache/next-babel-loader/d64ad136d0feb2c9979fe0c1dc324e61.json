{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Flex, Text, Stack } from '@chakra-ui/core';\nimport Loader from 'react-loader';\nimport Refreshing from './Refreshing';\nimport { useRouter } from 'next/router';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nexport default function PnL() {\n  _s();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _useState = useState({\n    loaded: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingApi = _useState2[0],\n      setLoadingApi = _useState2[1];\n\n  var _useState3 = useState(null),\n      stats = _useState3[0],\n      setStats = _useState3[1];\n\n  var _useState4 = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\"),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  useEffect(function () {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false);\n      getPnL();\n    }\n  }, []);\n\n  var getPnL = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"getting logs\");\n              fetch('https://api.emblemvault.io/s:osautomate/offer/' + address + '?limit=10&offset=20', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                  var jsonData;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          setLoadingApi(false);\n                          setState({\n                            loaded: true\n                          });\n                          _context.next = 4;\n                          return response.json();\n\n                        case 4:\n                          jsonData = _context.sent;\n                          setStats(jsonData);\n                          console.log(jsonData);\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getPnL() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Loader, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, loadingApi ? __jsx(Refreshing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }) : '', __jsx(Flex, {\n    w: \"100%\",\n    justify: \"center\",\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, stats ? __jsx(React.Fragment, null, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Total Offers in USD: $\", stats.offers.toFixed(2)), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Total Number of offers: $\", stats.offerCount.toFixed(2))) : null)));\n}\n\n_s(PnL, \"kxa6AvLtpKWGYkumLPydfCV/1ck=\", false, function () {\n  return [useRouter, useWeb3React];\n});\n\n_c = PnL;\n\nvar _c;\n\n$RefreshReg$(_c, \"PnL\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/PnL.tsx"],"names":["Flex","Text","Stack","Loader","Refreshing","useRouter","useWeb3React","useEffect","useState","PnL","query","account","chainId","loaded","state","setState","loadingApi","setLoadingApi","stats","setStats","address","setAddress","getPnL","console","log","fetch","method","headers","then","response","json","jsonData","offers","toFixed","offerCount"],"mappings":"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","sourcesContent":["import { Box, Flex, Text, Link, Image, Stack, Button, BoxProps, Input, Select, Tabs, Tab, TabList, TabPanels, TabPanel } from '@chakra-ui/core'\nimport Loader from 'react-loader'\nimport Refreshing from './Refreshing'\nimport { useRouter } from 'next/router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useQuery } from '@chakra-ui/react'\n\n\nexport default function PnL() {\n  const { query } = useRouter()\n  const { account, chainId } = useWeb3React()\n  const [state, setState] = useState({ loaded: false })\n  const [loadingApi, setLoadingApi] = useState(false)\n  const [stats, setStats] = useState(null)\n  const [address, setAddress] = useState(query.address || \"0x3B31925EeC78dA3CF15c4503604c13b0eEBC57e5\")\n\n  interface ErrorWithCode extends Error {\n    code?: number\n  }\n\n  useEffect(() => {\n    if (state.loaded == false && !loadingApi) {\n      setLoadingApi(false)\n      getPnL()\n    }\n  }, [])\n\n  const getPnL = async() =>{\n    console.log(\"getting logs\")\n    fetch('https://api.emblemvault.io/s:osautomate/offer/'+address+'?limit=10&offset=20', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async function (response) {\n      setLoadingApi(false)\n      setState({ loaded: true })\n      let jsonData = await response.json()\n      setStats(jsonData)\n      console.log(jsonData)\n    })\n  }\n\n  return (\n    <Loader loaded={state.loaded}>\n      {loadingApi ? <Refreshing /> : ''}\n\n      <Flex w=\"100%\" justify=\"center\" mt={10}>\n        <Stack align=\"center\">\n          {stats? (\n            <>\n              <Text>Total Offers in USD: ${stats.offers.toFixed(2)}</Text>\n              <Text>Total Number of offers: ${stats.offerCount.toFixed(2)}</Text>              \n            </>\n          ) : null }\n        </Stack>\n      </Flex>\n     \n    </Loader>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}