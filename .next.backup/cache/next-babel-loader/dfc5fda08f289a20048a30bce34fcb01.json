{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Flex } from '@chakra-ui/core';\nimport { Contract } from '@ethersproject/contracts';\n\nvar getContract = function getContract(address, abi, library, account) {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nfunction checkApproval(handler, contract, library, account, amount) {\n  throw new Error('Function not implemented.');\n}\n\nexport var Approval = /*#__PURE__*/function (_Component) {\n  _inherits(Approval, _Component);\n\n  var _super = _createSuper(Approval);\n\n  function Approval() {\n    _classCallCheck(this, Approval);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Approval, [{\n    key: \"render\",\n    value: function render() {\n      var handler = this.props.handler;\n      var contract = this.props.contract;\n      var amount = this.props.amount;\n      var label = this.props.label;\n      var library = this.props.library;\n      var account = this.props.account;\n      var approved = checkApproval(handler, contract, library, account, amount);\n      return approved ? __jsx(React.Fragment, null) : __jsx(Flex, {\n        w: \"100%\",\n        flexWrap: \"wrap\",\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, __jsx(Button, {\n        backgroundColor: \"#02b402\",\n        color: \"black !important\",\n        fontWeight: \"bold !important\",\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, label));\n    }\n  }]);\n\n  return Approval;\n}(Component);\nexport default Approval;","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","Component","Button","Flex","Contract","getContract","address","abi","library","account","getSigner","connectUnchecked","checkApproval","handler","contract","amount","Error","Approval","props","label","approved"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAMEC,MANF,EAOEC,IAPF,QASO,iBATP;AAYA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,EAAmC;AACrD,SAAO,IAAIL,QAAJ,CAAaE,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAIA,SAASC,aAAT,CAAuBC,OAAvB,EAAgEC,QAAhE,EAA0GN,OAA1G,EAAwHC,OAAxH,EAAsIM,MAAtI,EAAsJ;AACpJ,QAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAYD,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,UAAIJ,OAAO,GAAG,KAAKK,KAAL,CAAWL,OAAzB;AACA,UAAIC,QAAQ,GAAG,KAAKI,KAAL,CAAWJ,QAA1B;AACA,UAAIC,MAAM,GAAG,KAAKG,KAAL,CAAWH,MAAxB;AACA,UAAII,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAIX,OAAO,GAAG,KAAKU,KAAL,CAAWV,OAAzB;AACA,UAAIC,OAAO,GAAG,KAAKS,KAAL,CAAWT,OAAzB;AACA,UAAIW,QAAQ,GAAGR,aAAa,CAACC,OAAD,EAAUC,QAAV,EAAoBN,OAApB,EAA6BC,OAA7B,EAAsCM,MAAtC,CAA5B;AACA,aAAOK,QAAQ,GACb,2BADa,GAGb,MAAC,IAAD;AAAM,QAAA,CAAC,EAAC,MAAR;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,eAAe,EAAE,SAAzB;AAAoC,QAAA,KAAK,EAAE,kBAA3C;AAA+D,QAAA,UAAU,EAAE,iBAA3E;AAA8F,QAAA,KAAK,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KADH,CADF,CAHF;AASD;AAlBH;;AAAA;AAAA,EAA8BlB,SAA9B;AAqBA,eAAegB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\n\nconst getContract = (address, abi, library, account) =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\nfunction checkApproval(handler: { contract: string; abi: any }, contract: { contract: string; abi: any }, library: any, account: any, amount: number) {\n  throw new Error('Function not implemented.')\n}\n\ntype AttributesProps = {\n  handler: {contract: string, abi: any},\n  contract: {contract: string, abi: any},\n  amount: number,\n  abi: any,\n  label: string,\n  library: any,\n  account: any,\n}\n\nexport class Approval extends Component<AttributesProps> {\n  render() {\n    let handler = this.props.handler\n    let contract = this.props.contract\n    let amount = this.props.amount\n    let label = this.props.label\n    let library = this.props.library\n    let account = this.props.account\n    let approved = checkApproval(handler, contract, library, account, amount)\n    return approved? (\n      <></>\n    ) : (\n      <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n        <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n          {label}\n        </Button>\n      </Flex>\n    )\n  }\n}\n\nexport default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}