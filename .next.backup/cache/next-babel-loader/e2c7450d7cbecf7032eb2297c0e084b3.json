{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BackgroundVideo from './BackgroundVideo';\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Link } from '@chakra-ui/core';\nimport { useWeb3React } from '@web3-react/core';\nimport dynamic from 'next/dynamic';\nimport { CHAIN_ID_NAMES } from '../utils';\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks';\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD, useNoLayout } from '../context';\nimport ColorBox from './ColorBox';\nimport Account from './Account';\nimport { TransactionToast } from './TransactionToast';\nimport TokenBalance from './TokenBalance';\nimport { WETH, ChainId } from '@uniswap/sdk';\nimport WalletConnect from './WalletConnect';\nimport { QueryParameters } from '../constants';\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic, CovalxDai, CovalBSC, CovalFantom } from '../tokens';\nimport transakSDK from '@transak/transak-sdk'; // import Gun from 'gun';\n// import 'gun/sea'\n// import { GunProvider } from 'react-gun';\n\nconst Settings = dynamic(() => import('./Settings'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Settings')],\n    modules: ['./Settings']\n  }\n});\nexport default function Layout({\n  children\n}) {\n  const {\n    chainId,\n    account\n  } = useWeb3React();\n  const [noLayout, setNoLayout] = useNoLayout();\n  const isTestnet = typeof chainId === 'number' && chainId !== 1;\n  const {\n    isOpen: isOpenSettings,\n    onOpen: onOpenSettings,\n    onClose: onCloseSettings\n  } = useDisclosure();\n  const [firstToken] = useFirstToken();\n  const [secondToken] = useSecondToken();\n  const [showUSD, setShowUSD] = useShowUSD(); // const [gun, setGun] = useState(Gun(['https://emblem-gun.herokuapp.com/gun']))\n\n  const [transactions] = useTransactions(); // automatically try connecting to the injected connector on pageload\n\n  const triedToEagerConnect = useEagerConnect();\n  const queryParameters = useQueryParameters();\n  const requiredChainId = queryParameters[QueryParameters.CHAIN];\n  const USDETHPrice = useUSDETHPrice();\n  let transak;\n\n  const initializeTransak = (address, coin) => {\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',\n      // Your API Key\n      environment: 'PRODUCTION',\n      // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '',\n      // Your customer's wallet address\n      themeColor: '000000',\n      // App theme color\n      fiatCurrency: 'USD',\n      // INR/GBP\n      // fiatAmount: 350,\n      email: '',\n      // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px' // networks: 'matic,bsc,eth,mainnet'\n\n    }); // To get all the events\n\n    transak.on(transak.ALL_EVENTS, data => {\n      console.log(data);\n    }); // This will trigger when the user marks payment is made.\n\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, orderData => {\n      console.log(orderData);\n      transak.close();\n    });\n    transak.init();\n  };\n\n  const showOrHideNavLink = path => {\n    return location.pathname.includes(path) ? 'none' : 'block';\n  };\n\n  const handleNewNavigationClick = path => {\n    location.href = location.origin + '/' + path;\n  };\n\n  const handleSearchClick = () => {\n    let pieces = location.pathname.split('/');\n    pieces.pop();\n    location.href = location.origin + pieces.join('/') + '/search';\n  };\n\n  const handleNavigationclick = () => {\n    console.log(location.pathname);\n    let pieces = location.pathname.split('/');\n    pieces.pop();\n\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create';\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist';\n    }\n  };\n\n  const handleNavigationFeaturedclick = () => {\n    let pieces = location.pathname.split('/');\n    pieces.pop();\n\n    if (location.pathname.includes('featured')) {\n      location.href = location.origin + pieces.join('/') + '/create';\n    } else {\n      location.href = location.origin + pieces.join('/') + '/featured';\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Settings, {\n    isOpen: isOpenSettings,\n    onClose: onCloseSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), __jsx(BackgroundVideo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), __jsx(ColorBox, {\n    as: Flex,\n    flexDirection: \"column\",\n    borderColor: Number(chainId) === 137 ? \"blue.500\" : Number(chainId) === 1 ? \"blue.500\" : Number(chainId) === 56 ? \"orange\" : \"orange.500\",\n    borderWidth: isTestnet ? '.5rem' : '.5rem',\n    minHeight: \"100vh\",\n    maxHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    flexShrink: 0,\n    overflowX: \"auto\",\n    p: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 0,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(IconButton, {\n    m: 2,\n    icon: \"settings\",\n    variant: \"ghost\",\n    onClick: onOpenSettings,\n    \"aria-label\": \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), __jsx(IconButton, {\n    m: 2,\n    icon: \"search\",\n    variant: \"ghost\",\n    onClick: handleSearchClick,\n    \"aria-label\": \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    display: showOrHideNavLink('create'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: () => {\n      handleNewNavigationClick('create');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Create\"), __jsx(Button, {\n    display: showOrHideNavLink('vaults'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: () => {\n      handleNewNavigationClick('vaults');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"My Vaults\"), __jsx(Button, {\n    display: showOrHideNavLink('featured'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: () => {\n      handleNewNavigationClick('featured');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Featured\"), __jsx(Button, {\n    display: showOrHideNavLink('newest'),\n    m: 2,\n    variant: \"ghost\",\n    onClick: () => {\n      handleNewNavigationClick('newest');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Newest\")), __jsx(Account, {\n    triedToEagerConnect: triedToEagerConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })), __jsx(Stack, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    mt: isTestnet ? '5rem' : '4.5rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, typeof account !== 'string' ? !triedToEagerConnect || (typeof chainId === 'number' ? chainId !== ChainId.MAINNET : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, __jsx(WalletConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })) : // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n  [chainId == 1 ? Coval : chainId == 80001 ? CovalTestMatic : chainId == 137 ? CovalMatic : chainId == 100 ? CovalxDai : chainId == 56 ? CovalBSC : chainId == 250 ? CovalFantom : CovalTest, firstToken ? firstToken.symbol != 'Coval' ? firstToken : null : null, secondToken ? secondToken.symbol != 'Coval' ? secondToken : null : null].filter(token => token).filter(token => !(token === null || token === void 0 ? void 0 : token.equals(WETH[token.chainId]))).map(token => __jsx(Box, {\n    key: token === null || token === void 0 ? void 0 : token.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, __jsx(TokenBalance, {\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  })))), __jsx(Flex, {\n    id: \"shannon-container\",\n    flexGrow: 1,\n    direction: \"column\",\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, children), __jsx(Flex, {\n    minHeight: \"1.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, typeof chainId === 'number'\n  /*&& chainId !== 1*/\n  ? __jsx(LightMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, __jsx(Badge, {\n    variant: \"solid\",\n    variantColor: chainId == 137 || chainId == 1 ? 'blue' : chainId == Number(56) ? 'orange' : 'orange'\n    /*isTestnet ? 'blue' : undefined*/\n    ,\n    fontSize: \"1rem\",\n    style: {\n      borderTopLeftRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"On \", CHAIN_ID_NAMES[chainId].toLowerCase(), \" (click to swap networks)\"))) : null), transactions.length > 0 && __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    m: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, transactions.filter(transaction => transaction.chainId === chainId).map(({\n    hash\n  }) => __jsx(Box, {\n    key: hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, __jsx(TransactionToast, {\n    hash: hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  })))), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    left: 100,\n    alignItems: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }), __jsx(Stack, {\n    position: \"absolute\",\n    bottom: 1,\n    right: 1,\n    p: isTestnet ? '1.5rem' : '1rem',\n    alignItems: \"flex-end\",\n    spacing: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, __jsx(Button // as=\"a\"\n  // {...{\n  //   href:\n  //     location.origin +\n  //     '/buy?chain=' +\n  //     chainId +\n  //     '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  //   target: '_blank',\n  //   rel: 'noopener noreferrer',\n  // }}\n  , {\n    onClick: () => {\n      initializeTransak(account, 'COVAL');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, \"Buy $Coval\"))));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Layout.tsx"],"names":["BackgroundVideo","Flex","IconButton","useDisclosure","Badge","LightMode","Stack","Box","Button","Link","useWeb3React","dynamic","CHAIN_ID_NAMES","useEagerConnect","useQueryParameters","useUSDETHPrice","useTransactions","useFirstToken","useSecondToken","useShowUSD","useNoLayout","ColorBox","Account","TransactionToast","TokenBalance","WETH","ChainId","WalletConnect","QueryParameters","Coval","CovalTest","CovalTestMatic","CovalMatic","CovalxDai","CovalBSC","CovalFantom","transakSDK","Settings","Layout","children","chainId","account","noLayout","setNoLayout","isTestnet","isOpen","isOpenSettings","onOpen","onOpenSettings","onClose","onCloseSettings","firstToken","secondToken","showUSD","setShowUSD","transactions","triedToEagerConnect","queryParameters","requiredChainId","CHAIN","USDETHPrice","transak","initializeTransak","address","coin","apiKey","environment","defaultCryptoCurrency","walletAddress","themeColor","fiatCurrency","email","redirectURL","hostURL","window","location","origin","widgetHeight","widgetWidth","on","ALL_EVENTS","data","console","log","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","close","init","showOrHideNavLink","path","pathname","includes","handleNewNavigationClick","href","handleSearchClick","pieces","split","pop","join","handleNavigationclick","handleNavigationFeaturedclick","Number","MAINNET","symbol","filter","token","equals","map","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","toLowerCase","length","transaction","hash"],"mappings":"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","sourcesContent":["import { ReactNode, useState } from 'react'\nimport BackgroundVideo from './BackgroundVideo'\nimport { Flex, IconButton, useDisclosure, Badge, LightMode, Stack, Box, Button, Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverCloseButton, PopoverBody, Text, Link} from '@chakra-ui/core'\nimport { useWeb3React } from '@web3-react/core'\nimport dynamic from 'next/dynamic'\nimport { CHAIN_ID_NAMES } from '../utils'\nimport { useEagerConnect, useQueryParameters, useUSDETHPrice } from '../hooks'\nimport { useTransactions, useFirstToken, useSecondToken, useShowUSD, useNoLayout } from '../context'\nimport ColorBox from './ColorBox'\nimport Account from './Account'\nimport { TransactionToast } from './TransactionToast'\nimport TokenBalance from './TokenBalance'\nimport { WETH, ChainId, Token } from '@uniswap/sdk'\nimport WalletConnect from './WalletConnect'\nimport { QueryParameters } from '../constants'\nimport { Coval, CovalTest, CovalTestMatic, CovalMatic, CovalxDai, CovalBSC, CovalFantom, DEFAULT_TOKENS } from '../tokens'\nimport Head from 'next/head'\nimport transakSDK from '@transak/transak-sdk'\n\n// import Gun from 'gun';\n// import 'gun/sea'\n// import { GunProvider } from 'react-gun';\n\nconst Settings = dynamic(() => import('./Settings'))\n\nexport default function Layout({ children }: { children: ReactNode}): JSX.Element {\n  const { chainId, account } = useWeb3React()\n  const [noLayout, setNoLayout] = useNoLayout()\n  const isTestnet = typeof chainId === 'number' && chainId !== 1\n\n  const { isOpen: isOpenSettings, onOpen: onOpenSettings, onClose: onCloseSettings } = useDisclosure()\n\n  const [firstToken] = useFirstToken()\n  const [secondToken] = useSecondToken()\n  const [showUSD, setShowUSD] = useShowUSD()\n\n  // const [gun, setGun] = useState(Gun(['https://emblem-gun.herokuapp.com/gun']))\n\n  const [transactions] = useTransactions()\n\n  // automatically try connecting to the injected connector on pageload\n  const triedToEagerConnect = useEagerConnect()\n\n  const queryParameters = useQueryParameters()\n  const requiredChainId = queryParameters[QueryParameters.CHAIN]\n\n  const USDETHPrice = useUSDETHPrice()\n\n  let transak\n  const initializeTransak = (address?: string, coin? : string)=>{\n    transak = new transakSDK({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',  // Your API Key\n      environment: 'PRODUCTION', // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '', // Your customer's wallet address\n      themeColor: '000000', // App theme color\n      fiatCurrency: 'USD', // INR/GBP\n      // fiatAmount: 350,\n      email: '', // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px',\n      // networks: 'matic,bsc,eth,mainnet'\n\n    });\n  \n    // To get all the events\n    transak.on(transak.ALL_EVENTS, (data) => {\n      console.log(data)\n    });\n  \n    // This will trigger when the user marks payment is made.\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, (orderData) => {\n      console.log(orderData);\n      transak.close();\n    });\n  \n    transak.init()\n  }\n\n  const showOrHideNavLink = (path: string)=> {\n    return location.pathname.includes(path) ? 'none': 'block'\n  }\n\n  const handleNewNavigationClick = (path)=>{\n    location.href = location.origin + '/'+path\n  }\n  \n  const handleSearchClick = ()=>{\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    location.href = location.origin + pieces.join('/') + '/search'\n  }\n  \n  const handleNavigationclick = () => {\n    console.log(location.pathname)\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    if (location.pathname.includes('vaultlist')) {\n      location.href = location.origin + pieces.join('/') + '/create'\n    } else {\n      location.href = location.origin + pieces.join('/') + '/vaultlist'\n    }\n  }\n\n  const handleNavigationFeaturedclick = ()=>{\n    let pieces = location.pathname.split('/')\n    pieces.pop()\n    if (location.pathname.includes('featured')) {\n      location.href = location.origin + pieces.join('/') + '/create'\n    } else {\n      location.href = location.origin + pieces.join('/') + '/featured'\n    }\n  }\n  return (\n    <>\n      <Settings isOpen={isOpenSettings} onClose={onCloseSettings} />\n      <BackgroundVideo />\n      <ColorBox\n        as={Flex}\n        flexDirection=\"column\"\n        borderColor={\n          Number(chainId) === 137 ? \"blue.500\" : \n          Number(chainId) === 1? \"blue.500\" : \n          Number(chainId) === 56? \"orange\" : \n          \"orange.500\"}\n        borderWidth={isTestnet ? '.5rem' : '.5rem'}\n        minHeight=\"100vh\"\n        maxHeight=\"100vh\"\n      >\n        <Flex justifyContent=\"space-between\" flexShrink={0} overflowX=\"auto\" p=\"1rem\">\n          <Stack spacing={0} direction=\"row\">\n            <IconButton m={2} icon=\"settings\" variant=\"ghost\" onClick={onOpenSettings} aria-label=\"Settings\" />\n            <IconButton m={2} icon=\"search\" variant=\"ghost\" onClick={handleSearchClick} aria-label=\"Search\" />\n            <Button display={showOrHideNavLink('create')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('create')}}>\n              Create\n            </Button>\n            <Button display={showOrHideNavLink('vaults')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('vaults')}}>\n              My Vaults\n            </Button>\n            <Button display={showOrHideNavLink('featured')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('featured')}}>\n              Featured\n            </Button>\n            <Button display={showOrHideNavLink('newest')} m={2} variant=\"ghost\" onClick={()=>{handleNewNavigationClick('newest')}}>\n              Newest\n            </Button>\n            {/* <Button m={2} variant=\"ghost\" onClick={handleNavigationclick}>\n              {' '}\n              {location.pathname.includes('vaultlist') ? 'Create' : 'Wallet (Vaults)'}\n            </Button>\n            <Button m={2} variant=\"ghost\" onClick={handleNavigationFeaturedclick}>\n              {' '}\n              {location.pathname.includes('featured') ? 'Create' : 'Featured Vaults'}\n            </Button>\n            <Button m={2} variant=\"ghost\" onClick={handleNavigationFeaturedclick}>\n              {' '}\n              {location.pathname.includes('featured') ? 'Create' : 'Featured Vaults'}\n            </Button> */}\n          </Stack>\n          <Account triedToEagerConnect={triedToEagerConnect} />\n        </Flex>\n\n        <Stack\n          position=\"absolute\"\n          top={0}\n          right={0}\n          m={isTestnet ? '1.5rem' : '1rem'}\n          mt={isTestnet ? '5rem' : '4.5rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n          zIndex={2}\n        >\n          {typeof account !== 'string' ? (\n            !triedToEagerConnect ||\n            (typeof chainId === 'number'\n              ? chainId !== ChainId.MAINNET\n              : typeof requiredChainId === 'number' && requiredChainId !== ChainId.MAINNET) ? null : (\n              <Box>\n                <WalletConnect />\n              </Box>\n            )\n          ) : (\n            // [DEFAULT_TOKENS.filter((tokenrrr) => tokenrrr.chainId == chainId)[0], firstToken, secondToken]\n            [\n              chainId == 1 ? Coval : \n              chainId == 80001 ? CovalTestMatic : \n              chainId == 137 ? CovalMatic : \n              chainId == 100? CovalxDai : \n              chainId == 56 ? CovalBSC :\n              chainId == 250 ? CovalFantom :\n              CovalTest,\n              firstToken ? (firstToken.symbol != 'Coval' ? firstToken : null) : null,\n              secondToken ? (secondToken.symbol != 'Coval' ? secondToken : null) : null,\n            ]\n              .filter((token) => token)\n              .filter((token) => !token?.equals(WETH[token.chainId]))\n              .map((token) => (\n                <Box key={token?.address}>\n                  <TokenBalance token={token as Token} />\n                </Box>\n              ))\n          )}\n        </Stack>\n\n        <Flex id=\"shannon-container\" flexGrow={1} direction=\"column\" overflow=\"auto\">\n          {children}\n        </Flex>\n\n        <Flex minHeight=\"1.5rem\">\n          {typeof chainId === 'number' /*&& chainId !== 1*/ ? (\n            <LightMode>\n              <Link href=\"/swap\">\n                <Badge\n                  variant=\"solid\"\n                  variantColor={\n                    chainId == 137 || chainId == 1 ? 'blue' : \n                    chainId == Number(56) ? 'orange':\n                    'orange'/*isTestnet ? 'blue' : undefined*/}\n                  fontSize=\"1rem\"\n                  style={{ borderTopLeftRadius: 0, borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }} >\n                  On {CHAIN_ID_NAMES[chainId].toLowerCase()} (click to swap networks)\n                  {/* (Swap to {chainId == 1 ? 'Matic' : 'Ethereum'}) */}\n                </Badge>\n              </Link>\n            </LightMode>\n          ):null}\n        </Flex>\n\n        {transactions.length > 0 && (\n          <Stack\n            position=\"absolute\"\n            bottom={0}\n            right={0}\n            m={isTestnet ? '1.5rem' : '1rem'}\n            alignItems=\"flex-end\"\n            spacing=\"1rem\"\n            zIndex={2}\n          >\n            {transactions\n              .filter((transaction) => transaction.chainId === chainId)\n              .map(({ hash }) => (\n                <Box key={hash}>\n                  <TransactionToast hash={hash} />\n                </Box>\n              ))}\n          </Stack>\n        )}\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          left={100}\n          alignItems=\"center\"\n          align=\"center\"\n        >\n          {/* <Popover usePortal>\n            <PopoverTrigger>\n            <IconButton size=\"sm\" icon=\"warning-2\" aria-label=''/>\n            </PopoverTrigger>\n            <PopoverContent zIndex={4} width=\"5000px\">\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverBody><Text fontSize=\"xs\">Emblem Vault is experimental. Before purchasing $COVAL or $FUEL tokens, you must ensure that the nature, complexity and risks inherent in the trading of cryptocurrency are suitable for your objectives in light of your circumstances and financial position. Emblem, Emblem Vault, $COVAL, and/or $FUEL shall be under no obligation to purchase or to broker the purchase back from you of your cryptocurrency in circumstances where there is no viable market for the purchase of the same. The products and services presented on this website may only be purchased in jurisdictions in which their marketing and distribution are authorized. Using or Creating Vaults is done at your own risk.</Text></PopoverBody>\n            </PopoverContent>\n          </Popover> */}\n        </Stack>\n\n        <Stack\n          position=\"absolute\"\n          bottom={1}\n          right={1}\n          p={isTestnet ? '1.5rem' : '1rem'}\n          alignItems=\"flex-end\"\n          spacing=\"1rem\"\n        >\n          <Button\n            // as=\"a\"\n            // {...{\n            //   href:\n            //     location.origin +\n            //     '/buy?chain=' +\n            //     chainId +\n            //     '&output=0x3D658390460295FB963f54dC0899cfb1c30776Df&input=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            //   target: '_blank',\n            //   rel: 'noopener noreferrer',\n            // }}\n            onClick={()=>{initializeTransak(account, 'COVAL')}}\n          >\n            Buy $Coval\n          </Button>\n        </Stack>\n      </ColorBox>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}