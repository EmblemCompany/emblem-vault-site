{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { openEditor } from 'doka';\nimport { sub, unsub } from './events';\n\nvar DokaImageEditorModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(DokaImageEditorModal, _React$Component);\n\n  var _super = _createSuper(DokaImageEditorModal);\n\n  function DokaImageEditorModal(props) {\n    var _this;\n\n    _classCallCheck(this, DokaImageEditorModal);\n\n    _this = _super.call(this, props);\n    _this.editor = undefined; // We'll wrap the module in a container so we can use the container as a CSS module target\n\n    _this.el = document.createElement('div');\n    return _this;\n  }\n\n  _createClass(DokaImageEditorModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // add the container\n      document.body.appendChild(this.el);\n      this.el.className = this.props.className; // create editor and proxy events\n\n      var props = _objectSpread({}, this.props);\n\n      this.editor = openEditor(props, this.el);\n      sub(this, props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var props = _objectSpread({}, this.props);\n\n      Object.assign(this.editor, props);\n      sub(this, props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove our modal container\n      document.body.removeChild(this.el);\n      if (!this.editor) return;\n      unsub(this);\n      this.editor = undefined;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.editor.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return DokaImageEditorModal;\n}(React.Component);\n\nexport default DokaImageEditorModal;","map":null,"metadata":{},"sourceType":"module"}