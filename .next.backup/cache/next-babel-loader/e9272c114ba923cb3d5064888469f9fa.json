{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Nft from '../../components/Nft';\nimport Head from 'next/head';\nexport const EMBLEM_API = 'https://api.emblemvault.io';\nexport async function getProductsFromDatabase() {\n  const responce = await fetch(EMBLEM_API + '/ids/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      service: 'evmetadata'\n    }\n  });\n  return await responce.json();\n}\nexport async function getStaticPaths() {\n  const records = await getProductsFromDatabase();\n  console.log(\"Records\", records);\n  const paths = records.map(product => ({\n    params: {\n      id: product.tokenId\n    }\n  })); // fallback: false means pages that donâ€™t have the\n  // correct id will 404.\n\n  return {\n    paths,\n    fallback: true\n  };\n} // params will contain the id for each generated page.\n\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {\n      product: params.id\n    }\n  };\n} // export default function Product({ product }) {\n//   // Render product\n// }\n\nexport default function VaultPage({\n  product\n}) {\n  const {\n    query\n  } = useRouter();\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: product\n  })), __jsx(Nft, null));\n}","map":null,"metadata":{},"sourceType":"module"}