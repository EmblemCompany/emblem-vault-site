{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Button, Flex } from '@chakra-ui/core';\nimport { Contract } from '@ethersproject/contracts';\nimport { useWeb3React } from '@web3-react/core';\n\nvar getContract = function getContract(address, abi, library, account) {\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked());\n};\n\nexport default function Approval(props) {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account;\n\n  var _useState = useState(false),\n      approved = _useState[0],\n      setApproved = _useState[1];\n\n  var _useState2 = useState(null),\n      decimals = _useState2[0],\n      setDecimals = _useState2[1];\n\n  useEffect(function () {\n    checkApproval(props.handler, props.spending, props.library, props.account, props.amount);\n  });\n  return account && !approved ? __jsx(Flex, {\n    w: \"100%\",\n    flexWrap: \"wrap\",\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    backgroundColor: \"#02b402\",\n    color: \"black !important\",\n    fontWeight: \"bold !important\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, props.label)) : null;\n\n  function checkApproval(handler, spending, library, account, amount) {\n    if (amount > 0) {\n      var spendingContract = getContract(spending.address, spending.abi, library, account);\n      spendingContract.decimals().then(function (decimals) {\n        setDecimals(decimals);\n        spendingContract.allowance(account, handler.address).then(function (allowance) {\n          setApproved(allowance >= amount * Math.pow(10, decimals));\n        });\n      });\n    }\n  }\n} // export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n// export default Approval\n\n_s(Approval, \"iC5XhiwhjqSGgIbeP3EvDKjUkGQ=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Approval;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approval\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/partials/Approval.tsx"],"names":["React","useEffect","useState","Button","Flex","Contract","useWeb3React","getContract","address","abi","library","account","getSigner","connectUnchecked","Approval","props","approved","setApproved","decimals","setDecimals","checkApproval","handler","spending","amount","label","spendingContract","then","allowance"],"mappings":";;;;AAAA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAMEC,MANF,EAOEC,IAPF,QASO,iBATP;AAYA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,OAAxB,EAAwC;AAC1D,SAAO,IAAIN,QAAJ,CAAaG,OAAb,EAAsBC,GAAtB,EAA2BC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EAA3B,CAAP;AACD,CAFD;;AAcA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAAA;;AAEvD,sBAAoBT,YAAY,EAAhC;AAAA,MAAQK,OAAR,iBAAQA,OAAR;;AACA,kBAAgCT,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCf,QAAQ,CAAC,IAAD,CAAxC;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,WAAjB;;AAEAlB,EAAAA,SAAS,CAAC,YAAI;AACZmB,IAAAA,aAAa,CAACL,KAAK,CAACM,OAAP,EAAgBN,KAAK,CAACO,QAAtB,EAAgCP,KAAK,CAACL,OAAtC,EAA+CK,KAAK,CAACJ,OAArD,EAA8DI,KAAK,CAACQ,MAApE,CAAb;AACD,GAFQ,CAAT;AAIA,SAAOZ,OAAO,IAAI,CAACK,QAAZ,GACL,MAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAe,IAAA,QAAQ,EAAC,MAAxB;AAA+B,IAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,eAAe,EAAE,SAAzB;AAAoC,IAAA,KAAK,EAAE,kBAA3C;AAA+D,IAAA,UAAU,EAAE,iBAA3E;AAA8F,IAAA,KAAK,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACS,KADT,CADF,CADK,GAMJ,IANH;;AAQA,WAASJ,aAAT,CAAuBC,OAAvB,EAA+DC,QAA/D,EAAwGZ,OAAxG,EAAsHC,OAAtH,EAAoIY,MAApI,EAAoJ;AAClJ,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,UAAIE,gBAAgB,GAAGlB,WAAW,CAACe,QAAQ,CAACd,OAAV,EAAmBc,QAAQ,CAACb,GAA5B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAlC;AACAc,MAAAA,gBAAgB,CAACP,QAAjB,GAA4BQ,IAA5B,CAAiC,UAACR,QAAD,EAAmB;AAClDC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,QAAAA,gBAAgB,CAACE,SAAjB,CAA2BhB,OAA3B,EAAoCU,OAAO,CAACb,OAA5C,EAAqDkB,IAArD,CAA0D,UAACC,SAAD,EAAoB;AAC5EV,UAAAA,WAAW,CAACU,SAAS,IAAIJ,MAAM,YAAG,EAAH,EAASL,QAAT,CAApB,CAAX;AACD,SAFD;AAGD,OALD;AAMH;AACF;AACF,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GAnDwBJ,Q;UAEFR,Y;;;KAFEQ,Q","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport {\n  Box,\n  Image,\n  Text,\n  Link,\n  useColorMode,\n  Button,\n  Flex,\n  PseudoBox\n} from '@chakra-ui/core'\n\nimport {HStack, VStack, Circle } from '@chakra-ui/react'\nimport { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\n\nconst getContract = (address, abi, library, account): any =>{\n  return new Contract(address, abi, library.getSigner(account).connectUnchecked())\n}\n\n\n\ntype AttributesProps = {\n  handler: {address: string, abi: any},\n  spending: {address: string, abi: any},\n  amount: number,\n  label: string,\n  library: any,\n  account: any,\n}\nexport default function Approval(props: AttributesProps) {\n  \n  const { account } = useWeb3React()\n  const [approved, setApproved] = useState(false)\n  const [decimals, setDecimals] = useState(null)\n\n  useEffect(()=>{\n    checkApproval(props.handler, props.spending, props.library, props.account, props.amount)\n  })\n  \n  return account && !approved? (\n    <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n      <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n        {props.label}\n      </Button>\n    </Flex>\n  ): null\n\n  function checkApproval(handler: { address: string; abi: any }, spending: { address: string; abi: any }, library: any, account: any, amount: number) {\n    if (amount > 0) {\n        let spendingContract = getContract(spending.address, spending.abi, library, account)\n        spendingContract.decimals().then((decimals: any) => {\n          setDecimals(decimals)\n          spendingContract.allowance(account, handler.address).then((allowance: any) => {\n            setApproved(allowance >= amount * 10 ** decimals)\n          })\n        })                \n    }\n  }\n}\n// export class Approval extends Component<AttributesProps> {\n//   render() {\n//     let handler = this.props.handler\n//     let spending = this.props.spending\n//     let amount = this.props.amount\n//     let label = this.props.label\n//     let library = this.props.library\n//     let account = this.props.account\n//     let approved = checkApproval(handler, spending, library, account, amount)\n//     return approved? (\n//       <></>\n//     ) : (\n//       <Flex w=\"100%\" flexWrap=\"wrap\" mt={3} >\n//         <Button backgroundColor={\"#02b402\"} color={\"black !important\"} fontWeight={\"bold !important\"} width=\"100%\">\n//           {label}\n//         </Button>\n//       </Flex>\n//     )\n//   }\n// }\n\n// export default Approval\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}