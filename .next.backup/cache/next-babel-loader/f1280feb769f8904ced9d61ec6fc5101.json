{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { abi as HandlerABI } from './abi/handler.json';\nimport { abi as SalesABI } from './abi/sales.json';\nimport { abi as CovalABI } from './abi/coval.json';\nimport { abi as EmblemABI } from './abi/emblem.json';\nimport { abi as NftradeABI } from './abi/nftrade.json';\nimport { abi as ClaimedABI } from './abi/claimed.json';\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json';\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json';\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json';\nimport { abi as ERC721 } from './abi/EmblemVault.json';\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json';\nimport { abi as mintVaultQuoteAbi } from './abi/mintVaultQuoteAbi.json';\nimport xcpJson from './curated/xcp.json';\nexport var BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nexport var COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nexport var isIPFS = process.env.IPFS === 'true';\nexport var isServerSide = false;\nvar API_OVERLOAD = process.env.API_OVERLOAD;\nexport var ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport var DEFAULT_APPROVE_MAX = true;\nexport var DEFAULT_DEADLINE = 60 * 20;\nexport var DEFAULT_SLIPPAGE = 50;\nexport var GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nexport var ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nexport var PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nexport var ZERO = JSBI.BigInt(0);\nexport var MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport var curatedContracts = [{\n  name: \"Rare Pepe\",\n  1: \"0x7E6027a6A84fC1F6Db6782c523EFe62c923e46ff\",\n  \"chain\": \"xcp\",\n  mintable: true,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"This Curated Emblem Vault contains 1 Rare Pepe NFT that was minted on Bitcoin using the Counterparty protocol. Rare Pepes is a collection of 1,774 unique cards with varying designs and rarities that were created by more than 300 artists from 2016 to 2018. \",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false,\n  price: 20000000,\n  attributes: [],\n  allowed: function allowed(data) {\n    return true;\n  },\n  allowedName: function allowedName(asset) {\n    var curatedItemFound = xcpJson[\"Rare Pepe\"].filter(function (item) {\n      return item.name == asset;\n    });\n    return asset && curatedItemFound.length > 0;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"BTC\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses) {\n    return _addresses.filter(function (item) {\n      return item.coin === \"BTC\";\n    });\n  }\n}, {\n  name: \"Emblem Test\",\n  1: \"0xdcFfa2b5cBf288932B009EBA01C8ca772ec6C993\",\n  5: \"0xa7428f3b7752F006890E12F055b0A816F0F18CdD\",\n  \"chain\": \"xcp\",\n  mintable: true,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"Created by Pepe artists Oliver Morris and Zoe Davies, the Emblem Test series of four cards—COMMON, RARE, LEGEND, and EPIC—were made to test Emblem Vault's new curated collection (ERC-1155) contracts. The cards were free and airdropped to Emblem Vault followers in December 2022\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false,\n  price: 20000000,\n  attributes: []\n}, {\n  name: \"Spells of Genesis\",\n  1: \"0xDCA91409018ea80B71d21E818f00e76072969861\",\n  chain: \"xcp\",\n  mintable: false,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false\n}, {\n  name: \"Cursed Ordinal\",\n  1: \"0x769Fdf030A9e176EC8B6D66EFdCB63e8fA69885c\",\n  chain: \"cursedordinalsbtc\",\n  mintable: true,\n  collectionType: \"ERC721\",\n  loadTypes: ['input', 'empty'],\n  description: \"Cursed Ordinals are a collection of unindexed or \\\"bugged\\\" Ordinals not included initially in the Ord Client. \\n\\nWARNING: The inscription number of this Cursed Ordinal may change. Emblem Vault's dynamic vaults will update the metadata of this vault whenever a new Ord Client upgrade is posted and implemented.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-cursed-ordinals.vercel.app/cursedordinalsbtc/balance/\",\n  price: 20000000,\n  attributes: [{\n    \"trait_type\": \"Content Type\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].content_type;\n    }\n  }, {\n    \"trait_type\": \"Ordinal Number\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].name.includes(\"Cursed Ordinal\") ? metadata.values[0].name.replace('Cursed Ordinal', '').trim() : false;\n    }\n  }, {\n    \"trait_type\": \"Collection\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].name.includes(\"Cursed Ordinal\") ? false : \"All:\".concat(metadata.values[0].project);\n    }\n  }, {\n    \"trait_type\": \"Artist\",\n    \"value\": function value(metadata) {\n      var foundArtistTrait = metadata.values.length > 0 && metadata.values[0].traits ? metadata.values[0].traits.filter(function (item) {\n        return item.trait_type === \"artist\";\n      }) : [];\n      return foundArtistTrait.length > 0 ? foundArtistTrait[0].value : false;\n    }\n  }],\n  image: function image(data) {\n    return \"https://image-scaler.vercel.app/image?url=https://cursedordinals.com/content/\".concat(data.inscription_id, \"?size=400\");\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ord-loading1.png\", \"https://emblem.finance/ord-loading2.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [\"https://emblem.finance/ord-error1.png\", \"https://emblem.finance/ord-error2.png\", \"https://emblem.finance/ord-error3.png\", \"https://emblem.finance/ord-error4.png\", \"https://emblem.finance/ord-error5.png\", \"https://emblem.finance/ord-error6.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    return data ? data.content_type != \"application/json\" : false;\n  },\n  allowedName: function allowedName(asset) {\n    var pieces = asset.split(' ');\n    return asset.includes(\"Cursed Ordinal\") && pieces.length === 3 && Number(pieces.reverse()[0]) < 0;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses2) {\n    return _addresses2.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}, {\n  1: \"0x8C3c0274c33f263F0A55d129cFC8eaa3667A9E8b\",\n  name: \"Ethscription\",\n  chain: \"ethscription\",\n  mintable: true,\n  collectionType: \"ERC721\",\n  loadTypes: ['empty'],\n  description: \"Ethscriptions are on-chain digital artifacts stored on the Ethereum blockchain using transaction calldata. LFG!\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-ethscriptions.vercel.app/ethscription/balance/\",\n  price: 20000000,\n  attributes: [{\n    \"trait_type\": \"Collection\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].project ? \"\".concat(metadata.values[0].project) : false;\n    }\n  }, {\n    \"trait_type\": \"Ethscriptions\",\n    \"value\": function value(metadata) {\n      var foundTrait = metadata.values && metadata.values.length > 0 && metadata.values[0].traits && metadata.values[0].traits.length > 0 && metadata.values[0].traits.filter(function (item) {\n        return item.trait_type == \"Ethscriptions\";\n      }).length > 0 ? metadata.values[0].traits.filter(function (item) {\n        return item.trait_type == \"Ethscriptions\";\n      })[0].value : false;\n      return foundTrait;\n    }\n  }],\n  image: function image(data) {\n    return \"https://image-scaler.vercel.app/image2?url=https://eth-script-indexer-eca25c4cf43b.herokuapp.com/api/ethscriptions/\".concat(data.ethscription_number, \"/data\");\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ethscriptions-loading-1.png\", \"https://emblem.finance/ethscriptions-loading-2.png\", \"https://emblem.finance/ethscriptions-loading-3.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    return true;\n  },\n  allowedName: function allowedName(asset) {\n    var pieces = asset.split(' ');\n    return true;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"ETH\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses3) {\n    return _addresses3.filter(function (item) {\n      return item.coin === \"ETH\";\n    });\n  }\n}, {\n  1: \"0x363D0C12eDCAF2C5962110401f651491f58C760a\",\n  name: \"$OXBT\",\n  chain: \"oxbt\",\n  mintable: false,\n  collectionType: \"ERC721a\",\n  loadTypes: ['empty'],\n  description: \"$OXBT is a BRC-20 utility token used to enable artists, creators, & builders on Bitcoin.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/oxbt/\",\n  price: 20000000,\n  attributes: [],\n  image: function image(data) {\n    return \"https://emblem.pro/oxbt.png\";\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/oxbt-loading-1.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (data.balance == 2000) {\n      return true;\n    } else if (data.balance < 2000 && msgCallback) {\n      msgCallback(\"Please load vault with exactly 2000 $OXBT\");\n    }\n\n    return false;\n  },\n  allowedName: function allowedName(asset) {\n    return true;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses4) {\n    return _addresses4.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}, {\n  1: \"0x49aCD1b04702a30fb2cE8522298c299527E31913\",\n  name: \"$ORDI\",\n  chain: \"ordi\",\n  mintable: false,\n  collectionType: \"ERC721a\",\n  loadTypes: ['empty'],\n  description: \"Ordi is the first brc-20, an experiment into fungibility on Bitcoin utilizing ordinal theory and inscriptions.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/ordi/\",\n  price: 20000000,\n  attributes: [],\n  image: function image(data) {\n    return \"https://emblem.pro/ordi.png\";\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ordi-loading-1.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    return true;\n  },\n  allowedName: function allowedName(asset) {\n    var pieces = asset.split(' ');\n    return true;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses5) {\n    return _addresses5.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}];\nexport var curatedAssets = {\n  xcp: xcpJson\n};\nexport var contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    // 1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    1: '0xD0C7304156AF0a4be17352D8ce214222Ec66E8ba',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    5: '0x0349E72c3BFc6232B12FD546a9f9CD1851dD5bDD',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0x322ad0007ff961f253d3818c61d912c89752ec3e',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20'\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164'\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7D1F932B4c2811A70eDfFDD6Ae2EB60e6',\n    5: '0x44aA2ae6a29A1434942EB88cB2eD0Fd1De30de83',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xb8D6eB76dABea5b238e999B3145775E54412B2D2',\n    137: '0x62C505E51800901f4B44Ff1f6eD5348c36D37E28',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1',\n    5: '0x1342F91DC53B6D222614Ad1f981b5683d4653116'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    1: \"0x23859b51117dbFBcdEf5b757028B18d7759a4460\",\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    5: '0xc15235d210c1b1CdA8643a5eA37687E241B031b0',\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135'\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155,\n  mintVaultQuote: {\n    1: \"0xE5dec92911c78069d727a67C85936EDDbc9B02Cf\"\n  },\n  mintVaultQuoteAbi: mintVaultQuoteAbi\n};\nexport var BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180';\nexport var ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport var EMBLEM_API = API_OVERLOAD ? API_OVERLOAD : 'https://api2.emblemvault.io'; //'http://localhost:3001' // \n\nexport var EMBLEM_V2_API = 'http://localhost:3001'; //'https://v2.emblemvault.io' //\n\nexport var SIG_API = 'https://tor-us-signer-coval.vercel.app'; //'http://localhost:3002' //\n\nexport var ORD_API = 'https://api-ord.emblemvault.io/bitcoin/';\nexport var QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nexport var ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/constants.ts"],"names":["JSBI","abi","HandlerABI","SalesABI","CovalABI","EmblemABI","NftradeABI","ClaimedABI","VaultHandlerV8","ClonableFactory","ERC20","ERC721","ERC1155","mintVaultQuoteAbi","xcpJson","BG","light","dark","COLOR","isIPFS","process","env","IPFS","isServerSide","API_OVERLOAD","ADDRESS_ZERO","DEFAULT_APPROVE_MAX","DEFAULT_DEADLINE","DEFAULT_SLIPPAGE","GAS_LIMIT_WHEN_MOCKING","ROUTER_ADDRESS","PERMIT_AND_CALL_ADDRESS","ZERO","BigInt","MAX_UINT256","curatedContracts","name","mintable","collectionType","loadTypes","description","purchaseMethod","showBalance","price","attributes","allowed","data","allowedName","asset","curatedItemFound","filter","item","length","address","addresses","coin","chain","balanceUrl","metadata","values","content_type","includes","replace","trim","project","foundArtistTrait","traits","trait_type","value","image","inscription_id","loading","images","Math","floor","random","placeholder","pieces","split","Number","reverse","foundTrait","ethscription_number","msgCallback","balance","curatedAssets","xcp","contractAddresses","salesFactory","salesAbi","vaultHandler","vaultHandlerAbi","emblemVault","emblemAbi","coval","covalAbi","nftrade","nftradeAbi","claimed","claimedAbi","vaultHandlerV8","vaultHandlerV8Abi","clonableFactoryAbi","erc20Abi","erc721Abi","erc1155Abi","mintVaultQuote","BURN_ADDRESS","ZERO_ADDRESS","EMBLEM_API","EMBLEM_V2_API","SIG_API","ORD_API","QueryParameters","ERC20_BYTES32","constant","inputs","outputs","internalType","type","payable","stateMutability"],"mappings":"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","sourcesContent":["import { JSBI } from '@uniswap/sdk'\nimport { abi as HandlerABI } from './abi/handler.json'\nimport { abi as SalesABI } from './abi/sales.json'\nimport { abi as CovalABI } from './abi/coval.json'\nimport { abi as EmblemABI } from './abi/emblem.json'\nimport { abi as NftradeABI } from './abi/nftrade.json'\nimport { abi as ClaimedABI } from './abi/claimed.json'\nimport { abi as VaultHandlerV8 } from './abi/VaultHandlerV8.json'\nimport { abi as ClonableFactory } from './abi/ClonableFactory.json'\nimport { abi as ERC20 } from './abi/ConfigurableERC20Upgradable.json'\nimport { abi as ERC721 } from './abi/EmblemVault.json'\nimport { abi as ERC1155 } from './abi/ERC1155Upgradable.json'\nimport { abi as mintVaultQuoteAbi } from './abi/mintVaultQuoteAbi.json'\nimport xcpJson from './curated/xcp.json'\n\nexport const BG = { light: 'gray.50', dark: 'gray.900' }\nexport const COLOR = { light: 'black', dark: 'white' }\n\nexport const isIPFS = process.env.IPFS === 'true'\nexport const isServerSide = typeof window === 'undefined'\nconst { API_OVERLOAD } = process.env;\n\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n\nexport const DEFAULT_APPROVE_MAX = true\nexport const DEFAULT_DEADLINE = 60 * 20\nexport const DEFAULT_SLIPPAGE = 50\n\nexport const GAS_LIMIT_WHEN_MOCKING = 500000\n\n// https://uniswap.org/docs/v2/smart-contracts/router02/\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n// https://github.com/NoahZinsmeister/permit-and-call\nexport const PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B'\nexport const ZERO = JSBI.BigInt(0)\nexport const MAX_UINT256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport const curatedContracts = [\n  {\n    name: \"Rare Pepe\",\n    1: \"0x7E6027a6A84fC1F6Db6782c523EFe62c923e46ff\",\n    \"chain\": \"xcp\",\n    mintable: true,\n    collectionType: \"ERC1155\",\n    loadTypes: ['select'],\n    description: \"This Curated Emblem Vault contains 1 Rare Pepe NFT that was minted on Bitcoin using the Counterparty protocol. Rare Pepes is a collection of 1,774 unique cards with varying designs and rarities that were created by more than 300 artists from 2016 to 2018. \",\n    purchaseMethod: 'buyWithQuote',\n    showBalance: false,\n    price: 20000000,\n    attributes: [],\n    allowed: (data: any) => {\n      return true\n    },\n    allowedName: (asset: any) => {\n      let curatedItemFound = xcpJson[\"Rare Pepe\"].filter(item => { return item.name == asset })\n      return asset && curatedItemFound.length > 0\n    },\n    address: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"BTC\" })[0].address\n    },\n    addresses: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"BTC\" })\n    }\n  },\n  {\n    name: \"Emblem Test\",\n    1: \"0xdcFfa2b5cBf288932B009EBA01C8ca772ec6C993\",\n    5: \"0xa7428f3b7752F006890E12F055b0A816F0F18CdD\",\n    \"chain\": \"xcp\",\n    mintable: true,\n    collectionType: \"ERC1155\",\n    loadTypes: ['select'],\n    description: \"Created by Pepe artists Oliver Morris and Zoe Davies, the Emblem Test series of four cards—COMMON, RARE, LEGEND, and EPIC—were made to test Emblem Vault's new curated collection (ERC-1155) contracts. The cards were free and airdropped to Emblem Vault followers in December 2022\",\n    purchaseMethod: 'buyWithQuote',\n    showBalance: false,\n    price: 20000000,\n    attributes: [\n\n    ]\n  },\n  {\n    name: \"Spells of Genesis\",\n    1: \"0xDCA91409018ea80B71d21E818f00e76072969861\",\n    chain: \"xcp\",\n    mintable: false,\n    collectionType: \"ERC1155\",\n    loadTypes: ['select'],\n    description: \"\",\n    purchaseMethod: 'buyWithQuote',\n    showBalance: false\n  },\n  {\n    name: \"Cursed Ordinal\",\n    1: \"0x769Fdf030A9e176EC8B6D66EFdCB63e8fA69885c\",\n    chain: \"cursedordinalsbtc\",\n    mintable: true,\n    collectionType: \"ERC721\",\n    loadTypes: ['input', 'empty'],\n    description: `Cursed Ordinals are a collection of unindexed or \"bugged\" Ordinals not included initially in the Ord Client. \\n\\nWARNING: The inscription number of this Cursed Ordinal may change. Emblem Vault's dynamic vaults will update the metadata of this vault whenever a new Ord Client upgrade is posted and implemented.`,\n    purchaseMethod: 'buyWithQuote',\n    showBalance: true,\n    balanceUrl: \"https://serverless-cursed-ordinals.vercel.app/cursedordinalsbtc/balance/\",\n    price: 20000000,\n    attributes: [\n      {\n        \"trait_type\": \"Content Type\",\n        \"value\": (metadata: MetaData) => {\n          return metadata.values[0].content_type\n        }\n      },\n      {\n        \"trait_type\": \"Ordinal Number\",\n        \"value\": (metadata: MetaData) => {\n          return metadata.values[0].name.includes(\"Cursed Ordinal\") ? metadata.values[0].name.replace('Cursed Ordinal', '').trim() : false;\n        }\n      },\n      {\n        \"trait_type\": \"Collection\",\n        \"value\": (metadata: MetaData) => {\n          return metadata.values[0].name.includes(\"Cursed Ordinal\") ? false : `All:${metadata.values[0].project}`;\n        }\n      },\n      {\n        \"trait_type\": \"Artist\",\n        \"value\": (metadata: MetaData) => {\n          let foundArtistTrait = metadata.values.length > 0 && metadata.values[0].traits ? metadata.values[0].traits.filter((item: { trait_type: string; }) => { return item.trait_type === \"artist\"; }) : [];\n          return foundArtistTrait.length > 0 ? foundArtistTrait[0].value : false;\n        }\n      }\n    ],\n    image: (data: any) => {\n      return `https://image-scaler.vercel.app/image?url=https://cursedordinals.com/content/${data.inscription_id}?size=400`\n    },\n    loading: () => {\n      let images = [\n        \"https://emblem.finance/ord-loading1.png\",\n        \"https://emblem.finance/ord-loading2.png\"\n      ]\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    placeholder: () => {\n      let images = [\n        \"https://emblem.finance/ord-error1.png\",\n        \"https://emblem.finance/ord-error2.png\",\n        \"https://emblem.finance/ord-error3.png\",\n        \"https://emblem.finance/ord-error4.png\",\n        \"https://emblem.finance/ord-error5.png\",\n        \"https://emblem.finance/ord-error6.png\"\n      ]\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    allowed: (data: any) => {\n      return data ? data.content_type != \"application/json\" : false\n    },\n    allowedName: (asset: any) => {\n      let pieces = asset.split(' ')\n      return asset.includes(\"Cursed Ordinal\") && pieces.length === 3 && Number(pieces.reverse()[0]) < 0\n    },\n    address: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })[0].address\n    },\n    addresses: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })\n    }\n  },\n  {\n    1: \"0x8C3c0274c33f263F0A55d129cFC8eaa3667A9E8b\",\n    name: \"Ethscription\",    \n    chain: \"ethscription\",\n    mintable: true,\n    collectionType: \"ERC721\",\n    loadTypes: ['empty'],\n    description: `Ethscriptions are on-chain digital artifacts stored on the Ethereum blockchain using transaction calldata. LFG!`,\n    purchaseMethod: 'buyWithQuote',\n    showBalance: true,\n    balanceUrl: \"https://serverless-ethscriptions.vercel.app/ethscription/balance/\",\n    price: 20000000,\n    attributes: [\n      {\n        \"trait_type\": \"Collection\",\n        \"value\": (metadata: MetaData) => {\n          return metadata.values[0].project ? `${metadata.values[0].project}` : false;\n        }\n      },\n      {\n        \"trait_type\": \"Ethscriptions\",\n        \"value\": (metadata: MetaData) => {\n          let foundTrait = metadata.values && metadata.values.length > 0 && metadata.values[0].traits && metadata.values[0].traits.length > 0 && metadata.values[0].traits.filter((item: { trait_type: string; }) => { return item.trait_type == \"Ethscriptions\" }).length > 0 ? metadata.values[0].traits.filter((item: { trait_type: string; }) => { return item.trait_type == \"Ethscriptions\" })[0].value : false\n          return foundTrait\n        }\n      }\n    ],\n    image: (data: any) => {\n      return `https://image-scaler.vercel.app/image2?url=https://eth-script-indexer-eca25c4cf43b.herokuapp.com/api/ethscriptions/${data.ethscription_number}/data`\n    },\n    loading: () => {\n      let images = [\n        \"https://emblem.finance/ethscriptions-loading-1.png\",\n        \"https://emblem.finance/ethscriptions-loading-2.png\",\n        \"https://emblem.finance/ethscriptions-loading-3.png\",\n      ]\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    placeholder: () => {\n      let images: any[] = []\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    allowed: (data: any) => {\n      return true\n    },\n    allowedName: (asset: any) => {\n      let pieces = asset.split(' ')\n      return true\n    },\n    address: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"ETH\" })[0].address\n    },\n    addresses: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"ETH\" })\n    }\n  },\n  {\n    1: \"0x363D0C12eDCAF2C5962110401f651491f58C760a\",\n    name: \"$OXBT\",    \n    chain: \"oxbt\",\n    mintable: false,\n    collectionType: \"ERC721a\",\n    loadTypes: ['empty'],\n    description: `$OXBT is a BRC-20 utility token used to enable artists, creators, & builders on Bitcoin.`,\n    purchaseMethod: 'buyWithQuote',\n    showBalance: true,\n    balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/oxbt/\",\n    price: 20000000,\n    attributes: [\n    ],\n    image: (data: any) => {\n      return `https://emblem.pro/oxbt.png`\n    },\n    loading: () => {\n      let images = [\n        \"https://emblem.finance/oxbt-loading-1.png\",\n      ]\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    placeholder: () => {\n      let images: any[] = []\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    allowed: (data: any, msgCallback=null) => {\n      if (data.balance == 2000) {\n        return true\n      } else if(data.balance < 2000 && msgCallback) {\n        msgCallback(\"Please load vault with exactly 2000 $OXBT\")\n      }\n      return false\n    },\n    allowedName: (asset: any) => {      \n      return true\n    },\n    address: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })[0].address\n    },\n    addresses: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })\n    }\n  },\n  {\n    1: \"0x49aCD1b04702a30fb2cE8522298c299527E31913\",\n    name: \"$ORDI\",    \n    chain: \"ordi\",\n    mintable: false,\n    collectionType: \"ERC721a\",\n    loadTypes: ['empty'],\n    description: `Ordi is the first brc-20, an experiment into fungibility on Bitcoin utilizing ordinal theory and inscriptions.`,\n    purchaseMethod: 'buyWithQuote',\n    showBalance: true,\n    balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/ordi/\",\n    price: 20000000,\n    attributes: [\n    ],\n    image: (data: any) => {\n      return `https://emblem.pro/ordi.png`\n    },\n    loading: () => {\n      let images = [\n        \"https://emblem.finance/ordi-loading-1.png\",\n      ]\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    placeholder: () => {\n      let images: any[] = []\n      return images[Math.floor(Math.random() * images.length)] // Random image\n    },\n    allowed: (data: any) => {\n      return true\n    },\n    allowedName: (asset: any) => {\n      let pieces = asset.split(' ')\n      return true\n    },\n    address: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })[0].address\n    },\n    addresses: (addresses: any[]) => {\n      return addresses.filter(item => { return item.coin === \"TAP\" })\n    }\n  }\n]\nexport const curatedAssets = {\n  xcp: xcpJson\n}\nexport const contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: SalesABI,\n  vaultHandler: {\n    // 1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    1: '0xD0C7304156AF0a4be17352D8ce214222Ec66E8ba',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    5: '0x0349E72c3BFc6232B12FD546a9f9CD1851dD5bDD',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0x322ad0007ff961f253d3818c61d912c89752ec3e',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20',\n  },\n  vaultHandlerAbi: HandlerABI,\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164',\n  },\n  emblemAbi: EmblemABI,\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7D1F932B4c2811A70eDfFDD6Ae2EB60e6',\n    5: '0x44aA2ae6a29A1434942EB88cB2eD0Fd1De30de83',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: CovalABI,\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: NftradeABI,\n  claimed: {\n    1: '0xb8D6eB76dABea5b238e999B3145775E54412B2D2',\n    137: '0x62C505E51800901f4B44Ff1f6eD5348c36D37E28',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1',\n    5: '0x1342F91DC53B6D222614Ad1f981b5683d4653116'\n  },\n  claimedAbi: ClaimedABI,\n  vaultHandlerV8: {\n    1: \"0x23859b51117dbFBcdEf5b757028B18d7759a4460\",\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    5: '0xc15235d210c1b1CdA8643a5eA37687E241B031b0',\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135',\n  },\n  vaultHandlerV8Abi: VaultHandlerV8,\n  clonableFactoryAbi: ClonableFactory,\n  erc20Abi: ERC20,\n  erc721Abi: ERC721,\n  erc1155Abi: ERC1155,\n  mintVaultQuote: {\n    1: \"0xE5dec92911c78069d727a67C85936EDDbc9B02Cf\"\n  },\n  mintVaultQuoteAbi: mintVaultQuoteAbi\n}\n\nexport const BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180'\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\"\nexport const EMBLEM_API = API_OVERLOAD? API_OVERLOAD : 'https://api2.emblemvault.io' //'http://localhost:3001' // \nexport const EMBLEM_V2_API =  'http://localhost:3001' //'https://v2.emblemvault.io' //\nexport const SIG_API = 'https://tor-us-signer-coval.vercel.app' //'http://localhost:3002' //\nexport const ORD_API = 'https://api-ord.emblemvault.io/bitcoin/'\n\nexport enum QueryParameters {\n  INPUT = 'input',\n  OUTPUT = 'output',\n  CHAIN = 'chain',\n}\n\ninterface MetaData {\n  collection_name?: string;\n  animation_url?: any;\n  _id?: any;\n  name?: any;\n  ipfs?: any;\n  tokenId?: any;\n  description?: any;\n  image?: any;\n  image_ipfs?: any;\n  ownedImage?: any;\n  addresses?: any;\n  network?: any;\n  attributes?: any[];\n  values?: any;\n  totalValue?: number;\n  private?: boolean;\n  external_url?: string;\n  status?: string;\n  claimedBy?: string;\n  youtube_url?: string;\n  ciphertextV2?: string;\n  live?: boolean;\n  nonce?: number;\n  signature?: string;\n  to?: string,\n  is_dynamic?: boolean,\n  platform?: string,\n  curation_status?: string,\n  origDescription?: string,\n  sealed?: boolean,\n  collectionAddress?: string,\n  targetAsset?: any,\n  targetContract?: any,\n  mintLocked?: boolean,\n  mintLockBlock?: number,\n  curatedIds?: any,\n  ownedBy?: string,\n  fraud?: boolean,\n  batchId?: number;\n  batch_index?: number;\n  success?: boolean,\n  coverImage?: string,\n  move_targetContract?: any,\n  move_targetAsset?: any,\n  project?: any,\n  background_color?: string,\n}\n\nexport const ERC20_BYTES32 = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n]\n"]},"metadata":{},"sourceType":"module"}