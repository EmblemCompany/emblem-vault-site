{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Swap.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useReducer, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useWeb3React } from '@web3-react/core';\nimport { parseUnits } from '@ethersproject/units';\nimport { Contract } from '@ethersproject/contracts';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { TradeType, TokenAmount, JSBI, WETH, Percent } from '@uniswap/sdk';\nimport { hexDataSlice } from '@ethersproject/bytes';\nimport { id } from '@ethersproject/hash';\nimport { defaultAbiCoder } from '@ethersproject/abi';\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json';\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\nimport { Stack, Button, Text } from '@chakra-ui/core';\nimport AmountInput from '../components/AmountInput';\nimport TokenSelect from '../components/TokenSelect';\nimport { useTokenByAddressAndAutomaticallyAdd } from '../tokens';\nimport { useRoute, useContract, useQueryParameters, useTrade, useUSDTokenPrice } from '../hooks';\nimport { useTokenBalance, useTokenAllowance, useETHBalance } from '../data';\nimport { ROUTER_ADDRESS, ZERO, MAX_UINT256, QueryParameters, PERMIT_AND_CALL_ADDRESS, GAS_LIMIT_WHEN_MOCKING } from '../constants';\nimport { useSlippage, useDeadline, useApproveMax, useTransactions, useFirstToken, useSecondToken, useShowUSD } from '../context';\nimport TradeSummary from '../components/TradeSummary';\nimport { canPermit, gatherPermit } from '../permits';\nimport { modifyUrlObjectForIPFS } from '../utils';\nvar Field;\n\n(function (Field) {\n  Field[Field[\"INPUT\"] = 0] = \"INPUT\";\n  Field[Field[\"OUTPUT\"] = 1] = \"OUTPUT\";\n})(Field || (Field = {}));\n\nfunction initializeSentenceState(partialState) {\n  var _partialState$Field$I, _partialState$Field$O, _ref;\n\n  return _ref = {\n    independentField: partialState.independentField,\n    value: ''\n  }, _defineProperty(_ref, Field.INPUT, {\n    address: (_partialState$Field$I = partialState[Field.INPUT]) === null || _partialState$Field$I === void 0 ? void 0 : _partialState$Field$I.address\n  }), _defineProperty(_ref, Field.OUTPUT, {\n    address: (_partialState$Field$O = partialState[Field.OUTPUT]) === null || _partialState$Field$O === void 0 ? void 0 : _partialState$Field$O.address\n  }), _ref;\n}\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[ActionType[\"SELECT_TOKEN\"] = 0] = \"SELECT_TOKEN\";\n  ActionType[ActionType[\"TYPE\"] = 1] = \"TYPE\";\n  ActionType[ActionType[\"RESET\"] = 2] = \"RESET\";\n})(ActionType || (ActionType = {}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ActionType.SELECT_TOKEN:\n      {\n        var _ref2 = action.payload,\n            _field = _ref2.field,\n            address = _ref2.address;\n\n        if (!!address && address === state[_field === Field.INPUT ? Field.OUTPUT : Field.INPUT].address) {\n          var _objectSpread2;\n\n          return _objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {\n            value: ''\n          }, _defineProperty(_objectSpread2, Field.INPUT, state[Field.OUTPUT]), _defineProperty(_objectSpread2, Field.OUTPUT, state[Field.INPUT]), _objectSpread2));\n        } else {\n          return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, _field, {\n            address: address\n          }));\n        }\n      }\n\n    case ActionType.TYPE:\n      {\n        var _ref3 = action.payload,\n            _field2 = _ref3.field,\n            value = _ref3.value;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          independentField: _field2,\n          value: value\n        });\n      }\n\n    case ActionType.RESET:\n      {\n        var _ref4 = action.payload,\n            _field3 = _ref4.field;\n        return initializeSentenceState({\n          independentField: _field3\n        });\n      }\n  }\n}\n\nfunction SwapText(_ref5) {\n  var children = _ref5.children,\n      rest = _objectWithoutProperties(_ref5, [\"children\"]);\n\n  return __jsx(Text, _extends({\n    fontSize: \"3xl\",\n    lineHeight: 1,\n    py: \"0.3rem\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }), children);\n}\n\n_c = SwapText;\nexport default function Swap(_ref6) {\n  _s();\n\n  var _useReducer2, _tokens, _USDPrices, _USDAmountsFormatted, _formatted, _tokens$Field$INPUT, _tokens$Field$INPUT2, _ref7, _tokens$Field$INPUT3, _formatted$Field$INPU, _tokens$Field$INPUT4, _tokens$Field$INPUT5, _tokens$Field$INPUT6, _tokens$Field$OUTPUT, _tokens$Field$OUTPUT2;\n\n  var buy = _ref6.buy;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query,\n      pathname = _useRouter.pathname,\n      replace = _useRouter.replace;\n\n  var queryParameters = useQueryParameters();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useApproveMax = useApproveMax(),\n      _useApproveMax2 = _slicedToArray(_useApproveMax, 1),\n      approveMax = _useApproveMax2[0];\n\n  var _useDeadline = useDeadline(),\n      _useDeadline2 = _slicedToArray(_useDeadline, 1),\n      deadlineDelta = _useDeadline2[0];\n\n  var _useSlippage = useSlippage(),\n      _useSlippage2 = _slicedToArray(_useSlippage, 1),\n      slippage = _useSlippage2[0];\n\n  var _useTransactions = useTransactions(),\n      _useTransactions2 = _slicedToArray(_useTransactions, 2),\n      addTransaction = _useTransactions2[1].addTransaction; // reducer state\n\n\n  var _useReducer = useReducer(reducer, (_useReducer2 = {\n    independentField: buy ? Field.OUTPUT : Field.INPUT\n  }, _defineProperty(_useReducer2, Field.INPUT, {\n    address: queryParameters[QueryParameters.INPUT]\n  }), _defineProperty(_useReducer2, Field.OUTPUT, {\n    address: queryParameters[QueryParameters.OUTPUT]\n  }), _useReducer2), initializeSentenceState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var independentField = state.independentField,\n      value = state.value,\n      tokenAddresses = _objectWithoutProperties(state, [\"independentField\", \"value\"]); // derived state\n\n\n  var dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  var tradeType = independentField === Field.INPUT ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT; // sdk tokens\n\n  var tokens = (_tokens = {}, _defineProperty(_tokens, Field.INPUT, useTokenByAddressAndAutomaticallyAdd(tokenAddresses[Field.INPUT].address)), _defineProperty(_tokens, Field.OUTPUT, useTokenByAddressAndAutomaticallyAdd(tokenAddresses[Field.OUTPUT].address)), _tokens); // keep global token state in sync\n\n  var _useFirstToken = useFirstToken(),\n      _useFirstToken2 = _slicedToArray(_useFirstToken, 2),\n      setFirstToken = _useFirstToken2[1];\n\n  var _useSecondToken = useSecondToken(),\n      _useSecondToken2 = _slicedToArray(_useSecondToken, 2),\n      setSecondToken = _useSecondToken2[1];\n\n  useEffect(function () {\n    setFirstToken(tokens[buy ? Field.OUTPUT : Field.INPUT]);\n    setSecondToken(tokens[buy ? Field.INPUT : Field.OUTPUT]);\n  }); // sdk route\n\n  var _useRoute = useRoute(tokens[Field.INPUT], tokens[Field.OUTPUT]),\n      _useRoute2 = _slicedToArray(_useRoute, 2),\n      naiveRoute = _useRoute2[0],\n      allPairs = _useRoute2[1]; // parse user value\n\n\n  var parsed = {};\n\n  if (value !== '' && value !== '.' && tokens[independentField]) {\n    try {\n      var _tokens$independentFi;\n\n      var valueParsed = parseUnits(value, (_tokens$independentFi = tokens[independentField]) === null || _tokens$independentFi === void 0 ? void 0 : _tokens$independentFi.decimals).toString();\n\n      if (valueParsed !== '0') {\n        parsed[independentField] = new TokenAmount(tokens[independentField], valueParsed);\n      }\n    } catch (_unused) {// should only fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    }\n  } // sdk trade\n\n\n  var trade = useTrade(tokens[Field.INPUT], tokens[Field.OUTPUT], allPairs, parsed[independentField], tradeType);\n  var route = trade ? trade.route : naiveRoute; // populate the parsed dependent field\n\n  if (trade) {\n    if (tradeType === TradeType.EXACT_INPUT) {\n      parsed[dependentField] = trade.minimumAmountOut(new Percent(\"\".concat(slippage), \"\".concat(10000)));\n    } else {\n      parsed[dependentField] = trade.maximumAmountIn(new Percent(\"\".concat(slippage), \"\".concat(10000)));\n    }\n  } // usd values\n\n\n  var _useShowUSD = useShowUSD(),\n      _useShowUSD2 = _slicedToArray(_useShowUSD, 1),\n      showUSD = _useShowUSD2[0];\n\n  var USDPrices = (_USDPrices = {}, _defineProperty(_USDPrices, Field.INPUT, useUSDTokenPrice(tokens[Field.INPUT])), _defineProperty(_USDPrices, Field.OUTPUT, useUSDTokenPrice(tokens[Field.OUTPUT])), _USDPrices);\n  var USDAmountsFormatted = (_USDAmountsFormatted = {}, _defineProperty(_USDAmountsFormatted, Field.INPUT, parsed[Field.INPUT] && USDPrices[Field.INPUT] ? parsed[Field.INPUT].multiply(USDPrices[Field.INPUT]).toFixed(2, {\n    groupSeparator: ','\n  }) : undefined), _defineProperty(_USDAmountsFormatted, Field.OUTPUT, parsed[Field.OUTPUT] && USDPrices[Field.OUTPUT] ? parsed[Field.OUTPUT].multiply(USDPrices[Field.OUTPUT]).toFixed(2, {\n    groupSeparator: ','\n  }) : undefined), _USDAmountsFormatted); // calculate the formatted values from the parsed\n\n  var formatted = (_formatted = {}, _defineProperty(_formatted, independentField, value), _defineProperty(_formatted, dependentField, parsed[dependentField] ? parsed[dependentField].toSignificant(4, {\n    groupSeparator: ','\n  }) : ''), _formatted); // reset when the network changes\n\n  useEffect(function () {\n    if (typeof chainId === 'number') {\n      return function () {\n        dispatch({\n          type: ActionType.RESET,\n          payload: {\n            field: buy ? Field.OUTPUT : Field.INPUT\n          }\n        });\n      };\n    }\n  }, [chainId, buy]); // clear url params\n\n  useEffect(function () {\n    if (Object.keys(query).length > 0) {\n      var _modifyUrlObjectForIP = modifyUrlObjectForIPFS(pathname),\n          href = _modifyUrlObjectForIP.href,\n          as = _modifyUrlObjectForIP.as;\n\n      replace(href, as, {\n        shallow: true\n      });\n    }\n  }); // get input allowance for validation purposes\n\n  var _useTokenAllowance = useTokenAllowance(tokens[Field.INPUT], account, ROUTER_ADDRESS),\n      _allowance = _useTokenAllowance.data;\n\n  var allowance = ((_tokens$Field$INPUT = tokens[Field.INPUT]) === null || _tokens$Field$INPUT === void 0 ? void 0 : _tokens$Field$INPUT.equals(WETH[tokens[Field.INPUT].chainId])) ? new TokenAmount(WETH[tokens[Field.INPUT].chainId], MAX_UINT256) : _allowance; // get permitAndCall allowance if the input token supports permit\n\n  var _useTokenAllowance2 = useTokenAllowance(canPermit(tokens[Field.INPUT]) ? tokens[Field.INPUT] : undefined, account, PERMIT_AND_CALL_ADDRESS),\n      permitAndCallAllowance = _useTokenAllowance2.data; // get input balance for validation purposes\n\n\n  var ETHBalance = useETHBalance(account);\n\n  var _balance = useTokenBalance(tokens[Field.INPUT], account);\n\n  var balance = ((_tokens$Field$INPUT2 = tokens[Field.INPUT]) === null || _tokens$Field$INPUT2 === void 0 ? void 0 : _tokens$Field$INPUT2.equals(WETH[(_ref7 = tokens[Field.INPUT]) === null || _ref7 === void 0 ? void 0 : _ref7.chainId])) ? ETHBalance.data : _balance.data; // compute flags for warning states\n\n  var warning = !!trade && Number.parseFloat(trade.slippage.toSignificant(2)) >= 5;\n  var danger = !!trade && Number.parseFloat(trade.slippage.toSignificant(2)) >= 10; // compute validation flags\n\n  var isInvalidBalance = parsed[Field.INPUT] && balance ? JSBI.greaterThan(parsed[Field.INPUT].raw, balance.raw) : false;\n  var isInvalidRoute = route === null && value.length > 0;\n  var isInvalidTrade = route && parsed[independentField] ? !!!trade : false; // compute flag for whether maxing is allowed\n\n  var canMax = !((_tokens$Field$INPUT3 = tokens[Field.INPUT]) === null || _tokens$Field$INPUT3 === void 0 ? void 0 : _tokens$Field$INPUT3.equals(WETH[tokens[Field.INPUT].chainId])) && !isInvalidRoute && ((_formatted$Field$INPU = formatted[Field.INPUT]) === null || _formatted$Field$INPU === void 0 ? void 0 : _formatted$Field$INPU.length) === 0 && !!balance && JSBI.greaterThan(balance.raw, ZERO); // function to perform the swap\n\n  var _useState = useState(false),\n      swapping = _useState[0],\n      setSwapping = _useState[1];\n\n  var inputToken = useContract((_tokens$Field$INPUT4 = tokens[Field.INPUT]) === null || _tokens$Field$INPUT4 === void 0 ? void 0 : _tokens$Field$INPUT4.address, IERC20.abi, true);\n  var router = useContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, true);\n\n  function swap() {\n    return _swap.apply(this, arguments);\n  }\n\n  function _swap() {\n    _swap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var innerSwap, _innerSwap, deadline, approved, mockGas, permit, tryToManuallyApprove;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _innerSwap = function _innerSwap3() {\n                _innerSwap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(deadline) {\n                  var mockGas,\n                      permit,\n                      routerFunctionNames,\n                      routerArguments,\n                      value,\n                      _ref12,\n                      routerFunctionName,\n                      permitAndCall,\n                      _iterator,\n                      _step,\n                      _loop,\n                      _ret,\n                      _iterator2,\n                      _step2,\n                      _loop2,\n                      _ret2,\n                      _args3 = arguments;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          mockGas = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n                          permit = _args3.length > 2 ? _args3[2] : undefined;\n                          // eslint-disable-line @typescript-eslint/no-explicit-any\n                          value = 0;\n\n                          if ((trade === null || trade === void 0 ? void 0 : trade.tradeType) === TradeType.EXACT_INPUT) {\n                            if (tokens[Field.INPUT].equals(WETH[tokens[Field.INPUT].chainId])) {\n                              routerFunctionNames = ['swapExactETHForTokens', 'swapExactETHForTokensSupportingFeeOnTransferTokens'];\n                              routerArguments = [\"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                              value = \"0x\".concat(parsed[Field.INPUT].raw.toString(16));\n                            } else if (tokens[Field.OUTPUT].equals(WETH[tokens[Field.OUTPUT].chainId])) {\n                              routerFunctionNames = ['swapExactTokensForETH', 'swapExactTokensForETHSupportingFeeOnTransferTokens'];\n                              routerArguments = [\"0x\".concat(parsed[Field.INPUT].raw.toString(16)), \"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                            } else {\n                              routerFunctionNames = ['swapExactTokensForTokens', 'swapExactTokensForTokensSupportingFeeOnTransferTokens'];\n                              routerArguments = [\"0x\".concat(parsed[Field.INPUT].raw.toString(16)), \"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                            }\n                          } else {\n                            if (tokens[Field.INPUT].equals(WETH[tokens[Field.INPUT].chainId])) {\n                              routerFunctionNames = ['swapETHForExactTokens'];\n                              routerArguments = [\"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                              value = \"0x\".concat(parsed[Field.INPUT].raw.toString(16));\n                            } else if (tokens[Field.OUTPUT].equals(WETH[tokens[Field.OUTPUT].chainId])) {\n                              routerFunctionNames = ['swapTokensForExactETH'];\n                              routerArguments = [\"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), \"0x\".concat(parsed[Field.INPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                            } else {\n                              routerFunctionNames = ['swapTokensForExactTokens'];\n                              routerArguments = [\"0x\".concat(parsed[Field.OUTPUT].raw.toString(16)), \"0x\".concat(parsed[Field.INPUT].raw.toString(16)), route.path.map(function (token) {\n                                return token.address;\n                              }), account, deadline];\n                            }\n                          } // we have an approve tx pending\n\n\n                          if (!mockGas) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          // because we can't estimate gas, as it will fail b/c of the approve, we are forced to use the first function\n                          routerFunctionName = routerFunctionNames[0];\n                          _context3.next = 8;\n                          return (_ref12 = router)[routerFunctionName].apply(_ref12, _toConsumableArray(routerArguments).concat([{\n                            value: value,\n                            gasLimit: GAS_LIMIT_WHEN_MOCKING\n                          }]))[\"catch\"](function (error) {\n                            if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                              console.log(\"\".concat(routerFunctionName, \" failed with a mocked gas limit.\"), error);\n                            }\n\n                            throw error;\n                          });\n\n                        case 8:\n                          return _context3.abrupt(\"return\", _context3.sent);\n\n                        case 9:\n                          if (!permit) {\n                            _context3.next = 32;\n                            break;\n                          }\n\n                          permitAndCall = new Contract(PERMIT_AND_CALL_ADDRESS, ['function permitAndCall(address token, uint256 value, bytes4 permitSelector, bytes calldata permitData, bytes4 routerFunctionSelector, bytes calldata routerFunctionData)'], library.getSigner(account).connectUnchecked()); // try to get a gas limit for each function name in turn\n\n                          _iterator = _createForOfIteratorHelper(routerFunctionNames);\n                          _context3.prev = 12;\n                          _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                            var _permitAndCall$estima;\n\n                            var routerFunctionName, routerFunctionFragment, routerFunctionSelector, permitAndCallArguments, gasLimit;\n                            return _regeneratorRuntime.wrap(function _loop$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                    routerFunctionName = _step.value;\n                                    routerFunctionFragment = router[\"interface\"].fragments.filter(function (_ref13) {\n                                      var name = _ref13.name;\n                                      return name === routerFunctionName;\n                                    })[0];\n                                    routerFunctionSelector = hexDataSlice(id(\"\".concat(routerFunctionName, \"(\").concat(routerFunctionFragment === null || routerFunctionFragment === void 0 ? void 0 : routerFunctionFragment.inputs.map(function (_ref14) {\n                                      var type = _ref14.type;\n                                      return type;\n                                    }).join(','), \")\")), 0, 4);\n                                    permitAndCallArguments = [tokens[Field.INPUT].address, \"0x\".concat(parsed[Field.INPUT].raw.toString(16)), permit.permitSelector, permit.permitData, routerFunctionSelector, defaultAbiCoder.encode(routerFunctionFragment.inputs, routerArguments)];\n                                    _context.next = 6;\n                                    return (_permitAndCall$estima = permitAndCall.estimateGas).permitAndCall.apply(_permitAndCall$estima, permitAndCallArguments.concat([{\n                                      value: value\n                                    }])).then(function (gasLimit) {\n                                      return gasLimit.mul(105).div(100);\n                                    })[\"catch\"](function (error) {\n                                      console.log(\"estimateGas failed for \".concat(routerFunctionName, \" via permitAndCall.\"), error);\n                                    });\n\n                                  case 6:\n                                    gasLimit = _context.sent;\n\n                                    if (!BigNumber.isBigNumber(gasLimit)) {\n                                      _context.next = 12;\n                                      break;\n                                    }\n\n                                    _context.next = 10;\n                                    return permitAndCall.permitAndCall.apply(permitAndCall, permitAndCallArguments.concat([{\n                                      value: value,\n                                      gasLimit: gasLimit\n                                    }]))[\"catch\"](function (error) {\n                                      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                                        console.log(\"\".concat(routerFunctionName, \" failed via permitAndCall.\"), error);\n                                      }\n\n                                      throw error;\n                                    });\n\n                                  case 10:\n                                    _context.t0 = _context.sent;\n                                    return _context.abrupt(\"return\", {\n                                      v: _context.t0\n                                    });\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _loop);\n                          });\n\n                          _iterator.s();\n\n                        case 15:\n                          if ((_step = _iterator.n()).done) {\n                            _context3.next = 22;\n                            break;\n                          }\n\n                          return _context3.delegateYield(_loop(), \"t0\", 17);\n\n                        case 17:\n                          _ret = _context3.t0;\n\n                          if (!(typeof _ret === \"object\")) {\n                            _context3.next = 20;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", _ret.v);\n\n                        case 20:\n                          _context3.next = 15;\n                          break;\n\n                        case 22:\n                          _context3.next = 27;\n                          break;\n\n                        case 24:\n                          _context3.prev = 24;\n                          _context3.t1 = _context3[\"catch\"](12);\n\n                          _iterator.e(_context3.t1);\n\n                        case 27:\n                          _context3.prev = 27;\n\n                          _iterator.f();\n\n                          return _context3.finish(27);\n\n                        case 30:\n                          // if we're here, it means all estimateGas calls failed\n                          console.log(routerFunctionNames.length === 1 ? \"If you're trying to swap a token that takes a transfer fee, you must specify an exact input amount.\" : \"If you're trying to swap a token that takes a transfer fee, ensure your slippage tolerance is higher than the fee.\");\n                          throw Error();\n\n                        case 32:\n                          // try to get a gas limit for each function name in turn\n                          _iterator2 = _createForOfIteratorHelper(routerFunctionNames);\n                          _context3.prev = 33;\n                          _loop2 = /*#__PURE__*/_regeneratorRuntime.mark(function _loop2() {\n                            var _estimateGas;\n\n                            var routerFunctionName, gasLimit, _ref15;\n\n                            return _regeneratorRuntime.wrap(function _loop2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    routerFunctionName = _step2.value;\n                                    _context2.next = 3;\n                                    return (_estimateGas = router.estimateGas)[routerFunctionName].apply(_estimateGas, _toConsumableArray(routerArguments).concat([{\n                                      value: value\n                                    }])).then(function (gasLimit) {\n                                      return gasLimit.mul(105).div(100);\n                                    })[\"catch\"](function (error) {\n                                      console.log(\"estimateGas failed for \".concat(routerFunctionName, \".\"), error);\n                                    });\n\n                                  case 3:\n                                    gasLimit = _context2.sent;\n\n                                    if (!BigNumber.isBigNumber(gasLimit)) {\n                                      _context2.next = 9;\n                                      break;\n                                    }\n\n                                    _context2.next = 7;\n                                    return (_ref15 = router)[routerFunctionName].apply(_ref15, _toConsumableArray(routerArguments).concat([{\n                                      value: value,\n                                      gasLimit: gasLimit\n                                    }]))[\"catch\"](function (error) {\n                                      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                                        console.log(\"\".concat(routerFunctionName, \" failed.\"), error);\n                                      }\n\n                                      throw error;\n                                    });\n\n                                  case 7:\n                                    _context2.t0 = _context2.sent;\n                                    return _context2.abrupt(\"return\", {\n                                      v: _context2.t0\n                                    });\n\n                                  case 9:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _loop2);\n                          });\n\n                          _iterator2.s();\n\n                        case 36:\n                          if ((_step2 = _iterator2.n()).done) {\n                            _context3.next = 43;\n                            break;\n                          }\n\n                          return _context3.delegateYield(_loop2(), \"t2\", 38);\n\n                        case 38:\n                          _ret2 = _context3.t2;\n\n                          if (!(typeof _ret2 === \"object\")) {\n                            _context3.next = 41;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", _ret2.v);\n\n                        case 41:\n                          _context3.next = 36;\n                          break;\n\n                        case 43:\n                          _context3.next = 48;\n                          break;\n\n                        case 45:\n                          _context3.prev = 45;\n                          _context3.t3 = _context3[\"catch\"](33);\n\n                          _iterator2.e(_context3.t3);\n\n                        case 48:\n                          _context3.prev = 48;\n\n                          _iterator2.f();\n\n                          return _context3.finish(48);\n\n                        case 51:\n                          // if we're here, it means all estimateGas calls failed\n                          console.log(routerFunctionNames.length === 1 ? \"If you're trying to swap a token that takes a transfer fee, you must specify an exact input amount.\" : \"If you're trying to swap a token that takes a transfer fee, ensure your slippage tolerance is higher than the fee.\");\n                          throw Error();\n\n                        case 53:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee, null, [[12, 24, 27, 30], [33, 45, 48, 51]]);\n                }));\n                return _innerSwap.apply(this, arguments);\n              };\n\n              innerSwap = function _innerSwap2(_x) {\n                return _innerSwap.apply(this, arguments);\n              };\n\n              setSwapping(true);\n              deadline = Math.floor(Date.now() / 1000) + deadlineDelta;\n              approved = JSBI.greaterThanOrEqual(allowance.raw, parsed[Field.INPUT].raw);\n              mockGas = false;\n\n              if (approved) {\n                _context4.next = 20;\n                break;\n              }\n\n              tryToManuallyApprove = true; // attempt to gather a permit signature where possible\n\n              if (!canPermit(tokens[Field.INPUT])) {\n                _context4.next = 17;\n                break;\n              }\n\n              if (!(permitAndCallAllowance && JSBI.greaterThanOrEqual(permitAndCallAllowance.raw, parsed[Field.INPUT].raw))) {\n                _context4.next = 15;\n                break;\n              }\n\n              approved = true;\n              tryToManuallyApprove = false;\n              permit = {\n                permitSelector: '0x00000000',\n                permitData: '0x'\n              };\n              _context4.next = 17;\n              break;\n\n            case 15:\n              _context4.next = 17;\n              return gatherPermit(account, deadline, approveMax, tokens[Field.INPUT], library).then(function (gatheredPermit) {\n                approved = true;\n                tryToManuallyApprove = false;\n                permit = gatheredPermit;\n              })[\"catch\"](function (error) {\n                // if the error code is 4001 (EIP-1193 user rejected request), we don't want to try a manual approve\n                if ((error === null || error === void 0 ? void 0 : error.code) === 4001) {\n                  tryToManuallyApprove = false;\n                } else {\n                  console.log(\"permit failed.\", error);\n                }\n              });\n\n            case 17:\n              if (!tryToManuallyApprove) {\n                _context4.next = 20;\n                break;\n              }\n\n              _context4.next = 20;\n              return inputToken.approve(ROUTER_ADDRESS, \"0x\".concat((approveMax ? MAX_UINT256 : parsed[Field.INPUT].raw).toString(16))).then(function (_ref10) {\n                var hash = _ref10.hash;\n                addTransaction(chainId, hash);\n                approved = true;\n                mockGas = true;\n              })[\"catch\"](function (error) {\n                if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                  console.log(\"approve failed.\", error);\n                }\n              });\n\n            case 20:\n              if (!approved) {\n                _context4.next = 24;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", innerSwap(deadline, mockGas, permit).then(function (_ref11) {\n                var hash = _ref11.hash;\n                addTransaction(chainId, hash);\n                dispatch({\n                  type: ActionType.TYPE,\n                  payload: {\n                    field: independentField,\n                    value: ''\n                  }\n                });\n                setSwapping(false);\n              }) // we don't do anything with the error here, innerSwap is responsible for handling it\n              [\"catch\"](function () {\n                setSwapping(false);\n              }));\n\n            case 24:\n              setSwapping(false);\n\n            case 25:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _swap.apply(this, arguments);\n  }\n\n  return __jsx(Stack, {\n    direction: \"column\",\n    align: \"center\",\n    spacing: \"6rem\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    px: \"2.5rem\",\n    py: \"8rem\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"1rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }\n  }, __jsx(SwapText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 9\n    }\n  }, \"I want to\"), !!!trade ? __jsx(Link, _extends({}, modifyUrlObjectForIPFS({\n    pathname: buy ? '/sell' : '/buy',\n    query: _objectSpread(_objectSpread({}, ((_tokens$Field$INPUT5 = tokens[Field.INPUT]) === null || _tokens$Field$INPUT5 === void 0 ? void 0 : _tokens$Field$INPUT5.address) ? _defineProperty({}, QueryParameters.INPUT, (_tokens$Field$INPUT6 = tokens[Field.INPUT]) === null || _tokens$Field$INPUT6 === void 0 ? void 0 : _tokens$Field$INPUT6.address) : {}), ((_tokens$Field$OUTPUT = tokens[Field.OUTPUT]) === null || _tokens$Field$OUTPUT === void 0 ? void 0 : _tokens$Field$OUTPUT.address) ? _defineProperty({}, QueryParameters.OUTPUT, (_tokens$Field$OUTPUT2 = tokens[Field.OUTPUT]) === null || _tokens$Field$OUTPUT2 === void 0 ? void 0 : _tokens$Field$OUTPUT2.address) : {})\n  }), {\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    as: \"a\",\n    variant: \"ghost\",\n    variantColor: buy ? 'green' : 'red',\n    p: \"0.5rem\",\n    mt: \"-0.2rem\",\n    fontSize: \"3xl\",\n    lineHeight: 1,\n    height: \"min-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, buy ? 'Buy' : 'Sell')) : __jsx(Button, {\n    variant: \"solid\",\n    variantColor: !warning ? buy ? 'green' : 'red' : 'yellow',\n    p: \"0.75rem\",\n    mt: \"-0.45rem\",\n    fontSize: \"3xl\",\n    lineHeight: 1,\n    height: \"min-content\",\n    leftIcon: !warning ? undefined : !danger ? 'warning-2' : 'not-allowed',\n    isDisabled: !account || isInvalidBalance || isInvalidTrade,\n    isLoading: swapping,\n    cursor: warning ? 'not-allowed' : 'pointer',\n    onClick: swap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 11\n    }\n  }, buy ? 'Buy' : 'Sell'), trade && independentField === (buy ? Field.INPUT : Field.OUTPUT) ? __jsx(SwapText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 11\n    }\n  }, buy ? 'at least' : 'at most') : null, __jsx(AmountInput, {\n    controlled: independentField === (buy ? Field.OUTPUT : Field.INPUT),\n    isDisabled: showUSD || swapping,\n    isInvalid: isInvalidTrade || !buy && isInvalidBalance,\n    value: showUSD && USDAmountsFormatted[buy ? Field.OUTPUT : Field.INPUT] ? \"$\".concat(USDAmountsFormatted[buy ? Field.OUTPUT : Field.INPUT]) : formatted[buy ? Field.OUTPUT : Field.INPUT],\n    onChange: function onChange(value) {\n      dispatch({\n        type: ActionType.TYPE,\n        payload: {\n          field: buy ? Field.OUTPUT : Field.INPUT,\n          value: value\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }\n  }), !buy && canMax ? __jsx(Button, {\n    size: \"sm\",\n    mt: \"0.3rem\",\n    onClick: function onClick() {\n      dispatch({\n        type: ActionType.TYPE,\n        payload: {\n          field: Field.INPUT,\n          value: balance === null || balance === void 0 ? void 0 : balance.toExact()\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 11\n    }\n  }, \"Max\") : null, __jsx(TokenSelect, {\n    tokenAddress: tokenAddresses[buy ? Field.OUTPUT : Field.INPUT].address,\n    isInvalid: isInvalidRoute,\n    isDisabled: swapping,\n    onAddressSelect: function onAddressSelect(address) {\n      dispatch({\n        type: ActionType.SELECT_TOKEN,\n        payload: {\n          field: buy ? Field.OUTPUT : Field.INPUT,\n          address: address\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }\n  }), __jsx(SwapText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 9\n    }\n  }, buy ? 'with' : 'for', trade && independentField === (buy ? Field.OUTPUT : Field.INPUT) ? buy ? ' at most' : ' at least' : ''), __jsx(AmountInput, {\n    controlled: independentField === (buy ? Field.INPUT : Field.OUTPUT),\n    isDisabled: showUSD || swapping,\n    isInvalid: isInvalidTrade || buy && isInvalidBalance,\n    value: showUSD && USDAmountsFormatted[buy ? Field.INPUT : Field.OUTPUT] ? \"$\".concat(USDAmountsFormatted[buy ? Field.INPUT : Field.OUTPUT]) : formatted[buy ? Field.INPUT : Field.OUTPUT],\n    onChange: function onChange(value) {\n      dispatch({\n        type: ActionType.TYPE,\n        payload: {\n          field: buy ? Field.INPUT : Field.OUTPUT,\n          value: value\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 9\n    }\n  }), buy && canMax ? __jsx(Button, {\n    size: \"sm\",\n    mt: \"0.3rem\",\n    onClick: function onClick() {\n      dispatch({\n        type: ActionType.TYPE,\n        payload: {\n          field: Field.INPUT,\n          value: balance === null || balance === void 0 ? void 0 : balance.toExact()\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 11\n    }\n  }, \"Max\") : null, __jsx(TokenSelect, {\n    tokenAddress: tokenAddresses[buy ? Field.INPUT : Field.OUTPUT].address,\n    isInvalid: isInvalidRoute,\n    isDisabled: swapping,\n    onAddressSelect: function onAddressSelect(address) {\n      dispatch({\n        type: ActionType.SELECT_TOKEN,\n        payload: {\n          field: buy ? Field.INPUT : Field.OUTPUT,\n          address: address\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 9\n    }\n  }), __jsx(SwapText, {\n    fontSize: \"3xl\",\n    lineHeight: 1,\n    pt: \"0.3rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }\n  }, \".\")), __jsx(TradeSummary, {\n    route: route,\n    trade: trade,\n    warning: warning,\n    danger: danger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Swap, \"sGcrzGVPLm6kxDnEyn+gjgWzxUc=\", false, function () {\n  return [useRouter, useQueryParameters, useWeb3React, useApproveMax, useDeadline, useSlippage, useTransactions, useTokenByAddressAndAutomaticallyAdd, useTokenByAddressAndAutomaticallyAdd, useFirstToken, useSecondToken, useRoute, useTrade, useShowUSD, useUSDTokenPrice, useUSDTokenPrice, useTokenAllowance, useTokenAllowance, useETHBalance, useTokenBalance, useContract, useContract];\n});\n\n_c2 = Swap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SwapText\");\n$RefreshReg$(_c2, \"Swap\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Swap.tsx"],"names":["useReducer","useState","useEffect","useRouter","Link","useWeb3React","parseUnits","Contract","BigNumber","TradeType","TokenAmount","JSBI","WETH","Percent","hexDataSlice","id","defaultAbiCoder","IERC20","abi","IUniswapV2Router02ABI","Stack","Button","Text","AmountInput","TokenSelect","useTokenByAddressAndAutomaticallyAdd","useRoute","useContract","useQueryParameters","useTrade","useUSDTokenPrice","useTokenBalance","useTokenAllowance","useETHBalance","ROUTER_ADDRESS","ZERO","MAX_UINT256","QueryParameters","PERMIT_AND_CALL_ADDRESS","GAS_LIMIT_WHEN_MOCKING","useSlippage","useDeadline","useApproveMax","useTransactions","useFirstToken","useSecondToken","useShowUSD","TradeSummary","canPermit","gatherPermit","modifyUrlObjectForIPFS","Field","initializeSentenceState","partialState","independentField","value","INPUT","address","OUTPUT","ActionType","reducer","state","action","type","SELECT_TOKEN","payload","field","TYPE","RESET","SwapText","children","rest","Swap","buy","query","pathname","replace","queryParameters","account","chainId","library","approveMax","deadlineDelta","slippage","addTransaction","dispatch","tokenAddresses","dependentField","tradeType","EXACT_INPUT","EXACT_OUTPUT","tokens","setFirstToken","setSecondToken","naiveRoute","allPairs","parsed","valueParsed","decimals","toString","trade","route","minimumAmountOut","maximumAmountIn","showUSD","USDPrices","USDAmountsFormatted","multiply","toFixed","groupSeparator","undefined","formatted","toSignificant","Object","keys","length","href","as","shallow","_allowance","data","allowance","equals","permitAndCallAllowance","ETHBalance","_balance","balance","warning","Number","parseFloat","danger","isInvalidBalance","greaterThan","raw","isInvalidRoute","isInvalidTrade","canMax","swapping","setSwapping","inputToken","router","swap","innerSwap","deadline","mockGas","permit","routerFunctionNames","routerArguments","path","map","token","routerFunctionName","gasLimit","error","code","console","log","permitAndCall","getSigner","connectUnchecked","routerFunctionFragment","fragments","filter","name","routerFunctionSelector","inputs","join","permitAndCallArguments","permitSelector","permitData","encode","estimateGas","then","mul","div","isBigNumber","Error","Math","floor","Date","now","approved","greaterThanOrEqual","tryToManuallyApprove","gatheredPermit","approve","hash","toExact"],"mappings":"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","sourcesContent":["import { useReducer, useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from '@ethersproject/units'\nimport { PayableOverrides, Contract } from '@ethersproject/contracts'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TradeType, TokenAmount, JSBI, WETH, Percent, Token, Route, Fraction } from '@uniswap/sdk'\nimport { hexDataSlice } from '@ethersproject/bytes'\nimport { id } from '@ethersproject/hash'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport IERC20 from '@uniswap/v2-core/build/IERC20.json'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { Stack, Button, Text, BoxProps } from '@chakra-ui/core'\n\nimport AmountInput from '../components/AmountInput'\nimport TokenSelect from '../components/TokenSelect'\nimport { useTokenByAddressAndAutomaticallyAdd } from '../tokens'\nimport { useRoute, useContract, useQueryParameters, useTrade, useUSDTokenPrice } from '../hooks'\nimport { useTokenBalance, useTokenAllowance, useETHBalance } from '../data'\nimport {\n  ROUTER_ADDRESS,\n  ZERO,\n  MAX_UINT256,\n  QueryParameters,\n  PERMIT_AND_CALL_ADDRESS,\n  GAS_LIMIT_WHEN_MOCKING,\n} from '../constants'\nimport {\n  useSlippage,\n  useDeadline,\n  useApproveMax,\n  useTransactions,\n  useFirstToken,\n  useSecondToken,\n  useShowUSD,\n} from '../context'\nimport TradeSummary from '../components/TradeSummary'\nimport { canPermit, gatherPermit, Permit } from '../permits'\nimport { modifyUrlObjectForIPFS } from '../utils'\n\ninterface ErrorWithCode extends Error {\n  code?: number\n}\n\nenum Field {\n  INPUT,\n  OUTPUT,\n}\n\ninterface SentenceState {\n  independentField: Field\n  value: string\n  [Field.INPUT]: {\n    address: string | undefined\n  }\n  [Field.OUTPUT]: {\n    address: string | undefined\n  }\n}\n\nfunction initializeSentenceState(\n  partialState: Pick<SentenceState, 'independentField'> & Partial<Pick<SentenceState, Field.INPUT | Field.OUTPUT>>\n): SentenceState {\n  return {\n    independentField: partialState.independentField,\n    value: '',\n    [Field.INPUT]: {\n      address: partialState[Field.INPUT]?.address,\n    },\n    [Field.OUTPUT]: {\n      address: partialState[Field.OUTPUT]?.address,\n    },\n  }\n}\n\nenum ActionType {\n  SELECT_TOKEN,\n  TYPE,\n  RESET,\n}\n\ninterface ActionPayload {\n  [ActionType.SELECT_TOKEN]: {\n    field: Field\n    address: string\n  }\n  [ActionType.TYPE]: {\n    field: Field\n    value: string\n  }\n  [ActionType.RESET]: {\n    field: Field\n  }\n}\n\nfunction reducer(\n  state: SentenceState,\n  action: {\n    type: ActionType\n    payload: ActionPayload[ActionType]\n  }\n): SentenceState {\n  switch (action.type) {\n    case ActionType.SELECT_TOKEN: {\n      const { field, address } = action.payload as ActionPayload[ActionType.SELECT_TOKEN]\n      if (!!address && address === state[field === Field.INPUT ? Field.OUTPUT : Field.INPUT].address) {\n        return {\n          ...state,\n          value: '',\n          [Field.INPUT]: state[Field.OUTPUT],\n          [Field.OUTPUT]: state[Field.INPUT],\n        }\n      } else {\n        return {\n          ...state,\n          [field]: { address },\n        }\n      }\n    }\n    case ActionType.TYPE: {\n      const { field, value } = action.payload as ActionPayload[ActionType.TYPE]\n      return {\n        ...state,\n        independentField: field,\n        value,\n      }\n    }\n    case ActionType.RESET: {\n      const { field } = action.payload as ActionPayload[ActionType.RESET]\n      return initializeSentenceState({ independentField: field })\n    }\n  }\n}\n\nfunction SwapText({ children, ...rest }: BoxProps): JSX.Element {\n  return (\n    <Text fontSize=\"3xl\" lineHeight={1} py=\"0.3rem\" {...rest}>\n      {children}\n    </Text>\n  )\n}\n\nexport default function Swap({ buy }: { buy: boolean }): JSX.Element {\n  const { query, pathname, replace } = useRouter()\n\n  const queryParameters = useQueryParameters()\n\n  const { account, chainId, library } = useWeb3React()\n\n  const [approveMax] = useApproveMax()\n  const [deadlineDelta] = useDeadline()\n  const [slippage] = useSlippage()\n  const [, { addTransaction }] = useTransactions()\n\n  // reducer state\n  const [state, dispatch] = useReducer(\n    reducer,\n    {\n      independentField: buy ? Field.OUTPUT : Field.INPUT,\n      [Field.INPUT]: {\n        address: queryParameters[QueryParameters.INPUT],\n      },\n      [Field.OUTPUT]: {\n        address: queryParameters[QueryParameters.OUTPUT],\n      },\n    },\n    initializeSentenceState\n  )\n  const { independentField, value, ...tokenAddresses } = state\n\n  // derived state\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n  const tradeType = independentField === Field.INPUT ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT\n\n  // sdk tokens\n  const tokens = {\n    [Field.INPUT]: useTokenByAddressAndAutomaticallyAdd(tokenAddresses[Field.INPUT].address),\n    [Field.OUTPUT]: useTokenByAddressAndAutomaticallyAdd(tokenAddresses[Field.OUTPUT].address),\n  }\n\n  // keep global token state in sync\n  const [, setFirstToken] = useFirstToken()\n  const [, setSecondToken] = useSecondToken()\n  useEffect(() => {\n    setFirstToken(tokens[buy ? Field.OUTPUT : Field.INPUT])\n    setSecondToken(tokens[buy ? Field.INPUT : Field.OUTPUT])\n  })\n\n  // sdk route\n  const [naiveRoute, allPairs] = useRoute(tokens[Field.INPUT], tokens[Field.OUTPUT])\n\n  // parse user value\n  const parsed: { [field: number]: TokenAmount } = {}\n  if (value !== '' && value !== '.' && tokens[independentField]) {\n    try {\n      const valueParsed = parseUnits(value, tokens[independentField]?.decimals).toString()\n      if (valueParsed !== '0') {\n        parsed[independentField] = new TokenAmount(tokens[independentField] as Token, valueParsed)\n      }\n    } catch {\n      // should only fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    }\n  }\n\n  // sdk trade\n  const trade = useTrade(tokens[Field.INPUT], tokens[Field.OUTPUT], allPairs, parsed[independentField], tradeType)\n\n  const route = trade ? trade.route : naiveRoute\n\n  // populate the parsed dependent field\n  if (trade) {\n    if (tradeType === TradeType.EXACT_INPUT) {\n      parsed[dependentField] = trade.minimumAmountOut(new Percent(`${slippage}`, `${10000}`))\n    } else {\n      parsed[dependentField] = trade.maximumAmountIn(new Percent(`${slippage}`, `${10000}`))\n    }\n  }\n\n  // usd values\n  const [showUSD] = useShowUSD()\n  const USDPrices = {\n    [Field.INPUT]: useUSDTokenPrice(tokens[Field.INPUT]),\n    [Field.OUTPUT]: useUSDTokenPrice(tokens[Field.OUTPUT]),\n  }\n  const USDAmountsFormatted = {\n    [Field.INPUT]:\n      parsed[Field.INPUT] && USDPrices[Field.INPUT]\n        ? parsed[Field.INPUT].multiply(USDPrices[Field.INPUT] as Fraction).toFixed(2, { groupSeparator: ',' })\n        : undefined,\n    [Field.OUTPUT]:\n      parsed[Field.OUTPUT] && USDPrices[Field.OUTPUT]\n        ? parsed[Field.OUTPUT].multiply(USDPrices[Field.OUTPUT] as Fraction).toFixed(2, { groupSeparator: ',' })\n        : undefined,\n  }\n\n  // calculate the formatted values from the parsed\n  const formatted = {\n    [independentField]: value,\n    [dependentField]: parsed[dependentField] ? parsed[dependentField].toSignificant(4, { groupSeparator: ',' }) : '',\n  }\n\n  // reset when the network changes\n  useEffect(() => {\n    if (typeof chainId === 'number') {\n      return (): void => {\n        dispatch({\n          type: ActionType.RESET,\n          payload: { field: buy ? Field.OUTPUT : Field.INPUT },\n        })\n      }\n    }\n  }, [chainId, buy])\n\n  // clear url params\n  useEffect(() => {\n    if (Object.keys(query).length > 0) {\n      const { href, as } = modifyUrlObjectForIPFS(pathname)\n      replace(href, as, { shallow: true })\n    }\n  })\n\n  // get input allowance for validation purposes\n  const { data: _allowance } = useTokenAllowance(tokens[Field.INPUT], account, ROUTER_ADDRESS)\n  const allowance = tokens[Field.INPUT]?.equals(WETH[(tokens[Field.INPUT] as Token).chainId])\n    ? new TokenAmount(WETH[(tokens[Field.INPUT] as Token).chainId], MAX_UINT256)\n    : _allowance\n\n  // get permitAndCall allowance if the input token supports permit\n  const { data: permitAndCallAllowance } = useTokenAllowance(\n    canPermit(tokens[Field.INPUT]) ? tokens[Field.INPUT] : undefined,\n    account,\n    PERMIT_AND_CALL_ADDRESS\n  )\n\n  // get input balance for validation purposes\n  const ETHBalance = useETHBalance(account)\n  const _balance = useTokenBalance(tokens[Field.INPUT], account)\n  const balance = tokens[Field.INPUT]?.equals(WETH[(tokens[Field.INPUT] as Token)?.chainId])\n    ? ETHBalance.data\n    : _balance.data\n\n  // compute flags for warning states\n  const warning = !!trade && Number.parseFloat(trade.slippage.toSignificant(2)) >= 5\n  const danger = !!trade && Number.parseFloat(trade.slippage.toSignificant(2)) >= 10\n\n  // compute validation flags\n  const isInvalidBalance =\n    parsed[Field.INPUT] && balance ? JSBI.greaterThan(parsed[Field.INPUT].raw, balance.raw) : false\n  const isInvalidRoute = route === null && value.length > 0\n  const isInvalidTrade = route && parsed[independentField] ? !!!trade : false\n\n  // compute flag for whether maxing is allowed\n  const canMax =\n    !tokens[Field.INPUT]?.equals(WETH[(tokens[Field.INPUT] as Token).chainId]) &&\n    !isInvalidRoute &&\n    formatted[Field.INPUT]?.length === 0 &&\n    !!balance &&\n    JSBI.greaterThan(balance.raw, ZERO)\n\n  // function to perform the swap\n  const [swapping, setSwapping] = useState(false)\n  const inputToken = useContract(tokens[Field.INPUT]?.address, IERC20.abi, true)\n  const router = useContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, true)\n  async function swap(): Promise<void> {\n    setSwapping(true)\n\n    async function innerSwap(deadline: number, mockGas = false, permit?: Permit): Promise<{ hash: string }> {\n      let routerFunctionNames: string[]\n      let routerArguments: any[] // eslint-disable-line @typescript-eslint/no-explicit-any\n      let value: Required<PayableOverrides>['value'] = 0\n\n      if (trade?.tradeType === TradeType.EXACT_INPUT) {\n        if ((tokens[Field.INPUT] as Token).equals(WETH[(tokens[Field.INPUT] as Token).chainId])) {\n          routerFunctionNames = ['swapExactETHForTokens', 'swapExactETHForTokensSupportingFeeOnTransferTokens']\n          routerArguments = [\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n          value = `0x${parsed[Field.INPUT].raw.toString(16)}`\n        } else if ((tokens[Field.OUTPUT] as Token).equals(WETH[(tokens[Field.OUTPUT] as Token).chainId])) {\n          routerFunctionNames = ['swapExactTokensForETH', 'swapExactTokensForETHSupportingFeeOnTransferTokens']\n          routerArguments = [\n            `0x${parsed[Field.INPUT].raw.toString(16)}`,\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n        } else {\n          routerFunctionNames = ['swapExactTokensForTokens', 'swapExactTokensForTokensSupportingFeeOnTransferTokens']\n          routerArguments = [\n            `0x${parsed[Field.INPUT].raw.toString(16)}`,\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n        }\n      } else {\n        if ((tokens[Field.INPUT] as Token).equals(WETH[(tokens[Field.INPUT] as Token).chainId])) {\n          routerFunctionNames = ['swapETHForExactTokens']\n          routerArguments = [\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n          value = `0x${parsed[Field.INPUT].raw.toString(16)}`\n        } else if ((tokens[Field.OUTPUT] as Token).equals(WETH[(tokens[Field.OUTPUT] as Token).chainId])) {\n          routerFunctionNames = ['swapTokensForExactETH']\n          routerArguments = [\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            `0x${parsed[Field.INPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n        } else {\n          routerFunctionNames = ['swapTokensForExactTokens']\n          routerArguments = [\n            `0x${parsed[Field.OUTPUT].raw.toString(16)}`,\n            `0x${parsed[Field.INPUT].raw.toString(16)}`,\n            (route as Route).path.map((token) => token.address),\n            account,\n            deadline,\n          ]\n        }\n      }\n\n      // we have an approve tx pending\n      if (mockGas) {\n        // because we can't estimate gas, as it will fail b/c of the approve, we are forced to use the first function\n        const routerFunctionName = routerFunctionNames[0]\n        return await (router as Contract)\n          [routerFunctionName](...routerArguments, {\n            value,\n            gasLimit: GAS_LIMIT_WHEN_MOCKING,\n          })\n          .catch((error: ErrorWithCode) => {\n            if (error?.code !== 4001) {\n              console.log(`${routerFunctionName} failed with a mocked gas limit.`, error)\n            }\n            throw error\n          })\n      }\n\n      // we have permit data\n      if (permit) {\n        const permitAndCall = new Contract(\n          PERMIT_AND_CALL_ADDRESS,\n          [\n            'function permitAndCall(address token, uint256 value, bytes4 permitSelector, bytes calldata permitData, bytes4 routerFunctionSelector, bytes calldata routerFunctionData)',\n          ],\n          library.getSigner(account).connectUnchecked()\n        )\n\n        // try to get a gas limit for each function name in turn\n        for (const routerFunctionName of routerFunctionNames) {\n          const routerFunctionFragment = (router as Contract).interface.fragments.filter(\n            ({ name }) => name === routerFunctionName\n          )[0]\n          const routerFunctionSelector = hexDataSlice(\n            id(`${routerFunctionName}(${routerFunctionFragment?.inputs.map(({ type }) => type).join(',')})`),\n            0,\n            4\n          )\n          const permitAndCallArguments = [\n            (tokens[Field.INPUT] as Token).address,\n            `0x${parsed[Field.INPUT].raw.toString(16)}`,\n            permit.permitSelector,\n            permit.permitData,\n            routerFunctionSelector,\n            defaultAbiCoder.encode(routerFunctionFragment.inputs, routerArguments),\n          ]\n          const gasLimit: BigNumber | void = await permitAndCall.estimateGas\n            .permitAndCall(...permitAndCallArguments, { value })\n            .then((gasLimit) => gasLimit.mul(105).div(100))\n            .catch((error) => {\n              console.log(`estimateGas failed for ${routerFunctionName} via permitAndCall.`, error)\n            })\n          if (BigNumber.isBigNumber(gasLimit)) {\n            return await permitAndCall\n              .permitAndCall(...permitAndCallArguments, {\n                value,\n                gasLimit,\n              })\n              .catch((error: ErrorWithCode) => {\n                if (error?.code !== 4001) {\n                  console.log(`${routerFunctionName} failed via permitAndCall.`, error)\n                }\n                throw error\n              })\n          }\n        }\n        // if we're here, it means all estimateGas calls failed\n        console.log(\n          routerFunctionNames.length === 1\n            ? \"If you're trying to swap a token that takes a transfer fee, you must specify an exact input amount.\"\n            : \"If you're trying to swap a token that takes a transfer fee, ensure your slippage tolerance is higher than the fee.\"\n        )\n        throw Error()\n      }\n\n      // try to get a gas limit for each function name in turn\n      for (const routerFunctionName of routerFunctionNames) {\n        const gasLimit: BigNumber | void = await (router as Contract).estimateGas[\n          routerFunctionName\n        ](...routerArguments, { value })\n          .then((gasLimit) => gasLimit.mul(105).div(100))\n          .catch((error) => {\n            console.log(`estimateGas failed for ${routerFunctionName}.`, error)\n          })\n        if (BigNumber.isBigNumber(gasLimit)) {\n          return await (router as Contract)\n            [routerFunctionName](...routerArguments, { value, gasLimit })\n            .catch((error: ErrorWithCode) => {\n              if (error?.code !== 4001) {\n                console.log(`${routerFunctionName} failed.`, error)\n              }\n              throw error\n            })\n        }\n      }\n      // if we're here, it means all estimateGas calls failed\n      console.log(\n        routerFunctionNames.length === 1\n          ? \"If you're trying to swap a token that takes a transfer fee, you must specify an exact input amount.\"\n          : \"If you're trying to swap a token that takes a transfer fee, ensure your slippage tolerance is higher than the fee.\"\n      )\n      throw Error()\n    }\n\n    const deadline = Math.floor(Date.now() / 1000) + deadlineDelta\n    let approved = JSBI.greaterThanOrEqual((allowance as TokenAmount).raw, parsed[Field.INPUT].raw)\n    let mockGas = false\n    let permit: Permit | undefined\n    if (!approved) {\n      let tryToManuallyApprove = true\n\n      // attempt to gather a permit signature where possible\n      if (canPermit(tokens[Field.INPUT])) {\n        // in the slightly weird case where the user has already approved PermitAndCall, just fake the permit\n        if (permitAndCallAllowance && JSBI.greaterThanOrEqual(permitAndCallAllowance.raw, parsed[Field.INPUT].raw)) {\n          approved = true\n          tryToManuallyApprove = false\n          permit = {\n            permitSelector: '0x00000000',\n            permitData: '0x',\n          }\n        } else {\n          await gatherPermit(account as string, deadline, approveMax, tokens[Field.INPUT] as Token, library)\n            .then((gatheredPermit) => {\n              approved = true\n              tryToManuallyApprove = false\n              permit = gatheredPermit\n            })\n            .catch((error) => {\n              // if the error code is 4001 (EIP-1193 user rejected request), we don't want to try a manual approve\n              if (error?.code === 4001) {\n                tryToManuallyApprove = false\n              } else {\n                console.log(`permit failed.`, error)\n              }\n            })\n        }\n      }\n\n      if (tryToManuallyApprove) {\n        await (inputToken as Contract)\n          .approve(ROUTER_ADDRESS, `0x${(approveMax ? MAX_UINT256 : parsed[Field.INPUT].raw).toString(16)}`)\n          .then(({ hash }: { hash: string }) => {\n            addTransaction(chainId as number, hash)\n            approved = true\n            mockGas = true\n          })\n          .catch((error: ErrorWithCode) => {\n            if (error?.code !== 4001) {\n              console.log(`approve failed.`, error)\n            }\n          })\n      }\n    }\n\n    if (approved) {\n      return (\n        innerSwap(deadline, mockGas, permit)\n          .then(({ hash }) => {\n            addTransaction(chainId as number, hash)\n            dispatch({\n              type: ActionType.TYPE,\n              payload: { field: independentField, value: '' },\n            })\n            setSwapping(false)\n          })\n          // we don't do anything with the error here, innerSwap is responsible for handling it\n          .catch(() => {\n            setSwapping(false)\n          })\n      )\n    } else {\n      setSwapping(false)\n    }\n  }\n\n  return (\n    <Stack\n      direction=\"column\"\n      align=\"center\"\n      spacing=\"6rem\"\n      flexGrow={1}\n      justifyContent=\"center\"\n      px=\"2.5rem\"\n      py=\"8rem\"\n      shouldWrapChildren\n    >\n      <Stack direction=\"row\" align=\"flex-start\" spacing=\"1rem\" flexWrap=\"wrap\" shouldWrapChildren>\n        <SwapText>I want to</SwapText>\n\n        {!!!trade ? (\n          <Link\n            {...modifyUrlObjectForIPFS({\n              pathname: buy ? '/sell' : '/buy',\n              query: {\n                ...(tokens[Field.INPUT]?.address ? { [QueryParameters.INPUT]: tokens[Field.INPUT]?.address } : {}),\n                ...(tokens[Field.OUTPUT]?.address ? { [QueryParameters.OUTPUT]: tokens[Field.OUTPUT]?.address } : {}),\n              },\n            })}\n            passHref\n          >\n            <Button\n              as=\"a\"\n              variant=\"ghost\"\n              variantColor={buy ? 'green' : 'red'}\n              p=\"0.5rem\"\n              mt=\"-0.2rem\"\n              fontSize=\"3xl\"\n              lineHeight={1}\n              height=\"min-content\"\n            >\n              {buy ? 'Buy' : 'Sell'}\n            </Button>\n          </Link>\n        ) : (\n          <Button\n            variant=\"solid\"\n            variantColor={!warning ? (buy ? 'green' : 'red') : 'yellow'}\n            p=\"0.75rem\"\n            mt=\"-0.45rem\"\n            fontSize=\"3xl\"\n            lineHeight={1}\n            height=\"min-content\"\n            leftIcon={!warning ? undefined : !danger ? 'warning-2' : 'not-allowed'}\n            isDisabled={!account || isInvalidBalance || isInvalidTrade}\n            isLoading={swapping}\n            cursor={warning ? 'not-allowed' : 'pointer'}\n            onClick={swap}\n          >\n            {buy ? 'Buy' : 'Sell'}\n          </Button>\n        )}\n\n        {trade && independentField === (buy ? Field.INPUT : Field.OUTPUT) ? (\n          <SwapText>{buy ? 'at least' : 'at most'}</SwapText>\n        ) : null}\n\n        <AmountInput\n          controlled={independentField === (buy ? Field.OUTPUT : Field.INPUT)}\n          isDisabled={showUSD || swapping}\n          isInvalid={isInvalidTrade || (!buy && isInvalidBalance)}\n          value={\n            showUSD && USDAmountsFormatted[buy ? Field.OUTPUT : Field.INPUT]\n              ? `$${USDAmountsFormatted[buy ? Field.OUTPUT : Field.INPUT]}`\n              : formatted[buy ? Field.OUTPUT : Field.INPUT]\n          }\n          onChange={(value): void => {\n            dispatch({\n              type: ActionType.TYPE,\n              payload: { field: buy ? Field.OUTPUT : Field.INPUT, value },\n            })\n          }}\n        />\n\n        {!buy && canMax ? (\n          <Button\n            size=\"sm\"\n            mt=\"0.3rem\"\n            onClick={(): void => {\n              dispatch({\n                type: ActionType.TYPE,\n                payload: { field: Field.INPUT, value: balance?.toExact() },\n              })\n            }}\n          >\n            Max\n          </Button>\n        ) : null}\n\n        <TokenSelect\n          tokenAddress={tokenAddresses[buy ? Field.OUTPUT : Field.INPUT].address}\n          isInvalid={isInvalidRoute}\n          isDisabled={swapping}\n          onAddressSelect={(address): void => {\n            dispatch({\n              type: ActionType.SELECT_TOKEN,\n              payload: { field: buy ? Field.OUTPUT : Field.INPUT, address },\n            })\n          }}\n        />\n\n        <SwapText>\n          {buy ? 'with' : 'for'}\n          {trade && independentField === (buy ? Field.OUTPUT : Field.INPUT) ? (buy ? ' at most' : ' at least') : ''}\n        </SwapText>\n\n        <AmountInput\n          controlled={independentField === (buy ? Field.INPUT : Field.OUTPUT)}\n          isDisabled={showUSD || swapping}\n          isInvalid={isInvalidTrade || (buy && isInvalidBalance)}\n          value={\n            showUSD && USDAmountsFormatted[buy ? Field.INPUT : Field.OUTPUT]\n              ? `$${USDAmountsFormatted[buy ? Field.INPUT : Field.OUTPUT]}`\n              : formatted[buy ? Field.INPUT : Field.OUTPUT]\n          }\n          onChange={(value): void => {\n            dispatch({\n              type: ActionType.TYPE,\n              payload: { field: buy ? Field.INPUT : Field.OUTPUT, value },\n            })\n          }}\n        />\n\n        {buy && canMax ? (\n          <Button\n            size=\"sm\"\n            mt=\"0.3rem\"\n            onClick={(): void => {\n              dispatch({\n                type: ActionType.TYPE,\n                payload: { field: Field.INPUT, value: balance?.toExact() },\n              })\n            }}\n          >\n            Max\n          </Button>\n        ) : null}\n\n        <TokenSelect\n          tokenAddress={tokenAddresses[buy ? Field.INPUT : Field.OUTPUT].address}\n          isInvalid={isInvalidRoute}\n          isDisabled={swapping}\n          onAddressSelect={(address): void => {\n            dispatch({\n              type: ActionType.SELECT_TOKEN,\n              payload: { field: buy ? Field.INPUT : Field.OUTPUT, address },\n            })\n          }}\n        />\n\n        <SwapText fontSize=\"3xl\" lineHeight={1} pt=\"0.3rem\">\n          .\n        </SwapText>\n      </Stack>\n\n      <TradeSummary route={route} trade={trade} warning={warning} danger={danger} />\n    </Stack>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}