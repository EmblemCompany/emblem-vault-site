{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Ownership.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Flex, Input, Select, useColorMode, Table, Thead, Tbody, Tr, Th, Td, useToast } from \"@chakra-ui/react\";\nimport { EMBLEM_V2_API } from '../constants';\nexport default function TokenOwnershipTable() {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    owner: \"\",\n    status: \"unminted\",\n    claimedBy: \"\"\n  });\n  const {\n    colorMode\n  } = useColorMode();\n  const toast = useToast();\n  useEffect(() => {\n    axios.post(EMBLEM_V2_API + '/findTokenOwnership', formValues).then(res => {\n      if (res.data.error) {\n        throw new Error(res.data.msg);\n      }\n\n      setData(res.data.tokens);\n    }).catch(err => {\n      console.error(err);\n      toast({\n        title: \"Error fetching data.\",\n        description: err.message,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true\n      });\n    });\n  }, [formValues]);\n\n  const handleChange = e => {\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formValues); // Perform your search/filter operation here\n  };\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    mb: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    name: \"owner\",\n    value: formValues.owner,\n    onChange: handleChange,\n    placeholder: \"Owner\",\n    mr: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(Select, {\n    name: \"status\",\n    value: formValues.status,\n    onChange: handleChange,\n    mr: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"unminted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Unminted\"), __jsx(\"option\", {\n    value: \"minted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Minted\"), __jsx(\"option\", {\n    value: \"claimed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Claimed\")), __jsx(Input, {\n    name: \"claimedBy\",\n    value: formValues.claimedBy,\n    onChange: handleChange,\n    placeholder: \"Claimed By\",\n    mr: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Search\"))), __jsx(Table, {\n    variant: \"simple\",\n    colorScheme: colorMode === 'light' ? 'blackAlpha' : 'whiteAlpha',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Thead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Tr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Owner\"), __jsx(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Status\"), __jsx(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Claimed By\"), __jsx(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Internal Token ID\"), __jsx(Th, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Category\"))), __jsx(Tbody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, data.map(row => __jsx(Tr, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, row.owner), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, row.status), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, row.claimedBy), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, row.internalTokenId), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, row.category))))));\n}","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Ownership.tsx"],"names":["React","useState","useEffect","axios","Box","Button","Flex","Input","Select","useColorMode","Table","Thead","Tbody","Tr","Th","Td","useToast","EMBLEM_V2_API","TokenOwnershipTable","data","setData","formValues","setFormValues","owner","status","claimedBy","colorMode","toast","post","then","res","error","Error","msg","tokens","catch","err","console","title","description","message","duration","isClosable","handleChange","e","target","name","value","handleSubmit","preventDefault","log","map","row","id","internalTokenId","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Flex, Input, Select, useColorMode, Table, Thead, Tbody, Tr, Th, Td, useToast } from \"@chakra-ui/react\";\nimport { EMBLEM_V2_API } from '../constants';\n\nexport default function TokenOwnershipTable() {\n  const [data, setData] = useState([]);\n  const [formValues, setFormValues] = useState({\n    owner: \"\",\n    status: \"unminted\",\n    claimedBy: \"\",\n  });\n\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n\n  useEffect(() => {\n    axios.post(EMBLEM_V2_API + '/findTokenOwnership', formValues)\n      .then(res => {\n        if (res.data.error) {\n          throw new Error(res.data.msg);\n        }\n        setData(res.data.tokens);\n      })\n      .catch(err => {\n        console.error(err);\n        toast({\n          title: \"Error fetching data.\",\n          description: err.message,\n          status: \"error\",\n          duration: 9000,\n          isClosable: true,\n        });\n      });\n  }, [formValues]);\n  \n\n  const handleChange = e => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formValues);\n    // Perform your search/filter operation here\n  };\n\n  return (\n    <Box>\n      \n        <Flex mb=\"2\">\n        <form onSubmit={handleSubmit}>\n          <Input name=\"owner\" value={formValues.owner} onChange={handleChange} placeholder=\"Owner\" mr=\"2\" />\n          <Select name=\"status\" value={formValues.status} onChange={handleChange} mr=\"2\">\n            <option value=\"unminted\">Unminted</option>\n            <option value=\"minted\">Minted</option>\n            <option value=\"claimed\">Claimed</option>\n          </Select>\n          <Input name=\"claimedBy\" value={formValues.claimedBy} onChange={handleChange} placeholder=\"Claimed By\" mr=\"2\" />\n          <Button type=\"submit\">Search</Button>\n          </form>\n        </Flex>\n     \n      <Table variant=\"simple\" colorScheme={colorMode === 'light' ? 'blackAlpha' : 'whiteAlpha'}>\n        <Thead>\n          <Tr>\n            <Th>Owner</Th>\n            <Th>Status</Th>\n            <Th>Claimed By</Th>\n            <Th>Internal Token ID</Th>\n            <Th>Category</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {data.map(row => (\n            <Tr key={row.id}>\n              <Td>{row.owner}</Td>\n              <Td>{row.status}</Td>\n              <Td>{row.claimedBy}</Td>\n              <Td>{row.internalTokenId}</Td>\n              <Td>{row.category}</Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}