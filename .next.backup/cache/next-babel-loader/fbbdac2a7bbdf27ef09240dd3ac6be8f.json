{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex, Grid, Text, Link, Image } from \"@chakra-ui/core\";\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from \"react\";\nexport default function VaultList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      vaults = _React$useState2[0],\n      setVaults = _React$useState2[1];\n\n  var getVaults = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var responce, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              alert(\"chainId \" + chainId); // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n\n              _context.next = 3;\n              return fetch('https://api.emblemvault.io/vaults/' + account, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'service': 'evmetadata',\n                  'chainId': chainId.toString()\n                }\n              });\n\n            case 3:\n              responce = _context.sent;\n              _context.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context.sent;\n              setVaults(jsonData);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVaults() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getVaults();\n  }, []);\n  return __jsx(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, vaults.length ? vaults.map(function (vault) {\n    var url = '/vault/?id=' + vault.tokenId;\n    return __jsx(Grid, {\n      key: vault.tokenId,\n      templateColumns: \"repeat(5, 1fr)\",\n      gap: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      href: url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      maxW: \"sm\",\n      borderWidth: \"1px\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, __jsx(Box, {\n      mt: \"1\",\n      fontWeight: \"semibold\",\n      as: \"h4\",\n      lineHeight: \"tight\",\n      isTruncated: true,\n      p: 1,\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, vault.name, __jsx(Image, {\n      src: vault.image ? vault.image : \"https://circuitsofvalue.com/public/coval-logo.png\",\n      size: \"250px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    })), __jsx(Box, {\n      p: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, __jsx(Box, {\n      d: \"flex\",\n      alignItems: \"baseline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }, __jsx(Box, {\n      color: \"gray.500\",\n      fontWeight: \"semibold\",\n      letterSpacing: \"wide\",\n      fontSize: \"xs\",\n      textTransform: \"uppercase\",\n      ml: \"2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, vault.values.length ? vault.values.map(function (coin) {\n      return __jsx(Text, {\n        key: coin.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, coin.balance, \" \", coin.name);\n    }) : __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }\n    }, \"Nothing in here! Fill 'er up!\")))))));\n  }) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"YOU DON'T SEEM TO HAVE ANY VAULTS. \", \" \", __jsx(Link, {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"CREATE ONE HERE!\")));\n}\n\n_s(VaultList, \"159Y1YZHaM8GnKfFlxW8WZvvM5o=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = VaultList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VaultList\");","map":{"version":3,"sources":["/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/VaultList.tsx"],"names":["Box","Flex","Grid","Text","Link","Image","useWeb3React","React","useEffect","VaultList","props","account","chainId","useState","vaults","setVaults","getVaults","alert","fetch","method","headers","toString","responce","json","jsonData","length","map","vault","url","tokenId","name","image","values","coin","balance"],"mappings":"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","sourcesContent":["import {\n    Box,\n    Flex,\n    Grid,\n    Text,\n    Link,\n    Image\n} from \"@chakra-ui/core\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from \"react\";\n\nexport default function VaultList(props: any) {\n\n    const { account, chainId } = useWeb3React()\n    const [vaults, setVaults] = React.useState([])\n\n    const getVaults = async () => {\n      alert(\"chainId \" + chainId)\n      // const responce = await fetch('https://api.emblemvault.io/vaults/0x5a63264914a1eCB626e32e8AD683704bA7b0621f', {\n      const responce = await fetch('https://api.emblemvault.io/vaults/' + account, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'service': 'evmetadata',\n          'chainId': chainId.toString()\n        },\n      })\n      const jsonData = await responce.json()\n      setVaults(jsonData)\n    }\n\n    useEffect(() => {\n        getVaults()\n      }, [])\n\n    return (\n      <Flex width=\"full\" align=\"center\" justifyContent=\"center\" justifyItems=\"center\">\n        {vaults.length\n          ? vaults.map((vault) => {\n            var url = '/vault/?id=' + vault.tokenId\n            return (\n              <Grid key={vault.tokenId} templateColumns=\"repeat(5, 1fr)\" gap={1}>\n                <Link href={url}>\n                  <Box maxW=\"sm\" borderWidth=\"1px\" rounded=\"lg\" overflow=\"hidden\" >\n                    <Box\n                      mt=\"1\"\n                      fontWeight=\"semibold\"\n                      as=\"h4\"\n                      lineHeight=\"tight\"\n                      isTruncated\n                      p={1}\n                      textAlign=\"center\"\n                    >\n                      {vault.name}\n\n                      <Image src={vault.image\n                        ? vault.image\n                        : \"https://circuitsofvalue.com/public/coval-logo.png\"\n                      }\n                        size=\"250px\"\n                      />\n                    </Box>\n\n                    <Box p=\"6\">\n                      <Box d=\"flex\" alignItems=\"baseline\">\n                        <Box\n                          color=\"gray.500\"\n                          fontWeight=\"semibold\"\n                          letterSpacing=\"wide\"\n                          fontSize=\"xs\"\n                          textTransform=\"uppercase\"\n                          ml=\"2\"\n                        >\n                          {vault.values.length\n                            ? vault.values.map((coin) => {\n                              return (\n                                <Text key={coin.name}>\n                                  {coin.balance} {coin.name}\n                                </Text>\n                              )\n                            })\n                            : <Text>Nothing in here! Fill 'er up!</Text>\n                          }\n                        </Box>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Link>\n              </Grid>\n            )\n          })\n          :\n          <Text>\n            YOU DON'T SEEM TO HAVE ANY VAULTS. {\" \"}\n            <Link color=\"#638cd8\" href=\"../create\">\n              CREATE ONE HERE!\n            </Link>\n          </Text>\n        }\n      </Flex>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}