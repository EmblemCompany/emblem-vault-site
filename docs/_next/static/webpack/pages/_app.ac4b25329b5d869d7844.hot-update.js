webpackHotUpdate_N_E("pages/_app",{

/***/ "./constants.ts":
/*!**********************!*\
  !*** ./constants.ts ***!
  \**********************/
/*! exports provided: BG, COLOR, isIPFS, isServerSide, ADDRESS_ZERO, DEFAULT_APPROVE_MAX, DEFAULT_DEADLINE, DEFAULT_SLIPPAGE, GAS_LIMIT_WHEN_MOCKING, ROUTER_ADDRESS, PERMIT_AND_CALL_ADDRESS, ZERO, MAX_UINT256, curatedContracts, curatedAssets, contractAddresses, BURN_ADDRESS, ZERO_ADDRESS, EMBLEM_API, EMBLEM_V2_API, SIG_API, ORD_API, QueryParameters, ERC20_BYTES32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BG\", function() { return BG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLOR\", function() { return COLOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIPFS\", function() { return isIPFS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isServerSide\", function() { return isServerSide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ADDRESS_ZERO\", function() { return ADDRESS_ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_APPROVE_MAX\", function() { return DEFAULT_APPROVE_MAX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_DEADLINE\", function() { return DEFAULT_DEADLINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_SLIPPAGE\", function() { return DEFAULT_SLIPPAGE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAS_LIMIT_WHEN_MOCKING\", function() { return GAS_LIMIT_WHEN_MOCKING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_ADDRESS\", function() { return ROUTER_ADDRESS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PERMIT_AND_CALL_ADDRESS\", function() { return PERMIT_AND_CALL_ADDRESS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZERO\", function() { return ZERO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_UINT256\", function() { return MAX_UINT256; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curatedContracts\", function() { return curatedContracts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curatedAssets\", function() { return curatedAssets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contractAddresses\", function() { return contractAddresses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BURN_ADDRESS\", function() { return BURN_ADDRESS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZERO_ADDRESS\", function() { return ZERO_ADDRESS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EMBLEM_API\", function() { return EMBLEM_API; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EMBLEM_V2_API\", function() { return EMBLEM_V2_API; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SIG_API\", function() { return SIG_API; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_API\", function() { return ORD_API; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QueryParameters\", function() { return QueryParameters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ERC20_BYTES32\", function() { return ERC20_BYTES32; });\n/* harmony import */ var _uniswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/sdk */ \"./node_modules/@uniswap/sdk/dist/sdk.esm.js\");\n/* harmony import */ var _abi_handler_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abi/handler.json */ \"./abi/handler.json\");\nvar _abi_handler_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/handler.json */ \"./abi/handler.json\", 1);\n/* harmony import */ var _abi_sales_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abi/sales.json */ \"./abi/sales.json\");\nvar _abi_sales_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/sales.json */ \"./abi/sales.json\", 1);\n/* harmony import */ var _abi_coval_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./abi/coval.json */ \"./abi/coval.json\");\nvar _abi_coval_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/coval.json */ \"./abi/coval.json\", 1);\n/* harmony import */ var _abi_emblem_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abi/emblem.json */ \"./abi/emblem.json\");\nvar _abi_emblem_json__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/emblem.json */ \"./abi/emblem.json\", 1);\n/* harmony import */ var _abi_nftrade_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abi/nftrade.json */ \"./abi/nftrade.json\");\nvar _abi_nftrade_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/nftrade.json */ \"./abi/nftrade.json\", 1);\n/* harmony import */ var _abi_claimed_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./abi/claimed.json */ \"./abi/claimed.json\");\nvar _abi_claimed_json__WEBPACK_IMPORTED_MODULE_6___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/claimed.json */ \"./abi/claimed.json\", 1);\n/* harmony import */ var _abi_VaultHandlerV8_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./abi/VaultHandlerV8.json */ \"./abi/VaultHandlerV8.json\");\nvar _abi_VaultHandlerV8_json__WEBPACK_IMPORTED_MODULE_7___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/VaultHandlerV8.json */ \"./abi/VaultHandlerV8.json\", 1);\n/* harmony import */ var _abi_ClonableFactory_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./abi/ClonableFactory.json */ \"./abi/ClonableFactory.json\");\nvar _abi_ClonableFactory_json__WEBPACK_IMPORTED_MODULE_8___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/ClonableFactory.json */ \"./abi/ClonableFactory.json\", 1);\n/* harmony import */ var _abi_ConfigurableERC20Upgradable_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./abi/ConfigurableERC20Upgradable.json */ \"./abi/ConfigurableERC20Upgradable.json\");\nvar _abi_ConfigurableERC20Upgradable_json__WEBPACK_IMPORTED_MODULE_9___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/ConfigurableERC20Upgradable.json */ \"./abi/ConfigurableERC20Upgradable.json\", 1);\n/* harmony import */ var _abi_EmblemVault_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./abi/EmblemVault.json */ \"./abi/EmblemVault.json\");\nvar _abi_EmblemVault_json__WEBPACK_IMPORTED_MODULE_10___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/EmblemVault.json */ \"./abi/EmblemVault.json\", 1);\n/* harmony import */ var _abi_ERC1155Upgradable_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./abi/ERC1155Upgradable.json */ \"./abi/ERC1155Upgradable.json\");\nvar _abi_ERC1155Upgradable_json__WEBPACK_IMPORTED_MODULE_11___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/ERC1155Upgradable.json */ \"./abi/ERC1155Upgradable.json\", 1);\n/* harmony import */ var _abi_erc721aAbi_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./abi/erc721aAbi.json */ \"./abi/erc721aAbi.json\");\nvar _abi_erc721aAbi_json__WEBPACK_IMPORTED_MODULE_12___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/erc721aAbi.json */ \"./abi/erc721aAbi.json\", 1);\n/* harmony import */ var _abi_mintVaultQuoteAbi_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./abi/mintVaultQuoteAbi.json */ \"./abi/mintVaultQuoteAbi.json\");\nvar _abi_mintVaultQuoteAbi_json__WEBPACK_IMPORTED_MODULE_13___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./abi/mintVaultQuoteAbi.json */ \"./abi/mintVaultQuoteAbi.json\", 1);\n/* harmony import */ var _curated_xcp_json__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./curated/xcp.json */ \"./curated/xcp.json\");\nvar _curated_xcp_json__WEBPACK_IMPORTED_MODULE_14___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./curated/xcp.json */ \"./curated/xcp.json\", 1);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar BG = {\n  light: 'gray.50',\n  dark: 'gray.900'\n};\nvar COLOR = {\n  light: 'black',\n  dark: 'white'\n};\nvar isIPFS = \"false\" === 'true';\nvar isServerSide = false;\nvar API_OVERLOAD = process.env.API_OVERLOAD;\nvar ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nvar DEFAULT_APPROVE_MAX = true;\nvar DEFAULT_DEADLINE = 60 * 20;\nvar DEFAULT_SLIPPAGE = 50;\nvar GAS_LIMIT_WHEN_MOCKING = 500000; // https://uniswap.org/docs/v2/smart-contracts/router02/\n\nvar ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'; // https://github.com/NoahZinsmeister/permit-and-call\n\nvar PERMIT_AND_CALL_ADDRESS = '0xe334094985bB046B95550793EA577F8DC4e6112B';\nvar ZERO = _uniswap_sdk__WEBPACK_IMPORTED_MODULE_0__[\"JSBI\"].BigInt(0);\nvar MAX_UINT256 = _uniswap_sdk__WEBPACK_IMPORTED_MODULE_0__[\"JSBI\"].BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nvar curatedContracts = [{\n  name: \"Rare Pepe\",\n  1: \"0x7E6027a6A84fC1F6Db6782c523EFe62c923e46ff\",\n  \"chain\": \"xcp\",\n  mintable: true,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"This Curated Emblem Vault contains 1 Rare Pepe NFT that was minted on Bitcoin using the Counterparty protocol. Rare Pepes is a collection of 1,774 unique cards with varying designs and rarities that were created by more than 300 artists from 2016 to 2018. \",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false,\n  price: 20000000,\n  attributes: [],\n  allowed: function allowed(data) {\n    return true;\n  },\n  allowedName: function allowedName(asset) {\n    var curatedItemFound = _curated_xcp_json__WEBPACK_IMPORTED_MODULE_14__[\"Rare Pepe\"].filter(function (item) {\n      return item.name == asset;\n    });\n    return asset && curatedItemFound.length > 0;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"BTC\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses) {\n    return _addresses.filter(function (item) {\n      return item.coin === \"BTC\";\n    });\n  }\n}, {\n  name: \"Emblem Test\",\n  1: \"0xdcFfa2b5cBf288932B009EBA01C8ca772ec6C993\",\n  5: \"0xa7428f3b7752F006890E12F055b0A816F0F18CdD\",\n  \"chain\": \"xcp\",\n  mintable: true,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"Created by Pepe artists Oliver Morris and Zoe Davies, the Emblem Test series of four cards—COMMON, RARE, LEGEND, and EPIC—were made to test Emblem Vault's new curated collection (ERC-1155) contracts. The cards were free and airdropped to Emblem Vault followers in December 2022\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false,\n  price: 20000000,\n  attributes: []\n}, {\n  name: \"Spells of Genesis\",\n  1: \"0xDCA91409018ea80B71d21E818f00e76072969861\",\n  chain: \"xcp\",\n  mintable: false,\n  collectionType: \"ERC1155\",\n  loadTypes: ['select'],\n  description: \"\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: false\n}, {\n  name: \"Cursed Ordinal\",\n  1: \"0x769Fdf030A9e176EC8B6D66EFdCB63e8fA69885c\",\n  chain: \"cursedordinalsbtc\",\n  mintable: true,\n  collectionType: \"ERC721\",\n  loadTypes: ['input', 'empty'],\n  description: \"Cursed Ordinals are a collection of unindexed or \\\"bugged\\\" Ordinals not included initially in the Ord Client. \\n\\nWARNING: The inscription number of this Cursed Ordinal may change. Emblem Vault's dynamic vaults will update the metadata of this vault whenever a new Ord Client upgrade is posted and implemented.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-cursed-ordinals.vercel.app/cursedordinalsbtc/balance/\",\n  price: 20000000,\n  attributes: [{\n    \"trait_type\": \"Content Type\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].content_type;\n    }\n  }, {\n    \"trait_type\": \"Ordinal Number\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].name.includes(\"Cursed Ordinal\") ? metadata.values[0].name.replace('Cursed Ordinal', '').trim() : false;\n    }\n  }, {\n    \"trait_type\": \"Collection\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].name.includes(\"Cursed Ordinal\") ? false : \"All:\".concat(metadata.values[0].project);\n    }\n  }, {\n    \"trait_type\": \"Artist\",\n    \"value\": function value(metadata) {\n      var foundArtistTrait = metadata.values.length > 0 && metadata.values[0].traits ? metadata.values[0].traits.filter(function (item) {\n        return item.trait_type === \"artist\";\n      }) : [];\n      return foundArtistTrait.length > 0 ? foundArtistTrait[0].value : false;\n    }\n  }],\n  image: function image(data) {\n    return \"https://image-scaler.vercel.app/image?url=https://cursedordinals.com/content/\".concat(data.inscription_id, \"?size=400\");\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ord-loading1.png\", \"https://emblem.finance/ord-loading2.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [\"https://emblem.finance/ord-error1.png\", \"https://emblem.finance/ord-error2.png\", \"https://emblem.finance/ord-error3.png\", \"https://emblem.finance/ord-error4.png\", \"https://emblem.finance/ord-error5.png\", \"https://emblem.finance/ord-error6.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    return data ? data.content_type != \"application/json\" : false;\n  },\n  allowedName: function allowedName(asset) {\n    var pieces = asset.split(' ');\n    return asset.includes(\"Cursed Ordinal\") && pieces.length === 3 && Number(pieces.reverse()[0]) < 0;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses2) {\n    return _addresses2.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}, {\n  1: \"0x8C3c0274c33f263F0A55d129cFC8eaa3667A9E8b\",\n  name: \"Ethscription\",\n  chain: \"ethscription\",\n  mintable: true,\n  collectionType: \"ERC721\",\n  loadTypes: ['empty'],\n  description: \"Ethscriptions are on-chain digital artifacts stored on the Ethereum blockchain using transaction calldata. LFG!\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-ethscriptions.vercel.app/ethscription/balance/\",\n  price: 20000000,\n  attributes: [{\n    \"trait_type\": \"Collection\",\n    \"value\": function value(metadata) {\n      return metadata.values[0].project ? \"\".concat(metadata.values[0].project) : false;\n    }\n  }, {\n    \"trait_type\": \"Ethscriptions\",\n    \"value\": function value(metadata) {\n      var foundTrait = metadata.values && metadata.values.length > 0 && metadata.values[0].traits && metadata.values[0].traits.length > 0 && metadata.values[0].traits.filter(function (item) {\n        return item.trait_type == \"Ethscriptions\";\n      }).length > 0 ? metadata.values[0].traits.filter(function (item) {\n        return item.trait_type == \"Ethscriptions\";\n      })[0].value : false;\n      return foundTrait;\n    }\n  }],\n  image: function image(data) {\n    return \"https://image-scaler.vercel.app/image2?url=https://eth-script-indexer-eca25c4cf43b.herokuapp.com/api/ethscriptions/\".concat(data.ethscription_number, \"/data\");\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ethscriptions-loading-1.png\", \"https://emblem.finance/ethscriptions-loading-2.png\", \"https://emblem.finance/ethscriptions-loading-3.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    return true;\n  },\n  allowedName: function allowedName(asset) {\n    var pieces = asset.split(' ');\n    return true;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"ETH\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses3) {\n    return _addresses3.filter(function (item) {\n      return item.coin === \"ETH\";\n    });\n  }\n}, {\n  1: \"0x363D0C12eDCAF2C5962110401f651491f58C760a\",\n  name: \"$OXBT\",\n  chain: \"oxbt\",\n  mintable: true,\n  collectionType: \"ERC721a\",\n  loadTypes: ['empty'],\n  description: \"$OXBT is a BRC-20 utility token used to enable artists, creators, & builders on Bitcoin.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/oxbt/\",\n  price: 20000000,\n  attributes: [],\n  image: function image(data) {\n    return \"https://emblem.pro/oxbt.png\";\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/oxbt-loading-1.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (data.balance == 2000) {\n      msgCallback ? msgCallback(\"\") : null;\n      return true;\n    } else if (data.balance != 2000 && msgCallback) {\n      msgCallback ? msgCallback(\"Load vault with exactly 2000 $OXBT\") : null;\n    }\n\n    return false;\n  },\n  allowedName: function allowedName(asset) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (asset == \"2000 $OXBT\" || asset.includes(\"$OXBT\")) {\n      return true;\n    }\n\n    msgCallback ? msgCallback(\"Incorrect Asset In Vault\") : null;\n    return false;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses4) {\n    return _addresses4.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}, {\n  1: \"0x49aCD1b04702a30fb2cE8522298c299527E31913\",\n  name: \"$ORDI\",\n  chain: \"ordi\",\n  mintable: true,\n  collectionType: \"ERC721a\",\n  loadTypes: ['empty'],\n  description: \"Ordi is the first brc-20, an experiment into fungibility on Bitcoin utilizing ordinal theory and inscriptions.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/ordi/\",\n  price: 20000000,\n  attributes: [],\n  image: function image(data) {\n    return \"https://emblem.pro/ordi.png\";\n  },\n  loading: function loading() {\n    var images = [\"https://emblem.finance/ordi-loading-1.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (data.balance == 200) {\n      msgCallback ? msgCallback(\"\") : null;\n      return true;\n    } else if (data.balance != 200 && msgCallback) {\n      msgCallback ? msgCallback(\"Load vault with exactly 200 $ORDI\") : null;\n    }\n\n    return false;\n  },\n  allowedName: function allowedName(asset) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (asset == \"200 $ORDI\") {\n      return true;\n    }\n\n    msgCallback ? msgCallback(\"Incorrect Asset In Vault\") : null;\n    return false;\n  },\n  address: function address(addresses) {\n    return addresses.filter(function (item) {\n      return item.coin === \"TAP\";\n    })[0].address;\n  },\n  addresses: function addresses(_addresses5) {\n    return _addresses5.filter(function (item) {\n      return item.coin === \"TAP\";\n    });\n  }\n}, {\n  1: \"0x9885d3F9b3B71A1Ff69D6a8B4AC87426A60F993d\",\n  name: \"Rinkeby\",\n  chain: \"rinkeby\",\n  mintable: false,\n  collectionType: \"ERC721a\",\n  loadTypes: ['empty'],\n  description: \"Vaults migrated from Rinkeby testnet.\",\n  purchaseMethod: 'buyWithQuote',\n  showBalance: true,\n  balanceUrl: \"https://serverless-brc20.vercel.app/brc20/balance/ordi/\",\n  price: 20000000,\n  attributes: [],\n  image: function image(data) {\n    return \"https://raw.githubusercontent.com/DecentricCorp/DecentricAssets/master/emblem/icons/App/512x512.png\";\n  },\n  loading: function loading() {\n    var images = [\"https://raw.githubusercontent.com/DecentricCorp/DecentricAssets/master/emblem/icons/App/512x512.png\"];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  placeholder: function placeholder() {\n    var images = [];\n    return images[Math.floor(Math.random() * images.length)]; // Random image\n  },\n  allowed: function allowed(data) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return false;\n  },\n  allowedName: function allowedName(asset) {\n    var msgCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return false;\n  },\n  allowedHop: function allowedHop(ownership_balances) {\n    var hops = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    console.log('+++++++++ HOP Check +++++', ownership_balances);\n\n    if (ownership_balances.status != \"claimed\" && ownership_balances.length > 0 && ownership_balances[0].balances) {\n      var foundBalance = ownership_balances[0].balances.filter(function (item) {\n        return item.coin == \"RINKEBY\";\n      });\n\n      if (foundBalance.length > 0) {\n        return true;\n      }\n\n      var _iterator = _createForOfIteratorHelper(ownership_balances[0].balances),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var balance = _step.value;\n\n          if (balance.balances && balance.balances.some(function (item) {\n            return item.coin === \"RINKEBY\";\n          })) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else if (ownership_balances.network && ownership_balances.network == \"RINKEBY\") {\n      return true;\n    } // Hops logic to check if tokenId has migrated (ownership_balances)\n    // TODO: Implement the hops logic here\n    // if from legacy do not check legacy claimed\n\n\n    return false; // Return false if none of the conditions are met\n  },\n  address: function address(addresses) {\n    return addresses[0].address;\n  },\n  addresses: function addresses(_addresses6) {\n    return _addresses6;\n  }\n}];\nvar curatedAssets = {\n  xcp: _curated_xcp_json__WEBPACK_IMPORTED_MODULE_14__\n};\nvar contractAddresses = {\n  salesFactory: {\n    1: '0xfb51bcd2644c20d87e17106c27355732fd485e4e'\n  },\n  salesAbi: _abi_sales_json__WEBPACK_IMPORTED_MODULE_2__[\"abi\"],\n  vaultHandler: {\n    // 1: '0x1ec6b294902d42fee964d29fa962e5976e71e67d',\n    1: '0xD0C7304156AF0a4be17352D8ce214222Ec66E8ba',\n    4: '0x63B1EB00de17Faf64b33649A5b7592543B010127',\n    5: '0x0349E72c3BFc6232B12FD546a9f9CD1851dD5bDD',\n    80001: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    137: '0x322ad0007ff961f253d3818c61d912c89752ec3e',\n    100: '0x6e02D718C08b9EBd971B4788fF30308cC997E2Ef',\n    56: '0x34761221dBC6bE70A4f88E2077765dB8F14A1007',\n    250: '0x27B08ADcA39a684961e2cD289f0bEA893eDF0772',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x793F3cF97c57798732f3AA36416CaC742223aB20'\n  },\n  vaultHandlerAbi: _abi_handler_json__WEBPACK_IMPORTED_MODULE_1__[\"abi\"],\n  emblemVault: {\n    1: '0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab',\n    4: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    80001: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    137: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    100: '0x9058d1A5Fdba852403D5b080abAF31D1379EF653',\n    56: '0x9523022eb4B465Db3e3037d83e4910E3cFF1bD49',\n    250: '0x5434ba8b4A37755Cb3867C9fde39342C0D382857',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x14509fCc07892E80eD6BE4cf171407d206A92164'\n  },\n  emblemAbi: _abi_emblem_json__WEBPACK_IMPORTED_MODULE_4__[\"abi\"],\n  coval: {\n    1: '0x3d658390460295fb963f54dc0899cfb1c30776df',\n    4: '0x44c1a9d7D1F932B4c2811A70eDfFDD6Ae2EB60e6',\n    5: '0x44aA2ae6a29A1434942EB88cB2eD0Fd1De30de83',\n    80001: '0x5cCa9D75DF2dFC117855adD4DD45727dee5287EC',\n    137: '0x4597c8A59Ab28B36840B82B3A674994A279593D0',\n    100: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    56: '0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464',\n    250: '0x8b8407c6184f1f0Fd1082e83d6A3b8349cAcEd12',\n    1337: '0xe70AbBc99D8eB32124BF022196c493DB4fBc50FD',\n    1313161554: '0x584039B84b1d36653DAb76DC1246D07b08218706'\n  },\n  covalAbi: _abi_coval_json__WEBPACK_IMPORTED_MODULE_3__[\"abi\"],\n  nftrade: {\n    137: '0x88f5Cc3624247477bE5f691648A7D1B2631965B9'\n  },\n  nftradeAbi: _abi_nftrade_json__WEBPACK_IMPORTED_MODULE_5__[\"abi\"],\n  claimed: {\n    1: '0xb8D6eB76dABea5b238e999B3145775E54412B2D2',\n    137: '0x62C505E51800901f4B44Ff1f6eD5348c36D37E28',\n    1313161554: '0xE1213fcb2a085B6d26C52f9D8fEc54f0758Fd7b1',\n    5: '0x1342F91DC53B6D222614Ad1f981b5683d4653116'\n  },\n  claimedAbi: _abi_claimed_json__WEBPACK_IMPORTED_MODULE_6__[\"abi\"],\n  vaultHandlerV8: {\n    1: \"0x23859b51117dbFBcdEf5b757028B18d7759a4460\",\n    4: \"0xF2eCdFa77C3c8Cabf913529D95081DCB2DE314ec\",\n    5: '0xc15235d210c1b1CdA8643a5eA37687E241B031b0',\n    1337: \"0xfc3A4BBfD522668342bCaDf273a94A46DCe25439\",\n    1313161554: '0xeDb2AC2BfD8d026E4d6C75a04548423936512135'\n  },\n  vaultHandlerV8Abi: _abi_VaultHandlerV8_json__WEBPACK_IMPORTED_MODULE_7__[\"abi\"],\n  clonableFactoryAbi: _abi_ClonableFactory_json__WEBPACK_IMPORTED_MODULE_8__[\"abi\"],\n  erc20Abi: _abi_ConfigurableERC20Upgradable_json__WEBPACK_IMPORTED_MODULE_9__[\"abi\"],\n  erc721Abi: _abi_EmblemVault_json__WEBPACK_IMPORTED_MODULE_10__[\"abi\"],\n  erc1155Abi: _abi_ERC1155Upgradable_json__WEBPACK_IMPORTED_MODULE_11__[\"abi\"],\n  mintVaultQuote: {\n    1: \"0xE5dec92911c78069d727a67C85936EDDbc9B02Cf\"\n  },\n  mintVaultQuoteAbi: _abi_mintVaultQuoteAbi_json__WEBPACK_IMPORTED_MODULE_13__[\"abi\"],\n  erc721aAbi: _abi_erc721aAbi_json__WEBPACK_IMPORTED_MODULE_12__[\"abi\"]\n};\nvar BURN_ADDRESS = '0x5D152dd902CC9198B97E5b6Cf5fc23a8e4330180';\nvar ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nvar EMBLEM_API = API_OVERLOAD ? API_OVERLOAD : 'https://api2.emblemvault.io'; //'http://localhost:3001' // \n\nvar EMBLEM_V2_API = 'https://v2.emblemvault.io'; // 'http://localhost:3001' //\n\nvar SIG_API = 'https://tor-us-signer-coval.vercel.app'; //'http://localhost:3002' //\n\nvar ORD_API = 'https://api-ord.emblemvault.io/bitcoin/';\nvar QueryParameters;\n\n(function (QueryParameters) {\n  QueryParameters[\"INPUT\"] = \"input\";\n  QueryParameters[\"OUTPUT\"] = \"output\";\n  QueryParameters[\"CHAIN\"] = \"chain\";\n})(QueryParameters || (QueryParameters = {}));\n\nvar ERC20_BYTES32 = [{\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    internalType: 'bytes32',\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./constants.ts\n");

/***/ })

})