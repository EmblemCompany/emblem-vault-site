webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/contracts */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n/* harmony import */ var _partials_Attributes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./partials/Attributes */ \"./components/partials/Attributes.tsx\");\n/* harmony import */ var _stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @stacks/wallet-sdk */ \"./node_modules/@stacks/wallet-sdk/dist/polyfill/index.js\");\n/* harmony import */ var _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @toruslabs/fetch-node-details */ \"./node_modules/@toruslabs/fetch-node-details/dist/fetchNodeDetails.esm.js\");\n/* harmony import */ var _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @toruslabs/torus.js */ \"./node_modules/@toruslabs/torus.js/dist/torusUtils.esm.js\");\n/* harmony import */ var _JsonDownloadLink__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./JsonDownloadLink */ \"./components/JsonDownloadLink.tsx\");\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nvar OfferModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c5 = function _c5() {\n  return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./OfferModal */ \"./components/OfferModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./OfferModal */ \"./components/OfferModal.tsx\")];\n    },\n    modules: ['./OfferModal']\n  }\n});\n_c6 = OfferModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.cc == 't'),\n      clearCache = _useState[0],\n      setCache = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.curated == 't'),\n      showMove = _useState2[0],\n      setShowMove = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    1: '',\n    name: '',\n    chain: ''\n  }),\n      qualifiedCollection = _useState3[0],\n      setQualifiedCollection = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      moving = _useState4[0],\n      setMoving = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approved = _useState5[0],\n      setApproved = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.key),\n      mintPassword = _useState6[0],\n      setMintPassword = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.offer || false),\n      showOffer = _useState7[0],\n      setShowOffer = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.framed || true),\n      framed = _useState8[0],\n      setFramed = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.id),\n      tokenId = _useState9[0],\n      setTokenId = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.slideshowOnly || false),\n      slideshowOnly = _useState10[0],\n      setSlideshowOnly = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultName = _useState11[0],\n      setVaultName = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultIPFS = _useState12[0],\n      setVaultIPFS = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImageIPFS = _useState13[0],\n      setVaultImageIPFS = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultCiphertextV2 = _useState14[0],\n      setVaultCiphertextV2 = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultDesc = _useState15[0],\n      setVaultDesc = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImage = _useState16[0],\n      setVaultImage = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      ownedImage = _useState17[0],\n      setOwnedImage = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultValues = _useState18[0],\n      setVaultValues = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadedValues = _useState19[0],\n      setLoadedValues = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultDataValues = _useState20[0],\n      setVaultDataValues = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      attributes = _useState21[0],\n      setAttributes = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultAddresses = _useState22[0],\n      setVaultAddresses = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      vaultPrivacy = _useState23[0],\n      setVaultPrivacy = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n      vaultTotalValue = _useState24[0],\n      setVaultTotalValue = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChainId = _useState25[0],\n      setVaultChainId = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChain = _useState26[0],\n      setVaultChain = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      hash = _useState27[0],\n      setHash = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currCoin = _useState28[0],\n      setCurrCoin = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currAddr = _useState29[0],\n      setCurrAddr = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState30[0],\n      setState = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mine = _useState31[0],\n      setMine = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      claiming = _useState32[0],\n      setClaiming = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('claimed'),\n      status = _useState33[0],\n      setStatus = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      sealed = _useState34[0],\n      setSealed = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      claimedBy = _useState35[0],\n      setClaimedBy = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      mnemonic = _useState36[0],\n      setMnemonic = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyBTC = _useState37[0],\n      setPrivKeyBTC = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyETH = _useState38[0],\n      setPrivKeyETH = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      privValues = _useState39[0],\n      setKeyValues = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadingApi = _useState40[0],\n      setLoadingApi = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptedEffect = _useState41[0],\n      setDecryptedEffect = _useState41[1];\n\n  var _useState42 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      decryptedEffectRunning = _useState42[0],\n      setDecryptedEffectRunning = _useState42[1];\n\n  var _useState43 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptPassword = _useState43[0],\n      setDecryptPassword = _useState43[1];\n\n  var _useState44 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      invalidVault = _useState44[0],\n      setInvalidVault = _useState44[1];\n\n  var _useState45 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      accepting = _useState45[0],\n      setAccepting = _useState45[1];\n\n  var _useState46 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approving = _useState46[0],\n      setApproving = _useState46[1];\n\n  var _useState47 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      acceptable = _useState47[0],\n      setAcceptable = _useState47[1];\n\n  var _useState48 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      transferPassword = _useState48[0],\n      setTransferPassword = _useState48[1];\n\n  var _useState49 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showTransferPassword = _useState49[0],\n      setShowTransferPassword = _useState49[1];\n\n  var _useState50 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      preTransfering = _useState50[0],\n      setPreTransfering = _useState50[1];\n\n  var _useState51 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      transfering = _useState51[0],\n      setTransfering = _useState51[1];\n\n  var _useState52 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      owner = _useState52[0],\n      setOwner = _useState52[1];\n\n  var _useState53 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      live = _useState53[0],\n      setLive = _useState53[1];\n\n  var _useState54 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      checkLive = _useState54[0],\n      setCheckLive = _useState54[1];\n\n  var _useState55 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      nonce = _useState55[0],\n      setNonce = _useState55[1];\n\n  var _useState56 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      block = _useState56[0],\n      setBlock = _useState56[1];\n\n  var _useState57 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      mintSignature = _useState57[0],\n      setMintSignature = _useState57[1];\n\n  var _useState58 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      to = _useState58[0],\n      setTo = _useState58[1];\n\n  var _useState59 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showVerifyingSignature = _useState59[0],\n      setShowVerifyingSignature = _useState59[1];\n\n  var _useState60 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showMakingVaultMsg = _useState60[0],\n      setShowMakingVaultMsg = _useState60[1];\n\n  var _useState61 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      minting = _useState61[0],\n      setMinting = _useState61[1];\n\n  var _useState62 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCrowdSale = _useState62[0],\n      setIsCrowdSale = _useState62[1];\n\n  var _useState63 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      alternateContractAddress = _useState63[0],\n      setAlternateContractAddress = _useState63[1];\n\n  var _useState64 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      targetAsset = _useState64[0],\n      setTargetAsset = _useState64[1];\n\n  var _useState65 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      targetContract = _useState65[0],\n      setTargetContract = _useState65[1];\n\n  var _useState66 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      move_targetAsset = _useState66[0],\n      setMoveTargetAsset = _useState66[1];\n\n  var _useState67 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      move_targetContract = _useState67[0],\n      setMoveTargetContract = _useState67[1];\n\n  var _useState68 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCovalApproved = _useState68[0],\n      setIsCovalApproved = _useState68[1];\n\n  var _useState69 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      decimals = _useState69[0],\n      setDecimals = _useState69[1];\n\n  var _useState70 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      allowance = _useState70[0],\n      setAllowance = _useState70[1];\n\n  var _useState71 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      balance = _useState71[0],\n      setBalance = _useState71[1];\n\n  var _useState72 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      price = _useState72[0],\n      setPrice = _useState72[1];\n\n  var _useState73 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mineUnMinted = _useState73[0],\n      setMineUnMinted = _useState73[1];\n\n  var _useState74 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mintLockedForever = _useState74[0],\n      setMintLockedForever = _useState74[1];\n\n  var _useState75 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({}),\n      rawMetadata = _useState75[0],\n      setRawMetadata = _useState75[1];\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var vaultHandlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n  var covalContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].coval[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].covalAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenOfferModal = _useDisclosure3.isOpen,\n      onOpenOfferModal = _useDisclosure3.onOpen,\n      onCloseOfferModal = _useDisclosure3.onClose;\n\n  var _useDisclosure4 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure4.isOpen,\n      onToggle = _useDisclosure4.onToggle;\n\n  var _useDisclosure5 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isManageAddressOpen = _useDisclosure5.isOpen,\n      onManageAddressToggle = _useDisclosure5.onToggle;\n\n  var _useDisclosure6 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isAdvancedOpen = _useDisclosure6.isOpen,\n      onAdvancedToggle = _useDisclosure6.onToggle;\n\n  var _useColorMode = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"])(),\n      colorMode = _useColorMode.colorMode;\n\n  var transak;\n  var transferImage;\n\n  var getVaultContract = function getVaultContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address || _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, library.getSigner(account).connectUnchecked());\n  };\n\n  var getCuratedContract = function getCuratedContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].erc1155Abi, library.getSigner(account).connectUnchecked());\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, cb) {\n    // alert(`here ${owner}, ${move_targetAsset} ${move_targetContract}`)\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/liveliness', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context.sent;\n                setLive(data.live);\n                console.log(\"Liveliness check\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return cb();\n  };\n\n  var lazyMint = function lazyMint() {\n    library.getSigner(account).signMessage('Delayed Minting: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/lazyMint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainid: chainId.toString()\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context2.sent;\n\n                  if (!data.error && data.data) {\n                    setMintSignature(data.data.signature);\n                    setNonce(data.data.nonce);\n                    setBlock(data.data.block);\n                    setShowVerifyingSignature(true); // setCreating(true)\n\n                    setTimeout(function () {\n                      delayedMint(data.data.nonce, data.data.block, data.data.signature);\n                    }, 1500);\n                  } else {\n                    alert(data.error ? data.msg : 'unknown error');\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var delayedMint = function delayedMint(nonce, block, sig) {\n    // setCreating(true)\n    console.log(\"Delayed Minting\");\n    setShowVerifyingSignature(false);\n    setShowMakingVaultMsg(true);\n    setMinting(true);\n    var cipherTextHash = vaultAddresses.filter(function (address) {\n      return address.coin == \"ETH\";\n    })[0].address;\n    console.log(\"--------------------------------------------------------Delayed Minting\", account, tokenId, cipherTextHash, nonce, block, sig);\n    handlerContract.buyWithSignature2(account, tokenId, cipherTextHash, nonce, block, sig).then(function (_ref3) {\n      var hash = _ref3.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setShowMakingVaultMsg(false);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      console.log(\"AAAAAHHHHHH\", error);\n      setShowMakingVaultMsg(false); // setMinting(false)\n    });\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref4) {\n        var hash = _ref4.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref5) {\n      var hash = _ref5.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error !== null && error !== void 0 && error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref6) {\n      var hash = _ref6.hash;\n      setTimeout(function () {\n        setHash(hash);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false);\n      }\n    });\n  };\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    covalContract.approve(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], '100000000000000').then(function (_ref7) {\n      var hash = _ref7.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var deleteVault = function deleteVault() {\n    library.getSigner(account).signMessage('Delete: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/v2/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                location.href = location.href.split(\"/\")[0] + \"/vaults\";\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    });\n  };\n\n  var syncAccount = function syncAccount() {\n    var synched = localStorage.getItem(tokenId + '-v');\n\n    if (!synched) {\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/sync/' + tokenId, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        }\n      }).then( /*#__PURE__*/function () {\n        var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(response) {\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  localStorage.setItem(tokenId + '-v', '1');\n                  return _context4.abrupt(\"return\", true);\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x3) {\n          return _ref9.apply(this, arguments);\n        };\n      }())[\"catch\"](function () {\n        return false;\n      });\n    }\n  };\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true' + (clearCache ? '&_vercel_no_cache=1' : ''), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  cc: clearCache ? 't' : ''\n                }\n              });\n\n            case 2:\n              response = _context5.sent;\n              _context5.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context5.sent;\n              setRawMetadata(jsonData);\n              setStates(jsonData); // console.log('vault response was ', jsonData)\n\n              if (jsonData.image_ipfs) {// getIPFSImage(jsonData.image_ipfs)\n              }\n\n              if (jsonData.collectionAddress) {\n                setIsCrowdSale(true);\n                setAlternateContractAddress(jsonData.collectionAddress);\n              }\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                // setStates(jsonData)\n                // !slideshowOnly? saveCache(jsonData) : null\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n              !vaultPrivacy && !loadedValues ? getAllBalancesLive([], tokenId, function (v) {\n                if (v) {\n                  setVaultValues(v);\n                }\n              }) : null;\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getVault() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  cc: 't',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              response = _context6.sent;\n              _context6.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context6.sent;\n\n              if (!jsonData.signature) {\n                _context6.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context6.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context6.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getWitness(_x4) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && jsonData.image && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n\n    if (jsonData.ciphertextV2) {\n      setVaultCiphertextV2(jsonData.ciphertextV2);\n    }\n\n    setMintLockedForever(jsonData.mintLocked && jsonData.mintLockBlock == 0);\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setOwnedImage(jsonData.ownedImage || null);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    jsonData.values ? setVaultValues(vaultValues.concat(jsonData.values)) : null;\n    jsonData.attributes ? setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    })) : null;\n    jsonData.attributes ? setAttributes(jsonData.attributes) : null;\n    setVaultAddresses(jsonData.addresses);\n    setVaultIPFS(jsonData.ipfs || null);\n    setVaultImageIPFS(jsonData.image_ipfs || null);\n    jsonData.targetAsset ? setTargetAsset(jsonData.targetAsset) : null;\n    jsonData.targetContract ? setTargetContract(jsonData.targetContract) : null;\n    jsonData.move_targetContract ? setMoveTargetContract(jsonData.move_targetContract) : null;\n    jsonData.move_targetAsset ? setMoveTargetAsset(jsonData.move_targetAsset) : null;\n\n    if (jsonData.targetContract) {\n      setTimeout(function () {\n        location.href = location.origin + '/nft2?id=' + jsonData.targetContract.tokenId;\n      }, 500);\n    }\n\n    setLive(jsonData.live == false ? false : true);\n    setNonce(jsonData.nonce);\n    setMintSignature(jsonData.signature);\n    setTo(jsonData.to);\n    setVaultChain(jsonData.network);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : jsonData.network == \"bitcoin\" ? 0 : jsonData.network == \"aurora\" ? 1313161554 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    }\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n\n    if (jsonData.sealed) {\n      setSealed(true);\n    } else {\n      setSealed(false);\n    }\n\n    if (jsonData.values.length == 1 && jsonData.attributes.length > 0) {\n      var project = jsonData.attributes.filter(function (item) {\n        return item.value == jsonData.values[0].name;\n      });\n\n      if (project.length > 0) {\n        var projectName = project[0].trait_type;\n\n        var _qualifiedCollection = _constants__WEBPACK_IMPORTED_MODULE_13__[\"curatedContracts\"].filter(function (item) {\n          return item.name == projectName;\n        });\n\n        if (_qualifiedCollection.length > 0) {\n          setQualifiedCollection(_qualifiedCollection[0]);\n        }\n      }\n    }\n  };\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(values, tokenId, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              response = _context7.sent;\n              _context7.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context7.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context7.next = 11;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context7.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getAllBalances(_x5, _x6, _x7) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesLive = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(values, tokenId, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!loadedValues) {\n                _context8.next = 2;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(false));\n\n            case 2:\n              setLoadedValues(true);\n              _context8.next = 5;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId + '?live=true&_vercel_no_cache=1', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              response = _context8.sent;\n              _context8.next = 8;\n              return response.json();\n\n            case 8:\n              jsonData = _context8.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context8.next = 14;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 14:\n              return _context8.abrupt(\"return\", cb(values));\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getAllBalancesLive(_x8, _x9, _x10) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesByAddress = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9(values, ethAddress, btcAddress, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + ethAddress + '/' + btcAddress, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              response = _context9.sent;\n              _context9.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context9.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context9.next = 11;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context9.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getAllBalancesByAddress(_x11, _x12, _x13, _x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  };\n\n  var getSignedJWT = /*#__PURE__*/function () {\n    var _ref15 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10(signature, tokenId, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainid', chainId.toString());\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                tokenId: tokenId\n              });\n              _context10.next = 6;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"SIG_API\"] + '/sign', {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 6:\n              response = _context10.sent;\n              _context10.next = 9;\n              return response.json();\n\n            case 9:\n              jsonData = _context10.sent;\n              return _context10.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getSignedJWT(_x15, _x16, _x17) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  function getTorusKeys(_x18, _x19, _x20) {\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  function _getTorusKeys() {\n    _getTorusKeys = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee29(verifierId, idToken, cb) {\n      var fetchNodeDetails, torusUtils, _yield$fetchNodeDetai, torusNodeEndpoints, torusIndexes, _yield$torusUtils$ret, privKey;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee29$(_context29) {\n        while (1) {\n          switch (_context29.prev = _context29.next) {\n            case 0:\n              fetchNodeDetails = new _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__[\"default\"]({\n                network: \"mainnet\"\n              });\n              torusUtils = new _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]({\n                enableOneKey: true,\n                network: \"mainnet\"\n              });\n              _context29.next = 4;\n              return fetchNodeDetails.getNodeDetails({\n                verifier: 'tor-us-signer-vercel',\n                verifierId: verifierId\n              });\n\n            case 4:\n              _yield$fetchNodeDetai = _context29.sent;\n              torusNodeEndpoints = _yield$fetchNodeDetai.torusNodeEndpoints;\n              torusIndexes = _yield$fetchNodeDetai.torusIndexes;\n              _context29.next = 9;\n              return torusUtils.retrieveShares(torusNodeEndpoints, torusIndexes, 'tor-us-signer-vercel', {\n                verifier_id: verifierId\n              }, idToken);\n\n            case 9:\n              _yield$torusUtils$ret = _context29.sent;\n              privKey = _yield$torusUtils$ret.privKey;\n              return _context29.abrupt(\"return\", cb({\n                privateKey: privKey\n              }));\n\n            case 12:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n      }, _callee29);\n    }));\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11(signature, tokenId, coin, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                coin: coin\n              });\n              _context11.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/address/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              response = _context11.sent;\n              _context11.next = 10;\n              return response.json();\n\n            case 10:\n              jsonData = _context11.sent;\n              return _context11.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function addAddress(_x21, _x22, _x23, _x24) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var decryptEmbed = /*#__PURE__*/function () {\n    var _ref17 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12(signature, tokenId, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context12.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/embed/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              response = _context12.sent;\n              _context12.next = 10;\n              return response.json();\n\n            case 10:\n              jsonData = _context12.sent;\n              return _context12.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function decryptEmbed(_x25, _x26, _x27) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref18 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14() {\n      var owned, _owner, finish, _finish;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _finish = function _finish3() {\n                _finish = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13() {\n                  var acceptable, isApproved;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context13) {\n                    while (1) {\n                      switch (_context13.prev = _context13.next) {\n                        case 0:\n                          _context13.next = 2;\n                          return handlerContract.getPreTransfer(tokenId);\n\n                        case 2:\n                          acceptable = _context13.sent;\n\n                          if (!targetContract[chainId]) {\n                            _context13.next = 9;\n                            break;\n                          }\n\n                          _context13.next = 6;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n\n                        case 6:\n                          isApproved = _context13.sent;\n                          _context13.next = 12;\n                          break;\n\n                        case 9:\n                          _context13.next = 11;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n                        case 11:\n                          isApproved = _context13.sent;\n\n                        case 12:\n                          setApproved(isApproved);\n                          setAcceptable(acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n                          setOwner(_owner);\n                          setMine(_owner === account || to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          setMineUnMinted(to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          loadPasswordFromLocalStorage();\n\n                          if (owner && live == false && !checkLive) {\n                            if (owner === _constants__WEBPACK_IMPORTED_MODULE_13__[\"ZERO_ADDRESS\"] && move_targetContract && move_targetContract.serialNumber) {// is moving\n                            } else {\n                              setCheckLive(true);\n                              checkLiveliness(tokenId, function () {});\n                            }\n                          }\n\n                        case 19:\n                        case \"end\":\n                          return _context13.stop();\n                      }\n                    }\n                  }, _callee13);\n                }));\n                return _finish.apply(this, arguments);\n              };\n\n              finish = function _finish2() {\n                return _finish.apply(this, arguments);\n              };\n\n              // alert(0)\n              console.log(\"Contract states\");\n              owned = false;\n              _context14.prev = 4;\n\n              if (!targetContract[chainId]) {\n                _context14.next = 14;\n                break;\n              }\n\n              console.log(\"Checking owner wth targetContract\");\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context14.next = 10;\n              return emblemContract.getOwnerOfSerial(targetContract.serialNumber);\n\n            case 10:\n              _owner = _context14.sent;\n              console.log(\"--------------------------- owner\", _owner, approved, account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n              _context14.next = 22;\n              break;\n\n            case 14:\n              if (!live) {\n                _context14.next = 20;\n                break;\n              }\n\n              _context14.next = 17;\n              return emblemContract.ownerOf(tokenId);\n\n            case 17:\n              _context14.t0 = _context14.sent;\n              _context14.next = 21;\n              break;\n\n            case 20:\n              _context14.t0 = \"0x0000000000000000000000000000000000000000\";\n\n            case 21:\n              _owner = _context14.t0;\n\n            case 22:\n              _context14.t1 = setDecimals;\n              _context14.next = 25;\n              return covalContract.decimals();\n\n            case 25:\n              _context14.t2 = _context14.sent;\n              (0, _context14.t1)(_context14.t2);\n              _context14.t3 = setAllowance;\n              _context14.next = 30;\n              return covalContract.allowance(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 30:\n              _context14.t4 = _context14.sent;\n              (0, _context14.t3)(_context14.t4);\n              _context14.t5 = setBalance;\n              _context14.next = 35;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 35:\n              _context14.t6 = _context14.sent;\n              (0, _context14.t5)(_context14.t6);\n              _context14.t7 = setPrice;\n              _context14.next = 40;\n              return handlerContract.price().then(function (balance) {\n                return balance.toString();\n              });\n\n            case 40:\n              _context14.t8 = _context14.sent;\n              (0, _context14.t7)(_context14.t8);\n\n              if (Number(allowance) >= Number(price)) {\n                setIsCovalApproved(true);\n              } else {\n                setIsCovalApproved(false);\n              }\n\n              finish();\n              _context14.next = 50;\n              break;\n\n            case 46:\n              _context14.prev = 46;\n              _context14.t9 = _context14[\"catch\"](4);\n              _owner = \"0x0000000000000000000000000000000000000000\";\n              finish();\n\n            case 50:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[4, 46]]);\n    }));\n\n    return function getContractStates() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log(\"mine?\", mine);\n    console.log(\"claiming?\", claiming);\n    console.log(\"accepting?\", accepting);\n    console.log(\"acceptable\", acceptable);\n    console.log(\"qualified\", qualifiedCollection);\n    console.log(\"owner\", owner);\n  });\n\n  var hasAddress = function hasAddress(coin) {\n    console.log(coin, vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0);\n    return vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0;\n  };\n\n  var onRenew = /*#__PURE__*/function () {\n    var _ref19 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee16(name) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              library.getSigner(account).signMessage('Renew: ' + tokenId).then(function (signature) {\n                var address = vaultAddresses.filter(function (address) {\n                  return address.coin == 'NMC';\n                })[0].address;\n                console.log('signature', signature, name);\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/nmc/renew/' + address, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"tokenId\": tokenId,\n                    \"signature\": signature,\n                    \"name\": name\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref20 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context15) {\n                      while (1) {\n                        switch (_context15.prev = _context15.next) {\n                          case 0:\n                            _context15.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context15.sent;\n                            console.log(\"Requested Renew\", data);\n\n                          case 4:\n                          case \"end\":\n                            return _context15.stop();\n                        }\n                      }\n                    }, _callee15);\n                  }));\n\n                  return function (_x29) {\n                    return _ref20.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function onRenew(_x28) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref21 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee19() {\n      var serialNumber;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              if (!targetContract[chainId]) {\n                _context19.next = 5;\n                break;\n              }\n\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context19.next = 4;\n              return emblemContract.getSerial(targetContract.tokenId, 0);\n\n            case 4:\n              serialNumber = _context19.sent;\n\n            case 5:\n              library.getSigner(account).signMessage('Claim: ' + (targetContract[chainId] ? serialNumber : tokenId)).then(function (signature) {\n                setState({\n                  loaded: false\n                });\n\n                if (mineUnMinted && status != \"claimed\" && !mintLockedForever) {\n                  setMintLockedForever(true);\n                }\n\n                getSignedJWT(signature, tokenId, function (token) {\n                  getTorusKeys(tokenId, token.token, /*#__PURE__*/function () {\n                    var _ref22 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee18(keys) {\n                      var bytes, payload;\n                      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee18$(_context18) {\n                        while (1) {\n                          switch (_context18.prev = _context18.next) {\n                            case 0:\n                              try {\n                                bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(vaultCiphertextV2, keys.privateKey);\n                                payload = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n                                setKeyValues(payload.values);\n                                setMnemonic(payload.phrase);\n                                vaultAddresses.forEach( /*#__PURE__*/function () {\n                                  var _ref23 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee17(address) {\n                                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee17$(_context17) {\n                                      while (1) {\n                                        switch (_context17.prev = _context17.next) {\n                                          case 0:\n                                            if (!(address.coin == 'STX')) {\n                                              _context17.next = 6;\n                                              break;\n                                            }\n\n                                            _context17.next = 3;\n                                            return getSTXKey(address, payload.phrase);\n\n                                          case 3:\n                                            address.key = _context17.sent;\n                                            _context17.next = 7;\n                                            break;\n\n                                          case 6:\n                                            address.key = window.phrasePathToKey(payload.phrase, address.path);\n\n                                          case 7:\n                                            if (address.coin == 'BTC') setPrivKeyBTC(address.key);\n                                            if (address.coin == 'ETH') setPrivKeyETH(address.key);\n\n                                          case 9:\n                                          case \"end\":\n                                            return _context17.stop();\n                                        }\n                                      }\n                                    }, _callee17);\n                                  }));\n\n                                  return function (_x31) {\n                                    return _ref23.apply(this, arguments);\n                                  };\n                                }());\n                              } catch (err) {\n                                alert(err);\n                                setTimeout(function () {\n                                  location.href = location.href;\n                                }, 2000);\n                              }\n\n                              setState({\n                                loaded: true\n                              });\n                              onOpenKeysModal();\n\n                            case 3:\n                            case \"end\":\n                              return _context18.stop();\n                          }\n                        }\n                      }, _callee18);\n                    }));\n\n                    return function (_x30) {\n                      return _ref22.apply(this, arguments);\n                    };\n                  }());\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    return function handleSign() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  var getSTXKey = /*#__PURE__*/function () {\n    var _ref24 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee20(address, phrase) {\n      var wallet, account;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return Object(_stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__[\"generateWallet\"])({\n                secretKey: phrase,\n                password: ''\n              });\n\n            case 2:\n              wallet = _context20.sent;\n              console.log('------ stacks account -', wallet.accounts[0]);\n              account = wallet.accounts[0];\n              address.key = account.stxPrivateKey;\n              return _context20.abrupt(\"return\", address.key);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function getSTXKey(_x32, _x33) {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n\n  var handleHideAsset = /*#__PURE__*/function () {\n    var _ref25 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee21(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              library.getSigner(account).signMessage('HideAsset: ' + tokenId).then(function (signature) {\n                hideAsset(tokenId, coin.coin, coin.address, coin.name, signature, function () {\n                  console.log(\"Done hiding coin and getting new balances\");\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function handleHideAsset(_x34) {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n\n  function hideAsset(tokenId, coin, address, name, signature, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/hide/' + tokenId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      body: JSON.stringify({\n        \"coin\": coin ? coin : null,\n        \"address\": address ? address : null,\n        \"name\": name ? name : null,\n        \"signature\": signature ? signature : null\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref26 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee22(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context22.sent;\n                console.log(\"-------\", data);\n                getAllBalances([], tokenId, function (values) {\n                  setVaultValues(values);\n                  return cb();\n                });\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      return function (_x35) {\n        return _ref26.apply(this, arguments);\n      };\n    }());\n  }\n\n  var handleAddressSign = /*#__PURE__*/function () {\n    var _ref27 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee23(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              library.getSigner(account).signMessage('Address: ' + tokenId).then(function (signature) {\n                addAddress(signature, tokenId, coin, function (result) {\n                  getVault();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }));\n\n    return function handleAddressSign(_x36) {\n      return _ref27.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnedEmbed = /*#__PURE__*/function () {\n    var _ref28 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee24() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              library.getSigner(account).signMessage('Embed: ' + tokenId).then(function (signature) {\n                decryptEmbed(signature, tokenId, function (result) {\n                  setVaultImage(result.ownedImage);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    return function handleOwnedEmbed() {\n      return _ref28.apply(this, arguments);\n    };\n  }();\n\n  var handleMove = /*#__PURE__*/function () {\n    var _ref29 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee26() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              console.log('---------- qualified move', qualifiedCollection);\n              library.getSigner(account).signMessage('Move Vault: ' + tokenId).then(function (signature) {\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_V2_API\"] + '/move-vault/', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"chainId\": 1,\n                    \"from\": account,\n                    \"sourceContract\": {\n                      \"1\": _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]\n                    },\n                    \"targetContract\": {\n                      \"1\": qualifiedCollection[chainId],\n                      \"name\": qualifiedCollection.name,\n                      \"chain\": qualifiedCollection.chain\n                    },\n                    \"targetAsset\": {\n                      \"name\": vaultValues[0].name\n                    },\n                    \"amount\": 1,\n                    \"tokenId\": tokenId,\n                    \"signature\": signature\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref30 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee25(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee25$(_context25) {\n                      while (1) {\n                        switch (_context25.prev = _context25.next) {\n                          case 0:\n                            _context25.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context25.sent;\n\n                            if (data.sig) {\n                              vaultHandlerContract.moveVault(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId], qualifiedCollection[chainId], tokenId, data.tokenId, data.nonce, data.sig, data.serial).then(function (hash) {\n                                setHash(hash.hash);\n                                setMoving(false);\n                              });\n                            }\n\n                          case 4:\n                          case \"end\":\n                            return _context25.stop();\n                        }\n                      }\n                    }, _callee25);\n                  }));\n\n                  return function (_x37) {\n                    return _ref30.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 2:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26);\n    }));\n\n    return function handleMove() {\n      return _ref29.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref31 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee27() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                vaultHandlerContract.claim(targetContract[chainId], targetContract.tokenId).then(function (_ref32) {\n                  var hash = _ref32.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              } else {\n                handlerContract.claimOnChain(tokenId).then(function (_ref33) {\n                  var hash = _ref33.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27);\n    }));\n\n    return function handleClaim() {\n      return _ref31.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref34 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee28() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee28$(_context28) {\n        while (1) {\n          switch (_context28.prev = _context28.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  var num = Math.floor(theLetters.length * Math.random());\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                }\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context28.next = 3;\n                break;\n              }\n\n              return _context28.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n      }, _callee28);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref34.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    account && chainId && vaultChainId && chainId == vaultChainId || query.noLayout && query.noLayout == 'true' || query.slideshowOnly && query.slideshowOnly == 'true' ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words ? words.split('\\n\\n\\n\\n') : [\" \"];\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    console.log(vaultAddresses);\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      var ethAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address;\n      var btcAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'BTC';\n      })[0].address;\n      console.log(\"SUCCESS\", vaultAddresses);\n      getAllBalancesByAddress([], ethAddress, btcAddress, function (values) {\n        setVaultValues(values);\n      });\n    } catch (err) {\n      console.log('WTF', err);\n    }\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      if (item.address.includes('private')) {\n        var cipherText = item.address.replace('private:', '');\n        item.address = decrypt(cipherText, key);\n      }\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  function visitOpenSeaLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + (vaultChainId == 137 ? 'matic/' : 'ethereum/') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitLooksRareLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'looksrare.org/collections/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitArcadeLink() {\n    window.open(\"https://app.arcade.xyz/terms/asset/\".concat(targetContract[vaultChainId] ? targetContract[vaultChainId] : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId], \"/\").concat(tokenId), '_blank');\n  }\n\n  {\n    alternateContractAddress ? emblemContract = getVaultContract(alternateContractAddress ? alternateContractAddress : null) : null;\n  }\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              if (localStorage.getItem(\\\"darkMode\\\") == 'false') {\\n                localStorage.setItem(\\\"darkMode\\\",\\\"true\\\"); location.href = location.href\\n              }\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    addresses: vaultAddresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 7\n    }\n  }), showOffer ? __jsx(OfferModal, {\n    isOpen: isOpenOfferModal,\n    onClose: onCloseOfferModal,\n    tokenId: tokenId,\n    mine: mine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }\n  }) : null, __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 7\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault && !slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 15\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 17\n    }\n  }, \"Vault Network: \", _utils__WEBPACK_IMPORTED_MODULE_15__[\"CHAIN_ID_NAMES\"][vaultChainId]), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\" // textTransform=\"uppercase\"\n    ,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy && vaultTotalValue > 0 ? ': ~$' + vaultTotalValue.toLocaleString() : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 17\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultImage,\n    items: vaultValues.map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 23\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 23\n    }\n  }), mine && ownedImage ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    onClick: function onClick() {\n      handleOwnedEmbed();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 21\n    }\n  }, \"(OWNED) Show Full Embed\") : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 23\n    }\n  }, vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: \"./vaults?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    overflowWrap: \"anywhere\",\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    className: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tabs\"], {\n    isFitted: true,\n    variant: \"enclosed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabList\"], {\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 21\n    }\n  }, \"Balances\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 21\n    }\n  }, \"Attributes\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanels\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 21\n    }\n  }, vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 27\n    }\n  })) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1168,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"h4\",\n    mt: 2,\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 29\n    }\n  }, \"Current Contents:  \", __jsx(\"button\", {\n    onClick: function onClick() {\n      getAllBalancesLive([], tokenId, function (v) {\n        setLoadedValues(false);\n        setVaultValues(v);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 50\n    }\n  }, \" [Refresh Balances]\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"p\",\n    color: colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 29\n    }\n  }, \"$\", Number(vaultTotalValue.toFixed(4)).toLocaleString()), vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 35\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      mine: status === 'claimed' && claimedBy === account || mine,\n      onRenew: onRenew,\n      hideAsset: handleHideAsset,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 34\n    }\n  }), vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 35\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 31\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 21\n    }\n  }, __jsx(_partials_Attributes__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n    colorMode: colorMode,\n    attributes: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 23\n    }\n  })))), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 27\n    }\n  }, \"Deposit Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 27\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n      className: \"address_nft_button\",\n      ml: 2,\n      mt: 2,\n      \"font-weight\": \"100 !important\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 33\n      }\n    }, addr.coin == 'ETH' ? addr.coin + '/EVM' : addr.coin == 'BTC' ? addr.coin + '/XCP/OMNI' : addr.coin == 'BCH' ? addr.coin + '/SLP' : addr.coin == 'TAP' ? 'TAPROOT' : addr.coin);\n  })), (mine || status === 'claimed') && vaultAddresses.length < 12 ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onManageAddressToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1237,\n      columnNumber: 29\n    }\n  }, \"Manage Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    isOpen: isManageAddressOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 31\n    }\n  }, !hasAddress('DOGE') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DOGE');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 35\n    }\n  }, \"Add DOGE\") : null, !hasAddress('DGB') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DGB');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 35\n    }\n  }, \"Add Digibyte\") : null, !hasAddress('NMC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('NMC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 35\n    }\n  }, \"Add Namecoin\") : null, !hasAddress('LTC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('LTC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 35\n    }\n  }, \"Add Litecoin\") : null, !hasAddress('MONA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('MONA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 35\n    }\n  }, \"Add Mona\") : null, !hasAddress('TEZOS') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TEZOS');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 35\n    }\n  }, \"Add Tezos\") : null, !hasAddress('SOLANA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('SOLANA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 35\n    }\n  }, \"Add Solana\") : null, !hasAddress('STX') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('STX');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 35\n    }\n  }, \"Add Stacks\") : null, !hasAddress('TAP') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TAP');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 35\n    }\n  }, \"Add Taproot\") : null))) : null))) : null, !(status === 'claimed') && live && (vaultChainId === 1 || vaultChainId === 137) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: mine && vaultChainId == 1 ? \"33%\" : vaultChainId == 137 ? \"100%\" : \"50%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitOpenSeaLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 25\n    }\n  }, \"Opensea\"), vaultChainId == 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: mine ? \"33%\" : \"50%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitLooksRareLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 27\n    }\n  }, \"LooksRare\") : null, mine && vaultChainId == 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"33%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitArcadeLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 28\n    }\n  }, \"Arcade\") : null, showOffer ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"\",\n    onClick: function onClick() {\n      onOpenOfferModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 27\n    }\n  }, mine ? 'My Offers' : 'Make an Offer', \" (NFT\\xB2NFT)\") : null) : null, isCovalApproved && !live ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1320,\n      columnNumber: 25\n    }\n  }, \"Creating a vault spends \", price * Math.pow(10, -decimals), \" Coval from your wallet\"))) : null, mine && !approved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    backgroundColor: \"#02b402\",\n    color: \"black !important\",\n    fontWeight: \"bold !important\",\n    className: \"nft_button\",\n    width: \"100%\",\n    onClick: function onClick() {\n      return handleApproveForall();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1328,\n      columnNumber: 21\n    }\n  }, \" Approve Minting\"))) : null, !live && mine && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg && approved && !isCovalApproved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    backgroundColor: \"#02b402\",\n    color: \"black !important\",\n    fontWeight: \"bold !important\",\n    width: \"100%\",\n    mt: 5,\n    onClick: approveCovalFlow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1342,\n      columnNumber: 21\n    }\n  }, \"Approve Spending Coval\")) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 25\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 25\n    }\n  })) : null, !live && mine && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg && approved && isCovalApproved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    isDisabled: !vaultPrivacy && vaultValues.length < 1 || mintLockedForever,\n    onClick: lazyMint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1379,\n      columnNumber: 25\n    }\n  }, mintLockedForever ? 'Mint Locked - keys accessed before mint' : !vaultPrivacy && vaultValues.length < 1 ? 'Please load the vault to mint' : 'Mint Vault')) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine && !sealed && approved && live ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Unlock Vault (Get Private Keys)')) : vaultChainId === chainId && (status == 'claimed' || mintLockedForever) && (claimedBy === account || mine) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 17\n    }\n  }, __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onAdvancedToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1405,\n      columnNumber: 21\n    }\n  }, \"Advanced Operations\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    width: \"100%\",\n    isOpen: isAdvancedOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1407,\n      columnNumber: 23\n    }\n  }, vaultChainId === chainId && mineUnMinted && status != \"claimed\" && !mintLockedForever ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 29\n    }\n  }, \"Get Keys (Unlocking will prevent minting)\")) : null, mine && showMove && qualifiedCollection && qualifiedCollection[chainId] && qualifiedCollection.name && qualifiedCollection.chain ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleMove();\n    },\n    isDisabled: moving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1418,\n      columnNumber: 29\n    }\n  }, moving ? 'Moving ...' : 'Move Vault')) : null, mine || claimedBy == account ? __jsx(_JsonDownloadLink__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n    data: rawMetadata,\n    filename: \"EmblemVault-\".concat(tokenId, \".json\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1431,\n      columnNumber: 27\n    }\n  }) : null, (!live || status == 'claimed') && to == account && vaultChainId == chainId && !showMakingVaultMsg && vaultValues.length < 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: deleteVault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 27\n    }\n  }, \"Delete Vault \") : null))))), vaultIPFS ? __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__[\"HStack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1444,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    target: \"new\",\n    mb: 2,\n    ml: 35,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 23\n    }\n  }, \"View Metadata on IPFS \"), vaultImageIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    mb: 2,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultImageIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 25\n    }\n  }, \"View Image on IPFS \") : null) : null, sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    mb: 2,\n    ml: 35,\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1453,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454,\n      columnNumber: 23\n    }\n  }, \"*This vault is sealed forever.\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1458,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1464,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : minting ? \"Minting Vault\" : \"Validating transaction\") : null)) : vaultValues.length > 0 && slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 11\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultValues[0].image,\n    items: vaultValues.filter(function (value) {\n      return value.image !== vaultValues[0].image;\n    }).map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 17\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 17\n    }\n  })) : invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1481,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))) : null, hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (claiming && !accepting && !preTransfering) {\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        location.href = location.origin + '/nft?id=' + tokenId + '&cc=t';\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n        location.href = location.origin + '/nft?id=' + tokenId;\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else if (minting) {\n        checkLiveliness(tokenId, function () {\n          setMinting(false);\n          setLive(true);\n          location.href = location.origin + '/nft?id=' + tokenId + '&cc=t';\n        });\n      } else {\n        location.href = location.origin + '/nft?id=' + tokenId;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Nft, \"vXKvp1igCi5Sriz+9p6G9t638PI=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"]];\n});\n\n_c7 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"OfferModal$dynamic\");\n$RefreshReg$(_c6, \"OfferModal\");\n$RefreshReg$(_c7, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9OZnQudHN4Pzc4ZmIiXSwibmFtZXMiOlsiQWRkck1vZGFsIiwiZHluYW1pYyIsIktleXNNb2RhbCIsIk9mZmVyTW9kYWwiLCJOZnQiLCJ1c2VXZWIzUmVhY3QiLCJhY2NvdW50IiwiY2hhaW5JZCIsImxpYnJhcnkiLCJ1c2VSb3V0ZXIiLCJxdWVyeSIsInVzZVN0YXRlIiwiY2MiLCJjbGVhckNhY2hlIiwic2V0Q2FjaGUiLCJjdXJhdGVkIiwic2hvd01vdmUiLCJzZXRTaG93TW92ZSIsIm5hbWUiLCJjaGFpbiIsInF1YWxpZmllZENvbGxlY3Rpb24iLCJzZXRRdWFsaWZpZWRDb2xsZWN0aW9uIiwibW92aW5nIiwic2V0TW92aW5nIiwiYXBwcm92ZWQiLCJzZXRBcHByb3ZlZCIsImtleSIsIm1pbnRQYXNzd29yZCIsInNldE1pbnRQYXNzd29yZCIsIm9mZmVyIiwic2hvd09mZmVyIiwic2V0U2hvd09mZmVyIiwiZnJhbWVkIiwic2V0RnJhbWVkIiwiaWQiLCJ0b2tlbklkIiwic2V0VG9rZW5JZCIsInNsaWRlc2hvd09ubHkiLCJzZXRTbGlkZXNob3dPbmx5IiwidmF1bHROYW1lIiwic2V0VmF1bHROYW1lIiwidmF1bHRJUEZTIiwic2V0VmF1bHRJUEZTIiwidmF1bHRJbWFnZUlQRlMiLCJzZXRWYXVsdEltYWdlSVBGUyIsInZhdWx0Q2lwaGVydGV4dFYyIiwic2V0VmF1bHRDaXBoZXJ0ZXh0VjIiLCJ2YXVsdERlc2MiLCJzZXRWYXVsdERlc2MiLCJ2YXVsdEltYWdlIiwic2V0VmF1bHRJbWFnZSIsIm93bmVkSW1hZ2UiLCJzZXRPd25lZEltYWdlIiwidmF1bHRWYWx1ZXMiLCJzZXRWYXVsdFZhbHVlcyIsImxvYWRlZFZhbHVlcyIsInNldExvYWRlZFZhbHVlcyIsInZhdWx0RGF0YVZhbHVlcyIsInNldFZhdWx0RGF0YVZhbHVlcyIsImF0dHJpYnV0ZXMiLCJzZXRBdHRyaWJ1dGVzIiwidmF1bHRBZGRyZXNzZXMiLCJzZXRWYXVsdEFkZHJlc3NlcyIsInZhdWx0UHJpdmFjeSIsInNldFZhdWx0UHJpdmFjeSIsInZhdWx0VG90YWxWYWx1ZSIsInNldFZhdWx0VG90YWxWYWx1ZSIsInZhdWx0Q2hhaW5JZCIsInNldFZhdWx0Q2hhaW5JZCIsInZhdWx0Q2hhaW4iLCJzZXRWYXVsdENoYWluIiwiaGFzaCIsInNldEhhc2giLCJjdXJyQ29pbiIsInNldEN1cnJDb2luIiwiY3VyckFkZHIiLCJzZXRDdXJyQWRkciIsImxvYWRlZCIsInN0YXRlIiwic2V0U3RhdGUiLCJtaW5lIiwic2V0TWluZSIsImNsYWltaW5nIiwic2V0Q2xhaW1pbmciLCJzdGF0dXMiLCJzZXRTdGF0dXMiLCJzZWFsZWQiLCJzZXRTZWFsZWQiLCJjbGFpbWVkQnkiLCJzZXRDbGFpbWVkQnkiLCJtbmVtb25pYyIsInNldE1uZW1vbmljIiwicHJpdktleUJUQyIsInNldFByaXZLZXlCVEMiLCJwcml2S2V5RVRIIiwic2V0UHJpdktleUVUSCIsInByaXZWYWx1ZXMiLCJzZXRLZXlWYWx1ZXMiLCJsb2FkaW5nQXBpIiwic2V0TG9hZGluZ0FwaSIsImRlY3J5cHRlZEVmZmVjdCIsInNldERlY3J5cHRlZEVmZmVjdCIsImRlY3J5cHRlZEVmZmVjdFJ1bm5pbmciLCJzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nIiwiZGVjcnlwdFBhc3N3b3JkIiwic2V0RGVjcnlwdFBhc3N3b3JkIiwiaW52YWxpZFZhdWx0Iiwic2V0SW52YWxpZFZhdWx0IiwiYWNjZXB0aW5nIiwic2V0QWNjZXB0aW5nIiwiYXBwcm92aW5nIiwic2V0QXBwcm92aW5nIiwiYWNjZXB0YWJsZSIsInNldEFjY2VwdGFibGUiLCJ0cmFuc2ZlclBhc3N3b3JkIiwic2V0VHJhbnNmZXJQYXNzd29yZCIsInNob3dUcmFuc2ZlclBhc3N3b3JkIiwic2V0U2hvd1RyYW5zZmVyUGFzc3dvcmQiLCJwcmVUcmFuc2ZlcmluZyIsInNldFByZVRyYW5zZmVyaW5nIiwidHJhbnNmZXJpbmciLCJzZXRUcmFuc2ZlcmluZyIsIm93bmVyIiwic2V0T3duZXIiLCJsaXZlIiwic2V0TGl2ZSIsImNoZWNrTGl2ZSIsInNldENoZWNrTGl2ZSIsIm5vbmNlIiwic2V0Tm9uY2UiLCJibG9jayIsInNldEJsb2NrIiwibWludFNpZ25hdHVyZSIsInNldE1pbnRTaWduYXR1cmUiLCJ0byIsInNldFRvIiwic2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSIsInNldFNob3dWZXJpZnlpbmdTaWduYXR1cmUiLCJzaG93TWFraW5nVmF1bHRNc2ciLCJzZXRTaG93TWFraW5nVmF1bHRNc2ciLCJtaW50aW5nIiwic2V0TWludGluZyIsImlzQ3Jvd2RTYWxlIiwic2V0SXNDcm93ZFNhbGUiLCJhbHRlcm5hdGVDb250cmFjdEFkZHJlc3MiLCJzZXRBbHRlcm5hdGVDb250cmFjdEFkZHJlc3MiLCJpbWFnZSIsIm1ldGFkYXRhIiwidGFyZ2V0QXNzZXQiLCJzZXRUYXJnZXRBc3NldCIsInNlcmlhbE51bWJlciIsInRhcmdldENvbnRyYWN0Iiwic2V0VGFyZ2V0Q29udHJhY3QiLCJtb3ZlX3RhcmdldEFzc2V0Iiwic2V0TW92ZVRhcmdldEFzc2V0IiwibW92ZV90YXJnZXRDb250cmFjdCIsInNldE1vdmVUYXJnZXRDb250cmFjdCIsImlzQ292YWxBcHByb3ZlZCIsInNldElzQ292YWxBcHByb3ZlZCIsImRlY2ltYWxzIiwic2V0RGVjaW1hbHMiLCJhbGxvd2FuY2UiLCJzZXRBbGxvd2FuY2UiLCJiYWxhbmNlIiwic2V0QmFsYW5jZSIsInByaWNlIiwic2V0UHJpY2UiLCJtaW5lVW5NaW50ZWQiLCJzZXRNaW5lVW5NaW50ZWQiLCJtaW50TG9ja2VkRm9yZXZlciIsInNldE1pbnRMb2NrZWRGb3JldmVyIiwicmF3TWV0YWRhdGEiLCJzZXRSYXdNZXRhZGF0YSIsImhhbmRsZXJDb250cmFjdCIsInVzZUNvbnRyYWN0IiwiY29udHJhY3RBZGRyZXNzZXMiLCJ2YXVsdEhhbmRsZXIiLCJ2YXVsdEhhbmRsZXJBYmkiLCJ2YXVsdEhhbmRsZXJDb250cmFjdCIsInZhdWx0SGFuZGxlclY4IiwidmF1bHRIYW5kbGVyVjhBYmkiLCJlbWJsZW1Db250cmFjdCIsImVtYmxlbVZhdWx0IiwiZW1ibGVtQWJpIiwiY292YWxDb250cmFjdCIsImNvdmFsIiwiY292YWxBYmkiLCJ1c2VEaXNjbG9zdXJlIiwiaXNPcGVuQWRkck1vZGFsIiwiaXNPcGVuIiwib25PcGVuQWRkck1vZGFsIiwib25PcGVuIiwib25DbG9zZUFkZHJNb2RhbCIsIm9uQ2xvc2UiLCJpc09wZW5LZXlzTW9kYWwiLCJvbk9wZW5LZXlzTW9kYWwiLCJvbkNsb3NlS2V5c01vZGFsIiwiaXNPcGVuT2ZmZXJNb2RhbCIsIm9uT3Blbk9mZmVyTW9kYWwiLCJvbkNsb3NlT2ZmZXJNb2RhbCIsIm9uVG9nZ2xlIiwiaXNNYW5hZ2VBZGRyZXNzT3BlbiIsIm9uTWFuYWdlQWRkcmVzc1RvZ2dsZSIsImlzQWR2YW5jZWRPcGVuIiwib25BZHZhbmNlZFRvZ2dsZSIsInVzZUNvbG9yTW9kZSIsImNvbG9yTW9kZSIsInRyYW5zYWsiLCJ0cmFuc2ZlckltYWdlIiwiZ2V0VmF1bHRDb250cmFjdCIsImFkZHJlc3MiLCJDb250cmFjdCIsImdldFNpZ25lciIsImNvbm5lY3RVbmNoZWNrZWQiLCJnZXRDdXJhdGVkQ29udHJhY3QiLCJlcmMxMTU1QWJpIiwiY2hlY2tMaXZlbGluZXNzIiwiY2IiLCJmZXRjaCIsIkVNQkxFTV9BUEkiLCJtZXRob2QiLCJoZWFkZXJzIiwic2VydmljZSIsImNoYWluaWQiLCJ0b1N0cmluZyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwibGF6eU1pbnQiLCJzaWduTWVzc2FnZSIsInNpZ25hdHVyZSIsImVycm9yIiwic2V0VGltZW91dCIsImRlbGF5ZWRNaW50IiwiYWxlcnQiLCJtc2ciLCJzaWciLCJjaXBoZXJUZXh0SGFzaCIsImZpbHRlciIsImNvaW4iLCJidXlXaXRoU2lnbmF0dXJlMiIsImZpcmVNZXRhTWFzayIsImdldFdpdG5lc3MiLCJ3aXRuZXNzIiwidHJhbnNmZXJXaXRoQ29kZSIsImNvZGUiLCJhZGRQcmVUcmFuc2ZlciIsImhhbmRsZUFwcHJvdmVGb3JhbGwiLCJzZXRBcHByb3ZhbEZvckFsbCIsImFwcHJvdmVDb3ZhbEZsb3ciLCJhcHByb3ZlIiwiZGVsZXRlVmF1bHQiLCJsb2NhdGlvbiIsImhyZWYiLCJzcGxpdCIsInN5bmNBY2NvdW50Iiwic3luY2hlZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwiZ2V0VmF1bHQiLCJqc29uRGF0YSIsInNldFN0YXRlcyIsImltYWdlX2lwZnMiLCJjb2xsZWN0aW9uQWRkcmVzcyIsImdldEFsbEJhbGFuY2VzTGl2ZSIsInYiLCJpbmNsdWRlcyIsImNpcGhlcnRleHRWMiIsIm1pbnRMb2NrZWQiLCJtaW50TG9ja0Jsb2NrIiwiZGVzY3JpcHRpb24iLCJ0b3RhbFZhbHVlIiwidmFsdWVzIiwiY29uY2F0IiwiaXRlbSIsInRyYWl0X3R5cGUiLCJhZGRyZXNzZXMiLCJpcGZzIiwib3JpZ2luIiwibmV0d29yayIsImlzUHZ0IiwibGVuZ3RoIiwicHJvamVjdCIsInZhbHVlIiwicHJvamVjdE5hbWUiLCJfcXVhbGlmaWVkQ29sbGVjdGlvbiIsImN1cmF0ZWRDb250cmFjdHMiLCJnZXRBbGxCYWxhbmNlcyIsImJhbGFuY2VzIiwiZ2V0QWxsQmFsYW5jZXNCeUFkZHJlc3MiLCJldGhBZGRyZXNzIiwiYnRjQWRkcmVzcyIsInNhdmVQYXNzd29yZFRvTG9jYWxTdG9yYWdlIiwibG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSIsInN0b3JlZFB3IiwiZ2V0U2lnbmVkSldUIiwibXlIZWFkZXJzIiwiSGVhZGVycyIsImFwcGVuZCIsInJhdyIsIlNJR19BUEkiLCJyZWRpcmVjdCIsImdldFRvcnVzS2V5cyIsInZlcmlmaWVySWQiLCJpZFRva2VuIiwiZmV0Y2hOb2RlRGV0YWlscyIsIkZldGNoTm9kZURldGFpbHMiLCJ0b3J1c1V0aWxzIiwiVG9ydXNVdGlscyIsImVuYWJsZU9uZUtleSIsImdldE5vZGVEZXRhaWxzIiwidmVyaWZpZXIiLCJ0b3J1c05vZGVFbmRwb2ludHMiLCJ0b3J1c0luZGV4ZXMiLCJyZXRyaWV2ZVNoYXJlcyIsInZlcmlmaWVyX2lkIiwicHJpdktleSIsInByaXZhdGVLZXkiLCJhZGRBZGRyZXNzIiwiZGVjcnlwdEVtYmVkIiwiZ2V0Q29udHJhY3RTdGF0ZXMiLCJmaW5pc2giLCJnZXRQcmVUcmFuc2ZlciIsImlzQXBwcm92ZWRGb3JBbGwiLCJpc0FwcHJvdmVkIiwiX2Zyb20iLCJfb3duZXIiLCJaRVJPX0FERFJFU1MiLCJvd25lZCIsImdldE93bmVyT2ZTZXJpYWwiLCJvd25lck9mIiwiYmFsYW5jZU9mIiwiTnVtYmVyIiwidXNlRWZmZWN0IiwiaGFzQWRkcmVzcyIsIm9uUmVuZXciLCJoYW5kbGVTaWduIiwiZ2V0U2VyaWFsIiwidG9rZW4iLCJrZXlzIiwiYnl0ZXMiLCJDcnlwdG9KUyIsIkFFUyIsImRlY3J5cHQiLCJwYXlsb2FkIiwicGFyc2UiLCJlbmMiLCJVdGY4IiwicGhyYXNlIiwiZm9yRWFjaCIsImdldFNUWEtleSIsIndpbmRvdyIsInBocmFzZVBhdGhUb0tleSIsInBhdGgiLCJlcnIiLCJnZW5lcmF0ZVdhbGxldCIsInNlY3JldEtleSIsInBhc3N3b3JkIiwid2FsbGV0IiwiYWNjb3VudHMiLCJzdHhQcml2YXRlS2V5IiwiaGFuZGxlSGlkZUFzc2V0IiwiaGlkZUFzc2V0IiwiaGFuZGxlQWRkcmVzc1NpZ24iLCJyZXN1bHQiLCJoYW5kbGVPd25lZEVtYmVkIiwiaGFuZGxlTW92ZSIsIkVNQkxFTV9WMl9BUEkiLCJtb3ZlVmF1bHQiLCJzZXJpYWwiLCJoYW5kbGVDbGFpbSIsImNsYWltIiwiY2xhaW1PbkNoYWluIiwic3RhcnREZWNyeXB0RWZmZWN0IiwibmV4dEZyYW1lIiwicG9zIiwiaSIsImNsZW4iLCJzdHJpIiwibnVtIiwiTWF0aCIsImZsb29yIiwidGhlTGV0dGVycyIsInJhbmRvbSIsImxldHRlciIsImNoYXJBdCIsInNpIiwiaW5jcmVtZW50IiwiZml4ZWQiLCJjdG50Iiwic3BlZWQiLCJydXN0bGUiLCJub0xheW91dCIsInNwbGl0RGVzY3JpcHRpb24iLCJ3b3JkcyIsImRlc2MiLCJ0cmltIiwidHJ5RGVjcnlwdCIsImNpcGhlcnRleHQiLCJyZXBsYWNlIiwiZGVjcnlwdEFkZHJlc3NlcyIsImNpcGhlclRleHQiLCJkZWNyeXB0ZWREYXRhIiwidmlzaXRPcGVuU2VhTGluayIsIm9wZW4iLCJ2aXNpdExvb2tzUmFyZUxpbmsiLCJ2aXNpdEFyY2FkZUxpbmsiLCJfX2h0bWwiLCJDSEFJTl9JRF9OQU1FUyIsInRvTG9jYWxlU3RyaW5nIiwidHlwZSIsIm1hcCIsImNhblN3aXBlIiwiZ2ZtIiwiZSIsInRhcmdldCIsInRvRml4ZWQiLCJhdHRyaWJ1dGVfa2V5IiwiYWRkciIsInBvdyIsInByb3RvY29sIiwiaG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BLElBQU1BLFNBQVMsR0FBR0Msb0RBQU8sTUFBQztBQUFBLFNBQU0sOEhBQU47QUFBQSxDQUFEO0FBQUE7QUFBQTtBQUFBLGtDQUFjLCtDQUFkO0FBQUE7QUFBQSxjQUFjLGFBQWQ7QUFBQTtBQUFBLEVBQXpCO01BQU1ELFM7QUFDTixJQUFNRSxTQUFTLEdBQUdELG9EQUFPLE9BQUM7QUFBQSxTQUFNLDhIQUFOO0FBQUEsQ0FBRDtBQUFBO0FBQUE7QUFBQSxrQ0FBYywrQ0FBZDtBQUFBO0FBQUEsY0FBYyxhQUFkO0FBQUE7QUFBQSxFQUF6QjtNQUFNQyxTO0FBQ04sSUFBTUMsVUFBVSxHQUFHRixvREFBTyxPQUFDO0FBQUEsU0FBTSxnSUFBTjtB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QUNBMEwsZ0JBQVEsQ0FBQ0MsSUFBVCxHQUFnQkQsUUFBUSxDQUFDMkIsTUFBVCxHQUFrQixVQUFsQixHQUErQjFQLE9BQS9DO0FBQ0QsT0FMTSxNQUtBLElBQUdxRixXQUFILEVBQWdCO0FBQ3JCQyxzQkFBYyxDQUFDLEtBQUQsQ0FBZDtBQUNBaUosZ0JBQVE7QUFDUmxNLGVBQU8sQ0FBQyxJQUFELENBQVA7QUFDRCxPQUpNLE1BSUEsSUFBR29FLE9BQUgsRUFBWTtBQUNqQjRFLHVCQUFlLENBQUNyTCxPQUFELEVBQVUsWUFBSTtBQUMzQjBHLG9CQUFVLENBQUMsS0FBRCxDQUFWO0FBQ0FoQixpQkFBTyxDQUFDLElBQUQsQ0FBUDtBQUNBcUksa0JBQVEsQ0FBQ0MsSUFBVCxHQUFnQkQsUUFBUSxDQUFDMkIsTUFBVCxHQUFrQixVQUFsQixHQUErQjFQLE9BQS9CLEdBQXlDLE9BQXpEO0FBQ0QsU0FKYyxDQUFmO0FBS0QsT0FOTSxNQU1BO0FBQ0wrTixnQkFBUSxDQUFDQyxJQUFULEdBQWdCRCxRQUFRLENBQUMyQixNQUFULEdBQWtCLFVBQWxCLEdBQStCMVAsT0FBL0M7QUFDRDtBQUNGLEtBcENIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFERyxHQXVDRCxJQTNjTixFQTRjRSxNQUFDLG1EQUFEO0FBQUssVUFBTSxFQUFDLE1BQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQTVjRixDQTNDRixDQURGO0FBNGZEOztHQTE4Q3VCL0IsRztVQUdnQkMsNkQsRUFDcEJJLHFELEVBNkVNcUssbUQsRUFDS0EsbUQsRUFDUkEsbUQsRUFDQ0EsbUQsRUFFa0VhLDZELEVBQ0FBLDZELEVBQ0dBLDZELEVBQzlEQSw2RCxFQUM0Q0EsNkQsRUFDVkEsNkQsRUFFekNrQiw0RDs7O01BN0ZBek0sRyIsImZpbGUiOiIuL2NvbXBvbmVudHMvTmZ0LnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEJveCxcbiAgRmxleCxcbiAgSW1hZ2UsXG4gIFRleHQsXG4gIFN0YWNrLFxuICBCdXR0b24sXG4gIEJ1dHRvbkdyb3VwLFxuICBJbnB1dCxcbiAgTGluayxcbiAgQWxlcnQsXG4gIEFsZXJ0SWNvbixcbiAgdXNlRGlzY2xvc3VyZSxcbiAgQ29sbGFwc2UsXG4gIHVzZUNvbG9yTW9kZSxcbiAgVGFicyxcbiAgVGFiTGlzdCxcbiAgVGFiLFxuICBUYWJQYW5lbCxcbiAgVGFiUGFuZWxzXG59IGZyb20gJ0BjaGFrcmEtdWkvY29yZSdcblxuaW1wb3J0IHtIU3RhY2t9IGZyb20gJ0BjaGFrcmEtdWkvcmVhY3QnXG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCJcbmltcG9ydCB7IHVzZVdlYjNSZWFjdCB9IGZyb20gJ0B3ZWIzLXJlYWN0L2NvcmUnXG5pbXBvcnQgeyBTZXRTdGF0ZUFjdGlvbiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgUmVmcmVzaGluZyBmcm9tICcuL1JlZnJlc2hpbmcnXG5pbXBvcnQgTG9hZGVyIGZyb20gJ3JlYWN0LWxvYWRlcidcbmltcG9ydCBkeW5hbWljIGZyb20gJ25leHQvZHluYW1pYydcbmltcG9ydCB7IENvbnRyYWN0IH0gZnJvbSAnQGV0aGVyc3Byb2plY3QvY29udHJhY3RzJ1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25Ub2FzdCB9IGZyb20gJy4vVHJhbnNhY3Rpb25Ub2FzdCdcbmltcG9ydCB7IEVNQkxFTV9BUEksIGNvbnRyYWN0QWRkcmVzc2VzLCBjdXJhdGVkQ29udHJhY3RzLCBTSUdfQVBJLCBFTUJMRU1fVjJfQVBJLCBaRVJPX0FERFJFU1MgfSBmcm9tICcuLi9jb25zdGFudHMnXG5pbXBvcnQgeyB1c2VDb250cmFjdCB9IGZyb20gJy4uL2hvb2tzJ1xuaW1wb3J0IHsgQ0hBSU5fSURfTkFNRVMgfSBmcm9tICcuLi91dGlscydcbmltcG9ydCBDcnlwdG9KUyBmcm9tICdjcnlwdG8tanMnXG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bidcbmltcG9ydCBnZm0gZnJvbSAncmVtYXJrLWdmbSdcbmltcG9ydCBFbWJlZCBmcm9tICcuL0VtYmVkJ1xuaW1wb3J0IE5GVFNsaWRlc2hvdyBmcm9tICcuL2VtYmVkL05GVFNsaWRlc2hvdydcbmltcG9ydCBDb2luQmFsYW5jZSBmcm9tICcuL3BhcnRpYWxzL0NvaW5CYWxhbmNlJ1xuaW1wb3J0IEF0dHJpYnV0ZXMgZnJvbSAnLi9wYXJ0aWFscy9BdHRyaWJ1dGVzJztcbmltcG9ydCB7IGdlbmVyYXRlV2FsbGV0IH0gZnJvbSAnQHN0YWNrcy93YWxsZXQtc2RrJztcbmltcG9ydCBGZXRjaE5vZGVEZXRhaWxzIGZyb20gXCJAdG9ydXNsYWJzL2ZldGNoLW5vZGUtZGV0YWlsc1wiXG5pbXBvcnQgVG9ydXNVdGlscyBmcm9tIFwiQHRvcnVzbGFicy90b3J1cy5qc1wiXG5pbXBvcnQgSnNvbkRvd25sb2FkTGluayBmcm9tICcuL0pzb25Eb3dubG9hZExpbmsnXG5cblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHsgcGhyYXNlVG9LZXk6IGFueSwgcGhyYXNlUGF0aFRvS2V5OiBhbnl9XG59XG5cbmNvbnN0IEFkZHJNb2RhbCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL0FkZHJNb2RhbCcpKVxuY29uc3QgS2V5c01vZGFsID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vS2V5c01vZGFsJykpXG5jb25zdCBPZmZlck1vZGFsID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vT2ZmZXJNb2RhbCcpKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOZnQoKSB7XG4gIFxuIFxuICBjb25zdCB7IGFjY291bnQsIGNoYWluSWQsIGxpYnJhcnkgfSA9IHVzZVdlYjNSZWFjdCgpXG4gIGNvbnN0IHsgcXVlcnkgfSA9IHVzZVJvdXRlcigpXG4gIGNvbnN0IFtjbGVhckNhY2hlLCBzZXRDYWNoZV0gPSB1c2VTdGF0ZShxdWVyeS5jYyA9PSAndCcpXG4gIGNvbnN0IFtzaG93TW92ZSwgc2V0U2hvd01vdmVdID0gdXNlU3RhdGUocXVlcnkuY3VyYXRlZCA9PSAndCcpXG4gIGNvbnN0IFtxdWFsaWZpZWRDb2xsZWN0aW9uLCBzZXRRdWFsaWZpZWRDb2xsZWN0aW9uXSA9IHVzZVN0YXRlKHsxOiAnJywgbmFtZTogJycsIGNoYWluOiAnJ30pXG4gIGNvbnN0IFttb3ZpbmcsIHNldE1vdmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FwcHJvdmVkLCBzZXRBcHByb3ZlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW21pbnRQYXNzd29yZCwgc2V0TWludFBhc3N3b3JkXSA9IHVzZVN0YXRlKHF1ZXJ5LmtleSlcbiAgY29uc3QgW3Nob3dPZmZlciwgc2V0U2hvd09mZmVyXSA9IHVzZVN0YXRlKHF1ZXJ5Lm9mZmVyIHx8IGZhbHNlKVxuICBjb25zdCBbZnJhbWVkLCBzZXRGcmFtZWRdID0gdXNlU3RhdGUocXVlcnkuZnJhbWVkIHx8IHRydWUpXG4gIGNvbnN0IFt0b2tlbklkLCBzZXRUb2tlbklkXSA9IHVzZVN0YXRlKHF1ZXJ5LmlkKVxuICBjb25zdCBbc2xpZGVzaG93T25seSwgc2V0U2xpZGVzaG93T25seV0gPSB1c2VTdGF0ZShxdWVyeS5zbGlkZXNob3dPbmx5IHx8IGZhbHNlKVxuICBjb25zdCBbdmF1bHROYW1lLCBzZXRWYXVsdE5hbWVdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt2YXVsdElQRlMsIHNldFZhdWx0SVBGU10gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0SW1hZ2VJUEZTLCBzZXRWYXVsdEltYWdlSVBGU10gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0Q2lwaGVydGV4dFYyLCBzZXRWYXVsdENpcGhlcnRleHRWMl0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0RGVzYywgc2V0VmF1bHREZXNjXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRJbWFnZSwgc2V0VmF1bHRJbWFnZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW293bmVkSW1hZ2UsIHNldE93bmVkSW1hZ2VdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt2YXVsdFZhbHVlcywgc2V0VmF1bHRWYWx1ZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFtsb2FkZWRWYWx1ZXMsIHNldExvYWRlZFZhbHVlc10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3ZhdWx0RGF0YVZhbHVlcywgc2V0VmF1bHREYXRhVmFsdWVzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbYXR0cmlidXRlcywgc2V0QXR0cmlidXRlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW3ZhdWx0QWRkcmVzc2VzLCBzZXRWYXVsdEFkZHJlc3Nlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW3ZhdWx0UHJpdmFjeSwgc2V0VmF1bHRQcml2YWN5XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdmF1bHRUb3RhbFZhbHVlLCBzZXRWYXVsdFRvdGFsVmFsdWVdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW3ZhdWx0Q2hhaW5JZCwgc2V0VmF1bHRDaGFpbklkXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFt2YXVsdENoYWluLCBzZXRWYXVsdENoYWluXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtoYXNoLCBzZXRIYXNoXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtjdXJyQ29pbiwgc2V0Q3VyckNvaW5dID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtjdXJyQWRkciwgc2V0Q3VyckFkZHJdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoeyBsb2FkZWQ6IGZhbHNlIH0pXG4gIGNvbnN0IFttaW5lLCBzZXRNaW5lXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbY2xhaW1pbmcsIHNldENsYWltaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbc3RhdHVzLCBzZXRTdGF0dXNdID0gdXNlU3RhdGUoJ2NsYWltZWQnKVxuICBjb25zdCBbc2VhbGVkLCBzZXRTZWFsZWRdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtjbGFpbWVkQnksIHNldENsYWltZWRCeV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbbW5lbW9uaWMsIHNldE1uZW1vbmljXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbcHJpdktleUJUQywgc2V0UHJpdktleUJUQ10gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ByaXZLZXlFVEgsIHNldFByaXZLZXlFVEhdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtwcml2VmFsdWVzLCBzZXRLZXlWYWx1ZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFtsb2FkaW5nQXBpLCBzZXRMb2FkaW5nQXBpXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbZGVjcnlwdGVkRWZmZWN0LCBzZXREZWNyeXB0ZWRFZmZlY3RdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtkZWNyeXB0ZWRFZmZlY3RSdW5uaW5nLCBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbZGVjcnlwdFBhc3N3b3JkLCBzZXREZWNyeXB0UGFzc3dvcmRdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtpbnZhbGlkVmF1bHQsIHNldEludmFsaWRWYXVsdF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FjY2VwdGluZywgc2V0QWNjZXB0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYXBwcm92aW5nLCBzZXRBcHByb3ZpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthY2NlcHRhYmxlLCBzZXRBY2NlcHRhYmxlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdHJhbnNmZXJQYXNzd29yZCwgc2V0VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3Nob3dUcmFuc2ZlclBhc3N3b3JkLCBzZXRTaG93VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3ByZVRyYW5zZmVyaW5nLCBzZXRQcmVUcmFuc2ZlcmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3RyYW5zZmVyaW5nLCBzZXRUcmFuc2ZlcmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW293bmVyLCBzZXRPd25lcl0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbbGl2ZSwgc2V0TGl2ZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2NoZWNrTGl2ZSwgc2V0Q2hlY2tMaXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbm9uY2UsIHNldE5vbmNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtibG9jaywgc2V0QmxvY2tdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW21pbnRTaWduYXR1cmUsIHNldE1pbnRTaWduYXR1cmVdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW3RvLCBzZXRUb10gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbc2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSwgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3Nob3dNYWtpbmdWYXVsdE1zZywgc2V0U2hvd01ha2luZ1ZhdWx0TXNnXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbWludGluZywgc2V0TWludGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2lzQ3Jvd2RTYWxlLCBzZXRJc0Nyb3dkU2FsZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcywgc2V0QWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFt0YXJnZXRBc3NldCwgc2V0VGFyZ2V0QXNzZXRdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBpbWFnZTogJycsIG1ldGFkYXRhOiAnJ30pXG4gIGNvbnN0IFt0YXJnZXRDb250cmFjdCwgc2V0VGFyZ2V0Q29udHJhY3RdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBjaGFpbjogJycsIDQ6ICcnLCAxOiAnJywgdG9rZW5JZDoge30sIHNlcmlhbE51bWJlcjogeydoZXgnOicnfSB9KVxuICBjb25zdCBbbW92ZV90YXJnZXRBc3NldCwgc2V0TW92ZVRhcmdldEFzc2V0XSA9IHVzZVN0YXRlKHtuYW1lOiAnJywgaW1hZ2U6ICcnLCBtZXRhZGF0YTogJyd9KVxuICBjb25zdCBbbW92ZV90YXJnZXRDb250cmFjdCwgc2V0TW92ZVRhcmdldENvbnRyYWN0XSA9IHVzZVN0YXRlKHtuYW1lOiAnJywgY2hhaW46ICcnLCA0OiAnJywgMTogJycsIHRva2VuSWQ6IHt9LCBzZXJpYWxOdW1iZXI6IHsnaGV4JzonJ30gfSlcbiAgY29uc3QgW2lzQ292YWxBcHByb3ZlZCwgc2V0SXNDb3ZhbEFwcHJvdmVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbZGVjaW1hbHMsIHNldERlY2ltYWxzXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFthbGxvd2FuY2UsIHNldEFsbG93YW5jZV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbYmFsYW5jZSwgc2V0QmFsYW5jZV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbcHJpY2UsIHNldFByaWNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFttaW5lVW5NaW50ZWQsIHNldE1pbmVVbk1pbnRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW21pbnRMb2NrZWRGb3JldmVyLCBzZXRNaW50TG9ja2VkRm9yZXZlcl0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3Jhd01ldGFkYXRhLCBzZXRSYXdNZXRhZGF0YV0gPSB1c2VTdGF0ZSh7fSlcbiAgXG4gIGNvbnN0IGhhbmRsZXJDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyQWJpLCB0cnVlKVxuICBjb25zdCB2YXVsdEhhbmRsZXJDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4W2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJWOEFiaSwgdHJ1ZSlcbiAgbGV0IGVtYmxlbUNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaSwgdHJ1ZSlcbiAgY29uc3QgY292YWxDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLmNvdmFsW2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy5jb3ZhbEFiaSwgdHJ1ZSlcblxuICBjb25zdCB7IGlzT3BlbjogaXNPcGVuQWRkck1vZGFsLCBvbk9wZW46IG9uT3BlbkFkZHJNb2RhbCwgb25DbG9zZTogb25DbG9zZUFkZHJNb2RhbCB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuOiBpc09wZW5LZXlzTW9kYWwsIG9uT3Blbjogb25PcGVuS2V5c01vZGFsLCBvbkNsb3NlOiBvbkNsb3NlS2V5c01vZGFsIH0gPSB1c2VEaXNjbG9zdXJlKClcbiAgY29uc3QgeyBpc09wZW46IGlzT3Blbk9mZmVyTW9kYWwsIG9uT3Blbjogb25PcGVuT2ZmZXJNb2RhbCwgb25DbG9zZTogb25DbG9zZU9mZmVyTW9kYWwgfSA9IHVzZURpc2Nsb3N1cmUoKVxuICBjb25zdCB7IGlzT3Blbiwgb25Ub2dnbGUgfSA9IHVzZURpc2Nsb3N1cmUoKVxuICBjb25zdCB7IGlzT3BlbjogaXNNYW5hZ2VBZGRyZXNzT3Blbiwgb25Ub2dnbGU6IG9uTWFuYWdlQWRkcmVzc1RvZ2dsZSB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuOiBpc0FkdmFuY2VkT3Blbiwgb25Ub2dnbGU6IG9uQWR2YW5jZWRUb2dnbGUgfSA9IHVzZURpc2Nsb3N1cmUoKVxuXG4gIGNvbnN0IHsgY29sb3JNb2RlIH0gPSB1c2VDb2xvck1vZGUoKVxuXG4gIGxldCB0cmFuc2FrOiB7IG9uOiAoYXJnMDogYW55LCBhcmcxOiB7IChkYXRhOiBhbnkpOiB2b2lkOyAob3JkZXJEYXRhOiBhbnkpOiB2b2lkIH0pID0+IHZvaWQ7IEFMTF9FVkVOVFM6IGFueTsgRVZFTlRTOiB7IFRSQU5TQUtfT1JERVJfU1VDQ0VTU0ZVTDogYW55IH07IGNsb3NlOiAoKSA9PiB2b2lkOyBpbml0OiAoKSA9PiB2b2lkIH1cblxuICBpbnRlcmZhY2UgRXJyb3JXaXRoQ29kZSBleHRlbmRzIEVycm9yIHtcbiAgICBjb2RlPzogbnVtYmVyXG4gIH1cblxuICBsZXQgdHJhbnNmZXJJbWFnZTogc3RyaW5nO1xuXG4gIGNvbnN0IGdldFZhdWx0Q29udHJhY3QgPSAoYWRkcmVzcyA9IG51bGwpID0+e1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoYWRkcmVzcyB8fCBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFtjaGFpbklkXSwgY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtQWJpLCBsaWJyYXJ5LmdldFNpZ25lcihhY2NvdW50KS5jb25uZWN0VW5jaGVja2VkKCkpXG4gIH1cblxuICBjb25zdCBnZXRDdXJhdGVkQ29udHJhY3QgPSAoYWRkcmVzcyA9IG51bGwpID0+e1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoYWRkcmVzcywgY29udHJhY3RBZGRyZXNzZXMuZXJjMTE1NUFiaSwgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudCkuY29ubmVjdFVuY2hlY2tlZCgpKVxuICB9ICBcblxuICBjb25zdCBjaGVja0xpdmVsaW5lc3MgPSAodG9rZW5JZDogc3RyaW5nIHwgc3RyaW5nW10sIGNiOiB7ICgpOiB2b2lkOyAoKTogdm9pZDsgKCk6IGFueSB9KT0+e1xuICAgIC8vIGFsZXJ0KGBoZXJlICR7b3duZXJ9LCAke21vdmVfdGFyZ2V0QXNzZXR9ICR7bW92ZV90YXJnZXRDb250cmFjdH1gKVxuICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL2xpdmVsaW5lc3MnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgIH0sXG4gICAgICAvLyBXZSBjb252ZXJ0IHRoZSBSZWFjdCBzdGF0ZSB0byBKU09OIGFuZCBzZW5kIGl0IGFzIHRoZSBQT1NUIGJvZHlcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt0b2tlbklkOiB0b2tlbklkfSksXG4gICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBzZXRMaXZlKGRhdGEubGl2ZSlcbiAgICAgIGNvbnNvbGUubG9nKFwiTGl2ZWxpbmVzcyBjaGVja1wiLCBkYXRhKVxuICAgIH0pXG4gICAgcmV0dXJuIGNiKClcbiAgfVxuXG4gIGNvbnN0IGxhenlNaW50ID0gKCkgPT57XG4gICAgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudClcbiAgICAuc2lnbk1lc3NhZ2UoJ0RlbGF5ZWQgTWludGluZzogJyArIHRva2VuSWQpXG4gICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcInNpZ1wiLCBzaWduYXR1cmUpXG4gICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9sYXp5TWludCcsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3Rva2VuSWQ6IHRva2VuSWQsIHNpZ25hdHVyZTogc2lnbmF0dXJlfSksXG4gICAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICAgICAgaWYgKCFkYXRhLmVycm9yICYmIGRhdGEuZGF0YSkge1xuICAgICAgICAgICAgc2V0TWludFNpZ25hdHVyZShkYXRhLmRhdGEuc2lnbmF0dXJlKVxuICAgICAgICAgICAgc2V0Tm9uY2UoZGF0YS5kYXRhLm5vbmNlKVxuICAgICAgICAgICAgc2V0QmxvY2soZGF0YS5kYXRhLmJsb2NrKVxuICAgICAgICAgICAgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSh0cnVlKVxuICAgICAgICAgICAgLy8gc2V0Q3JlYXRpbmcodHJ1ZSlcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9PntcbiAgICAgICAgICAgICAgZGVsYXllZE1pbnQoZGF0YS5kYXRhLm5vbmNlLCBkYXRhLmRhdGEuYmxvY2ssIGRhdGEuZGF0YS5zaWduYXR1cmUpXG4gICAgICAgICAgICB9LCAxNTAwKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhbGVydChkYXRhLmVycm9yPyBkYXRhLm1zZzogJ3Vua25vd24gZXJyb3InIClcbiAgICAgICAgICB9ICAgICAgICAgICAgXG4gICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBjb25zdCBkZWxheWVkTWludCA9IChub25jZSwgYmxvY2ssIHNpZykgPT4ge1xuICAgIC8vIHNldENyZWF0aW5nKHRydWUpXG4gICAgICBjb25zb2xlLmxvZyhcIkRlbGF5ZWQgTWludGluZ1wiKVxuICAgICAgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZShmYWxzZSlcbiAgICAgIHNldFNob3dNYWtpbmdWYXVsdE1zZyh0cnVlKVxuICAgICAgc2V0TWludGluZyh0cnVlKVxuICAgICAgbGV0IGNpcGhlclRleHRIYXNoID0gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBcIkVUSFwifSlbMF0uYWRkcmVzc1xuICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLURlbGF5ZWQgTWludGluZ1wiLCBhY2NvdW50LCB0b2tlbklkLCBjaXBoZXJUZXh0SGFzaCwgbm9uY2UsIGJsb2NrLCBzaWcpXG4gICAgICA7KGhhbmRsZXJDb250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5idXlXaXRoU2lnbmF0dXJlMihhY2NvdW50LCB0b2tlbklkLCBjaXBoZXJUZXh0SGFzaCwgbm9uY2UsIGJsb2NrLCBzaWcpXG4gICAgICAudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICAgIHNldFNob3dNYWtpbmdWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgICBcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJBQUFBQUhISEhISFwiLCBlcnJvcilcbiAgICAgICAgICBzZXRTaG93TWFraW5nVmF1bHRNc2coZmFsc2UpXG4gICAgICAgICAgLy8gc2V0TWludGluZyhmYWxzZSlcbiAgICAgIH0pICAgIFxuICB9XG5cbiAgY29uc3QgZmlyZU1ldGFNYXNrID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKG1pbnRQYXNzd29yZClcbiAgICBzZXRBY2NlcHRpbmcodHJ1ZSlcbiAgICBnZXRXaXRuZXNzKCh3aXRuZXNzKT0+e1xuICAgICAgLy8gY29uc29sZS5sb2codG9rZW5JZCwgbWludFBhc3N3b3JkLCB3aXRuZXNzLm5vbmNlLCB3aXRuZXNzLnNpZ25hdHVyZSwgYWNjb3VudClcbiAgICAgIDsoaGFuZGxlckNvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLnRyYW5zZmVyV2l0aENvZGUodG9rZW5JZCwgbWludFBhc3N3b3JkLCBhY2NvdW50LCB3aXRuZXNzLm5vbmNlLCB3aXRuZXNzLnNpZ25hdHVyZSlcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpICAgICAgICAgIFxuICAgICAgICAgIC8vIHNldFNob3dNYWtpbmdWYXVsdE1zZyh0cnVlKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjcmVhdGluZ1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgc2V0QWNjZXB0aW5nKGZhbHNlKVxuICAgICAgICBpZiAoZXJyb3I/LmNvZGUgIT09IDQwMDEpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgdHggZmFpbGVkLmAsIGVycm9yKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHNldEFjY2VwdGluZyhmYWxzZSlcbiAgICAgICAgICAvLyBzZXRTaG93UHJlVmF1bHRNc2coZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgfVxuXG4gIGNvbnN0IGFkZFByZVRyYW5zZmVyID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCd0cmFuc2ZlckltYWdlJywgXCIweFwiK3RyYW5zZmVySW1hZ2UpXG4gICAgc2V0UHJlVHJhbnNmZXJpbmcodHJ1ZSlcbiAgICA7KGhhbmRsZXJDb250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5hZGRQcmVUcmFuc2Zlcih0b2tlbklkLCBcIjB4XCIrdHJhbnNmZXJJbWFnZSlcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICAgICAgY29uc29sZS5sb2coXCJTZXQgUHJlIFRyYW5zZmVyaW5nIFRydWVcIiwgcHJlVHJhbnNmZXJpbmcpXG4gICAgICAgICAgLy8gc2V0U2hvd01ha2luZ1ZhdWx0TXNnKHRydWUpXG4gICAgICAgIC8vIH0sIDEwMCkgLy8gU29sdmluZyBTdGF0ZSByYWNlIGNvbmRpdGlvbiB3aGVyZSB0cmFuc2FjdGlvbiB3YXRjaGVyIHdvdWxkbid0IG5vdGljZSB3ZSB3ZXJlIGNyZWF0aW5nXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogRXJyb3JXaXRoQ29kZSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3I/LmNvZGUpeyAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvcj9cIikgICAgICAgXG4gICAgICAgICAgICBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAgIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkKGZhbHNlKVxuICAgICAgICAgICAgc2V0VHJhbnNmZXJQYXNzd29yZCgnJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBzZXRTaG93VHJhbnNmZXJQYXNzd29yZCghc2hvd1RyYW5zZmVyUGFzc3dvcmQ/IHRydWUgOiBmYWxzZSlcbiAgICAgICAgICAvLyBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAvLyBzZXRTaG93UHJlVmF1bHRNc2coZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVBcHByb3ZlRm9yYWxsID0gKCkgPT4ge1xuICAgIHNldEFwcHJvdmluZyh0cnVlKVxuICAgIDsoZW1ibGVtQ29udHJhY3QgYXMgQ29udHJhY3QpXG4gICAgICAuc2V0QXBwcm92YWxGb3JBbGwoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdLCB0cnVlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcj8uY29kZSAhPT0gNDAwMSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGB0eCBmYWlsZWQuYCwgZXJyb3IpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0QXBwcm92aW5nKGZhbHNlKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9XG5cbiAgY29uc3QgYXBwcm92ZUNvdmFsRmxvdyA9ICgpID0+IHtcbiAgICBzZXRBcHByb3ZpbmcodHJ1ZSlcbiAgICA7KGNvdmFsQ29udHJhY3QgYXMgQ29udHJhY3QpXG4gICAgICAuYXBwcm92ZShjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0sICcxMDAwMDAwMDAwMDAwMDAnKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcj8uY29kZSA9PSA0MDAxKSB7XG4gICAgICAgICAgc2V0QXBwcm92aW5nKGZhbHNlKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9XG5cbiAgY29uc3QgZGVsZXRlVmF1bHQgPSAoKSA9PntcbiAgICBsaWJyYXJ5LmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdEZWxldGU6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwic2lnXCIsIHNpZ25hdHVyZSlcbiAgICAgICAgZmV0Y2goRU1CTEVNX0FQSSArICcvdjIvZGVsZXRlJywge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt0b2tlbklkOiB0b2tlbklkLCBzaWduYXR1cmU6IHNpZ25hdHVyZSwgY2hhaW5JZDogY2hhaW5JZC50b1N0cmluZygpfSksXG4gICAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5ocmVmLnNwbGl0KFwiL1wiKVswXSArIFwiL3ZhdWx0c1wiXG4gICAgICAgIH0pXG4gICAgICB9KVxuICB9XG5cbiAgY29uc3Qgc3luY0FjY291bnQgPSAoKSA9PntcbiAgICBcbiAgICAgICAgbGV0IHN5bmNoZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0b2tlbklkKyctdicpXG4gICAgICAgIGlmICghc3luY2hlZCkge1xuICAgICAgICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL3N5bmMvJyt0b2tlbklkLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnXG4gICAgICAgICAgICB9ICAgICAgICAgIFxuICAgICAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKXtcbiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odG9rZW5JZCsnLXYnLCAnMScpXG4gICAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfSkuY2F0Y2goKCk9PntcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgIH0pXG4gICAgICB9XG4gIH1cblxuICBcblxuICBjb25zdCBnZXRWYXVsdCA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL21ldGEvJyArIHRva2VuSWQgKyAnP2V4cGVyaW1lbnRhbD10cnVlJysoY2xlYXJDYWNoZSA/ICcmX3ZlcmNlbF9ub19jYWNoZT0xJyA6ICcnKSwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjYzogKGNsZWFyQ2FjaGUgPyAndCcgOiAnJylcbiAgICAgIH0sXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIHNldFJhd01ldGFkYXRhKGpzb25EYXRhKVxuICAgIHNldFN0YXRlcyhqc29uRGF0YSlcbiAgICAvLyBjb25zb2xlLmxvZygndmF1bHQgcmVzcG9uc2Ugd2FzICcsIGpzb25EYXRhKVxuICAgIGlmIChqc29uRGF0YS5pbWFnZV9pcGZzKSB7XG4gICAgICAvLyBnZXRJUEZTSW1hZ2UoanNvbkRhdGEuaW1hZ2VfaXBmcylcbiAgICB9XG4gICAgaWYgKGpzb25EYXRhLmNvbGxlY3Rpb25BZGRyZXNzKXtcbiAgICAgIHNldElzQ3Jvd2RTYWxlKHRydWUpXG4gICAgICBzZXRBbHRlcm5hdGVDb250cmFjdEFkZHJlc3MoanNvbkRhdGEuY29sbGVjdGlvbkFkZHJlc3MpXG4gICAgfVxuICAgIGlmICghanNvbkRhdGEubmFtZSkge1xuICAgICAgc2V0U3RhdGUoeyBsb2FkZWQ6IHRydWUgfSlcbiAgICAgIHNldEludmFsaWRWYXVsdCh0cnVlKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzZXRTdGF0ZXMoanNvbkRhdGEpXG4gICAgICAvLyAhc2xpZGVzaG93T25seT8gc2F2ZUNhY2hlKGpzb25EYXRhKSA6IG51bGxcbiAgICAgIHNldExvYWRpbmdBcGkoZmFsc2UpXG4gICAgICBzZXRJbnZhbGlkVmF1bHQoZmFsc2UpXG4gICAgfVxuICAgIHtcbiAgICAgICF2YXVsdFByaXZhY3kgJiYgIWxvYWRlZFZhbHVlcyA/ICAgIFxuICAgICAgZ2V0QWxsQmFsYW5jZXNMaXZlKFtdLCB0b2tlbklkLCAodik9PntcbiAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICBzZXRWYXVsdFZhbHVlcyh2KVxuICAgICAgICB9ICAgICAgICBcbiAgICAgIH0pIDogbnVsbFxuICAgIH1cbiAgICAvLyB7IGlmIChqc29uRGF0YS50YXJnZXRDb250cmFjdCkge1xuICAgIC8vICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgLy8gICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdDI/aWQ9JyArIGpzb25EYXRhLnRva2VuSWRcbiAgICAvLyAgIH0sIDUwMClcbiAgICAvLyB9fVxuICB9XG5cbiAgXG5cbiAgY29uc3QgZ2V0V2l0bmVzcyA9IGFzeW5jIChjYjogeyAod2l0bmVzczogYW55KTogdm9pZDsgKGFyZzA6IGJvb2xlYW4pOiBhbnkgfSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvd2l0bmVzcy8nICsgdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgY2M6ICd0JyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgIH0sXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIGlmIChqc29uRGF0YS5zaWduYXR1cmUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCd3aXRuZXNzJywganNvbkRhdGEpXG4gICAgICByZXR1cm4gY2IoanNvbkRhdGEpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjYihmYWxzZSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBzZXRTdGF0ZXMgPSAoanNvbkRhdGEpID0+IHtcbiAgICBmcmFtZWQgJiYganNvbkRhdGEuaW1hZ2UgJiYgIWpzb25EYXRhLmltYWdlLmluY2x1ZGVzKCdmcmFtZWQ9JykgJiYgIWpzb25EYXRhLmltYWdlLmluY2x1ZGVzKCdodHRwJykgPyBqc29uRGF0YS5pbWFnZSA9IGpzb25EYXRhLmltYWdlICsgXCImZnJhbWVkPVwiK2ZyYW1lZCA6IG51bGxcbiAgICBpZiAoanNvbkRhdGEuY2lwaGVydGV4dFYyKSB7XG4gICAgICBzZXRWYXVsdENpcGhlcnRleHRWMihqc29uRGF0YS5jaXBoZXJ0ZXh0VjIpXG4gICAgfVxuICAgIHNldE1pbnRMb2NrZWRGb3JldmVyKGpzb25EYXRhLm1pbnRMb2NrZWQgJiYganNvbkRhdGEubWludExvY2tCbG9jayA9PSAwKVxuICAgIHNldFZhdWx0TmFtZShqc29uRGF0YS5uYW1lKVxuICAgIHNldFZhdWx0SW1hZ2UoanNvbkRhdGEuaW1hZ2UpXG4gICAgc2V0T3duZWRJbWFnZShqc29uRGF0YS5vd25lZEltYWdlIHx8IG51bGwpXG4gICAgc2V0VmF1bHREZXNjKGpzb25EYXRhLmRlc2NyaXB0aW9uKVxuICAgIHNldFZhdWx0VG90YWxWYWx1ZShqc29uRGF0YS50b3RhbFZhbHVlIHx8IDApXG4gICAganNvbkRhdGEudmFsdWVzID8gc2V0VmF1bHRWYWx1ZXModmF1bHRWYWx1ZXMuY29uY2F0KGpzb25EYXRhLnZhbHVlcykpOiBudWxsXG4gICAganNvbkRhdGEuYXR0cmlidXRlcyA/IHNldFZhdWx0RGF0YVZhbHVlcyhqc29uRGF0YS5hdHRyaWJ1dGVzLmZpbHRlcigoaXRlbTogeyB0cmFpdF90eXBlOiBzdHJpbmcgfSk9PntyZXR1cm4gaXRlbS50cmFpdF90eXBlID09PSBcImtleVwifSkpOiBudWxsXG4gICAganNvbkRhdGEuYXR0cmlidXRlcyA/IHNldEF0dHJpYnV0ZXMoanNvbkRhdGEuYXR0cmlidXRlcyk6IG51bGxcbiAgICBzZXRWYXVsdEFkZHJlc3Nlcyhqc29uRGF0YS5hZGRyZXNzZXMpXG4gICAgc2V0VmF1bHRJUEZTKGpzb25EYXRhLmlwZnMgfHwgbnVsbClcbiAgICBzZXRWYXVsdEltYWdlSVBGUyhqc29uRGF0YS5pbWFnZV9pcGZzIHx8IG51bGwpXG4gICAganNvbkRhdGEudGFyZ2V0QXNzZXQ/IHNldFRhcmdldEFzc2V0KGpzb25EYXRhLnRhcmdldEFzc2V0KSA6IG51bGxcbiAgICBqc29uRGF0YS50YXJnZXRDb250cmFjdD8gc2V0VGFyZ2V0Q29udHJhY3QoanNvbkRhdGEudGFyZ2V0Q29udHJhY3QpIDogbnVsbFxuICAgIGpzb25EYXRhLm1vdmVfdGFyZ2V0Q29udHJhY3Q/IHNldE1vdmVUYXJnZXRDb250cmFjdChqc29uRGF0YS5tb3ZlX3RhcmdldENvbnRyYWN0KSA6IG51bGxcbiAgICBqc29uRGF0YS5tb3ZlX3RhcmdldEFzc2V0PyBzZXRNb3ZlVGFyZ2V0QXNzZXQoanNvbkRhdGEubW92ZV90YXJnZXRBc3NldCkgOiBudWxsXG4gICAgXG4gICAgaWYgKGpzb25EYXRhLnRhcmdldENvbnRyYWN0KXtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQyP2lkPScgKyBqc29uRGF0YS50YXJnZXRDb250cmFjdC50b2tlbklkXG4gICAgICB9LCA1MDApXG4gICAgfSAgICBcbiAgICBzZXRMaXZlKGpzb25EYXRhLmxpdmUgPT0gZmFsc2UgPyBmYWxzZSA6IHRydWUpXG4gICAgc2V0Tm9uY2UoanNvbkRhdGEubm9uY2UpXG4gICAgc2V0TWludFNpZ25hdHVyZShqc29uRGF0YS5zaWduYXR1cmUpXG4gICAgc2V0VG8oanNvbkRhdGEudG8pXG4gICAgc2V0VmF1bHRDaGFpbihqc29uRGF0YS5uZXR3b3JrKVxuICAgIHNldFZhdWx0Q2hhaW5JZChcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gJ21haW5uZXQnID8gMSA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcInJpbmtlYnlcIiA/IDQgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJtdW1iYWlcIiA/IDgwMDAxIDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwibWF0aWNcIiA/IDEzNyA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcInhkYWlcIiA/IDEwMCA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcImJzY1wiID8gNTYgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJmYW50b21cIiA/IDI1MCA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcImJpdGNvaW5cIiA/IDAgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJhdXJvcmFcIiA/IDEzMTMxNjE1NTQgOiBcbiAgICAgIDk3XG4gICAgKVxuICAgIHNldFN0YXR1cyhqc29uRGF0YS5zdGF0dXMpXG4gICAgaWYgKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSB7XG4gICAgICBzZXRDbGFpbWVkQnkoanNvbkRhdGEuY2xhaW1lZEJ5KVxuICAgIH1cblxuICAgIHNldFN0YXRlKHsgbG9hZGVkOiB0cnVlIH0pXG4gICAgbGV0IGlzUHZ0ID1cbiAgICAgIGpzb25EYXRhLmFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW06IHsgYWRkcmVzczogc3RyaW5nIHwgc3RyaW5nW10gfSkgPT4ge1xuICAgICAgICByZXR1cm4gaXRlbS5hZGRyZXNzLmluY2x1ZGVzKCdwcml2YXRlOicpXG4gICAgICB9KS5sZW5ndGggPiAwXG4gICAgc2V0VmF1bHRQcml2YWN5KGlzUHZ0KSAgICBcbiAgICBpZiAoanNvbkRhdGEuc2VhbGVkKSB7XG4gICAgICBzZXRTZWFsZWQodHJ1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2VhbGVkKGZhbHNlKVxuICAgIH1cbiAgICBpZihqc29uRGF0YS52YWx1ZXMubGVuZ3RoID09IDEgJiYganNvbkRhdGEuYXR0cmlidXRlcy5sZW5ndGggPiAwKXtcbiAgICAgIGxldCBwcm9qZWN0ID0ganNvbkRhdGEuYXR0cmlidXRlcy5maWx0ZXIoaXRlbT0+e3JldHVybiBpdGVtLnZhbHVlID09IGpzb25EYXRhLnZhbHVlc1swXS5uYW1lfSlcbiAgICAgIGlmIChwcm9qZWN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBsZXQgcHJvamVjdE5hbWUgPSBwcm9qZWN0WzBdLnRyYWl0X3R5cGVcbiAgICAgICAgICBsZXQgX3F1YWxpZmllZENvbGxlY3Rpb24gPSBjdXJhdGVkQ29udHJhY3RzLmZpbHRlcihpdGVtPT57cmV0dXJuIGl0ZW0ubmFtZSA9PSBwcm9qZWN0TmFtZX0pXG4gICAgICAgICAgaWYgKF9xdWFsaWZpZWRDb2xsZWN0aW9uLmxlbmd0aCA+IDApIHsgICAgICAgICAgICBcbiAgICAgICAgICAgICAgc2V0UXVhbGlmaWVkQ29sbGVjdGlvbihfcXVhbGlmaWVkQ29sbGVjdGlvblswXSlcbiAgICAgICAgICB9XG4gICAgICB9ICAgICAgXG4gICAgfSAgICBcbiAgfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzID0gYXN5bmMgKHZhbHVlczogc3RyaW5nIHwgYW55W10sIHRva2VuSWQ6IHN0cmluZywgY2I6IHsgKHZhbHVlczogYW55KTogYW55OyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhhZGRyZXNzKVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvdmF1bHQvYmFsYW5jZS8nICsgdG9rZW5JZCAsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgIH0sXG4gICAgfSlcbiAgICBcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZScsIHJlc3BvbnNlLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuYmFsYW5jZXMubGVuZ3RoID4gMCkgeyAgICAgIFxuICAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEuYmFsYW5jZXMpKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzTGl2ZSA9IGFzeW5jICh2YWx1ZXM6IHN0cmluZyB8IGFueVtdLCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKHY6IGFueSk6IHZvaWQ7ICh2OiBhbnkpOiB2b2lkOyAoYXJnMDogYm9vbGVhbik6IGFueSB9KSA9PiB7XG4gICAgaWYgKGxvYWRlZFZhbHVlcykge1xuICAgICAgcmV0dXJuIGNiKGZhbHNlKVxuICAgIH1cbiAgICBzZXRMb2FkZWRWYWx1ZXModHJ1ZSlcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL3ZhdWx0L2JhbGFuY2UvJyArIHRva2VuSWQgKyAnP2xpdmU9dHJ1ZSZfdmVyY2VsX25vX2NhY2hlPTEnICwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnXG4gICAgICB9LFxuICAgIH0pXG4gICAgXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICBjb25zb2xlLmxvZygncmVzcG9uc2UnLCByZXNwb25zZSwganNvbkRhdGEpXG4gICAgaWYgKGpzb25EYXRhLmJhbGFuY2VzLmxlbmd0aCA+IDApIHsgICAgICBcbiAgICAgIHJldHVybiBjYih2YWx1ZXMuY29uY2F0KGpzb25EYXRhLmJhbGFuY2VzKSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNiKHZhbHVlcylcbiAgICB9XG4gIH1cblxuICBjb25zdCBnZXRBbGxCYWxhbmNlc0J5QWRkcmVzcyA9IGFzeW5jICh2YWx1ZXM6IHN0cmluZyB8IGFueVtdLCBldGhBZGRyZXNzOiBzdHJpbmcsIGJ0Y0FkZHJlc3M6IHN0cmluZywgY2I6IHsgKHZhbHVlczogYW55KTogdm9pZDsgKGFyZzA6IGFueSk6IGFueSB9KSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy92YXVsdC9iYWxhbmNlLycgKyBldGhBZGRyZXNzICsgJy8nICsgYnRjQWRkcmVzcywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgfSxcbiAgICB9KVxuICAgIFxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlJywgcmVzcG9uc2UsIGpzb25EYXRhKVxuICAgIGlmIChqc29uRGF0YS5iYWxhbmNlcy5sZW5ndGggPiAwKSB7ICAgICAgXG4gICAgICByZXR1cm4gY2IodmFsdWVzLmNvbmNhdChqc29uRGF0YS5iYWxhbmNlcykpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjYih2YWx1ZXMpXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2F2ZVBhc3N3b3JkVG9Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ19taW50UGFzc3dvcmQnLCB0cmFuc2ZlclBhc3N3b3JkKSAvLyBTYXZlIG5ldyBzdGF0ZSBmb3IgbGF0ZXJcbiAgfVxuXG4gIGNvbnN0IGxvYWRQYXNzd29yZEZyb21Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgbGV0IHN0b3JlZFB3ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ19taW50UGFzc3dvcmQnKVxuICAgIHN0b3JlZFB3ICYmIGFjY2VwdGFibGUgPyBzZXRNaW50UGFzc3dvcmQoc3RvcmVkUHcpIDogbnVsbCAvL3NldE1pbnRQYXNzd29yZChudWxsKVxuICB9XG5cbiAgY29uc3QgZ2V0U2lnbmVkSldUID0gYXN5bmMgKHNpZ25hdHVyZTogYW55LCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKHRva2VuOiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pPT57XG4gICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbmlkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJylcblxuICAgIHZhciByYXcgPSBKU09OLnN0cmluZ2lmeSh7IHNpZ25hdHVyZTogc2lnbmF0dXJlLCB0b2tlbklkOiB0b2tlbklkIH0pXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChTSUdfQVBJKycvc2lnbicsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogbXlIZWFkZXJzLFxuICAgICAgYm9keTogcmF3LFxuICAgICAgcmVkaXJlY3Q6ICdmb2xsb3cnLFxuICAgIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICByZXR1cm4gY2IoanNvbkRhdGEpXG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiBnZXRUb3J1c0tleXMoIHZlcmlmaWVySWQsIGlkVG9rZW4sIGNiKSB7XG4gICAgY29uc3QgZmV0Y2hOb2RlRGV0YWlscyA9IG5ldyBGZXRjaE5vZGVEZXRhaWxzKHsgbmV0d29yazogXCJtYWlubmV0XCIgfSk7XG4gICAgY29uc3QgdG9ydXNVdGlscyA9IG5ldyBUb3J1c1V0aWxzKHsgZW5hYmxlT25lS2V5OiB0cnVlLCBuZXR3b3JrOiBcIm1haW5uZXRcIiB9KTtcblxuICAgIGNvbnN0IHsgdG9ydXNOb2RlRW5kcG9pbnRzLCB0b3J1c0luZGV4ZXMgfSA9IGF3YWl0IGZldGNoTm9kZURldGFpbHMuZ2V0Tm9kZURldGFpbHMoeyB2ZXJpZmllcjogJ3Rvci11cy1zaWduZXItdmVyY2VsJywgdmVyaWZpZXJJZCB9KTtcbiAgICBjb25zdCB7IHByaXZLZXkgfSA9IGF3YWl0IHRvcnVzVXRpbHMucmV0cmlldmVTaGFyZXModG9ydXNOb2RlRW5kcG9pbnRzLCB0b3J1c0luZGV4ZXMsICd0b3ItdXMtc2lnbmVyLXZlcmNlbCcsIHsgdmVyaWZpZXJfaWQ6IHZlcmlmaWVySWQgfSwgaWRUb2tlbik7XG4gICAgcmV0dXJuIGNiKHtwcml2YXRlS2V5OiBwcml2S2V5fSk7XG4gIH1cblxuICBjb25zdCBhZGRBZGRyZXNzID0gYXN5bmMgKHNpZ25hdHVyZTogYW55LCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY29pbjogc3RyaW5nLCBjYjogeyAocmVzdWx0OiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ2NoYWluSWQnLCBjaGFpbklkLnRvU3RyaW5nKCkpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnc2VydmljZScsICdldm1ldGFkYXRhJylcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpXG5cbiAgICB2YXIgcmF3ID0gSlNPTi5zdHJpbmdpZnkoeyBzaWduYXR1cmU6IHNpZ25hdHVyZSwgY29pbjogY29pbiB9KVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvYWRkcmVzcy8nICsgdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiBteUhlYWRlcnMsXG4gICAgICBib2R5OiByYXcsXG4gICAgICByZWRpcmVjdDogJ2ZvbGxvdycsXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgfVxuXG4gIGNvbnN0IGRlY3J5cHRFbWJlZCA9IGFzeW5jIChzaWduYXR1cmU6IGFueSwgdG9rZW5JZDogc3RyaW5nIHwgc3RyaW5nW10sIGNiOiB7IChyZXN1bHQ6IGFueSk6IHZvaWQ7IChhcmcwOiBhbnkpOiBhbnkgfSkgPT4ge1xuICAgIHZhciBteUhlYWRlcnMgPSBuZXcgSGVhZGVycygpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnY2hhaW5JZCcsIGNoYWluSWQudG9TdHJpbmcoKSlcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdzZXJ2aWNlJywgJ2V2bWV0YWRhdGEnKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJylcblxuICAgIHZhciByYXcgPSBKU09OLnN0cmluZ2lmeSh7IHNpZ25hdHVyZTogc2lnbmF0dXJlIH0pXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy9lbWJlZC8nICsgdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiBteUhlYWRlcnMsXG4gICAgICBib2R5OiByYXcsXG4gICAgICByZWRpcmVjdDogJ2ZvbGxvdycsXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgfVxuXG4gIGNvbnN0IGdldENvbnRyYWN0U3RhdGVzID0gYXN5bmMgKCkgPT4ge1xuICAgIC8vIGFsZXJ0KDApXG4gICAgY29uc29sZS5sb2coXCJDb250cmFjdCBzdGF0ZXNcIilcbiAgICBsZXQgb3duZWQgPSBmYWxzZVxuICAgIGxldCBfb3duZXI6IHN0cmluZ1xuICAgIHRyeSB7XG4gICAgICBpZiAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJDaGVja2luZyBvd25lciB3dGggdGFyZ2V0Q29udHJhY3RcIilcbiAgICAgICAgZW1ibGVtQ29udHJhY3QgPSBnZXRDdXJhdGVkQ29udHJhY3QodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pXG4gICAgICAgIF9vd25lciA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmdldE93bmVyT2ZTZXJpYWwodGFyZ2V0Q29udHJhY3Quc2VyaWFsTnVtYmVyKVxuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBvd25lclwiLCBfb3duZXIsIGFwcHJvdmVkLCBhY2NvdW50LCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJWOFtjaGFpbklkXSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9vd25lciAgPSBsaXZlPyBhd2FpdCBlbWJsZW1Db250cmFjdC5vd25lck9mKHRva2VuSWQpOiBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXG4gICAgICB9XG4gICAgICBzZXREZWNpbWFscyhhd2FpdCBjb3ZhbENvbnRyYWN0LmRlY2ltYWxzKCkpXG4gICAgICBzZXRBbGxvd2FuY2UoXG4gICAgICAgIGF3YWl0IGNvdmFsQ29udHJhY3RcbiAgICAgICAgICAuYWxsb3dhbmNlKGFjY291bnQsIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSlcbiAgICAgICAgICAudGhlbigoYmFsYW5jZTogeyB0b1N0cmluZzogKCkgPT4gc3RyaW5nIH0pID0+IGJhbGFuY2UudG9TdHJpbmcoKSlcbiAgICAgIClcbiAgICAgIHNldEJhbGFuY2UoYXdhaXQgY292YWxDb250cmFjdC5iYWxhbmNlT2YoYWNjb3VudCkudGhlbigoYmFsYW5jZTogeyB0b1N0cmluZzogKCkgPT4gc3RyaW5nIH0pID0+IGJhbGFuY2UudG9TdHJpbmcoKSkpXG4gICAgICBzZXRQcmljZShhd2FpdCBoYW5kbGVyQ29udHJhY3QucHJpY2UoKS50aGVuKChiYWxhbmNlOiB7IHRvU3RyaW5nOiAoKSA9PiBzdHJpbmcgfSkgPT4gYmFsYW5jZS50b1N0cmluZygpKSlcbiAgICAgIGlmIChOdW1iZXIoYWxsb3dhbmNlKSA+PSBOdW1iZXIocHJpY2UpKSB7XG4gICAgICAgIHNldElzQ292YWxBcHByb3ZlZCh0cnVlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0SXNDb3ZhbEFwcHJvdmVkKGZhbHNlKVxuICAgICAgfVxuICAgICAgZmluaXNoKClcbiAgICB9IGNhdGNoKGVycil7ICAgICAgXG4gICAgICBfb3duZXIgPSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXG4gICAgICBmaW5pc2goKVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIGZpbmlzaCgpe1xuICAgICBcbiAgICAgIGxldCBhY2NlcHRhYmxlID0gYXdhaXQgaGFuZGxlckNvbnRyYWN0LmdldFByZVRyYW5zZmVyKHRva2VuSWQpXG4gICAgICBsZXQgaXNBcHByb3ZlZDogYm9vbGVhbiB8ICgocHJldlN0YXRlOiBib29sZWFuKSA9PiBib29sZWFuKVxuICAgICAgaWYgKHRhcmdldENvbnRyYWN0W2NoYWluSWRdKSB7XG4gICAgICAgIGlzQXBwcm92ZWQgPSBhd2FpdCBlbWJsZW1Db250cmFjdC5pc0FwcHJvdmVkRm9yQWxsKGFjY291bnQsIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4W2NoYWluSWRdKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaXNBcHByb3ZlZCA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmlzQXBwcm92ZWRGb3JBbGwoYWNjb3VudCwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdKVxuICAgICAgfVxuICAgICAgc2V0QXBwcm92ZWQoaXNBcHByb3ZlZClcbiAgICAgIHNldEFjY2VwdGFibGUoYWNjZXB0YWJsZS5fZnJvbSAhPT0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIilcbiAgICAgIHNldE93bmVyKF9vd25lcilcbiAgICAgIHNldE1pbmUoX293bmVyID09PSBhY2NvdW50IHx8ICh0byA9PT0gYWNjb3VudCAmJiBfb3duZXIgPT09IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIpKVxuICAgICAgc2V0TWluZVVuTWludGVkKHRvID09PSBhY2NvdW50ICYmIF9vd25lciA9PT0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIilcbiAgICAgIGxvYWRQYXNzd29yZEZyb21Mb2NhbFN0b3JhZ2UoKVxuICAgICAgaWYgKG93bmVyICYmIGxpdmUgPT0gZmFsc2UgJiYgIWNoZWNrTGl2ZSkge1xuICAgICAgICBpZiAob3duZXIgPT09IFpFUk9fQUREUkVTUyAmJiBtb3ZlX3RhcmdldENvbnRyYWN0ICYmIG1vdmVfdGFyZ2V0Q29udHJhY3Quc2VyaWFsTnVtYmVyKSB7XG4gICAgICAgICAgLy8gaXMgbW92aW5nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0Q2hlY2tMaXZlKHRydWUpXG4gICAgICAgICAgY2hlY2tMaXZlbGluZXNzKHRva2VuSWQsICgpPT57XG4gICAgXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgfVxuXG4gIHVzZUVmZmVjdCgoKT0+e1xuICAgIGNvbnNvbGUubG9nKFwibWluZT9cIiwgbWluZSlcbiAgICBjb25zb2xlLmxvZyhcImNsYWltaW5nP1wiLCBjbGFpbWluZylcbiAgICBjb25zb2xlLmxvZyhcImFjY2VwdGluZz9cIiwgYWNjZXB0aW5nKVxuICAgIGNvbnNvbGUubG9nKFwiYWNjZXB0YWJsZVwiLCBhY2NlcHRhYmxlKVxuICAgIGNvbnNvbGUubG9nKFwicXVhbGlmaWVkXCIsIHF1YWxpZmllZENvbGxlY3Rpb24pXG4gICAgY29uc29sZS5sb2coXCJvd25lclwiLG93bmVyKVxuICB9KVxuXG4gIGNvbnN0IGhhc0FkZHJlc3MgPSAoY29pbjogc3RyaW5nKT0+e1xuICAgIGNvbnNvbGUubG9nKGNvaW4sIHZhdWx0QWRkcmVzc2VzLmZpbHRlcihhZGRyZXNzPT57IHJldHVybiBhZGRyZXNzLmNvaW4gPT0gY29pbn0pLmxlbmd0aCA+IDApXG4gICAgcmV0dXJuIHZhdWx0QWRkcmVzc2VzLmZpbHRlcihhZGRyZXNzPT57IHJldHVybiBhZGRyZXNzLmNvaW4gPT0gY29pbn0pLmxlbmd0aCA+IDBcbiAgfVxuXG4gIGNvbnN0IG9uUmVuZXcgPSBhc3luYyAobmFtZTogYW55KSA9PiB7IFxuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnUmVuZXc6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICAgIGxldCBhZGRyZXNzID0gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSAnTk1DJ30pWzBdLmFkZHJlc3NcbiAgICAgICAgY29uc29sZS5sb2coJ3NpZ25hdHVyZScsIHNpZ25hdHVyZSwgbmFtZSlcbiAgICAgICAgZmV0Y2goRU1CTEVNX0FQSSArICcvbm1jL3JlbmV3LycgKyBhZGRyZXNzLCB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIFwidG9rZW5JZFwiOiB0b2tlbklkLFxuICAgICAgICAgICAgICAgIFwic2lnbmF0dXJlXCI6IHNpZ25hdHVyZSxcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogbmFtZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICAgICAgY29uc29sZS5sb2coXCJSZXF1ZXN0ZWQgUmVuZXdcIiwgZGF0YSlcbiAgICAgICAgICBcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cbiAgXG4gIGNvbnN0IGhhbmRsZVNpZ24gPSBhc3luYyAoKSA9PiB7XG4gICAgXG4gICAgbGV0IHNlcmlhbE51bWJlcjogYW55XG4gICAgaWYgKHRhcmdldENvbnRyYWN0W2NoYWluSWRdKSB7ICAgICAgXG4gICAgICBlbWJsZW1Db250cmFjdCA9IGdldEN1cmF0ZWRDb250cmFjdCh0YXJnZXRDb250cmFjdFtjaGFpbklkXSlcbiAgICAgIHNlcmlhbE51bWJlciA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmdldFNlcmlhbCh0YXJnZXRDb250cmFjdC50b2tlbklkLCAwKVxuICAgIH1cblxuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnQ2xhaW06ICcgKyAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0/IHNlcmlhbE51bWJlcjogdG9rZW5JZCkpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgc2V0U3RhdGUoe2xvYWRlZDogZmFsc2V9KVxuICAgICAgICBpZiAobWluZVVuTWludGVkICYmIHN0YXR1cyAhPSBcImNsYWltZWRcIiAmJiAhbWludExvY2tlZEZvcmV2ZXIpIHtcbiAgICAgICAgICBzZXRNaW50TG9ja2VkRm9yZXZlcih0cnVlKVxuICAgICAgICB9XG4gICAgICAgIGdldFNpZ25lZEpXVChzaWduYXR1cmUsIHRva2VuSWQsICh0b2tlbjogeyB0b2tlbjogYW55IH0pPT57XG4gICAgICAgICAgZ2V0VG9ydXNLZXlzKHRva2VuSWQsIHRva2VuLnRva2VuLCBhc3luYyAoa2V5czogeyBwcml2YXRlS2V5OiBhbnkgfSk9PntcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHZhciBieXRlcyA9IENyeXB0b0pTLkFFUy5kZWNyeXB0KHZhdWx0Q2lwaGVydGV4dFYyLCBrZXlzLnByaXZhdGVLZXkpXG4gICAgICAgICAgICAgIGxldCBwYXlsb2FkID0gSlNPTi5wYXJzZShieXRlcy50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCkpIFxuICAgICAgICAgICAgICBzZXRLZXlWYWx1ZXMocGF5bG9hZC52YWx1ZXMpXG4gICAgICAgICAgICAgIHNldE1uZW1vbmljKHBheWxvYWQucGhyYXNlKVxuICAgICAgICAgICAgICB2YXVsdEFkZHJlc3Nlcy5mb3JFYWNoKGFzeW5jIGFkZHJlc3M9PntcbiAgICAgICAgICAgICAgICBpZiAoYWRkcmVzcy5jb2luID09ICdTVFgnKSB7XG4gICAgICAgICAgICAgICAgICBhZGRyZXNzLmtleSA9IGF3YWl0IGdldFNUWEtleShhZGRyZXNzLCBwYXlsb2FkLnBocmFzZSlcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgYWRkcmVzcy5rZXkgPSB3aW5kb3cucGhyYXNlUGF0aFRvS2V5KHBheWxvYWQucGhyYXNlLCBhZGRyZXNzLnBhdGgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhZGRyZXNzLmNvaW4gPT0gJ0JUQycpIHNldFByaXZLZXlCVEMoYWRkcmVzcy5rZXkpXG4gICAgICAgICAgICAgICAgaWYgKGFkZHJlc3MuY29pbiA9PSAnRVRIJykgc2V0UHJpdktleUVUSChhZGRyZXNzLmtleSlcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gY2F0Y2goZXJyKXtcbiAgICAgICAgICAgICAgYWxlcnQoZXJyKVxuICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpPT57bG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLmhyZWZ9LCAyMDAwKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0U3RhdGUoe2xvYWRlZDogdHJ1ZX0pXG4gICAgICAgICAgICBvbk9wZW5LZXlzTW9kYWwoKVxuICAgICAgICAgIH0pICAgICAgICAgIFxuICAgICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBjb25zdCBnZXRTVFhLZXkgPSBhc3luYyAoYWRkcmVzczogYW55LCBwaHJhc2U6IHN0cmluZyk9PntcbiAgICBjb25zdCB3YWxsZXQ6IGFueSA9IGF3YWl0IGdlbmVyYXRlV2FsbGV0KHtcbiAgICAgIHNlY3JldEtleTogcGhyYXNlLFxuICAgICAgcGFzc3dvcmQ6ICcnLFxuICAgIH0pXG4gICAgY29uc29sZS5sb2coJy0tLS0tLSBzdGFja3MgYWNjb3VudCAtJywgd2FsbGV0LmFjY291bnRzWzBdKVxuICAgIGNvbnN0IGFjY291bnQgPSB3YWxsZXQuYWNjb3VudHNbMF07XG4gICAgYWRkcmVzcy5rZXkgPSBhY2NvdW50LnN0eFByaXZhdGVLZXlcbiAgICByZXR1cm4gYWRkcmVzcy5rZXlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUhpZGVBc3NldCA9IGFzeW5jIChjb2luOiB7IG5hbWU6IGFueTsgY29pbjogYW55OyBhZGRyZXNzOiBhbnkgfSkgPT4ge1xuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnSGlkZUFzc2V0OiAnICsgdG9rZW5JZClcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBoaWRlQXNzZXQodG9rZW5JZCwgY29pbi5jb2luLCBjb2luLmFkZHJlc3MsIGNvaW4ubmFtZSwgc2lnbmF0dXJlLCAoKT0+e1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiRG9uZSBoaWRpbmcgY29pbiBhbmQgZ2V0dGluZyBuZXcgYmFsYW5jZXNcIilcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cblxuICBmdW5jdGlvbiBoaWRlQXNzZXQodG9rZW5JZCwgY29pbjogYW55LCBhZGRyZXNzOiBhbnksIG5hbWU6IGFueSwgc2lnbmF0dXJlOiBhbnksIGNiOiB7ICgpOiB2b2lkOyAoKTogYW55IH0pIHtcbiAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9oaWRlLycrdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgICAgY2hhaW5pZDogY2hhaW5JZC50b1N0cmluZygpXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBcImNvaW5cIjogY29pbj8gY29pbjogbnVsbCxcbiAgICAgICAgXCJhZGRyZXNzXCI6IGFkZHJlc3M/IGFkZHJlc3M6IG51bGwsXG4gICAgICAgIFwibmFtZVwiOiBuYW1lPyBuYW1lOiBudWxsLFxuICAgICAgICBcInNpZ25hdHVyZVwiOiBzaWduYXR1cmU/IHNpZ25hdHVyZTogbnVsbFxuICAgICAgfSlcbiAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLVwiLCBkYXRhKVxuICAgICAgZ2V0QWxsQmFsYW5jZXMoW10sIHRva2VuSWQsICh2YWx1ZXM6IFNldFN0YXRlQWN0aW9uPGFueVtdPik9PntcbiAgICAgICAgc2V0VmF1bHRWYWx1ZXModmFsdWVzKVxuICAgICAgICByZXR1cm4gY2IoKVxuICAgICAgfSlcbiAgICB9KSBcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUFkZHJlc3NTaWduID0gYXN5bmMgKGNvaW46IHN0cmluZykgPT4ge1xuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnQWRkcmVzczogJyArIHRva2VuSWQpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgYWRkQWRkcmVzcyhzaWduYXR1cmUsIHRva2VuSWQsIGNvaW4sIChyZXN1bHQ6IGFueSkgPT4ge1xuICAgICAgICAgIGdldFZhdWx0KClcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVPd25lZEVtYmVkID0gYXN5bmMgKCkgPT4ge1xuICAgIGxpYnJhcnlcbiAgICAgIC5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnRW1iZWQ6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICAgIGRlY3J5cHRFbWJlZChzaWduYXR1cmUsIHRva2VuSWQsIChyZXN1bHQ6IHsgb3duZWRJbWFnZTogU2V0U3RhdGVBY3Rpb248c3RyaW5nPiB9KSA9PiB7XG4gICAgICAgICAgc2V0VmF1bHRJbWFnZShyZXN1bHQub3duZWRJbWFnZSlcbiAgICAgICAgfSkgICAgICAgIFxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZU1vdmUgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0gcXVhbGlmaWVkIG1vdmUnLCBxdWFsaWZpZWRDb2xsZWN0aW9uKVxuICAgIGxpYnJhcnkuZ2V0U2lnbmVyKGFjY291bnQpXG4gICAgLnNpZ25NZXNzYWdlKCdNb3ZlIFZhdWx0OiAnICsgdG9rZW5JZClcbiAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgIGZldGNoKEVNQkxFTV9WMl9BUEkgKyAnL21vdmUtdmF1bHQvJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgXCJjaGFpbklkXCI6IDEsXG4gICAgICAgICAgXCJmcm9tXCI6IGFjY291bnQsXG4gICAgICAgICAgXCJzb3VyY2VDb250cmFjdFwiOiB7XG4gICAgICAgICAgICAgIFwiMVwiOiBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFt2YXVsdENoYWluSWRdXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInRhcmdldENvbnRyYWN0XCI6IHtcbiAgICAgICAgICAgICAgXCIxXCI6IHF1YWxpZmllZENvbGxlY3Rpb25bY2hhaW5JZF0sXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBxdWFsaWZpZWRDb2xsZWN0aW9uLm5hbWUsXG4gICAgICAgICAgICAgIFwiY2hhaW5cIjogcXVhbGlmaWVkQ29sbGVjdGlvbi5jaGFpblxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJ0YXJnZXRBc3NldFwiOiB7XG4gICAgICAgICAgICAgIFwibmFtZVwiOiB2YXVsdFZhbHVlc1swXS5uYW1lXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImFtb3VudFwiOiAxLFxuICAgICAgICAgIFwidG9rZW5JZFwiOiB0b2tlbklkLFxuICAgICAgICAgIFwic2lnbmF0dXJlXCI6IHNpZ25hdHVyZVxuICAgICAgfSlcbiAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlOiBhbnkpIHtcbiAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgXG4gICAgICAgIGlmIChkYXRhLnNpZykge1xuICAgICAgICAgIHZhdWx0SGFuZGxlckNvbnRyYWN0Lm1vdmVWYXVsdChjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFt2YXVsdENoYWluSWRdLCBxdWFsaWZpZWRDb2xsZWN0aW9uW2NoYWluSWRdLCB0b2tlbklkLCBkYXRhLnRva2VuSWQsIGRhdGEubm9uY2UsIGRhdGEuc2lnLCBkYXRhLnNlcmlhbCkudGhlbigoaGFzaDogYW55KTogdm9pZCA9PntcbiAgICAgICAgICAgIHNldEhhc2goaGFzaC5oYXNoKVxuICAgICAgICAgICAgc2V0TW92aW5nKGZhbHNlKVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUNsYWltID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICh0YXJnZXRDb250cmFjdFtjaGFpbklkXSkge1xuICAgICAgdmF1bHRIYW5kbGVyQ29udHJhY3QuY2xhaW0odGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0sIHRhcmdldENvbnRyYWN0LnRva2VuSWQpLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldENsYWltaW5nKHRydWUpXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY2xhaW1pbmdcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbmRsZXJDb250cmFjdC5jbGFpbU9uQ2hhaW4odG9rZW5JZCkudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0Q2xhaW1pbmcodHJ1ZSlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjbGFpbWluZ1xuICAgICAgfSlcbiAgICB9XG4gIH0gXG5cbiAgY29uc3Qgc3RhcnREZWNyeXB0RWZmZWN0ID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmIChkZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc2V0RGVjcnlwdGVkRWZmZWN0UnVubmluZyh0cnVlKVxuICAgIHZhciB0aGVMZXR0ZXJzID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6JyAvL1lvdSBjYW4gY3VzdG9taXplIHdoYXQgbGV0dGVycyBpdCB3aWxsIGN5Y2xlIHRocm91Z2hcbiAgICB2YXIgY3RudCA9ICdEZWNyeXB0aW5nJyAvLyBZb3VyIHRleHQgZ29lcyBoZXJlXG4gICAgdmFyIHNwZWVkID0gNSAvLyBtcyBwZXIgZnJhbWVcbiAgICB2YXIgaW5jcmVtZW50ID0gOCAvLyBmcmFtZXMgcGVyIHN0ZXAuIE11c3QgYmUgPjJcblxuICAgIHZhciBjbGVuID0gY3RudC5sZW5ndGhcbiAgICB2YXIgc2kgPSAwXG4gICAgdmFyIHN0cmkgPSAwXG4gICAgdmFyIGJsb2NrID0gJydcbiAgICB2YXIgZml4ZWQgPSAnJ1xuICAgIDsoZnVuY3Rpb24gcnVzdGxlKGkpIHtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoLS1pKSB7XG4gICAgICAgICAgcnVzdGxlKGkpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0RGVjcnlwdGVkRWZmZWN0UnVubmluZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgICBuZXh0RnJhbWUoaSlcbiAgICAgICAgc2kgPSBzaSArIDFcbiAgICAgIH0sIHNwZWVkKVxuICAgIH0pKGNsZW4gKiBpbmNyZW1lbnQgKyAxKVxuICAgIGZ1bmN0aW9uIG5leHRGcmFtZShwb3M6IG51bWJlcikge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGVuIC0gc3RyaTsgaSsrKSB7XG4gICAgICAgIHZhciBudW0gPSBNYXRoLmZsb29yKHRoZUxldHRlcnMubGVuZ3RoICogTWF0aC5yYW5kb20oKSlcbiAgICAgICAgdmFyIGxldHRlciA9IHRoZUxldHRlcnMuY2hhckF0KG51bSlcbiAgICAgICAgYmxvY2sgPSBibG9jayArIGxldHRlclxuICAgICAgfVxuICAgICAgaWYgKHNpID09IGluY3JlbWVudCAtIDEpIHtcbiAgICAgICAgc3RyaSsrXG4gICAgICB9XG4gICAgICBpZiAoc2kgPT0gaW5jcmVtZW50KSB7XG4gICAgICAgIGZpeGVkID0gZml4ZWQgKyBjdG50LmNoYXJBdChzdHJpIC0gMSlcbiAgICAgICAgc2kgPSAwXG4gICAgICB9XG4gICAgICBzZXREZWNyeXB0ZWRFZmZlY3QoZml4ZWQgKyBibG9jaylcbiAgICAgIGJsb2NrID0gJydcbiAgICB9XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGdldFZhdWx0KClcbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAoYWNjb3VudCAmJiBjaGFpbklkICYmIHZhdWx0Q2hhaW5JZCAmJiBjaGFpbklkID09IHZhdWx0Q2hhaW5JZCkgfHwgKChxdWVyeS5ub0xheW91dCAmJiBxdWVyeS5ub0xheW91dCA9PSAndHJ1ZScpIHx8IChxdWVyeS5zbGlkZXNob3dPbmx5ICYmIHF1ZXJ5LnNsaWRlc2hvd09ubHkgPT0gJ3RydWUnKSkgPyBnZXRDb250cmFjdFN0YXRlcygpIDogbnVsbFxuICB9KVxuXG4gIGZ1bmN0aW9uIHNwbGl0RGVzY3JpcHRpb24od29yZHM6IHN0cmluZykge1xuICAgIHZhciBkZXNjID0gd29yZHM/IHdvcmRzLnNwbGl0KCdcXG5cXG5cXG5cXG4nKTogW1wiIFwiXVxuICAgIHJldHVybiBkZXNjWzBdLnRyaW0oKVxuICB9XG5cbiAgZnVuY3Rpb24gdHJ5RGVjcnlwdChrZXk6IFNldFN0YXRlQWN0aW9uPHN0cmluZz4pIHtcbiAgICBpZiAoZGVjcnlwdFBhc3N3b3JkKSB7XG4gICAgICBrZXkgPSBkZWNyeXB0UGFzc3dvcmRcbiAgICB9XG4gICAgc3RhcnREZWNyeXB0RWZmZWN0KClcbiAgICBjb25zb2xlLmxvZyh2YXVsdEFkZHJlc3NlcylcbiAgICBsZXQgY2lwaGVydGV4dCA9IHZhdWx0QWRkcmVzc2VzWzBdLmFkZHJlc3MucmVwbGFjZSgncHJpdmF0ZTonLCAnJylcbiAgICB0cnkge1xuICAgICAgdmFyIGJ5dGVzID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoY2lwaGVydGV4dCwga2V5KVxuICAgICAgSlNPTi5wYXJzZShieXRlcy50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCkpXG4gICAgICBzZXRWYXVsdFByaXZhY3koZmFsc2UpXG4gICAgICBzZXREZWNyeXB0UGFzc3dvcmQoa2V5KVxuICAgICAgc2V0VmF1bHRBZGRyZXNzZXMoZGVjcnlwdEFkZHJlc3NlcyhrZXkpKVxuICAgICAgbGV0IGV0aEFkZHJlc3MgPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtyZXR1cm4gaXRlbS5jb2luID09PSAnRVRIJ30pWzBdLmFkZHJlc3NcbiAgICAgIGxldCBidGNBZGRyZXNzID0gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKChpdGVtKSA9PiB7cmV0dXJuIGl0ZW0uY29pbiA9PT0gJ0JUQyd9KVswXS5hZGRyZXNzXG4gICAgICBjb25zb2xlLmxvZyhcIlNVQ0NFU1NcIiwgdmF1bHRBZGRyZXNzZXMpXG4gICAgICBnZXRBbGxCYWxhbmNlc0J5QWRkcmVzcyhbXSwgZXRoQWRkcmVzcywgYnRjQWRkcmVzcywgKHZhbHVlczogU2V0U3RhdGVBY3Rpb248YW55W10+KT0+e1xuICAgICAgICBzZXRWYXVsdFZhbHVlcyh2YWx1ZXMpXG4gICAgICB9KVxuICAgIH0gY2F0Y2ggKGVycikge2NvbnNvbGUubG9nKCdXVEYnLCBlcnIpfVxuICB9XG5cbiAgZnVuY3Rpb24gZGVjcnlwdEFkZHJlc3NlcyhrZXk6IGFueSkge1xuICAgIHZhdWx0QWRkcmVzc2VzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtLmFkZHJlc3MuaW5jbHVkZXMoJ3ByaXZhdGUnKSkge1xuICAgICAgICBsZXQgY2lwaGVyVGV4dCA9IGl0ZW0uYWRkcmVzcy5yZXBsYWNlKCdwcml2YXRlOicsICcnKVxuICAgICAgICBpdGVtLmFkZHJlc3MgPSBkZWNyeXB0KGNpcGhlclRleHQsIGtleSlcbiAgICAgIH0gICAgICBcbiAgICB9KVxuICAgIHJldHVybiB2YXVsdEFkZHJlc3Nlc1xuICB9XG5cbiAgZnVuY3Rpb24gZGVjcnlwdChjaXBoZXJUZXh0OiBhbnksIGtleTogYW55KSB7XG4gICAgdmFyIGJ5dGVzID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoY2lwaGVyVGV4dCwga2V5KVxuICAgIHZhciBkZWNyeXB0ZWREYXRhID0gSlNPTi5wYXJzZShieXRlcy50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCkpXG4gICAgcmV0dXJuIGRlY3J5cHRlZERhdGFcbiAgfVxuXG4gIGZ1bmN0aW9uIHZpc2l0T3BlblNlYUxpbmsoKSB7XG4gICAgd2luZG93Lm9wZW4oXG4gICAgICAnaHR0cHM6Ly8nICtcbiAgICAgICh2YXVsdENoYWluSWQgPT0gNCA/ICdyaW5rZWJ5LicgOiAnJykgK1xuICAgICAgJ29wZW5zZWEuaW8vYXNzZXRzLycgKyBcbiAgICAgICh2YXVsdENoYWluSWQgPT0gMTM3ID8gJ21hdGljLycgOiAnZXRoZXJldW0vJykgK1xuICAgICAgKGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcz8gYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzIDogY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbdmF1bHRDaGFpbklkXSkgK1xuICAgICAgJy8nICtcbiAgICAgIHRva2VuSWQgXG4gICAgLCAnX2JsYW5rJylcbiAgfVxuXG4gIGZ1bmN0aW9uIHZpc2l0TG9va3NSYXJlTGluaygpIHtcbiAgICB3aW5kb3cub3BlbihcbiAgICAgICdodHRwczovLycgK1xuICAgICAgKHZhdWx0Q2hhaW5JZCA9PSA0ID8gJ3JpbmtlYnkuJyA6ICcnKSArXG4gICAgICAnbG9va3NyYXJlLm9yZy9jb2xsZWN0aW9ucy8nICsgXG4gICAgICAodmF1bHRDaGFpbklkID09IDEzNyA/ICdtYXRpYy8nIDogJycpICtcbiAgICAgIChhbHRlcm5hdGVDb250cmFjdEFkZHJlc3M/IGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcyA6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W3ZhdWx0Q2hhaW5JZF0pICtcbiAgICAgICcvJyArXG4gICAgICB0b2tlbklkIFxuICAgICwgJ19ibGFuaycpXG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdEFyY2FkZUxpbmsoKSB7XG4gICAgd2luZG93Lm9wZW4oXG4gICAgICBgaHR0cHM6Ly9hcHAuYXJjYWRlLnh5ei90ZXJtcy9hc3NldC8ke3RhcmdldENvbnRyYWN0W3ZhdWx0Q2hhaW5JZF0/IHRhcmdldENvbnRyYWN0W3ZhdWx0Q2hhaW5JZF06IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W3ZhdWx0Q2hhaW5JZF19LyR7dG9rZW5JZH1gICwgJ19ibGFuaycpXG4gIH1cblxuICB7IGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcz9cbiAgICBlbWJsZW1Db250cmFjdCA9IGdldFZhdWx0Q29udHJhY3QoYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzPyBhbHRlcm5hdGVDb250cmFjdEFkZHJlc3M6IG51bGwpXG4gIDogbnVsbH1cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjpjYXJkXCIgY29udGVudD1cInN1bW1hcnlfbGFyZ2VfaW1hZ2VcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjpzaXRlXCIgY29udGVudD1cIkVtYmxlbS5GaW5hbmNlXCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6dGl0bGVcIiBjb250ZW50PXt2YXVsdE5hbWV9IC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOmRlc2NyaXB0aW9uXCIgY29udGVudD17c3BsaXREZXNjcmlwdGlvbih2YXVsdERlc2MpfSAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjppbWFnZVwiIGNvbnRlbnQ9e3ZhdWx0SW1hZ2V9IC8+XG4gICAgICAgIDxzY3JpcHRcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICAgICAgICAvLyAkKFwiLk5GVFwiKS50aWx0KHsgICAgXG4gICAgICAgICAgICAgIC8vICAgICBtYXhUaWx0OiAzXG4gICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgICAkKFwiLk5GVFwiKS50cmlnZ2VyKCdtb3VzZWVudGVyJyk7XG4gICAgICAgICAgICAgICQoXCIuTkZUXCIpLnRyaWdnZXIoJ21vdXNlY2xpY2snKSwgJy5ORlQnO1xuICAgICAgICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkYXJrTW9kZVwiKSA9PSAnZmFsc2UnKSB7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJkYXJrTW9kZVwiLFwidHJ1ZVwiKTsgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLmhyZWZcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPEFkZHJNb2RhbCBpc09wZW49e2lzT3BlbkFkZHJNb2RhbH0gb25DbG9zZT17b25DbG9zZUFkZHJNb2RhbH0gYWRkckNvaW49e2N1cnJDb2lufSBhZGRyQWRkcj17Y3VyckFkZHJ9IC8+XG5cbiAgICAgIDxLZXlzTW9kYWxcbiAgICAgICAgaXNPcGVuPXtpc09wZW5LZXlzTW9kYWx9XG4gICAgICAgIG9uQ2xvc2U9e29uQ2xvc2VLZXlzTW9kYWx9XG4gICAgICAgIG1uZW1vbmljPXttbmVtb25pY31cbiAgICAgICAgcHJpdktleUJUQz17cHJpdktleUJUQ31cbiAgICAgICAgcHJpdktleUVUSD17cHJpdktleUVUSH1cbiAgICAgICAgcHJpdlZhbHVlcz17cHJpdlZhbHVlc31cbiAgICAgICAgYWRkcmVzc2VzPXt2YXVsdEFkZHJlc3Nlc31cbiAgICAgIC8+XG4gICAgICB7c2hvd09mZmVyID8gKFxuICAgICAgICA8T2ZmZXJNb2RhbFxuICAgICAgICAgIGlzT3Blbj17aXNPcGVuT2ZmZXJNb2RhbH1cbiAgICAgICAgICBvbkNsb3NlPXtvbkNsb3NlT2ZmZXJNb2RhbH1cbiAgICAgICAgICB0b2tlbklkPXt0b2tlbklkfVxuICAgICAgICAgIG1pbmU9e21pbmV9XG4gICAgICAgIC8+XG4gICAgICApIDogbnVsbH1cbiAgICAgIFxuXG4gICAgICA8TG9hZGVyIGxvYWRlZD17c3RhdGUubG9hZGVkfT5cbiAgICAgICAgPEJveCBoZWlnaHQ9XCI0MHB4XCI+PC9Cb3g+XG4gICAgICAgIHtsb2FkaW5nQXBpID8gPFJlZnJlc2hpbmcgLz4gOiAnJ31cbiAgICAgICAgeyFpbnZhbGlkVmF1bHQgJiYgIXNsaWRlc2hvd09ubHkgPyAoXG4gICAgICAgICAgICA8RmxleCB3aWR0aD1cImZ1bGxcIiBhbGlnbj1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJORlRcIiBcbiAgICAgICAgICAgICAgICBtYXhXPVwic21cIlxuICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoPVwiMXB4XCJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcj17dmF1bHRDaGFpbklkICE9IGNoYWluSWQgPyAnb3JhbmdlLjUwMCcgOiBzdGF0dXMgPT0gJ2NsYWltZWQnID8gJ2dyZWVuLjUwMCcgOiBudWxsfVxuICAgICAgICAgICAgICAgIHJvdW5kZWQ9XCJsZ1wiXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c9XCJoaWRkZW5cIlxuICAgICAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgIG1pblc9ezM5MH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgICAgIG10PVwiMVwiXG4gICAgICAgICAgICAgICAgICBmb250V2VpZ2h0PVwic2VtaWJvbGRcIlxuICAgICAgICAgICAgICAgICAgYXM9XCJoM1wiXG4gICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0PVwidGlnaHRcIlxuICAgICAgICAgICAgICAgICAgcD17Mn1cbiAgICAgICAgICAgICAgICAgIHRleHRBbGlnbj1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtPVwidXBwZXJjYXNlXCJcbiAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgY29sb3I9XCJibHVlLjUwMFwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgVmF1bHQgTmV0d29yazoge0NIQUlOX0lEX05BTUVTW3ZhdWx0Q2hhaW5JZF19XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgbXQ9XCIxXCJcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiXG4gICAgICAgICAgICAgICAgICBhcz1cImgzXCJcbiAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ9XCJ0aWdodFwiXG4gICAgICAgICAgICAgICAgICBwPXsyfVxuICAgICAgICAgICAgICAgICAgdGV4dEFsaWduPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICAgIC8vIHRleHRUcmFuc2Zvcm09XCJ1cHBlcmNhc2VcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3ZhdWx0TmFtZX1cbiAgICAgICAgICAgICAgICAgIHshdmF1bHRQcml2YWN5ICYmIHZhdWx0VG90YWxWYWx1ZSA+IDAgPyAnOiB+JCcgKyB2YXVsdFRvdGFsVmFsdWUudG9Mb2NhbGVTdHJpbmcoKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgPFN0YWNrIGNsYXNzTmFtZT1cIk5GVC1jb250ZW50XCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIHsgdmF1bHRWYWx1ZXMubGVuZ3RoICYmIHZhdWx0VmFsdWVzLmZpbHRlcihpdGVtPT4ge3JldHVybiBpdGVtLnR5cGUgPT0gXCJuZnRcIn0pLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPE5GVFNsaWRlc2hvdyBuYW1lPXt2YXVsdE5hbWV9IGltYWdlPXt2YXVsdEltYWdlfSBpdGVtcz17dmF1bHRWYWx1ZXMubWFwKHZhbHVlPT57cmV0dXJuIHtpbWFnZTogdmFsdWUuaW1hZ2UsIGRlc2NyaXB0aW9uOiB2YWx1ZS5kZXNjcmlwdGlvbiwgbmFtZTogdmFsdWUubmFtZSwgdHlwZTogdmFsdWUudHlwZX19KX0gcHJvcGVydGllcyA9IHt7J2R1cmF0aW9uJzogMzAwMCwgY2FuU3dpcGU6IGZhbHNlfX0vPlxuICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgIDxFbWJlZCBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwIE5GVC1pbWFnZVwiIHVybD17dmF1bHRJbWFnZX0vPlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB7bWluZSAmJiBvd25lZEltYWdlID8gKFxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IHtoYW5kbGVPd25lZEVtYmVkKCl9fT4oT1dORUQpIFNob3cgRnVsbCBFbWJlZDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgKTogbnVsbH1cbiAgICAgICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgICAgICAgIDxTdGFjayBhbGlnbj1cImNlbnRlclwiIG1heFdpZHRoPVwiNDAwcHhcIj5cbiAgICAgICAgICAgICAgICAgIDxCb3ggbXQ9XCIyXCIgbWw9XCI0XCIgbGluZUhlaWdodD1cInRpZ2h0XCIgbWF4V2lkdGg9XCI0MDBweFwiPlxuICAgICAgICAgICAgICAgICAgICA8U3RhY2s+XG4gICAgICAgICAgICAgICAgICAgICAgPFRleHQgZm9udFNpemU9XCJ4c1wiPlxuICAgICAgICAgICAgICAgICAgICAgIHsgdmF1bHRDaGFpbklkID09IGNoYWluSWQgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtcIi4vdmF1bHRzP2FkZHJlc3M9XCIrb3duZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICBPd25lcjoge293bmVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFRleHQgb3ZlcmZsb3dXcmFwPVwiYW55d2hlcmVcIiBtdD17Mn0gYXM9XCJoNFwiIG1sPVwiNFwiIG1yPVwiNFwiIGZvbnRTaXplPVwieHNcIiBmb250U3R5bGU9XCJpdGFsaWNcIiBjbGFzc05hbWU9XCJtZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJlYWN0TWFya2Rvd24gcGx1Z2lucz17W2dmbV19IGNoaWxkcmVuPXtzcGxpdERlc2NyaXB0aW9uKHZhdWx0RGVzYyl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8L1N0YWNrPiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICA8L0JveD4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgPEJveCBwPVwiNlwiPlxuICAgICAgICAgICAgICAgIDxUYWJzIGlzRml0dGVkIHZhcmlhbnQ9J2VuY2xvc2VkJz5cbiAgICAgICAgICAgICAgICAgIDxUYWJMaXN0IG1iPScxZW0nPlxuICAgICAgICAgICAgICAgICAgICA8VGFiPkJhbGFuY2VzPC9UYWI+XG4gICAgICAgICAgICAgICAgICAgIDxUYWI+QXR0cmlidXRlczwvVGFiPlxuICAgICAgICAgICAgICAgICAgPC9UYWJMaXN0PlxuICAgICAgICAgICAgICAgICAgPFRhYlBhbmVscz5cbiAgICAgICAgICAgICAgICAgICAgPFRhYlBhbmVsPlxuICAgICAgICAgICAgICAgICAgICAgIHt2YXVsdFByaXZhY3kgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8Qm94IG1iPXs1fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgcGI9ezJ9IGNvbG9yPXtkZWNyeXB0ZWRFZmZlY3QgPyAnZ3JlZW4uNTAwJyA6IG51bGx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZWNyeXB0ZWRFZmZlY3QgPyBkZWNyeXB0ZWRFZmZlY3QgOiAnQ29udGVudHMgaGlkZGVuLiBFbnRlciBwYXNzd29yZCB0byB1bmxvY2suJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwidmF1bHQtcGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gdHJ5RGVjcnlwdChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1kZXNjcmliZWRieT1cInBhc3N3b3JkLWhlbHBlci10ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYmFja2dyb3VuZENvbG9yPXtjb2xvck1vZGUgPT0gXCJsaWdodFwiPyBcImdyYXkuMTAwXCI6IFwiZ3JheS43MDBcIn0gYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgY2xhc3NOYW1lPVwiY29pbi1iYWxhbmNlLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJveCBjb2xvcj1cImdyYXkuNTAwXCIgbGV0dGVyU3BhY2luZz1cIndpZGVcIiBmb250U2l6ZT1cInNtXCIgbWw9XCIyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9XCJoNFwiIG10PXsyfSBmb250V2VpZ2h0PVwic2VtaWJvbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEN1cnJlbnQgQ29udGVudHM6ICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0QWxsQmFsYW5jZXNMaXZlKFtdLCB0b2tlbklkLCAodik9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMb2FkZWRWYWx1ZXMoZmFsc2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmF1bHRWYWx1ZXModilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPiBbUmVmcmVzaCBCYWxhbmNlc108L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9XCJwXCIgY29sb3I9e2NvbG9yTW9kZT09XCJkYXJrXCI/IFwibGlnaHRncmVlblwiOiBcImZvcmVzdGdyZWVuXCJ9PiR7TnVtYmVyKHZhdWx0VG90YWxWYWx1ZS50b0ZpeGVkKDQpKS50b0xvY2FsZVN0cmluZygpfTwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHZhdWx0VmFsdWVzLmxlbmd0aCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWx0VmFsdWVzLm1hcCgoY29pbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0YWNrPiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb2luQmFsYW5jZSBjb2xvck1vZGU9e2NvbG9yTW9kZX0gY29pbj17Y29pbn0gbWluZT17KHN0YXR1cyA9PT0gJ2NsYWltZWQnICYmIGNsYWltZWRCeSA9PT0gYWNjb3VudCkgfHwgbWluZX0gb25SZW5ldz17b25SZW5ld30gaGlkZUFzc2V0PXtoYW5kbGVIaWRlQXNzZXR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoPFJlZnJlc2hpbmcgLz4gKSB9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdmF1bHREYXRhVmFsdWVzLmxlbmd0aCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWx0RGF0YVZhbHVlcy5tYXAoKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD5EYXRhOiB7ZGF0YS5hdHRyaWJ1dGVfa2V5fTwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogIXZhdWx0RGF0YVZhbHVlcy5sZW5ndGggJiYgIXZhdWx0VmFsdWVzLmxlbmd0aCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0Pk5vdGhpbmcgaW4gaGVyZSEgRmlsbCAnZXIgdXAhPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICA8L1RhYlBhbmVsPlxuICAgICAgICAgICAgICAgICAgICA8VGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgICAgPEF0dHJpYnV0ZXMgY29sb3JNb2RlPXtjb2xvck1vZGV9IGF0dHJpYnV0ZXM9e2F0dHJpYnV0ZXN9Lz5cbiAgICAgICAgICAgICAgICAgICAgICA8L1RhYlBhbmVsPlxuICAgICAgICAgICAgICAgICAgICA8L1RhYlBhbmVscz5cbiAgICAgICAgICAgICAgICAgIDwvVGFicz5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgeyF2YXVsdFByaXZhY3kgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uR3JvdXAganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgc3BhY2luZz17Nn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U3RhY2s+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkRlcG9zaXQgQWRkcmVzc2VzPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8RmxleCB3PVwiMzQwcHhcIiBqdXN0aWZ5PVwiY2VudGVyXCIgZmxleFdyYXA9XCJ3cmFwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3ZhdWx0QWRkcmVzc2VzLm1hcCgoYWRkcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFkZHJlc3NfbmZ0X2J1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWw9ezJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXQ9ezJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ9XCIxMDAgIWltcG9ydGFudFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXthZGRyLmFkZHJlc3N9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q3VyckNvaW4oYWRkci5jb2luKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q3VyckFkZHIoYWRkci5hZGRyZXNzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25PcGVuQWRkck1vZGFsKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2FkZHIuY29pbiA9PSAnRVRIJyA/IGFkZHIuY29pbiArICcvRVZNJyA6IGFkZHIuY29pbiA9PSAnQlRDJyA/IGFkZHIuY29pbiArICcvWENQL09NTkknIDogYWRkci5jb2luID09ICdCQ0gnID8gYWRkci5jb2luICsgJy9TTFAnOiBhZGRyLmNvaW4gPT0gJ1RBUCc/ICdUQVBST09UJzogYWRkci5jb2lufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyhtaW5lIHx8IHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiB2YXVsdEFkZHJlc3Nlcy5sZW5ndGggPCAxMiA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBvbkNsaWNrPXsoKT0+e29uTWFuYWdlQWRkcmVzc1RvZ2dsZSgpfX0+TWFuYWdlIEFkZHJlc3NlczwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGbGV4IHc9XCIzNDBweFwiIGp1c3RpZnk9XCJjZW50ZXJcIiBmbGV4V3JhcD1cIndyYXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb2xsYXBzZSBpc09wZW49e2lzTWFuYWdlQWRkcmVzc09wZW59PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdET0dFJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignRE9HRScpIH19PkFkZCBET0dFPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnREdCJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignREdCJykgfX0+QWRkIERpZ2lieXRlPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnTk1DJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignTk1DJykgfX0+QWRkIE5hbWVjb2luPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnTFRDJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignTFRDJykgfX0+QWRkIExpdGVjb2luPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnTU9OQScpID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG1yPXsyfSBtdD17Mn0gb25DbGljaz17KCk9PnsgaGFuZGxlQWRkcmVzc1NpZ24oJ01PTkEnKSB9fT5BZGQgTW9uYTwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ1RFWk9TJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignVEVaT1MnKSB9fT5BZGQgVGV6b3M8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdTT0xBTkEnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdTT0xBTkEnKSB9fT5BZGQgU29sYW5hPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnU1RYJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignU1RYJykgfX0+QWRkIFN0YWNrczwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ1RBUCcpID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG1yPXsyfSBtdD17Mn0gb25DbGljaz17KCk9PnsgaGFuZGxlQWRkcmVzc1NpZ24oJ1RBUCcpIH19PkFkZCBUYXByb290PC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2U+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxuICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuXG4gICAgICAgICAgICAgICAgICB7IShzdGF0dXMgPT09ICdjbGFpbWVkJykgJiYgbGl2ZSAmJiAodmF1bHRDaGFpbklkID09PSAxIHx8IHZhdWx0Q2hhaW5JZCA9PT0gMTM3ICk/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8U3RhY2sgZD1cImZsZXhcIiB3aWR0aD1cIjEwMCVcIj4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD17bWluZSAmJiB2YXVsdENoYWluSWQgPT0gMT8gXCIzMyVcIiA6IHZhdWx0Q2hhaW5JZCA9PSAxMzc/IFwiMTAwJVwiOiBcIjUwJVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICBtPXsyLjV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1iPXs1fVxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7dmlzaXRPcGVuU2VhTGluaygpfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT3BlbnNlYVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdmF1bHRDaGFpbklkID09IDEgPyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9e21pbmU/IFwiMzMlXCIgOiBcIjUwJVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICBtPXsyLjV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1iPXs1fVxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7dmlzaXRMb29rc1JhcmVMaW5rKCl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBMb29rc1JhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbWluZSAmJiB2YXVsdENoYWluSWQgPT0gMT8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjMzJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBtPXsyLjV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBtYj17NX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt2aXNpdEFyY2FkZUxpbmsoKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJjYWRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApOiBudWxsfSAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB7c2hvd09mZmVyPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwiXCIgb25DbGljaz17KCkgPT4geyBvbk9wZW5PZmZlck1vZGFsKCkgfX0+e21pbmU/ICgnTXkgT2ZmZXJzJykgOiAoJ01ha2UgYW4gT2ZmZXInKX0gKE5GVMKyTkZUKTwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIHtpc0NvdmFsQXBwcm92ZWQgJiYgIWxpdmUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxTdGFjayBkaXJlY3Rpb249XCJyb3dcIiBhbGlnbj1cImZsZXgtc3RhcnRcIiBzcGFjaW5nPVwiMHJlbVwiIGZsZXhXcmFwPVwid3JhcFwiIHNob3VsZFdyYXBDaGlsZHJlbj5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IG1heFc9XCJzbVwiIGJvcmRlcldpZHRoPVwiMXB4XCIgcD17MX0gcm91bmRlZD1cImxnXCIgb3ZlcmZsb3c9XCJoaWRkZW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkNyZWF0aW5nIGEgdmF1bHQgc3BlbmRzIHtwcmljZSAqIE1hdGgucG93KDEwLCAtZGVjaW1hbHMpfSBDb3ZhbCBmcm9tIHlvdXIgd2FsbGV0PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIDxUZXh0PjQ4IGhvdXIgRnJlZSBtaW50aW5nIC0gc3BvbnNvcmVkIGJ5IHRoZSB0ZWFtIGF0IE1lZ2FQdW5rcyA8TGluayBocmVmPVwiaHR0cHM6Ly9tZWdhcHVua3MuY29tXCI+aHR0cHM6Ly9tZWdhcHVua3MuY29tPC9MaW5rPjwvVGV4dD4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgIHttaW5lICYmICFhcHByb3ZlZCA/ICg8PlxuICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yPXtcIiMwMmI0MDJcIn1cbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj17XCJibGFjayAhaW1wb3J0YW50XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodD17XCJib2xkICFpbXBvcnRhbnRcIn1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlQXBwcm92ZUZvcmFsbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0+IEFwcHJvdmUgTWludGluZzwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgPC8+KSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICB7IWxpdmUgJiYgbWluZSAmJiB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCAmJiBzdGF0dXMgIT09ICdjbGFpbWVkJyAmJiAhc2hvd01ha2luZ1ZhdWx0TXNnICYmIGFwcHJvdmVkICYmICFpc0NvdmFsQXBwcm92ZWQgPyAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGJhY2tncm91bmRDb2xvcj17XCIjMDJiNDAyXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I9e1wiYmxhY2sgIWltcG9ydGFudFwifVxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9e1wiYm9sZCAhaW1wb3J0YW50XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCIgbXQ9ezV9IG9uQ2xpY2s9e2FwcHJvdmVDb3ZhbEZsb3d9PlxuICAgICAgICAgICAgICAgICAgICAgIEFwcHJvdmUgU3BlbmRpbmcgQ292YWxcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgeyhzaG93VHJhbnNmZXJQYXNzd29yZCB8fCBtaW50UGFzc3dvcmQpICYmIGFjY2VwdGFibGUgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2xvY2F0aW9uLnByb3RvY29sICsnLy8nKyBsb2NhdGlvbi5ob3N0ICsgJy9uZnQ/aWQ9JyArIHRva2VuSWQgKyAnJmtleT0nICsgKHRyYW5zZmVyUGFzc3dvcmQgfHwgbWludFBhc3N3b3JkKX0+Q29weSBHaWZ0IExpbms8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD5QYXNzd29yZDogeyh0cmFuc2ZlclBhc3N3b3JkIHx8IG1pbnRQYXNzd29yZCl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIHthY2NlcHRhYmxlICYmIGNsYWltZWRCeSAhPT0gYWNjb3VudCA/IChcbiAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gbXQ9ezJ9IHdpZHRoPVwiMTAwJVwiIG9uQ2xpY2s9eygpPT57ZmlyZU1ldGFNYXNrKCl9fT5BY2NlcHQ8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICBtdD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJtaW50UGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5MZW5ndGg9ezN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1heExlbmd0aD17MjAwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bWludFBhc3N3b3JkIHx8ICcnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZ3JycicsIGUudGFyZ2V0LnZhbHVlLCBtaW50UGFzc3dvcmQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TWludFBhc3N3b3JkKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgeyFsaXZlICYmIG1pbmUgJiYgdmF1bHRDaGFpbklkID09IGNoYWluSWQgJiYgc3RhdHVzICE9PSAnY2xhaW1lZCcgJiYgIXNob3dNYWtpbmdWYXVsdE1zZyAmJiBhcHByb3ZlZCAmJiBpc0NvdmFsQXBwcm92ZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPD4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHdpZHRoPVwiMTAwJVwiIG10PXs1fSBpc0Rpc2FibGVkPXsoIXZhdWx0UHJpdmFjeSAmJiB2YXVsdFZhbHVlcy5sZW5ndGggPCAxKXx8IG1pbnRMb2NrZWRGb3JldmVyfSBvbkNsaWNrPXtsYXp5TWludH0+e21pbnRMb2NrZWRGb3JldmVyPyAnTWludCBMb2NrZWQgLSBrZXlzIGFjY2Vzc2VkIGJlZm9yZSBtaW50JyA6ICF2YXVsdFByaXZhY3kgJiYgdmF1bHRWYWx1ZXMubGVuZ3RoIDwgMT8gJ1BsZWFzZSBsb2FkIHRoZSB2YXVsdCB0byBtaW50JzogJ01pbnQgVmF1bHQnfTwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiBhY2NvdW50ICYmIHZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiBtaW5lICYmICFzZWFsZWQgJiYgYXBwcm92ZWQgJiYgbGl2ZSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUNsYWltKClcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBpc0Rpc2FibGVkPXtjbGFpbWluZ31cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Y2xhaW1pbmcgPyAnQ2xhaW1pbmcgLi4uJyA6ICdVbmxvY2sgVmF1bHQgKEdldCBQcml2YXRlIEtleXMpJ31cbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogKHZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiAoKHN0YXR1cyA9PSAnY2xhaW1lZCcgfHwgbWludExvY2tlZEZvcmV2ZXIpICYmIChjbGFpbWVkQnkgPT09IGFjY291bnQgfHwgbWluZSkpKSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gd2lkdGg9XCIxMDAlXCIgb25DbGljaz17aGFuZGxlU2lnbn0+XG4gICAgICAgICAgICAgICAgICAgICAgR2V0IEtleXNcbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgIDxTdGFjayBtdD17NX0+XG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBvbkNsaWNrPXsoKSA9PiB7IG9uQWR2YW5jZWRUb2dnbGUoKSB9fT5BZHZhbmNlZCBPcGVyYXRpb25zPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxGbGV4IHc9XCIxMDAlXCIganVzdGlmeT1cImNlbnRlclwiIGZsZXhXcmFwPVwid3JhcFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxDb2xsYXBzZSB3aWR0aD17XCIxMDAlXCJ9IGlzT3Blbj17aXNBZHZhbmNlZE9wZW59PlxuICAgICAgICAgICAgICAgICAgICAgICAge3ZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiBtaW5lVW5NaW50ZWQgJiYgc3RhdHVzICE9IFwiY2xhaW1lZFwiICYmICFtaW50TG9ja2VkRm9yZXZlciA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gd2lkdGg9XCIxMDAlXCIgb25DbGljaz17aGFuZGxlU2lnbn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZXQgS2V5cyAoVW5sb2NraW5nIHdpbGwgcHJldmVudCBtaW50aW5nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7bWluZSAmJiBzaG93TW92ZSAmJiBxdWFsaWZpZWRDb2xsZWN0aW9uICYmIHF1YWxpZmllZENvbGxlY3Rpb25bY2hhaW5JZF0gJiYgcXVhbGlmaWVkQ29sbGVjdGlvbi5uYW1lICYmIHF1YWxpZmllZENvbGxlY3Rpb24uY2hhaW4gPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVNb3ZlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0Rpc2FibGVkPXttb3Zpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge21vdmluZyA/ICdNb3ZpbmcgLi4uJyA6ICdNb3ZlIFZhdWx0J31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgICAgICAge21pbmUgfHwgY2xhaW1lZEJ5ID09IGFjY291bnQgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxKc29uRG93bmxvYWRMaW5rIGRhdGE9e3Jhd01ldGFkYXRhfSBmaWxlbmFtZT17YEVtYmxlbVZhdWx0LSR7dG9rZW5JZH0uanNvbmB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyghbGl2ZSB8fCBzdGF0dXMgPT0gJ2NsYWltZWQnKSAmJiB0byA9PSBhY2NvdW50ICYmIHZhdWx0Q2hhaW5JZCA9PSBjaGFpbklkICYmICFzaG93TWFraW5nVmF1bHRNc2cgJiYgdmF1bHRWYWx1ZXMubGVuZ3RoIDwgMSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBtdD17NX0gb25DbGljaz17ZGVsZXRlVmF1bHR9PkRlbGV0ZSBWYXVsdCA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2U+XG4gICAgICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG5cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICB7dmF1bHRJUEZTID8gKFxuICAgICAgICAgICAgICAgICAgICA8SFN0YWNrIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgdGFyZ2V0PSduZXcnIG1iPXsyfSBtbD17MzV9IGhyZWY9eydodHRwczovL2dhdGV3YXkuaXBmcy5pby9pcGZzLycrdmF1bHRJUEZTfSBpc0V4dGVybmFsPlZpZXcgTWV0YWRhdGEgb24gSVBGUyA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAge3ZhdWx0SW1hZ2VJUEZTPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBtYj17Mn0gaHJlZj17J2h0dHBzOi8vZ2F0ZXdheS5pcGZzLmlvL2lwZnMvJyt2YXVsdEltYWdlSVBGU30gaXNFeHRlcm5hbD5WaWV3IEltYWdlIG9uIElQRlMgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfSAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9IU3RhY2s+IFxuICAgICAgICAgICAgICAgICkgOiBudWxsIH1cblxuICAgICAgICAgICAgICAgIHtzZWFsZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBtYj17Mn0gbWw9ezM1fSBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dD4qVGhpcyB2YXVsdCBpcyBzZWFsZWQgZm9yZXZlci48L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICA8U3RhY2sgZGlyZWN0aW9uPVwiY29sdW1uXCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIHtzdGF0dXMgPT0gJ2NsYWltZWQnID8gPFRleHQgY29sb3I9XCJncmVlbi41MDBcIj5DTEFJTUVEPC9UZXh0PiA6IG51bGx9XG4gICAgICAgICAgICAgICAgPC9TdGFjaz5cblxuICAgICAgICAgICAgICAgIHtoYXNoID8gKFxuICAgICAgICAgICAgICAgICAgPEFsZXJ0IHN0YXR1cz1cImluZm9cIj5cbiAgICAgICAgICAgICAgICAgICAgPEFsZXJ0SWNvbiAvPlxuICAgICAgICAgICAgICAgICAgICB7IGFjY2VwdGluZyA/IFwiQWNjZXB0aW5nIFlvdXIgR2lmdCBWYXVsdFwiIDogY2xhaW1pbmcgPyBcIkNsYWltaW5nIHlvdXIgVmF1bHQgLi4uXCIgOiBhcHByb3Zpbmc/IFwiSGFuZGxpbmcgQXBwcm92YWwgRmxvdyAuLi5cIiA6IHRyYW5zZmVyaW5nPyBcIlRyYW5zZmVyaW5nIFZhdWx0IC4uLlwiOiAgbWludGluZz8gXCJNaW50aW5nIFZhdWx0XCIgOiBcIlZhbGlkYXRpbmcgdHJhbnNhY3Rpb25cIn1cbiAgICAgICAgICAgICAgICAgIDwvQWxlcnQ+XG4gICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICkgOiB2YXVsdFZhbHVlcy5sZW5ndGggPiAwICYmIHNsaWRlc2hvd09ubHk/IChcbiAgICAgICAgICA8U3RhY2sgY2xhc3NOYW1lPVwiTkZULWNvbnRlbnRcIiBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgeyB2YXVsdFZhbHVlcy5sZW5ndGggJiYgdmF1bHRWYWx1ZXMuZmlsdGVyKGl0ZW09PiB7cmV0dXJuIGl0ZW0udHlwZSA9PSBcIm5mdFwifSkubGVuZ3RoID4gMCA/IChcbiAgICAgICAgICAgICAgICA8TkZUU2xpZGVzaG93IG5hbWU9e3ZhdWx0TmFtZX0gaW1hZ2U9e3ZhdWx0VmFsdWVzWzBdLmltYWdlfSBpdGVtcz17dmF1bHRWYWx1ZXMuZmlsdGVyKHZhbHVlPT57cmV0dXJuIHZhbHVlLmltYWdlICE9PSB2YXVsdFZhbHVlc1swXS5pbWFnZX0pLm1hcCh2YWx1ZT0+e3JldHVybiB7aW1hZ2U6IHZhbHVlLmltYWdlLCBkZXNjcmlwdGlvbjogdmFsdWUuZGVzY3JpcHRpb24sIG5hbWU6IHZhbHVlLm5hbWUsIHR5cGU6IHZhbHVlLnR5cGV9fSl9IHByb3BlcnRpZXMgPSB7eydkdXJhdGlvbic6IDMwMDAsIGNhblN3aXBlOiBmYWxzZX19Lz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8RW1iZWQgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMCBORlQtaW1hZ2VcIiB1cmw9e3ZhdWx0SW1hZ2V9Lz5cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICkgOiBpbnZhbGlkVmF1bHQgPyAoXG4gICAgICAgICAgPFN0YWNrIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgd2lkdGg9XCJtZFwiXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vc3RhcndhcnNibG9nLnN0YXJ3YXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNy8wNi8yNS1zdGFyLXdhcnMtcXVvdGVzLW9iaS13YW4ta2Vub2JpLWlkZW50aWZpY2F0aW9uLXRhbGwuanBnXCJcbiAgICAgICAgICAgID48L0ltYWdlPlxuICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgIFRIRVNFIEFSRSBOT1QgVEhFIFZBVUxUUyBZT1UgQVJFIExPT0tJTkcgRk9SeycgJ31cbiAgICAgICAgICAgICAgPExpbmsgY29sb3I9XCIjNjM4Y2Q4XCIgaHJlZj1cIi4uL2NyZWF0ZVwiPlxuICAgICAgICAgICAgICAgIENSRUFURSBPTkUgSEVSRSFcbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICk6IG51bGx9XG5cbiAgICAgICAge2hhc2ggPyAoXG4gICAgICAgICAgPFRyYW5zYWN0aW9uVG9hc3RcbiAgICAgICAgICAgIGhhc2g9e2hhc2h9XG4gICAgICAgICAgICBvbkNvbXBsZXRlPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChjbGFpbWluZyAmJiAhYWNjZXB0aW5nICYmICFwcmVUcmFuc2ZlcmluZykge1xuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgICBzZXRTdGF0dXMoJ2NsYWltZWQnKVxuICAgICAgICAgICAgICAgIHNldENsYWltaW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIHNldENsYWltZWRCeShhY2NvdW50KVxuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZCArICcmY2M9dCc7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocHJlVHJhbnNmZXJpbmcpIHtcbiAgICAgICAgICAgICAgICBzYXZlUGFzc3dvcmRUb0xvY2FsU3RvcmFnZSgpXG4gICAgICAgICAgICAgICAgc2V0U2hvd1RyYW5zZmVyUGFzc3dvcmQodHJ1ZSlcbiAgICAgICAgICAgICAgICBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB9IGVsc2UgaWYoYWNjZXB0aW5nKSB7XG4gICAgICAgICAgICAgICAgc2V0QWNjZXB0aW5nKGZhbHNlKSAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBnZXRWYXVsdCgpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKVxuICAgICAgICAgICAgICB9IGVsc2UgaWYoYXBwcm92aW5nKSB7XG4gICAgICAgICAgICAgICAgc2V0QXBwcm92aW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIGdldFZhdWx0KClcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpXG4gICAgICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLm9yaWdpbiArICcvbmZ0P2lkPScgKyB0b2tlbklkXG4gICAgICAgICAgICAgIH0gZWxzZSBpZih0cmFuc2ZlcmluZykge1xuICAgICAgICAgICAgICAgIHNldFRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIGdldFZhdWx0KClcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpXG4gICAgICAgICAgICAgIH0gZWxzZSBpZihtaW50aW5nKSB7XG4gICAgICAgICAgICAgICAgY2hlY2tMaXZlbGluZXNzKHRva2VuSWQsICgpPT57XG4gICAgICAgICAgICAgICAgICBzZXRNaW50aW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgICAgc2V0TGl2ZSh0cnVlKVxuICAgICAgICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLm9yaWdpbiArICcvbmZ0P2lkPScgKyB0b2tlbklkICsgJyZjYz10JztcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgICA8Qm94IGhlaWdodD1cIjQwcHhcIj48L0JveD5cbiAgICAgIDwvTG9hZGVyPlxuICAgIDwvPlxuICApXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})