webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/contracts */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n/* harmony import */ var _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @transak/transak-sdk */ \"./node_modules/@transak/transak-sdk/dist/sdk.js\");\n/* harmony import */ var _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _partials_Attributes__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./partials/Attributes */ \"./components/partials/Attributes.tsx\");\n/* harmony import */ var _stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @stacks/wallet-sdk */ \"./node_modules/@stacks/wallet-sdk/dist/polyfill/index.js\");\n/* harmony import */ var _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @toruslabs/fetch-node-details */ \"./node_modules/@toruslabs/fetch-node-details/dist/fetchNodeDetails.esm.js\");\n/* harmony import */ var _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @toruslabs/torus.js */ \"./node_modules/@toruslabs/torus.js/dist/torusUtils.esm.js\");\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n // import TorusSdk from \"@toruslabs/torus-direct-web-sdk\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nvar OfferModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c5 = function _c5() {\n  return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./OfferModal */ \"./components/OfferModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./OfferModal */ \"./components/OfferModal.tsx\")];\n    },\n    modules: ['./OfferModal']\n  }\n});\n_c6 = OfferModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.cc == 't'),\n      clearCache = _useState[0],\n      setCache = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.curated == 't'),\n      showMove = _useState2[0],\n      setShowMove = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: ''\n  }),\n      qualifiedCollection = _useState3[0],\n      setQualifiedCollection = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      moving = _useState4[0],\n      setMoving = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approved = _useState5[0],\n      setApproved = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.useOldMint),\n      useOldMint = _useState6[0],\n      setUseOldMint = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.key),\n      mintPassword = _useState7[0],\n      setMintPassword = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.offer || false),\n      showOffer = _useState8[0],\n      setShowOffer = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.framed || true),\n      framed = _useState9[0],\n      setFramed = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.id),\n      tokenId = _useState10[0],\n      setTokenId = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.experimental),\n      experimental = _useState11[0],\n      setExperimental = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.noLayout),\n      noLayout = _useState12[0],\n      setNoLayout = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.slideshowOnly || false),\n      slideshowOnly = _useState13[0],\n      setSlideshowOnly = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultName = _useState14[0],\n      setVaultName = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultIPFS = _useState15[0],\n      setVaultIPFS = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImageIPFS = _useState16[0],\n      setVaultImageIPFS = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultCiphertextV2 = _useState17[0],\n      setVaultCiphertextV2 = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultDesc = _useState18[0],\n      setVaultDesc = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImage = _useState19[0],\n      setVaultImage = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      ownedImage = _useState20[0],\n      setOwnedImage = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultValues = _useState21[0],\n      setVaultValues = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadedValues = _useState22[0],\n      setLoadedValues = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultDataValues = _useState23[0],\n      setVaultDataValues = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      attributes = _useState24[0],\n      setAttributes = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultAddresses = _useState25[0],\n      setVaultAddresses = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      vaultPrivacy = _useState26[0],\n      setVaultPrivacy = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n      vaultTotalValue = _useState27[0],\n      setVaultTotalValue = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChainId = _useState28[0],\n      setVaultChainId = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChain = _useState29[0],\n      setVaultChain = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      hash = _useState30[0],\n      setHash = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currCoin = _useState31[0],\n      setCurrCoin = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currAddr = _useState32[0],\n      setCurrAddr = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState33[0],\n      setState = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mine = _useState34[0],\n      setMine = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      claiming = _useState35[0],\n      setClaiming = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('claimed'),\n      status = _useState36[0],\n      setStatus = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      sealed = _useState37[0],\n      setSealed = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      claimedBy = _useState38[0],\n      setClaimedBy = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      mnemonic = _useState39[0],\n      setMnemonic = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyBTC = _useState40[0],\n      setPrivKeyBTC = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyETH = _useState41[0],\n      setPrivKeyETH = _useState41[1];\n\n  var _useState42 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      privValues = _useState42[0],\n      setKeyValues = _useState42[1];\n\n  var _useState43 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadingApi = _useState43[0],\n      setLoadingApi = _useState43[1];\n\n  var _useState44 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptedEffect = _useState44[0],\n      setDecryptedEffect = _useState44[1];\n\n  var _useState45 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      decryptedEffectRunning = _useState45[0],\n      setDecryptedEffectRunning = _useState45[1];\n\n  var _useState46 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptPassword = _useState46[0],\n      setDecryptPassword = _useState46[1];\n\n  var _useState47 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      invalidVault = _useState47[0],\n      setInvalidVault = _useState47[1];\n\n  var _useState48 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      hasCheckedNft = _useState48[0],\n      setHasCheckedNft = _useState48[1];\n\n  var _useState49 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      accepting = _useState49[0],\n      setAccepting = _useState49[1];\n\n  var _useState50 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approving = _useState50[0],\n      setApproving = _useState50[1];\n\n  var _useState51 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      acceptable = _useState51[0],\n      setAcceptable = _useState51[1];\n\n  var _useState52 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      transferPassword = _useState52[0],\n      setTransferPassword = _useState52[1];\n\n  var _useState53 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showTransferPassword = _useState53[0],\n      setShowTransferPassword = _useState53[1];\n\n  var _useState54 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      preTransfering = _useState54[0],\n      setPreTransfering = _useState54[1];\n\n  var _useState55 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      transferToAddress = _useState55[0],\n      setTransferToAddress = _useState55[1];\n\n  var _useState56 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      transfering = _useState56[0],\n      setTransfering = _useState56[1];\n\n  var _useState57 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      owner = _useState57[0],\n      setOwner = _useState57[1]; // const [torus, setTorus] = useState(initTorus())\n\n\n  var _useState58 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      live = _useState58[0],\n      setLive = _useState58[1];\n\n  var _useState59 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      nonce = _useState59[0],\n      setNonce = _useState59[1];\n\n  var _useState60 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      block = _useState60[0],\n      setBlock = _useState60[1];\n\n  var _useState61 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      mintSignature = _useState61[0],\n      setMintSignature = _useState61[1];\n\n  var _useState62 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      to = _useState62[0],\n      setTo = _useState62[1];\n\n  var _useState63 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showVerifyingSignature = _useState63[0],\n      setShowVerifyingSignature = _useState63[1];\n\n  var _useState64 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showMakingVaultMsg = _useState64[0],\n      setShowMakingVaultMsg = _useState64[1];\n\n  var _useState65 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      minting = _useState65[0],\n      setMinting = _useState65[1];\n\n  var _useState66 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCrowdSale = _useState66[0],\n      setIsCrowdSale = _useState66[1];\n\n  var _useState67 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      alternateContractAddress = _useState67[0],\n      setAlternateContractAddress = _useState67[1];\n\n  var _useState68 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      targetAsset = _useState68[0],\n      setTargetAsset = _useState68[1];\n\n  var _useState69 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      targetContract = _useState69[0],\n      setTargetContract = _useState69[1]; // const [transferImage, setTransferImage] = useState('')\n\n\n  var _useState70 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCovalApproved = _useState70[0],\n      setIsCovalApproved = _useState70[1];\n\n  var _useState71 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      decimals = _useState71[0],\n      setDecimals = _useState71[1];\n\n  var _useState72 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      allowance = _useState72[0],\n      setAllowance = _useState72[1];\n\n  var _useState73 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      balance = _useState73[0],\n      setBalance = _useState73[1];\n\n  var _useState74 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      price = _useState74[0],\n      setPrice = _useState74[1];\n\n  var _useState75 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mineUnMinted = _useState75[0],\n      setMineUnMinted = _useState75[1];\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var vaultHandlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n  var covalContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].coval[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].covalAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenOfferModal = _useDisclosure3.isOpen,\n      onOpenOfferModal = _useDisclosure3.onOpen,\n      onCloseOfferModal = _useDisclosure3.onClose;\n\n  var _useDisclosure4 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure4.isOpen,\n      onToggle = _useDisclosure4.onToggle;\n\n  var _useDisclosure5 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isManageAddressOpen = _useDisclosure5.isOpen,\n      onManageAddressToggle = _useDisclosure5.onToggle;\n\n  var _useColorMode = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"])(),\n      colorMode = _useColorMode.colorMode;\n\n  var transak;\n  var transferImage; // async function initTorus() {\n  //   let _torus = new TorusSdk({\n  //     baseUrl: `${window.location.origin}/serviceworker`,\n  //     enableLogging: true,\n  //     network: \"testnet\", // details for test net\n  //   });\n  //   await _torus.init({skipSw: true, skipInit: true, skipPrefetch: true})\n  //   console.log(\"Initialized Torus\")\n  //   return _torus\n  // }\n\n  var getVaultContract = function getVaultContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    //return useContract(address || contractAddresses.emblemVault[chainId], contractAddresses.emblemAbi, true)\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address || _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, library.getSigner(account).connectUnchecked());\n  };\n\n  var getCuratedContract = function getCuratedContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].erc1155Abi, library.getSigner(account).connectUnchecked());\n  };\n\n  var initializeTransak = function initializeTransak(address, coin) {\n    transak = new _transak_transak_sdk__WEBPACK_IMPORTED_MODULE_22___default.a({\n      apiKey: 'e8bed1bd-6844-4eb1-973a-7a11a48fafab',\n      // Your API Key\n      environment: 'PRODUCTION',\n      // STAGING/PRODUCTION\n      defaultCryptoCurrency: coin || 'ETH',\n      walletAddress: address || '',\n      // Your customer's wallet address\n      themeColor: '000000',\n      // App theme color\n      fiatCurrency: 'USD',\n      // INR/GBP\n      // fiatAmount: 350,\n      email: '',\n      // Your customer's email address\n      redirectURL: '',\n      // paymentMethod: 'neft_bank_transfer',\n      hostURL: window.location.origin,\n      widgetHeight: '550px',\n      widgetWidth: '450px'\n    }); // To get all the events\n\n    transak.on(transak.ALL_EVENTS, function (data) {\n      console.log(data);\n    }); // This will trigger when the user marks payment is made.\n\n    transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, function (orderData) {\n      console.log(orderData);\n      transak.close();\n    });\n    transak.init();\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/liveliness', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context.sent;\n                setLive(data.live);\n                console.log(\"Liveliness check\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return cb();\n  };\n\n  var transferVault = function transferVault() {\n    setTransfering(true);\n    emblemContract.transferFrom(account, transferToAddress, tokenId).then(function (_ref2) {\n      var hash = _ref2.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {});\n  };\n\n  var lazyMint = function lazyMint() {\n    library.getSigner(account).signMessage('Delayed Minting: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/lazyMint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainid: chainId.toString()\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref3 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context2.sent;\n\n                  if (!data.error && data.data) {\n                    setMintSignature(data.data.signature);\n                    setNonce(data.data.nonce);\n                    setBlock(data.data.block);\n                    setShowVerifyingSignature(true); // setCreating(true)\n\n                    setTimeout(function () {\n                      delayedMint(data.data.nonce, data.data.block, data.data.signature);\n                    }, 1500);\n                  } else {\n                    alert(data.error ? data.msg : 'unknown error');\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var delayedMint = function delayedMint(nonce, block, sig) {\n    // setCreating(true)\n    console.log(\"Delayed Minting\");\n    setShowVerifyingSignature(false);\n    setShowMakingVaultMsg(true);\n    setMinting(true);\n    var cipherTextHash = vaultAddresses.filter(function (address) {\n      return address.coin == \"ETH\";\n    })[0].address // console.log(\"--------------------------------------------------------Delayed Minting\", account, tokenId, cipherTextHash, nonce, block, sig)\n    ;\n    handlerContract.buyWithSignature2(account, tokenId, cipherTextHash, nonce, block, sig).then(function (_ref4) {\n      var hash = _ref4.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setShowMakingVaultMsg(false);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      console.log(\"AAAAAHHHHHH\", error);\n      setShowMakingVaultMsg(false); // setMinting(false)\n    });\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref5) {\n        var hash = _ref5.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref6) {\n      var hash = _ref6.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error !== null && error !== void 0 && error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref7) {\n      var hash = _ref7.hash;\n      setTimeout(function () {\n        setHash(hash); // setShowMakingVaultMsg(true)\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false); // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    covalContract.approve(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], '100000000000000').then(function (_ref8) {\n      var hash = _ref8.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var deleteVault = function deleteVault() {\n    library.getSigner(account).signMessage('Delete: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/v2/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context3.sent;\n                  location.href = location.href.split(\"/\")[0] + \"/vaults\";\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var syncAccount = function syncAccount() {\n    var synched = localStorage.getItem(tokenId + '-v');\n\n    if (!synched) {\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/sync/' + tokenId, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        }\n      }).then( /*#__PURE__*/function () {\n        var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(response) {\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  localStorage.setItem(tokenId + '-v', '1');\n                  return _context4.abrupt(\"return\", true);\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref10.apply(this, arguments);\n        };\n      }())[\"catch\"](function () {\n        return false;\n      });\n    }\n  };\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // syncAccount()\n              console.log('getvault'); // !slideshowOnly ? loadCache() : null\n              // console.log(\"---------\",EMBLEM_API + '/meta/' + tokenId + '?experimental=true')\n\n              _context5.next = 3;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true' + (clearCache ? '&_vercel_no_cache=1' : ''), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  cc: clearCache ? 't' : ''\n                }\n              });\n\n            case 3:\n              responce = _context5.sent;\n              _context5.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context5.sent;\n              setStates(jsonData); // console.log('vault response was ', jsonData)\n\n              if (jsonData.image_ipfs) {// getIPFSImage(jsonData.image_ipfs)\n              }\n\n              if (jsonData.collectionAddress) {\n                setIsCrowdSale(true);\n                setAlternateContractAddress(jsonData.collectionAddress);\n              }\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                // setStates(jsonData)\n                // !slideshowOnly? saveCache(jsonData) : null\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n              !vaultPrivacy && !loadedValues ? getAllBalancesLive([], tokenId, function (v) {\n                if (v) {\n                  setVaultValues(v);\n                }\n              }) : null;\n\n              if (jsonData.targetContract) {\n                setTimeout(function () {\n                  location.href = location.origin + '/nft2?id=' + jsonData.targetContract.tokenId;\n                }, 500);\n              }\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getVault() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  cc: 't',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              responce = _context6.sent;\n              _context6.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context6.sent;\n\n              if (!jsonData.signature) {\n                _context6.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context6.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context6.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getWitness(_x5) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getMoveableCollections = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7() {\n      var project, projectName, _qualifiedCollection;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              // alert(0)\n              console.log(\"-----------------------------------\", vaultValues.length, attributes.length);\n\n              if (vaultValues.length == 1 && attributes.length > 0) {\n                project = attributes.filter(function (item) {\n                  return item.value == vaultValues[0].name;\n                });\n\n                if (project.length > 0) {\n                  // console.log(project[0].trait_type)\n                  projectName = project[0].trait_type;\n                  _qualifiedCollection = _constants__WEBPACK_IMPORTED_MODULE_13__[\"curatedContracts\"].filter(function (item) {\n                    return item.name == projectName;\n                  });\n\n                  if (_qualifiedCollection.length > 0) {\n                    // console.log('--------- @@@@@@@@@@@ -------------- @@@@@qualified', _qualifiedCollection[0])\n                    setQualifiedCollection(_qualifiedCollection[0]);\n                  }\n                }\n              } else {// setTimeout(()=>{getMoveableCollections()}, 1000)\n              }\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getMoveableCollections() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && jsonData.image && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n\n    if (jsonData.ciphertextV2) {\n      setVaultCiphertextV2(jsonData.ciphertextV2);\n      console.log(\"ciphertextV2\", jsonData.ciphertextV2);\n    }\n\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setOwnedImage(jsonData.ownedImage || null);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    jsonData.values ? setVaultValues(vaultValues.concat(jsonData.values)) : null;\n    jsonData.attributes ? setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    })) : null;\n    jsonData.attributes ? setAttributes(jsonData.attributes) : null;\n    setVaultAddresses(jsonData.addresses);\n    setVaultIPFS(jsonData.ipfs || null);\n    setVaultImageIPFS(jsonData.image_ipfs || null);\n    jsonData.targetAsset ? setTargetAsset(jsonData.targetAsset) : null;\n    jsonData.targetContract ? setTargetContract(jsonData.targetContract) : null;\n\n    if (jsonData.targetContract) {\n      setTimeout(function () {\n        location.href = location.origin + '/nft2?id=' + jsonData.targetContract.tokenId;\n      }, 500);\n    }\n\n    if (jsonData.live == false) {\n      checkLiveliness(jsonData.tokenId, function () {});\n    }\n\n    setLive(jsonData.live == false ? false : true);\n    setNonce(jsonData.nonce);\n    setMintSignature(jsonData.signature);\n    setTo(jsonData.to);\n    setVaultChain(jsonData.network);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : jsonData.network == \"bitcoin\" ? 0 : jsonData.network == \"aurora\" ? 1313161554 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    } // console.log('inside getstates. mine is ', mine)\n\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n\n    if (jsonData.sealed) {\n      setSealed(true);\n    } else {\n      setSealed(false);\n    }\n\n    getMoveableCollections();\n  }; // const getEthBalances = async (address, cb) => {\n  //   const responce = await fetch(EMBLEM_API + '/eth/balance/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   // console.log(Number(vaultTotalValue), Number(jsonData.totalValue))\n  //   setVaultTotalValue(Number(vaultTotalValue) + Number(jsonData.totalValue))\n  //   // console.log('get eth balances', jsonData.values)\n  //   return cb(jsonData.values)\n  // }\n  // const getBtcBalance = async (values, address, cb) => {\n  //   const responce = await fetch(EMBLEM_API + '/btc/balance/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   // setVaultValues(values.concat(jsonData.values))\n  //   return cb(values.concat(jsonData.values))\n  // }\n  // const getNftBalance = async (values, address, cb) => {\n  //   // console.log(address)\n  //   const responce = await fetch(EMBLEM_API + '/eth/nft/' + address, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       service: 'evmetadata',\n  //     },\n  //   })\n  //   const jsonData = await responce.json()\n  //   if (jsonData.length > 0) {\n  //     // console.log(\"Fuckling NFT\", jsonData, values.concat(jsonData))\n  //     return cb(values.concat(jsonData))\n  //   } else {\n  //     return cb(values)\n  //   }\n  // }\n\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context8.sent;\n              _context8.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context8.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context8.next = 11;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context8.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getAllBalances(_x6, _x7, _x8) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesLive = /*#__PURE__*/function () {\n    var _ref15 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!loadedValues) {\n                _context9.next = 2;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", cb(false));\n\n            case 2:\n              setLoadedValues(true);\n              _context9.next = 5;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId + '?live=true&_vercel_no_cache=1', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              responce = _context9.sent;\n              _context9.next = 8;\n              return responce.json();\n\n            case 8:\n              jsonData = _context9.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context9.next = 14;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 14:\n              return _context9.abrupt(\"return\", cb(values));\n\n            case 15:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getAllBalancesLive(_x9, _x10, _x11) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesByAddress = /*#__PURE__*/function () {\n    var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10(values, ethAddress, btcAddress, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + ethAddress + '/' + btcAddress, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context10.sent;\n              _context10.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context10.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context10.next = 11;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context10.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getAllBalancesByAddress(_x12, _x13, _x14, _x15) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var saveCache = function saveCache(vault) {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_vault', JSON.stringify(vault)); // Save new state for later\n  };\n\n  var loadCache = function loadCache() {\n    console.log('cache');\n    var vault = JSON.parse(localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_vault')); // Load vaults from storage before updating from server!\n\n    if (vault) {\n      setState({\n        loaded: true\n      });\n      setStates(vault);\n      setLoadingApi(true);\n    }\n  };\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  }; // const getKeys = async (signature, tokenId, cb) => {\n  //   var myHeaders = new Headers()\n  //   myHeaders.append('chainId', chainId.toString())\n  //   myHeaders.append('service', 'evmetadata')\n  //   myHeaders.append('Content-Type', 'application/json')\n  //   var raw = JSON.stringify({ signature: signature })\n  //   const responce = await fetch(EMBLEM_API + '/claim/' + tokenId, {\n  //     method: 'POST',\n  //     headers: myHeaders,\n  //     body: raw,\n  //     redirect: 'follow',\n  //   })\n  //   const jsonData = await responce.json()\n  //   // console.log('getKeys response is ', jsonData)\n  //   return cb(jsonData)\n  // }\n\n\n  var getSignedJWT = /*#__PURE__*/function () {\n    var _ref17 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainid', chainId.toString());\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                tokenId: tokenId\n              });\n              _context11.next = 6;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"SIG_API\"] + '/sign', {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 6:\n              responce = _context11.sent;\n              _context11.next = 9;\n              return responce.json();\n\n            case 9:\n              jsonData = _context11.sent;\n              return _context11.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function getSignedJWT(_x16, _x17, _x18) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  function getTorusKeys(_x19, _x20, _x21) {\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  function _getTorusKeys() {\n    _getTorusKeys = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee31(verifierId, idToken, cb) {\n      var fetchNodeDetails, torusUtils, _yield$fetchNodeDetai, torusNodeEndpoints, torusIndexes, _yield$torusUtils$ret, privKey;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee31$(_context31) {\n        while (1) {\n          switch (_context31.prev = _context31.next) {\n            case 0:\n              // const fetchNodeDetails = new FetchNodeDetails({ network: \"https://solemn-restless-diagram.ropsten.discover.quiknode.pro/37fca8f14d3a42d9ec00f50a3f6adc404d5e2a04/\", proxyAddress: \"0x6258c9d6c12ed3edda59a1a6527e469517744aa7\" });\n              // const torusUtils = new TorusUtils({ enableOneKey: true, network: \"testnet\" });\n              fetchNodeDetails = new _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_25__[\"default\"]({\n                network: \"mainnet\"\n              });\n              torusUtils = new _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]({\n                enableOneKey: true,\n                network: \"mainnet\"\n              });\n              _context31.next = 4;\n              return fetchNodeDetails.getNodeDetails({\n                verifier: 'tor-us-signer-vercel',\n                verifierId: verifierId\n              });\n\n            case 4:\n              _yield$fetchNodeDetai = _context31.sent;\n              torusNodeEndpoints = _yield$fetchNodeDetai.torusNodeEndpoints;\n              torusIndexes = _yield$fetchNodeDetai.torusIndexes;\n              _context31.next = 9;\n              return torusUtils.retrieveShares(torusNodeEndpoints, torusIndexes, 'tor-us-signer-vercel', {\n                verifier_id: verifierId\n              }, idToken);\n\n            case 9:\n              _yield$torusUtils$ret = _context31.sent;\n              privKey = _yield$torusUtils$ret.privKey;\n              return _context31.abrupt(\"return\", cb({\n                privateKey: privKey\n              }));\n\n            case 12:\n            case \"end\":\n              return _context31.stop();\n          }\n        }\n      }, _callee31);\n    }));\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref18 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12(signature, tokenId, coin, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                coin: coin\n              });\n              _context12.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/address/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context12.sent;\n              _context12.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context12.sent;\n              return _context12.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function addAddress(_x22, _x23, _x24, _x25) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  var decryptEmbed = /*#__PURE__*/function () {\n    var _ref19 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context13.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/embed/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context13.sent;\n              _context13.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context13.sent;\n              return _context13.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function decryptEmbed(_x26, _x27, _x28) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref20 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15() {\n      var owned, _owner, finish, _finish;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _finish = function _finish3() {\n                _finish = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14() {\n                  var acceptable, isApproved;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context14) {\n                    while (1) {\n                      switch (_context14.prev = _context14.next) {\n                        case 0:\n                          _context14.next = 2;\n                          return handlerContract.getPreTransfer(tokenId);\n\n                        case 2:\n                          acceptable = _context14.sent;\n\n                          if (!targetContract[chainId]) {\n                            _context14.next = 9;\n                            break;\n                          }\n\n                          _context14.next = 6;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n\n                        case 6:\n                          isApproved = _context14.sent;\n                          _context14.next = 12;\n                          break;\n\n                        case 9:\n                          _context14.next = 11;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n                        case 11:\n                          isApproved = _context14.sent;\n\n                        case 12:\n                          setApproved(isApproved);\n                          setAcceptable(acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n                          setOwner(_owner);\n                          setMine(_owner === account || to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          setMineUnMinted(to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          loadPasswordFromLocalStorage(); // alert(to == account)\n\n                        case 18:\n                        case \"end\":\n                          return _context14.stop();\n                      }\n                    }\n                  }, _callee14);\n                }));\n                return _finish.apply(this, arguments);\n              };\n\n              finish = function _finish2() {\n                return _finish.apply(this, arguments);\n              };\n\n              // alert(0)\n              console.log(\"Contract states\");\n              owned = false;\n              _context15.prev = 4;\n\n              if (!targetContract[chainId]) {\n                _context15.next = 14;\n                break;\n              }\n\n              console.log(\"Checking owner wth targetContract\");\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context15.next = 10;\n              return emblemContract.getOwnerOfSerial(targetContract.serialNumber);\n\n            case 10:\n              _owner = _context15.sent;\n              console.log(\"--------------------------- owner\", _owner, approved, account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n              _context15.next = 22;\n              break;\n\n            case 14:\n              if (!live) {\n                _context15.next = 20;\n                break;\n              }\n\n              _context15.next = 17;\n              return emblemContract.ownerOf(tokenId);\n\n            case 17:\n              _context15.t0 = _context15.sent;\n              _context15.next = 21;\n              break;\n\n            case 20:\n              _context15.t0 = 0x0000000000000000000000000000000000000000;\n\n            case 21:\n              _owner = _context15.t0;\n\n            case 22:\n              _context15.t1 = setDecimals;\n              _context15.next = 25;\n              return covalContract.decimals();\n\n            case 25:\n              _context15.t2 = _context15.sent;\n              (0, _context15.t1)(_context15.t2);\n              _context15.t3 = setAllowance;\n              _context15.next = 30;\n              return covalContract.allowance(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 30:\n              _context15.t4 = _context15.sent;\n              (0, _context15.t3)(_context15.t4);\n              _context15.t5 = setBalance;\n              _context15.next = 35;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 35:\n              _context15.t6 = _context15.sent;\n              (0, _context15.t5)(_context15.t6);\n              _context15.t7 = setPrice;\n              _context15.next = 40;\n              return handlerContract.price().then(function (balance) {\n                return balance.toString();\n              });\n\n            case 40:\n              _context15.t8 = _context15.sent;\n              (0, _context15.t7)(_context15.t8);\n\n              // console.log(\n              //   'balance',\n              //   balance,\n              //   'allowance',\n              //   allowance,\n              //   'price',\n              //   price,\n              //   Number(allowance) >= Number(price),\n              //   Number(balance) > Number(price)\n              // )\n              if (Number(allowance) >= Number(price)) {\n                // alert(true)\n                setIsCovalApproved(true);\n              } else {\n                // alert(false)\n                setIsCovalApproved(false);\n              }\n\n              finish();\n              _context15.next = 51;\n              break;\n\n            case 46:\n              _context15.prev = 46;\n              _context15.t9 = _context15[\"catch\"](4);\n              console.log(\"-------\", _context15.t9); // approveCovalFlow()\n\n              _owner = \"0x0000000000000000000000000000000000000000\";\n              finish();\n\n            case 51:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[4, 46]]);\n    }));\n\n    return function getContractStates() {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log(\"mine?\", mine);\n    console.log(\"claiming?\", claiming);\n    console.log(\"accepting?\", accepting);\n    console.log(\"acceptable\", acceptable);\n    console.log(\"qualified\", qualifiedCollection);\n  });\n\n  var hasAddress = function hasAddress(coin) {\n    console.log(coin, vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0);\n    return vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0;\n  };\n\n  var onRenew = /*#__PURE__*/function () {\n    var _ref21 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee17(name) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              library.getSigner(account).signMessage('Renew: ' + tokenId).then(function (signature) {\n                var address = vaultAddresses.filter(function (address) {\n                  return address.coin == 'NMC';\n                })[0].address;\n                console.log('signature', signature, name);\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/nmc/renew/' + address, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"tokenId\": tokenId,\n                    \"signature\": signature,\n                    \"name\": name\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref22 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee16(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _context16.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context16.sent;\n                            console.log(\"Requested Renew\", data);\n\n                          case 4:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x30) {\n                    return _ref22.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function onRenew(_x29) {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref23 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee20() {\n      var serialNumber;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              if (!targetContract[chainId]) {\n                _context20.next = 5;\n                break;\n              }\n\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context20.next = 4;\n              return emblemContract.getSerial(targetContract.tokenId, 0);\n\n            case 4:\n              serialNumber = _context20.sent;\n\n            case 5:\n              library.getSigner(account).signMessage('Claim: ' + (targetContract[chainId] ? serialNumber : tokenId)).then(function (signature) {\n                getSignedJWT(signature, tokenId, function (token) {\n                  getTorusKeys(tokenId, token.token, /*#__PURE__*/function () {\n                    var _ref24 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee19(keys) {\n                      var bytes, payload;\n                      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee19$(_context19) {\n                        while (1) {\n                          switch (_context19.prev = _context19.next) {\n                            case 0:\n                              _context19.prev = 0;\n                              bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(vaultCiphertextV2, keys.privateKey);\n                              payload = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n                              setKeyValues(payload.values);\n                              setMnemonic(payload.phrase);\n                              vaultAddresses.forEach( /*#__PURE__*/function () {\n                                var _ref25 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee18(address) {\n                                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee18$(_context18) {\n                                    while (1) {\n                                      switch (_context18.prev = _context18.next) {\n                                        case 0:\n                                          if (!(address.coin == 'STX')) {\n                                            _context18.next = 6;\n                                            break;\n                                          }\n\n                                          _context18.next = 3;\n                                          return getSTXKey(address, payload.phrase);\n\n                                        case 3:\n                                          address.key = _context18.sent;\n                                          _context18.next = 7;\n                                          break;\n\n                                        case 6:\n                                          address.key = window.phrasePathToKey(payload.phrase, address.path);\n\n                                        case 7:\n                                          if (address.coin == 'BTC') setPrivKeyBTC(address.key);\n                                          if (address.coin == 'ETH') setPrivKeyETH(address.key);\n\n                                        case 9:\n                                        case \"end\":\n                                          return _context18.stop();\n                                      }\n                                    }\n                                  }, _callee18);\n                                }));\n\n                                return function (_x32) {\n                                  return _ref25.apply(this, arguments);\n                                };\n                              }());\n                              _context19.next = 13;\n                              break;\n\n                            case 8:\n                              _context19.prev = 8;\n                              _context19.t0 = _context19[\"catch\"](0);\n                              _context19.next = 12;\n                              return syncAccount();\n\n                            case 12:\n                              setTimeout(function () {\n                                location.href = location.href;\n                              }, 2000);\n\n                            case 13:\n                              // setKeyValues(vaultAddresses)\n                              onOpenKeysModal();\n\n                            case 14:\n                            case \"end\":\n                              return _context19.stop();\n                          }\n                        }\n                      }, _callee19, null, [[0, 8]]);\n                    }));\n\n                    return function (_x31) {\n                      return _ref24.apply(this, arguments);\n                    };\n                  }());\n                }); // }\n              });\n\n            case 6:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function handleSign() {\n      return _ref23.apply(this, arguments);\n    };\n  }();\n\n  var getSTXKey = /*#__PURE__*/function () {\n    var _ref26 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee21(address, phrase) {\n      var wallet, account;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return Object(_stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_24__[\"generateWallet\"])({\n                secretKey: phrase,\n                password: ''\n              });\n\n            case 2:\n              wallet = _context21.sent;\n              console.log('------ stacks account -', wallet.accounts[0]);\n              account = wallet.accounts[0];\n              address.key = account.stxPrivateKey;\n              return _context21.abrupt(\"return\", address.key);\n\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function getSTXKey(_x33, _x34) {\n      return _ref26.apply(this, arguments);\n    };\n  }();\n\n  var handleHideAsset = /*#__PURE__*/function () {\n    var _ref27 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee22(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              library.getSigner(account).signMessage('HideAsset: ' + tokenId).then(function (signature) {\n                console.log(\"----------------------------------------------------------------\", signature);\n                console.log(coin.name, coin.coin, coin.address);\n                hideAsset(tokenId, coin.coin, coin.address, coin.name, signature, function () {\n                  console.log(\"Done hiding coin and getting new balances\");\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    return function handleHideAsset(_x35) {\n      return _ref27.apply(this, arguments);\n    };\n  }();\n\n  function hideAsset(tokenId, coin, address, name, signature, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/hide/' + tokenId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      body: JSON.stringify({\n        \"coin\": coin ? coin : null,\n        \"address\": address ? address : null,\n        \"name\": name ? name : null,\n        \"signature\": signature ? signature : null\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref28 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee23(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context23.sent;\n                console.log(\"-------\", data);\n                getAllBalances([], tokenId, function (values) {\n                  setVaultValues(values);\n                  return cb();\n                });\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x36) {\n        return _ref28.apply(this, arguments);\n      };\n    }());\n  }\n\n  var handleAddressSign = /*#__PURE__*/function () {\n    var _ref29 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee24(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              library.getSigner(account).signMessage('Address: ' + tokenId).then(function (signature) {\n                addAddress(signature, tokenId, coin, function (result) {\n                  getVault();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    return function handleAddressSign(_x37) {\n      return _ref29.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnedEmbed = /*#__PURE__*/function () {\n    var _ref30 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee25() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              library.getSigner(account).signMessage('Embed: ' + tokenId).then(function (signature) {\n                decryptEmbed(signature, tokenId, function (result) {\n                  setVaultImage(result.ownedImage);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25);\n    }));\n\n    return function handleOwnedEmbed() {\n      return _ref30.apply(this, arguments);\n    };\n  }();\n\n  var handleMove = /*#__PURE__*/function () {\n    var _ref31 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee27() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              // setMoving(true)\n              getMoveableCollections();\n              console.log('---------- qualified move', qualifiedCollection);\n              fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/v2/move-vault/', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                },\n                body: JSON.stringify({\n                  \"chainId\": 1,\n                  \"from\": account,\n                  \"sourceContract\": {\n                    \"1\": \"0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab\"\n                  },\n                  \"targetContract\": {\n                    \"1\": qualifiedCollection[chainId],\n                    \"name\": qualifiedCollection.name,\n                    \"chain\": qualifiedCollection.chain\n                  },\n                  \"targetAsset\": {\n                    \"name\": vaultValues[0].name\n                  },\n                  \"amount\": 1,\n                  \"tokenId\": tokenId\n                })\n              }).then( /*#__PURE__*/function () {\n                var _ref32 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee26(response) {\n                  var data;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee26$(_context26) {\n                    while (1) {\n                      switch (_context26.prev = _context26.next) {\n                        case 0:\n                          _context26.next = 2;\n                          return response.json();\n\n                        case 2:\n                          data = _context26.sent;\n\n                          // console.log(\"------------- \",\"0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab\", \"0xDCA91409018ea80B71d21E818f00e76072969861\", \"3523401\",data.tokenId, data.nonce, data.sig, \"0x0000000000000000000000000000000000000000000000000000000000000000\")\n                          if (data.sig) {\n                            vaultHandlerContract.moveVault(\"0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab\", qualifiedCollection[chainId], tokenId, data.tokenId, data.nonce, data.sig, \"0x0000000000000000000000000000000000000000000000000000000000000000\").then(function (hash) {\n                              setHash(hash);\n                              setMoving(false);\n                            });\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context26.stop();\n                      }\n                    }\n                  }, _callee26);\n                }));\n\n                return function (_x38) {\n                  return _ref32.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27);\n    }));\n\n    return function handleMove() {\n      return _ref31.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref33 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee28() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee28$(_context28) {\n        while (1) {\n          switch (_context28.prev = _context28.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                // emblemContract = getCuratedContract(targetContract[chainId])\n                // let tokenId = await emblemContract.getTokenIdForSerialNumber(targetContract.serialNumber)\n                vaultHandlerContract.claim(targetContract[chainId], targetContract.tokenId).then(function (_ref34) {\n                  var hash = _ref34.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              } else {\n                handlerContract.claimOnChain(tokenId).then(function (_ref35) {\n                  var hash = _ref35.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n      }, _callee28);\n    }));\n\n    return function handleClaim() {\n      return _ref33.apply(this, arguments);\n    };\n  }();\n\n  var pingClaimLogs = function pingClaimLogs(cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/web3/selfClaimLogs?chainId=' + chainId.toString() + '_vercel_no_cache=1', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        cc: 't'\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref36 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee29(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context29.sent;\n                console.log(\"Log check\", data);\n                return _context29.abrupt(\"return\", cb());\n\n              case 5:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29);\n      }));\n\n      return function (_x39) {\n        return _ref36.apply(this, arguments);\n      };\n    }());\n  };\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref37 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee30() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee30$(_context30) {\n        while (1) {\n          switch (_context30.prev = _context30.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context30.next = 3;\n                break;\n              }\n\n              return _context30.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context30.stop();\n          }\n        }\n      }, _callee30);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref37.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log('----');\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    account && chainId && vaultChainId && chainId == vaultChainId || query.noLayout && query.noLayout == 'true' || query.slideshowOnly && query.slideshowOnly == 'true' ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words ? words.split('\\n\\n\\n\\n') : [\" \"];\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    console.log(vaultAddresses);\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      var ethAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address;\n      var btcAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'BTC';\n      })[0].address;\n      console.log(\"SUCCESS\", vaultAddresses);\n      getAllBalancesByAddress([], ethAddress, btcAddress, function (values) {\n        setVaultValues(values);\n      }); // getEthBalances(\n      //   vaultAddresses.filter((item) => {\n      //     return item.coin === 'ETH'\n      //   })[0].address,\n      //   (values) => {\n      //     getBtcBalance(\n      //       values,\n      //       vaultAddresses.filter((item) => {\n      //         return item.coin === 'BTC'\n      //       })[0].address,\n      //       (_values) => {\n      //         // console.log(\"Have fucking values\", values)\n      //         getNftBalance(\n      //           _values,\n      //           vaultAddresses.filter((item) => {\n      //             return item.coin === 'ETH'\n      //           })[0].address,\n      //           (__values) => {\n      //             setVaultValues(__values.concat(vaultValues))\n      //           }\n      //         )\n      //       }\n      //     )\n      //   }\n      // )\n    } catch (err) {\n      console.log('WTF', err);\n    }\n  }\n\n  function getAddresses() {\n    console.log(\"Getting Addresses\");\n    return vaultAddresses;\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      if (item.address.includes('private')) {\n        var cipherText = item.address.replace('private:', '');\n        item.address = decrypt(cipherText, key);\n      }\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  function visitOpenSeaLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitLooksRareLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'looksrare.org/collections/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  {\n    alternateContractAddress ? emblemContract = getVaultContract(alternateContractAddress ? alternateContractAddress : null) : null;\n  }\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              if (localStorage.getItem(\\\"darkMode\\\") == 'false') {\\n                localStorage.setItem(\\\"darkMode\\\",\\\"true\\\"); location.href = location.href\\n              }\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    addresses: vaultAddresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 7\n    }\n  }), showOffer ? __jsx(OfferModal, {\n    isOpen: isOpenOfferModal,\n    onClose: onCloseOfferModal,\n    tokenId: tokenId,\n    mine: mine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 9\n    }\n  }) : null, __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 7\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault && !slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 15\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 17\n    }\n  }, \"Vault Network: \", _utils__WEBPACK_IMPORTED_MODULE_15__[\"CHAIN_ID_NAMES\"][vaultChainId]), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\" // textTransform=\"uppercase\"\n    ,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy && vaultTotalValue > 0 ? ': ~$' + vaultTotalValue.toLocaleString() : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 17\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultImage,\n    items: vaultValues.map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 23\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 23\n    }\n  }), mine && ownedImage ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    onClick: function onClick() {\n      handleOwnedEmbed();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 21\n    }\n  }, \"(OWNED) Show Full Embed\") : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1366,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 23\n    }\n  }, vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: \"./vaults?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1369,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    overflowWrap: \"anywhere\",\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    className: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1374,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tabs\"], {\n    isFitted: true,\n    variant: \"enclosed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1382,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabList\"], {\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 21\n    }\n  }, \"Balances\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 21\n    }\n  }, \"Attributes\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanels\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 21\n    }\n  }, vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 27\n    }\n  })) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"h4\",\n    mt: 2,\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 29\n    }\n  }, \"Current Contents:  \", __jsx(\"button\", {\n    onClick: function onClick() {\n      getAllBalancesLive([], tokenId, function (v) {\n        setLoadedValues(false);\n        setVaultValues(v);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 50\n    }\n  }, \" [Refresh Balances]\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"p\",\n    color: colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1415,\n      columnNumber: 29\n    }\n  }, \"$\", Number(vaultTotalValue.toFixed(4)).toLocaleString()), vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 35\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      mine: status === 'claimed' && claimedBy === account || mine,\n      onRenew: onRenew,\n      hideAsset: handleHideAsset,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1424,\n      columnNumber: 34\n    }\n  }), vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 35\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432,\n      columnNumber: 31\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 21\n    }\n  }, __jsx(_partials_Attributes__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n    colorMode: colorMode,\n    attributes: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 23\n    }\n  })))), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1446,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 27\n    }\n  }, \"Deposit Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 27\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n      className: \"address_nft_button\",\n      ml: 2,\n      mt: 2,\n      \"font-weight\": \"100 !important\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 33\n      }\n    }, addr.coin == 'ETH' ? addr.coin + '/EVM' : addr.coin == 'BTC' ? addr.coin + '/XCP/OMNI' : addr.coin == 'BCH' ? addr.coin + '/SLP' : addr.coin == 'TAP' ? 'TAPROOT' : addr.coin);\n  })), (mine || status === 'claimed') && vaultAddresses.length < 12 ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onManageAddressToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 29\n    }\n  }, \"Manage Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    isOpen: isManageAddressOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 31\n    }\n  }, !hasAddress('DOGE') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DOGE');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 35\n    }\n  }, \"Add DOGE\") : null, !hasAddress('DGB') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DGB');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1481,\n      columnNumber: 35\n    }\n  }, \"Add Digibyte\") : null, !hasAddress('NMC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('NMC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 35\n    }\n  }, \"Add Namecoin\") : null, !hasAddress('LTC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('LTC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 35\n    }\n  }, \"Add Litecoin\") : null, !hasAddress('MONA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('MONA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490,\n      columnNumber: 35\n    }\n  }, \"Add Mona\") : null, !hasAddress('TEZOS') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TEZOS');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 35\n    }\n  }, \"Add Tezos\") : null, !hasAddress('SOLANA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('SOLANA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 35\n    }\n  }, \"Add Solana\") : null, !hasAddress('STX') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('STX');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1499,\n      columnNumber: 35\n    }\n  }, \"Add Stacks\") : null, !hasAddress('TAP') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TAP');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1502,\n      columnNumber: 35\n    }\n  }, \"Add Taproot\") : null))) : null))) : null, !(status === 'claimed') && live && (vaultChainId === 1 || vaultChainId === 4 || vaultChainId === 137) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1514,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitOpenSeaLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 25\n    }\n  }, \"Opensea\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitLooksRareLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1524,\n      columnNumber: 25\n    }\n  }, \"LooksRare\"), showOffer ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"\",\n    onClick: function onClick() {\n      onOpenOfferModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1533,\n      columnNumber: 27\n    }\n  }, mine ? 'My Offers' : 'Make an Offer', \" (NFT\\xB2NFT)\") : null) : null, isCovalApproved ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1540,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1541,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1542,\n      columnNumber: 25\n    }\n  }, \"Creating a vault spends \", price * Math.pow(10, -decimals), \" Coval from your wallet\"))) : null, mine && !approved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1549,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"100%\",\n    onClick: function onClick() {\n      return handleApproveForall();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1550,\n      columnNumber: 23\n    }\n  }, \" Approve Minting\"))) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1561,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567,\n      columnNumber: 23\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568,\n      columnNumber: 23\n    }\n  })) : null, mine && showMove && qualifiedCollection ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1584,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleMove();\n    },\n    isDisabled: moving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 23\n    }\n  }, moving ? 'Moving ...' : 'Move Vault')) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine && !sealed && approved && live ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1598,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1599,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Unlock Vault (Get Private Keys)')) : vaultChainId === chainId && status == 'claimed' && claimedBy === account || mineUnMinted && status != \"claimed\" ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1610,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1611,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null, !live && mine && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg && approved && isCovalApproved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    isDisabled: !vaultPrivacy && vaultValues.length < 1,\n    onClick: lazyMint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1619,\n      columnNumber: 25\n    }\n  }, !vaultPrivacy && vaultValues.length < 1 ? 'Please load the vault to mint' : 'Mint Vault')) : null, !live && mine && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg && approved && !isCovalApproved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: approveCovalFlow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1625,\n      columnNumber: 25\n    }\n  }, \"Approve Spending Coval\")) : null, (!live || status == 'claimed') && to == account && vaultChainId == chainId && !showMakingVaultMsg && vaultValues.length < 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: deleteVault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1630,\n      columnNumber: 19\n    }\n  }, \"Delete Vault \") : null, showVerifyingSignature ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1633,\n      columnNumber: 19\n    }\n  }, \"Verifying Signature ...\") : null, showMakingVaultMsg ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 19\n    }\n  }, \"Minting Vault ...\") : null), vaultIPFS ? // <Stack>\n  __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__[\"HStack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    target: \"new\",\n    mb: 2,\n    ml: 35,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1646,\n      columnNumber: 23\n    }\n  }, \"View Metadata on IPFS \"), vaultImageIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    mb: 2,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultImageIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1648,\n      columnNumber: 25\n    }\n  }, \"View Image on IPFS \") : null) // </Stack>\n  : null, sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    mb: 2,\n    ml: 35,\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1654,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1655,\n      columnNumber: 23\n    }\n  }, \"*This vault is sealed forever.\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1659,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1662,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1663,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : minting ? \"Minting Vault\" : \"Generating Gift Link ...\") : null)) : vaultValues.length > 0 && slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1670,\n      columnNumber: 11\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultValues[0].image,\n    items: vaultValues.filter(function (value) {\n      return value.image !== vaultValues[0].image;\n    }).map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1672,\n      columnNumber: 17\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1674,\n      columnNumber: 17\n    }\n  })) : invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1679,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))) : null, hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (claiming && !accepting && !preTransfering) {\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account); // pingClaimLogs(()=>{\n\n        location.href = location.origin + '/nft?id=' + tokenId + '&cc=t'; // })\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n        location.href = location.origin + '/nft?id=' + tokenId;\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else if (minting) {\n        checkLiveliness(tokenId, function () {\n          setMinting(false);\n          setLive(true); // setShowMakingVaultMsg(false)\n          // location.href = location.origin + '/nft?id=' + tokenId\n        });\n      } else {\n        location.href = location.origin + '/nft?id=' + tokenId;\n        console.log('minting', minting);\n        console.log('claiming', claiming);\n        console.log('accepting', accepting);\n        console.log('preTransfering', preTransfering);\n        console.log('approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1741,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Nft, \"h6TYekDjGjWp9GVhmUjZjJ3WmNA=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"]];\n});\n\n_c7 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"OfferModal$dynamic\");\n$RefreshReg$(_c6, \"OfferModal\");\n$RefreshReg$(_c7, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9OZnQudHN4Pzc4ZmIiXSwibmFtZXMiOlsiQWRkck1vZGFsIiwiZHluYW1pYyIsIktleXNNb2RhbCIsIk9mZmVyTW9kYWwiLCJOZnQiLCJ1c2VXZWIzUmVhY3QiLCJhY2NvdW50IiwiY2hhaW5JZCIsImxpYnJhcnkiLCJ1c2VSb3V0ZXIiLCJxdWVyeSIsInVzZVN0YXRlIiwiY2MiLCJjbGVhckNhY2hlIiwic2V0Q2FjaGUiLCJjdXJhdGVkIiwic2hvd01vdmUiLCJzZXRTaG93TW92ZSIsIm5hbWUiLCJjaGFpbiIsInF1YWxpZmllZENvbGxlY3Rpb24iLCJzZXRRdWFsaWZpZWRDb2xsZWN0aW9uIiwibW92aW5nIiwic2V0TW92aW5nIiwiYXBwcm92ZWQiLCJzZXRBcHByb3ZlZCIsInVzZU9sZE1pbnQiLCJzZXRVc2VPbGRNaW50Iiwia2V5IiwibWludFBhc3N3b3JkIiwic2V0TWludFBhc3N3b3JkIiwib2ZmZXIiLCJzaG93T2ZmZXIiLCJzZXRTaG93T2ZmZXIiLCJmcmFtZWQiLCJzZXRGcmFtZWQiLCJpZCIsInRva2VuSWQiLCJzZXRUb2tlbklkIiwiZXhwZXJpbWVudGFsIiwic2V0RXhwZXJpbWVudGFsIiwibm9MYXlvdXQiLCJzZXROb0xheW91dCIsInNsaWRlc2hvd09ubHkiLCJzZXRTbGlkZXNob3dPbmx5IiwidmF1bHROYW1lIiwic2V0VmF1bHROYW1lIiwidmF1bHRJUEZTIiwic2V0VmF1bHRJUEZTIiwidmF1bHRJbWFnZUlQRlMiLCJzZXRWYXVsdEltYWdlSVBGUyIsInZhdWx0Q2lwaGVydGV4dFYyIiwic2V0VmF1bHRDaXBoZXJ0ZXh0VjIiLCJ2YXVsdERlc2MiLCJzZXRWYXVsdERlc2MiLCJ2YXVsdEltYWdlIiwic2V0VmF1bHRJbWFnZSIsIm93bmVkSW1hZ2UiLCJzZXRPd25lZEltYWdlIiwidmF1bHRWYWx1ZXMiLCJzZXRWYXVsdFZhbHVlcyIsImxvYWRlZFZhbHVlcyIsInNldExvYWRlZFZhbHVlcyIsInZhdWx0RGF0YVZhbHVlcyIsInNldFZhdWx0RGF0YVZhbHVlcyIsImF0dHJpYnV0ZXMiLCJzZXRBdHRyaWJ1dGVzIiwidmF1bHRBZGRyZXNzZXMiLCJzZXRWYXVsdEFkZHJlc3NlcyIsInZhdWx0UHJpdmFjeSIsInNldFZhdWx0UHJpdmFjeSIsInZhdWx0VG90YWxWYWx1ZSIsInNldFZhdWx0VG90YWxWYWx1ZSIsInZhdWx0Q2hhaW5JZCIsInNldFZhdWx0Q2hhaW5JZCIsInZhdWx0Q2hhaW4iLCJzZXRWYXVsdENoYWluIiwiaGFzaCIsInNldEhhc2giLCJjdXJyQ29pbiIsInNldEN1cnJDb2luIiwiY3VyckFkZHIiLCJzZXRDdXJyQWRkciIsImxvYWRlZCIsInN0YXRlIiwic2V0U3RhdGUiLCJtaW5lIiwic2V0TWluZSIsImNsYWltaW5nIiwic2V0Q2xhaW1pbmciLCJzdGF0dXMiLCJzZXRTdGF0dXMiLCJzZWFsZWQiLCJzZXRTZWFsZWQiLCJjbGFpbWVkQnkiLCJzZXRDbGFpbWVkQnkiLCJtbmVtb25pYyIsInNldE1uZW1vbmljIiwicHJpdktleUJUQyIsInNldFByaXZLZXlCVEMiLCJwcml2S2V5RVRIIiwic2V0UHJpdktleUVUSCIsInByaXZWYWx1ZXMiLCJzZXRLZXlWYWx1ZXMiLCJsb2FkaW5nQXBpIiwic2V0TG9hZGluZ0FwaSIsImRlY3J5cHRlZEVmZmVjdCIsInNldERlY3J5cHRlZEVmZmVjdCIsImRlY3J5cHRlZEVmZmVjdFJ1bm5pbmciLCJzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nIiwiZGVjcnlwdFBhc3N3b3JkIiwic2V0RGVjcnlwdFBhc3N3b3JkIiwiaW52YWxpZFZhdWx0Iiwic2V0SW52YWxpZFZhdWx0IiwiaGFzQ2hlY2tlZE5mdCIsInNldEhhc0NoZWNrZWROZnQiLCJhY2NlcHRpbmciLCJzZXRBY2NlcHRpbmciLCJhcHByb3ZpbmciLCJzZXRBcHByb3ZpbmciLCJhY2NlcHRhYmxlIiwic2V0QWNjZXB0YWJsZSIsInRyYW5zZmVyUGFzc3dvcmQiLCJzZXRUcmFuc2ZlclBhc3N3b3JkIiwic2hvd1RyYW5zZmVyUGFzc3dvcmQiLCJzZXRTaG93VHJhbnNmZXJQYXNzd29yZCIsInByZVRyYW5zZmVyaW5nIiwic2V0UHJlVHJhbnNmZXJpbmciLCJ0cmFuc2ZlclRvQWRkcmVzcyIsInNldFRyYW5zZmVyVG9BZGRyZXNzIiwidHJhbnNmZXJpbmciLCJzZXRUcmFuc2ZlcmluZyIsIm93bmVyIiwic2V0T3duZXIiLCJsaXZlIiwic2V0TGl2ZSIsIm5vbmNlIiwic2V0Tm9uY2UiLCJibG9jayIsInNldEJsb2NrIiwibWludFNpZ25hdHVyZSIsInNldE1pbnRTaWduYXR1cmUiLCJ0byIsInNldFRvIiwic2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSIsInNldFNob3dWZXJpZnlpbmdTaWduYXR1cmUiLCJzaG93TWFraW5nVmF1bHRNc2ciLCJzZXRTaG93TWFraW5nVmF1bHRNc2ciLCJtaW50aW5nIiwic2V0TWludGluZyIsImlzQ3Jvd2RTYWxlIiwic2V0SXNDcm93ZFNhbGUiLCJhbHRlcm5hdGVDb250cmFjdEFkZHJlc3MiLCJzZXRBbHRlcm5hdGVDb250cmFjdEFkZHJlc3MiLCJpbWFnZSIsIm1ldGFkYXRhIiwidGFyZ2V0QXNzZXQiLCJzZXRUYXJnZXRBc3NldCIsInNlcmlhbE51bWJlciIsInRhcmdldENvbnRyYWN0Iiwic2V0VGFyZ2V0Q29udHJhY3QiLCJpc0NvdmFsQXBwcm92ZWQiLCJzZXRJc0NvdmFsQXBwcm92ZWQiLCJkZWNpbWFscyIsInNldERlY2ltYWxzIiwiYWxsb3dhbmNlIiwic2V0QWxsb3dhbmNlIiwiYmFsYW5jZSIsInNldEJhbGFuY2UiLCJwcmljZSIsInNldFByaWNlIiwibWluZVVuTWludGVkIiwic2V0TWluZVVuTWludGVkIiwiaGFuZGxlckNvbnRyYWN0IiwidXNlQ29udHJhY3QiLCJjb250cmFjdEFkZHJlc3NlcyIsInZhdWx0SGFuZGxlciIsInZhdWx0SGFuZGxlckFiaSIsInZhdWx0SGFuZGxlckNvbnRyYWN0IiwidmF1bHRIYW5kbGVyVjgiLCJ2YXVsdEhhbmRsZXJWOEFiaSIsImVtYmxlbUNvbnRyYWN0IiwiZW1ibGVtVmF1bHQiLCJlbWJsZW1BYmkiLCJjb3ZhbENvbnRyYWN0IiwiY292YWwiLCJjb3ZhbEFiaSIsInVzZURpc2Nsb3N1cmUiLCJpc09wZW5BZGRyTW9kYWwiLCJpc09wZW4iLCJvbk9wZW5BZGRyTW9kYWwiLCJvbk9wZW4iLCJvbkNsb3NlQWRkck1vZGFsIiwib25DbG9zZSIsImlzT3BlbktleXNNb2RhbCIsIm9uT3BlbktleXNNb2RhbCIsIm9uQ2xvc2VLZXlzTW9kYWwiLCJpc09wZW5PZmZlck1vZGFsIiwib25PcGVuT2ZmZXJNb2RhbCIsIm9uQ2xvc2VPZmZlck1vZGFsIiwib25Ub2dnbGUiLCJpc01hbmFnZUFkZHJlc3NPcGVuIiwib25NYW5hZ2VBZGRyZXNzVG9nZ2xlIiwidXNlQ29sb3JNb2RlIiwiY29sb3JNb2RlIiwidHJhbnNhayIsInRyYW5zZmVySW1hZ2UiLCJnZXRWYXVsdENvbnRyYWN0IiwiYWRkcmVzcyIsIkNvbnRyYWN0IiwiZ2V0U2lnbmVyIiwiY29ubmVjdFVuY2hlY2tlZCIsImdldEN1cmF0ZWRDb250cmFjdCIsImVyYzExNTVBYmkiLCJpbml0aWFsaXplVHJhbnNhayIsImNvaW4iLCJ0cmFuc2FrU0RLIiwiYXBpS2V5IiwiZW52aXJvbm1lbnQiLCJkZWZhdWx0Q3J5cHRvQ3VycmVuY3kiLCJ3YWxsZXRBZGRyZXNzIiwidGhlbWVDb2xvciIsImZpYXRDdXJyZW5jeSIsImVtYWlsIiwicmVkaXJlY3RVUkwiLCJob3N0VVJMIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJ3aWRnZXRIZWlnaHQiLCJ3aWRnZXRXaWR0aCIsIm9uIiwiQUxMX0VWRU5UUyIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwiRVZFTlRTIiwiVFJBTlNBS19PUkRFUl9TVUNDRVNTRlVMIiwib3JkZXJEYXRhIiwiY2xvc2UiLCJpbml0IiwiY2hlY2tMaXZlbGluZXNzIiwiY2IiLCJmZXRjaCIsIkVNQkxFTV9BUEkiLCJtZXRob2QiLCJoZWFkZXJzIiwic2VydmljZSIsImNoYWluaWQiLCJ0b1N0cmluZyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInRyYW5zZmVyVmF1bHQiLCJ0cmFuc2ZlckZyb20iLCJlcnJvciIsImxhenlNaW50Iiwic2lnbk1lc3NhZ2UiLCJzaWduYXR1cmUiLCJzZXRUaW1lb3V0IiwiZGVsYXllZE1pbnQiLCJhbGVydCIsIm1zZyIsInNpZyIsImNpcGhlclRleHRIYXNoIiwiZmlsdGVyIiwiYnV5V2l0aFNpZ25hdHVyZTIiLCJmaXJlTWV0YU1hc2siLCJnZXRXaXRuZXNzIiwid2l0bmVzcyIsInRyYW5zZmVyV2l0aENvZGUiLCJjb2RlIiwiYWRkUHJlVHJhbnNmZXIiLCJoYW5kbGVBcHByb3ZlRm9yYWxsIiwic2V0QXBwcm92YWxGb3JBbGwiLCJhcHByb3ZlQ292YWxGbG93IiwiYXBwcm92ZSIsImRlbGV0ZVZhdWx0IiwiaHJlZiIsInNwbGl0Iiwic3luY0FjY291bnQiLCJzeW5jaGVkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJnZXRWYXVsdCIsInJlc3BvbmNlIiwianNvbkRhdGEiLCJzZXRTdGF0ZXMiLCJpbWFnZV9pcGZzIiwiY29sbGVjdGlvbkFkZHJlc3MiLCJnZXRBbGxCYWxhbmNlc0xpdmUiLCJ2IiwiZ2V0TW92ZWFibGVDb2xsZWN0aW9ucyIsImxlbmd0aCIsInByb2plY3QiLCJpdGVtIiwidmFsdWUiLCJwcm9qZWN0TmFtZSIsInRyYWl0X3R5cGUiLCJfcXVhbGlmaWVkQ29sbGVjdGlvbiIsImN1cmF0ZWRDb250cmFjdHMiLCJpbmNsdWRlcyIsImNpcGhlcnRleHRWMiIsImRlc2NyaXB0aW9uIiwidG90YWxWYWx1ZSIsInZhbHVlcyIsImNvbmNhdCIsImFkZHJlc3NlcyIsImlwZnMiLCJuZXR3b3JrIiwiaXNQdnQiLCJnZXRBbGxCYWxhbmNlcyIsImJhbGFuY2VzIiwiZ2V0QWxsQmFsYW5jZXNCeUFkZHJlc3MiLCJldGhBZGRyZXNzIiwiYnRjQWRkcmVzcyIsInNhdmVDYWNoZSIsInZhdWx0IiwibG9hZENhY2hlIiwicGFyc2UiLCJzYXZlUGFzc3dvcmRUb0xvY2FsU3RvcmFnZSIsImxvYWRQYXNzd29yZEZyb21Mb2NhbFN0b3JhZ2UiLCJzdG9yZWRQdyIsImdldFNpZ25lZEpXVCIsIm15SGVhZGVycyIsIkhlYWRlcnMiLCJhcHBlbmQiLCJyYXciLCJTSUdfQVBJIiwicmVkaXJlY3QiLCJnZXRUb3J1c0tleXMiLCJ2ZXJpZmllcklkIiwiaWRUb2tlbiIsImZldGNoTm9kZURldGFpbHMiLCJGZXRjaE5vZGVEZXRhaWxzIiwidG9ydXNVdGlscyIsIlRvcnVzVXRpbHMiLCJlbmFibGVPbmVLZXkiLCJnZXROb2RlRGV0YWlscyIsInZlcmlmaWVyIiwidG9ydXNOb2RlRW5kcG9pbnRzIiwidG9ydXNJbmRleGVzIiwicmV0cmlldmVTaGFyZXMiLCJ2ZXJpZmllcl9pZCIsInByaXZLZXkiLCJwcml2YXRlS2V5IiwiYWRkQWRkcmVzcyIsImRlY3J5cHRFbWJlZCIsImdldENvbnRyYWN0U3RhdGVzIiwiZmluaXNoIiwiZ2V0UHJlVHJhbnNmZXIiLCJpc0FwcHJvdmVkRm9yQWxsIiwiaXNBcHByb3ZlZCIsIl9mcm9tIiwiX293bmVyIiwib3duZWQiLCJnZXRPd25lck9mU2VyaWFsIiwib3duZXJPZiIsImJhbGFuY2VPZiIsIk51bWJlciIsInVzZUVmZmVjdCIsImhhc0FkZHJlc3MiLCJvblJlbmV3IiwiaGFuZGxlU2lnbiIsImdldFNlcmlhbCIsInRva2VuIiwia2V5cyIsImJ5dGVzIiwiQ3J5cHRvSlMiLCJBRVMiLCJkZWNyeXB0IiwicGF5bG9hZCIsImVuYyIsIlV0ZjgiLCJwaHJhc2UiLCJmb3JFYWNoIiwiZ2V0U1RYS2V5IiwicGhyYXNlUGF0aFRvS2V5IiwicGF0aCIsImdlbmVyYXRlV2FsbGV0Iiwic2VjcmV0S2V5IiwicGFzc3dvcmQiLCJ3YWxsZXQiLCJhY2NvdW50cyIsInN0eFByaXZhdGVLZXkiLCJoYW5kbGVIaWRlQXNzZXQiLCJoaWRlQXNzZXQiLCJoYW5kbGVBZGRyZXNzU2lnbiIsInJlc3VsdCIsImhhbmRsZU93bmVkRW1iZWQiLCJoYW5kbGVNb3ZlIiwibW92ZVZhdWx0IiwiaGFuZGxlQ2xhaW0iLCJjbGFpbSIsImNsYWltT25DaGFpbiIsInBpbmdDbGFpbUxvZ3MiLCJzdGFydERlY3J5cHRFZmZlY3QiLCJuZXh0RnJhbWUiLCJwb3MiLCJpIiwiY2xlbiIsInN0cmkiLCJudW0iLCJNYXRoIiwiZmxvb3IiLCJ0aGVMZXR0ZXJzIiwicmFuZG9tIiwibGV0dGVyIiwiY2hhckF0Iiwic2kiLCJpbmNyZW1lbnQiLCJmaXhlZCIsImN0bnQiLCJzcGVlZCIsInJ1c3RsZSIsInNwbGl0RGVzY3JpcHRpb24iLCJ3b3JkcyIsImRlc2MiLCJ0cmltIiwidHJ5RGVjcnlwdCIsImNpcGhlcnRleHQiLCJyZXBsYWNlIiwiZGVjcnlwdEFkZHJlc3NlcyIsImVyciIsImdldEFkZHJlc3NlcyIsImNpcGhlclRleHQiLCJkZWNyeXB0ZWREYXRhIiwidmlzaXRPcGVuU2VhTGluayIsIm9wZW4iLCJ2aXNpdExvb2tzUmFyZUxpbmsiLCJfX2h0bWwiLCJDSEFJTl9JRF9OQU1FUyIsInRvTG9jYWxlU3RyaW5nIiwidHlwZSIsIm1hcCIsImNhblN3aXBlIiwiZ2ZtIiwiZSIsInRhcmdldCIsInRvRml4ZWQiLCJhdHRyaWJ1dGVfa2V5IiwiYWRkciIsInBvdyIsInByb3RvY29sIiwiaG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtDQTJCQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0EsSUFBTUEsU0FBUyxHQUFHQyxvREFBTyxNQUFDO0FBQUEsU0FBTSw4SEFBTjtBQUFBLENBQUQ7QUFBQTtBQUFB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dEQsUUFBUSxDQUFDQyxNQUFULEdBQWtCLFVBQWxCLEdBQStCL0wsT0FBL0M7QUFDQXFNLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosRUFBdUJ2RixPQUF2QjtBQUNBc0YsZUFBTyxDQUFDQyxHQUFSLENBQVksVUFBWixFQUF3Qm5KLFFBQXhCO0FBQ0FrSixlQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBQXlCdkgsU0FBekI7QUFDQXNILGVBQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCN0csY0FBOUI7QUFDQTRHLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVosRUFBeUJySCxTQUF6QjtBQUNBb0gsZUFBTyxDQUFDQyxHQUFSLENBQVksZUFBWjtBQUNEO0FBQ0YsS0E3Q0g7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURHLEdBZ0RELElBN2JOLEVBOGJFLE1BQUMsbURBQUQ7QUFBSyxVQUFNLEVBQUMsTUFBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBOWJGLENBM0NGLENBREY7QUE4ZUQ7O0dBN29EdUJ2TyxHO1VBR2dCQyw2RCxFQUNwQkkscUQsRUErRU1xSyxtRCxFQUNLQSxtRCxFQUNSQSxtRCxFQUNDQSxtRCxFQUVrRWEsNkQsRUFDQUEsNkQsRUFDR0EsNkQsRUFDOURBLDZELEVBQzRDQSw2RCxFQUVuRGdCLDREOzs7TUE5RkF2TSxHIiwiZmlsZSI6Ii4vY29tcG9uZW50cy9OZnQudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQm94LFxuICBGbGV4LFxuICBJbWFnZSxcbiAgVGV4dCxcbiAgU3RhY2ssXG4gIEJ1dHRvbixcbiAgQnV0dG9uR3JvdXAsXG4gIElucHV0LFxuICBMaW5rLFxuICBBbGVydCxcbiAgQWxlcnRJY29uLFxuICB1c2VEaXNjbG9zdXJlLFxuICBUb29sdGlwLFxuICBDb2xsYXBzZSxcbiAgRm9ybUNvbnRyb2wsXG4gIEZvcm1MYWJlbCxcbiAgdXNlQ29sb3JNb2RlLFxuICBJY29uQnV0dG9uLFxuICBUYWJzLFxuICBUYWJMaXN0LFxuICBUYWIsXG4gIFRhYlBhbmVsLFxuICBUYWJQYW5lbHNcbn0gZnJvbSAnQGNoYWtyYS11aS9jb3JlJ1xuXG5pbXBvcnQge0hTdGFjaywgVlN0YWNrLCBDaXJjbGUgfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0J1xuLy8gaW1wb3J0IFRvcnVzU2RrIGZyb20gXCJAdG9ydXNsYWJzL3RvcnVzLWRpcmVjdC13ZWItc2RrXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCJcbmltcG9ydCB7IHVzZVdlYjNSZWFjdCB9IGZyb20gJ0B3ZWIzLXJlYWN0L2NvcmUnXG5pbXBvcnQgeyBTZXRTdGF0ZUFjdGlvbiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgUmVmcmVzaGluZyBmcm9tICcuL1JlZnJlc2hpbmcnXG5pbXBvcnQgTG9hZGVyIGZyb20gJ3JlYWN0LWxvYWRlcidcbmltcG9ydCBkeW5hbWljIGZyb20gJ25leHQvZHluYW1pYydcbmltcG9ydCB7IGlzRVRIQWRkcmVzcywgdmFsaWRJbWFnZSB9IGZyb20gJy4uL3V0aWxzJ1xuaW1wb3J0IHsgQ29udHJhY3QgfSBmcm9tICdAZXRoZXJzcHJvamVjdC9jb250cmFjdHMnXG5pbXBvcnQgeyBUcmFuc2FjdGlvblRvYXN0IH0gZnJvbSAnLi9UcmFuc2FjdGlvblRvYXN0J1xuaW1wb3J0IHsgRU1CTEVNX0FQSSwgQlVSTl9BRERSRVNTLCBaRVJPX0FERFJFU1MsIGNvbnRyYWN0QWRkcmVzc2VzLCBjdXJhdGVkQ29udHJhY3RzLCBTSUdfQVBJIH0gZnJvbSAnLi4vY29uc3RhbnRzJ1xuaW1wb3J0IHsgdXNlQ29udHJhY3QgfSBmcm9tICcuLi9ob29rcydcbmltcG9ydCBUaWx0IGZyb20gJ3JlYWN0LXRpbHQnXG5pbXBvcnQgeyBDSEFJTl9JRF9OQU1FUyB9IGZyb20gJy4uL3V0aWxzJ1xuaW1wb3J0IENyeXB0b0pTIGZyb20gJ2NyeXB0by1qcydcbmltcG9ydCB7IGFkZFRva2VuVG9XYWxsZXQsIGFkZE1hbnkgfSBmcm9tICcuLi9wdWJsaWMvd2ViMydcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJ1xuaW1wb3J0IGdmbSBmcm9tICdyZW1hcmstZ2ZtJ1xuaW1wb3J0IEVtYmVkIGZyb20gJy4vRW1iZWQnXG5pbXBvcnQgTkZUU2xpZGVzaG93IGZyb20gJy4vZW1iZWQvTkZUU2xpZGVzaG93J1xuaW1wb3J0IENvaW5CYWxhbmNlIGZyb20gJy4vcGFydGlhbHMvQ29pbkJhbGFuY2UnXG5pbXBvcnQgeyBjaGFrcmEgfSBmcm9tICdAY2hha3JhLXVpL3N5c3RlbSdcbmltcG9ydCB0cmFuc2FrU0RLIGZyb20gJ0B0cmFuc2FrL3RyYW5zYWstc2RrJ1xuaW1wb3J0IEF0dHJpYnV0ZXMgZnJvbSAnLi9wYXJ0aWFscy9BdHRyaWJ1dGVzJztcbmltcG9ydCB7IGdldFN0eEFkZHJlc3MsIGdlbmVyYXRlV2FsbGV0IH0gZnJvbSAnQHN0YWNrcy93YWxsZXQtc2RrJztcbmltcG9ydCBGZXRjaE5vZGVEZXRhaWxzIGZyb20gXCJAdG9ydXNsYWJzL2ZldGNoLW5vZGUtZGV0YWlsc1wiXG5pbXBvcnQgVG9ydXNVdGlscyBmcm9tIFwiQHRvcnVzbGFicy90b3J1cy5qc1wiXG5pbXBvcnQgeyB0b0J5dGVzIH0gZnJvbSAnQHN0YWNrcy9jb21tb24nXG5pbXBvcnQgeyBCaWdOdW1iZXIgfSBmcm9tICdAZXRoZXJzcHJvamVjdC9iaWdudW1iZXInXG5cblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHsgcGhyYXNlVG9LZXk6IGFueSwgcGhyYXNlUGF0aFRvS2V5OiBhbnl9XG59XG5cbmNvbnN0IEFkZHJNb2RhbCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL0FkZHJNb2RhbCcpKVxuY29uc3QgS2V5c01vZGFsID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vS2V5c01vZGFsJykpXG5jb25zdCBPZmZlck1vZGFsID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJy4vT2ZmZXJNb2RhbCcpKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOZnQoKSB7XG4gIFxuIFxuICBjb25zdCB7IGFjY291bnQsIGNoYWluSWQsIGxpYnJhcnkgfSA9IHVzZVdlYjNSZWFjdCgpXG4gIGNvbnN0IHsgcXVlcnkgfSA9IHVzZVJvdXRlcigpXG4gIGNvbnN0IFtjbGVhckNhY2hlLCBzZXRDYWNoZV0gPSB1c2VTdGF0ZShxdWVyeS5jYyA9PSAndCcpXG4gIGNvbnN0IFtzaG93TW92ZSwgc2V0U2hvd01vdmVdID0gdXNlU3RhdGUocXVlcnkuY3VyYXRlZCA9PSAndCcpXG4gIGNvbnN0IFtxdWFsaWZpZWRDb2xsZWN0aW9uLCBzZXRRdWFsaWZpZWRDb2xsZWN0aW9uXSA9IHVzZVN0YXRlKHtuYW1lOiAnJywgY2hhaW46ICcnfSlcbiAgY29uc3QgW21vdmluZywgc2V0TW92aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYXBwcm92ZWQsIHNldEFwcHJvdmVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdXNlT2xkTWludCwgc2V0VXNlT2xkTWludF0gPSB1c2VTdGF0ZShxdWVyeS51c2VPbGRNaW50KVxuICBjb25zdCBbbWludFBhc3N3b3JkLCBzZXRNaW50UGFzc3dvcmRdID0gdXNlU3RhdGUocXVlcnkua2V5KVxuICBjb25zdCBbc2hvd09mZmVyLCBzZXRTaG93T2ZmZXJdID0gdXNlU3RhdGUocXVlcnkub2ZmZXIgfHwgZmFsc2UpXG4gIGNvbnN0IFtmcmFtZWQsIHNldEZyYW1lZF0gPSB1c2VTdGF0ZShxdWVyeS5mcmFtZWQgfHwgdHJ1ZSlcbiAgY29uc3QgW3Rva2VuSWQsIHNldFRva2VuSWRdID0gdXNlU3RhdGUocXVlcnkuaWQpXG4gIGNvbnN0IFtleHBlcmltZW50YWwsIHNldEV4cGVyaW1lbnRhbF0gPSB1c2VTdGF0ZShxdWVyeS5leHBlcmltZW50YWwpXG4gIGNvbnN0IFtub0xheW91dCwgc2V0Tm9MYXlvdXRdID0gdXNlU3RhdGUocXVlcnkubm9MYXlvdXQpXG4gIGNvbnN0IFtzbGlkZXNob3dPbmx5LCBzZXRTbGlkZXNob3dPbmx5XSA9IHVzZVN0YXRlKHF1ZXJ5LnNsaWRlc2hvd09ubHkgfHwgZmFsc2UpXG4gIGNvbnN0IFt2YXVsdE5hbWUsIHNldFZhdWx0TmFtZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0SVBGUywgc2V0VmF1bHRJUEZTXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRJbWFnZUlQRlMsIHNldFZhdWx0SW1hZ2VJUEZTXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRDaXBoZXJ0ZXh0VjIsIHNldFZhdWx0Q2lwaGVydGV4dFYyXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHREZXNjLCBzZXRWYXVsdERlc2NdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt2YXVsdEltYWdlLCBzZXRWYXVsdEltYWdlXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbb3duZWRJbWFnZSwgc2V0T3duZWRJbWFnZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0VmFsdWVzLCBzZXRWYXVsdFZhbHVlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW2xvYWRlZFZhbHVlcywgc2V0TG9hZGVkVmFsdWVzXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdmF1bHREYXRhVmFsdWVzLCBzZXRWYXVsdERhdGFWYWx1ZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFthdHRyaWJ1dGVzLCBzZXRBdHRyaWJ1dGVzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbdmF1bHRBZGRyZXNzZXMsIHNldFZhdWx0QWRkcmVzc2VzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbdmF1bHRQcml2YWN5LCBzZXRWYXVsdFByaXZhY3ldID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt2YXVsdFRvdGFsVmFsdWUsIHNldFZhdWx0VG90YWxWYWx1ZV0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbdmF1bHRDaGFpbklkLCBzZXRWYXVsdENoYWluSWRdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW3ZhdWx0Q2hhaW4sIHNldFZhdWx0Q2hhaW5dID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2hhc2gsIHNldEhhc2hdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2N1cnJDb2luLCBzZXRDdXJyQ29pbl0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2N1cnJBZGRyLCBzZXRDdXJyQWRkcl0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7IGxvYWRlZDogZmFsc2UgfSlcbiAgY29uc3QgW21pbmUsIHNldE1pbmVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtjbGFpbWluZywgc2V0Q2xhaW1pbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZSgnY2xhaW1lZCcpXG4gIGNvbnN0IFtzZWFsZWQsIHNldFNlYWxlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2NsYWltZWRCeSwgc2V0Q2xhaW1lZEJ5XSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFttbmVtb25pYywgc2V0TW5lbW9uaWNdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtwcml2S2V5QlRDLCBzZXRQcml2S2V5QlRDXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbcHJpdktleUVUSCwgc2V0UHJpdktleUVUSF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ByaXZWYWx1ZXMsIHNldEtleVZhbHVlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW2xvYWRpbmdBcGksIHNldExvYWRpbmdBcGldID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0ZWRFZmZlY3QsIHNldERlY3J5cHRlZEVmZmVjdF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2RlY3J5cHRlZEVmZmVjdFJ1bm5pbmcsIHNldERlY3J5cHRlZEVmZmVjdFJ1bm5pbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0UGFzc3dvcmQsIHNldERlY3J5cHRQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2ludmFsaWRWYXVsdCwgc2V0SW52YWxpZFZhdWx0XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbaGFzQ2hlY2tlZE5mdCwgc2V0SGFzQ2hlY2tlZE5mdF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FjY2VwdGluZywgc2V0QWNjZXB0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYXBwcm92aW5nLCBzZXRBcHByb3ZpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthY2NlcHRhYmxlLCBzZXRBY2NlcHRhYmxlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdHJhbnNmZXJQYXNzd29yZCwgc2V0VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3Nob3dUcmFuc2ZlclBhc3N3b3JkLCBzZXRTaG93VHJhbnNmZXJQYXNzd29yZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3ByZVRyYW5zZmVyaW5nLCBzZXRQcmVUcmFuc2ZlcmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3RyYW5zZmVyVG9BZGRyZXNzLCBzZXRUcmFuc2ZlclRvQWRkcmVzc10gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbdHJhbnNmZXJpbmcsIHNldFRyYW5zZmVyaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbb3duZXIsIHNldE93bmVyXSA9IHVzZVN0YXRlKG51bGwpXG4gIC8vIGNvbnN0IFt0b3J1cywgc2V0VG9ydXNdID0gdXNlU3RhdGUoaW5pdFRvcnVzKCkpXG4gIGNvbnN0IFtsaXZlLCBzZXRMaXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbm9uY2UsIHNldE5vbmNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtibG9jaywgc2V0QmxvY2tdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW21pbnRTaWduYXR1cmUsIHNldE1pbnRTaWduYXR1cmVdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW3RvLCBzZXRUb10gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbc2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSwgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3Nob3dNYWtpbmdWYXVsdE1zZywgc2V0U2hvd01ha2luZ1ZhdWx0TXNnXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbWludGluZywgc2V0TWludGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2lzQ3Jvd2RTYWxlLCBzZXRJc0Nyb3dkU2FsZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcywgc2V0QWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFt0YXJnZXRBc3NldCwgc2V0VGFyZ2V0QXNzZXRdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBpbWFnZTogJycsIG1ldGFkYXRhOiAnJ30pXG4gIGNvbnN0IFt0YXJnZXRDb250cmFjdCwgc2V0VGFyZ2V0Q29udHJhY3RdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBjaGFpbjogJycsIDQ6ICcnLCAxOiAnJywgdG9rZW5JZDoge30sIHNlcmlhbE51bWJlcjogeydoZXgnOicnfSB9KVxuICAvLyBjb25zdCBbdHJhbnNmZXJJbWFnZSwgc2V0VHJhbnNmZXJJbWFnZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2lzQ292YWxBcHByb3ZlZCwgc2V0SXNDb3ZhbEFwcHJvdmVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbZGVjaW1hbHMsIHNldERlY2ltYWxzXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFthbGxvd2FuY2UsIHNldEFsbG93YW5jZV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbYmFsYW5jZSwgc2V0QmFsYW5jZV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbcHJpY2UsIHNldFByaWNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFttaW5lVW5NaW50ZWQsIHNldE1pbmVVbk1pbnRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgXG4gIGNvbnN0IGhhbmRsZXJDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyQWJpLCB0cnVlKVxuICBjb25zdCB2YXVsdEhhbmRsZXJDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4W2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJWOEFiaSwgdHJ1ZSlcbiAgbGV0IGVtYmxlbUNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaSwgdHJ1ZSlcbiAgY29uc3QgY292YWxDb250cmFjdCA9IHVzZUNvbnRyYWN0KGNvbnRyYWN0QWRkcmVzc2VzLmNvdmFsW2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy5jb3ZhbEFiaSwgdHJ1ZSlcblxuICBjb25zdCB7IGlzT3BlbjogaXNPcGVuQWRkck1vZGFsLCBvbk9wZW46IG9uT3BlbkFkZHJNb2RhbCwgb25DbG9zZTogb25DbG9zZUFkZHJNb2RhbCB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuOiBpc09wZW5LZXlzTW9kYWwsIG9uT3Blbjogb25PcGVuS2V5c01vZGFsLCBvbkNsb3NlOiBvbkNsb3NlS2V5c01vZGFsIH0gPSB1c2VEaXNjbG9zdXJlKClcbiAgY29uc3QgeyBpc09wZW46IGlzT3Blbk9mZmVyTW9kYWwsIG9uT3Blbjogb25PcGVuT2ZmZXJNb2RhbCwgb25DbG9zZTogb25DbG9zZU9mZmVyTW9kYWwgfSA9IHVzZURpc2Nsb3N1cmUoKVxuICBjb25zdCB7IGlzT3Blbiwgb25Ub2dnbGUgfSA9IHVzZURpc2Nsb3N1cmUoKVxuICBjb25zdCB7IGlzT3BlbjogaXNNYW5hZ2VBZGRyZXNzT3Blbiwgb25Ub2dnbGU6IG9uTWFuYWdlQWRkcmVzc1RvZ2dsZSB9ID0gdXNlRGlzY2xvc3VyZSgpXG5cbiAgY29uc3QgeyBjb2xvck1vZGUgfSA9IHVzZUNvbG9yTW9kZSgpXG5cbiAgbGV0IHRyYW5zYWs6IHsgb246IChhcmcwOiBhbnksIGFyZzE6IHsgKGRhdGE6IGFueSk6IHZvaWQ7IChvcmRlckRhdGE6IGFueSk6IHZvaWQgfSkgPT4gdm9pZDsgQUxMX0VWRU5UUzogYW55OyBFVkVOVFM6IHsgVFJBTlNBS19PUkRFUl9TVUNDRVNTRlVMOiBhbnkgfTsgY2xvc2U6ICgpID0+IHZvaWQ7IGluaXQ6ICgpID0+IHZvaWQgfVxuXG4gIGludGVyZmFjZSBFcnJvcldpdGhDb2RlIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvZGU/OiBudW1iZXJcbiAgfVxuXG4gIGxldCB0cmFuc2ZlckltYWdlOiBzdHJpbmc7XG5cbiAgLy8gYXN5bmMgZnVuY3Rpb24gaW5pdFRvcnVzKCkge1xuICAvLyAgIGxldCBfdG9ydXMgPSBuZXcgVG9ydXNTZGsoe1xuICAvLyAgICAgYmFzZVVybDogYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vc2VydmljZXdvcmtlcmAsXG4gIC8vICAgICBlbmFibGVMb2dnaW5nOiB0cnVlLFxuICAvLyAgICAgbmV0d29yazogXCJ0ZXN0bmV0XCIsIC8vIGRldGFpbHMgZm9yIHRlc3QgbmV0XG4gIC8vICAgfSk7XG4gIC8vICAgYXdhaXQgX3RvcnVzLmluaXQoe3NraXBTdzogdHJ1ZSwgc2tpcEluaXQ6IHRydWUsIHNraXBQcmVmZXRjaDogdHJ1ZX0pXG4gIC8vICAgY29uc29sZS5sb2coXCJJbml0aWFsaXplZCBUb3J1c1wiKVxuICAvLyAgIHJldHVybiBfdG9ydXNcbiAgLy8gfVxuXG4gIGNvbnN0IGdldFZhdWx0Q29udHJhY3QgPSAoYWRkcmVzcyA9IG51bGwpID0+e1xuICAgIC8vcmV0dXJuIHVzZUNvbnRyYWN0KGFkZHJlc3MgfHwgY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaSwgdHJ1ZSlcbiAgICByZXR1cm4gbmV3IENvbnRyYWN0KGFkZHJlc3MgfHwgY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaSwgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudCkuY29ubmVjdFVuY2hlY2tlZCgpKVxuICB9XG5cbiAgY29uc3QgZ2V0Q3VyYXRlZENvbnRyYWN0ID0gKGFkZHJlc3MgPSBudWxsKSA9PntcbiAgICByZXR1cm4gbmV3IENvbnRyYWN0KGFkZHJlc3MsIGNvbnRyYWN0QWRkcmVzc2VzLmVyYzExNTVBYmksIGxpYnJhcnkuZ2V0U2lnbmVyKGFjY291bnQpLmNvbm5lY3RVbmNoZWNrZWQoKSlcbiAgfVxuXG4gIGNvbnN0IGluaXRpYWxpemVUcmFuc2FrID0gKGFkZHJlc3M/OiBzdHJpbmcsIGNvaW4/IDogc3RyaW5nKT0+e1xuICAgIHRyYW5zYWsgPSBuZXcgdHJhbnNha1NESyh7XG4gICAgICBhcGlLZXk6ICdlOGJlZDFiZC02ODQ0LTRlYjEtOTczYS03YTExYTQ4ZmFmYWInLCAgLy8gWW91ciBBUEkgS2V5XG4gICAgICBlbnZpcm9ubWVudDogJ1BST0RVQ1RJT04nLCAvLyBTVEFHSU5HL1BST0RVQ1RJT05cbiAgICAgIGRlZmF1bHRDcnlwdG9DdXJyZW5jeTogY29pbiB8fCAnRVRIJyxcbiAgICAgIHdhbGxldEFkZHJlc3M6IGFkZHJlc3MgfHwgJycsIC8vIFlvdXIgY3VzdG9tZXIncyB3YWxsZXQgYWRkcmVzc1xuICAgICAgdGhlbWVDb2xvcjogJzAwMDAwMCcsIC8vIEFwcCB0aGVtZSBjb2xvclxuICAgICAgZmlhdEN1cnJlbmN5OiAnVVNEJywgLy8gSU5SL0dCUFxuICAgICAgLy8gZmlhdEFtb3VudDogMzUwLFxuICAgICAgZW1haWw6ICcnLCAvLyBZb3VyIGN1c3RvbWVyJ3MgZW1haWwgYWRkcmVzc1xuICAgICAgcmVkaXJlY3RVUkw6ICcnLFxuICAgICAgLy8gcGF5bWVudE1ldGhvZDogJ25lZnRfYmFua190cmFuc2ZlcicsXG4gICAgICBob3N0VVJMOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luLFxuICAgICAgd2lkZ2V0SGVpZ2h0OiAnNTUwcHgnLFxuICAgICAgd2lkZ2V0V2lkdGg6ICc0NTBweCdcbiAgICB9KTtcbiAgXG4gICAgLy8gVG8gZ2V0IGFsbCB0aGUgZXZlbnRzXG4gICAgdHJhbnNhay5vbih0cmFuc2FrLkFMTF9FVkVOVFMsIChkYXRhOiBhbnkpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpXG4gICAgfSk7XG4gIFxuICAgIC8vIFRoaXMgd2lsbCB0cmlnZ2VyIHdoZW4gdGhlIHVzZXIgbWFya3MgcGF5bWVudCBpcyBtYWRlLlxuICAgIHRyYW5zYWsub24odHJhbnNhay5FVkVOVFMuVFJBTlNBS19PUkRFUl9TVUNDRVNTRlVMLCAob3JkZXJEYXRhOiBhbnkpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKG9yZGVyRGF0YSk7XG4gICAgICB0cmFuc2FrLmNsb3NlKCk7XG4gICAgfSk7XG4gIFxuICAgIHRyYW5zYWsuaW5pdCgpXG4gIH1cblxuICBjb25zdCBjaGVja0xpdmVsaW5lc3MgPSAodG9rZW5JZDogc3RyaW5nIHwgc3RyaW5nW10sIGNiOiB7ICgpOiB2b2lkOyAoKTogdm9pZDsgKCk6IGFueSB9KT0+e1xuICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL2xpdmVsaW5lc3MnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgIH0sXG4gICAgICAvLyBXZSBjb252ZXJ0IHRoZSBSZWFjdCBzdGF0ZSB0byBKU09OIGFuZCBzZW5kIGl0IGFzIHRoZSBQT1NUIGJvZHlcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt0b2tlbklkOiB0b2tlbklkfSksXG4gICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBzZXRMaXZlKGRhdGEubGl2ZSlcbiAgICAgIGNvbnNvbGUubG9nKFwiTGl2ZWxpbmVzcyBjaGVja1wiLCBkYXRhKVxuICAgIH0pXG4gICAgcmV0dXJuIGNiKClcbiAgfVxuXG4gIGNvbnN0IHRyYW5zZmVyVmF1bHQgPSAoKSA9PiB7XG4gICAgc2V0VHJhbnNmZXJpbmcodHJ1ZSlcbiAgICA7KGVtYmxlbUNvbnRyYWN0IGFzIENvbnRyYWN0KS50cmFuc2ZlckZyb20oYWNjb3VudCwgdHJhbnNmZXJUb0FkZHJlc3MsIHRva2VuSWQpXG4gICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICBzZXRIYXNoKGhhc2gpXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7fSlcbiAgfVxuXG4gIGNvbnN0IGxhenlNaW50ID0gKCkgPT57XG4gICAgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudClcbiAgICAuc2lnbk1lc3NhZ2UoJ0RlbGF5ZWQgTWludGluZzogJyArIHRva2VuSWQpXG4gICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcInNpZ1wiLCBzaWduYXR1cmUpXG4gICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9sYXp5TWludCcsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3Rva2VuSWQ6IHRva2VuSWQsIHNpZ25hdHVyZTogc2lnbmF0dXJlfSksXG4gICAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICAgICAgaWYgKCFkYXRhLmVycm9yICYmIGRhdGEuZGF0YSkge1xuICAgICAgICAgICAgc2V0TWludFNpZ25hdHVyZShkYXRhLmRhdGEuc2lnbmF0dXJlKVxuICAgICAgICAgICAgc2V0Tm9uY2UoZGF0YS5kYXRhLm5vbmNlKVxuICAgICAgICAgICAgc2V0QmxvY2soZGF0YS5kYXRhLmJsb2NrKVxuICAgICAgICAgICAgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSh0cnVlKVxuICAgICAgICAgICAgLy8gc2V0Q3JlYXRpbmcodHJ1ZSlcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9PntcbiAgICAgICAgICAgICAgZGVsYXllZE1pbnQoZGF0YS5kYXRhLm5vbmNlLCBkYXRhLmRhdGEuYmxvY2ssIGRhdGEuZGF0YS5zaWduYXR1cmUpXG4gICAgICAgICAgICB9LCAxNTAwKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhbGVydChkYXRhLmVycm9yPyBkYXRhLm1zZzogJ3Vua25vd24gZXJyb3InIClcbiAgICAgICAgICB9ICAgICAgICAgICAgXG4gICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBjb25zdCBkZWxheWVkTWludCA9IChub25jZSwgYmxvY2ssIHNpZykgPT4ge1xuICAgIC8vIHNldENyZWF0aW5nKHRydWUpXG4gICAgICBjb25zb2xlLmxvZyhcIkRlbGF5ZWQgTWludGluZ1wiKVxuICAgICAgc2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZShmYWxzZSlcbiAgICAgIHNldFNob3dNYWtpbmdWYXVsdE1zZyh0cnVlKVxuICAgICAgc2V0TWludGluZyh0cnVlKVxuICAgICAgbGV0IGNpcGhlclRleHRIYXNoID0gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBcIkVUSFwifSlbMF0uYWRkcmVzc1xuICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLURlbGF5ZWQgTWludGluZ1wiLCBhY2NvdW50LCB0b2tlbklkLCBjaXBoZXJUZXh0SGFzaCwgbm9uY2UsIGJsb2NrLCBzaWcpXG4gICAgICA7KGhhbmRsZXJDb250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5idXlXaXRoU2lnbmF0dXJlMihhY2NvdW50LCB0b2tlbklkLCBjaXBoZXJUZXh0SGFzaCwgbm9uY2UsIGJsb2NrLCBzaWcpXG4gICAgICAudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICAgIHNldFNob3dNYWtpbmdWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgICBcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJBQUFBQUhISEhISFwiLCBlcnJvcilcbiAgICAgICAgICBzZXRTaG93TWFraW5nVmF1bHRNc2coZmFsc2UpXG4gICAgICAgICAgLy8gc2V0TWludGluZyhmYWxzZSlcbiAgICAgIH0pICAgIFxuICB9XG5cbiAgY29uc3QgZmlyZU1ldGFNYXNrID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKG1pbnRQYXNzd29yZClcbiAgICBzZXRBY2NlcHRpbmcodHJ1ZSlcbiAgICBnZXRXaXRuZXNzKCh3aXRuZXNzKT0+e1xuICAgICAgLy8gY29uc29sZS5sb2codG9rZW5JZCwgbWludFBhc3N3b3JkLCB3aXRuZXNzLm5vbmNlLCB3aXRuZXNzLnNpZ25hdHVyZSwgYWNjb3VudClcbiAgICAgIDsoaGFuZGxlckNvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLnRyYW5zZmVyV2l0aENvZGUodG9rZW5JZCwgbWludFBhc3N3b3JkLCBhY2NvdW50LCB3aXRuZXNzLm5vbmNlLCB3aXRuZXNzLnNpZ25hdHVyZSlcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpICAgICAgICAgIFxuICAgICAgICAgIC8vIHNldFNob3dNYWtpbmdWYXVsdE1zZyh0cnVlKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjcmVhdGluZ1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgc2V0QWNjZXB0aW5nKGZhbHNlKVxuICAgICAgICBpZiAoZXJyb3I/LmNvZGUgIT09IDQwMDEpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgdHggZmFpbGVkLmAsIGVycm9yKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHNldEFjY2VwdGluZyhmYWxzZSlcbiAgICAgICAgICAvLyBzZXRTaG93UHJlVmF1bHRNc2coZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgfVxuXG4gIGNvbnN0IGFkZFByZVRyYW5zZmVyID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCd0cmFuc2ZlckltYWdlJywgXCIweFwiK3RyYW5zZmVySW1hZ2UpXG4gICAgc2V0UHJlVHJhbnNmZXJpbmcodHJ1ZSlcbiAgICA7KGhhbmRsZXJDb250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5hZGRQcmVUcmFuc2Zlcih0b2tlbklkLCBcIjB4XCIrdHJhbnNmZXJJbWFnZSlcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICAgICAgY29uc29sZS5sb2coXCJTZXQgUHJlIFRyYW5zZmVyaW5nIFRydWVcIiwgcHJlVHJhbnNmZXJpbmcpXG4gICAgICAgICAgLy8gc2V0U2hvd01ha2luZ1ZhdWx0TXNnKHRydWUpXG4gICAgICAgIC8vIH0sIDEwMCkgLy8gU29sdmluZyBTdGF0ZSByYWNlIGNvbmRpdGlvbiB3aGVyZSB0cmFuc2FjdGlvbiB3YXRjaGVyIHdvdWxkbid0IG5vdGljZSB3ZSB3ZXJlIGNyZWF0aW5nXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogRXJyb3JXaXRoQ29kZSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3I/LmNvZGUpeyAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvcj9cIikgICAgICAgXG4gICAgICAgICAgICBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAgIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkKGZhbHNlKVxuICAgICAgICAgICAgc2V0VHJhbnNmZXJQYXNzd29yZCgnJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBzZXRTaG93VHJhbnNmZXJQYXNzd29yZCghc2hvd1RyYW5zZmVyUGFzc3dvcmQ/IHRydWUgOiBmYWxzZSlcbiAgICAgICAgICAvLyBzZXRQcmVUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAvLyBzZXRTaG93UHJlVmF1bHRNc2coZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVBcHByb3ZlRm9yYWxsID0gKCkgPT4ge1xuICAgIHNldEFwcHJvdmluZyh0cnVlKVxuICAgIDsoZW1ibGVtQ29udHJhY3QgYXMgQ29udHJhY3QpXG4gICAgICAuc2V0QXBwcm92YWxGb3JBbGwoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdLCB0cnVlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaCkgICAgICAgICAgXG4gICAgICAgICAgLy8gc2V0U2hvd01ha2luZ1ZhdWx0TXNnKHRydWUpXG4gICAgICAgIH0sIDEwMCkgLy8gU29sdmluZyBTdGF0ZSByYWNlIGNvbmRpdGlvbiB3aGVyZSB0cmFuc2FjdGlvbiB3YXRjaGVyIHdvdWxkbid0IG5vdGljZSB3ZSB3ZXJlIGNyZWF0aW5nXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogRXJyb3JXaXRoQ29kZSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3I/LmNvZGUgIT09IDQwMDEpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgdHggZmFpbGVkLmAsIGVycm9yKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNldEFwcHJvdmluZyhmYWxzZSlcblxuICAgICAgICAgIC8vIHNldFNob3dQcmVWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGFwcHJvdmVDb3ZhbEZsb3cgPSAoKSA9PiB7XG4gICAgc2V0QXBwcm92aW5nKHRydWUpXG4gICAgOyhjb3ZhbENvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLmFwcHJvdmUoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdLCAnMTAwMDAwMDAwMDAwMDAwJylcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogRXJyb3JXaXRoQ29kZSkgPT4ge1xuICAgICAgICBpZiAoZXJyb3I/LmNvZGUgPT0gNDAwMSkge1xuICAgICAgICAgIHNldEFwcHJvdmluZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGRlbGV0ZVZhdWx0ID0gKCkgPT57XG4gICAgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudClcbiAgICAgIC5zaWduTWVzc2FnZSgnRGVsZXRlOiAnICsgdG9rZW5JZClcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcInNpZ1wiLCBzaWduYXR1cmUpXG4gICAgICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL3YyL2RlbGV0ZScsIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7dG9rZW5JZDogdG9rZW5JZCwgc2lnbmF0dXJlOiBzaWduYXR1cmUsIGNoYWluSWQ6IGNoYWluSWQudG9TdHJpbmcoKX0pLFxuICAgICAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSl7XG4gICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24uaHJlZi5zcGxpdChcIi9cIilbMF0gKyBcIi92YXVsdHNcIlxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IHN5bmNBY2NvdW50ID0gKCkgPT57XG4gICAgXG4gICAgICAgIGxldCBzeW5jaGVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odG9rZW5JZCsnLXYnKVxuICAgICAgICBpZiAoIXN5bmNoZWQpIHtcbiAgICAgICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9zeW5jLycrdG9rZW5JZCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJ1xuICAgICAgICAgICAgfSAgICAgICAgICBcbiAgICAgICAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSl7XG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRva2VuSWQrJy12JywgJzEnKVxuICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH0pLmNhdGNoKCgpPT57XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICB9KVxuICAgICAgfVxuICB9XG5cbiAgXG5cbiAgY29uc3QgZ2V0VmF1bHQgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gc3luY0FjY291bnQoKVxuICAgIGNvbnNvbGUubG9nKCdnZXR2YXVsdCcpXG4gICAgLy8gIXNsaWRlc2hvd09ubHkgPyBsb2FkQ2FjaGUoKSA6IG51bGxcbiAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLVwiLEVNQkxFTV9BUEkgKyAnL21ldGEvJyArIHRva2VuSWQgKyAnP2V4cGVyaW1lbnRhbD10cnVlJylcbiAgICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL21ldGEvJyArIHRva2VuSWQgKyAnP2V4cGVyaW1lbnRhbD10cnVlJysoY2xlYXJDYWNoZSA/ICcmX3ZlcmNlbF9ub19jYWNoZT0xJyA6ICcnKSwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjYzogKGNsZWFyQ2FjaGUgPyAndCcgOiAnJylcbiAgICAgIH0sXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIHNldFN0YXRlcyhqc29uRGF0YSlcbiAgICAvLyBjb25zb2xlLmxvZygndmF1bHQgcmVzcG9uc2Ugd2FzICcsIGpzb25EYXRhKVxuICAgIGlmIChqc29uRGF0YS5pbWFnZV9pcGZzKSB7XG4gICAgICAvLyBnZXRJUEZTSW1hZ2UoanNvbkRhdGEuaW1hZ2VfaXBmcylcbiAgICB9XG4gICAgaWYgKGpzb25EYXRhLmNvbGxlY3Rpb25BZGRyZXNzKXtcbiAgICAgIHNldElzQ3Jvd2RTYWxlKHRydWUpXG4gICAgICBzZXRBbHRlcm5hdGVDb250cmFjdEFkZHJlc3MoanNvbkRhdGEuY29sbGVjdGlvbkFkZHJlc3MpXG4gICAgfVxuICAgIGlmICghanNvbkRhdGEubmFtZSkge1xuICAgICAgc2V0U3RhdGUoeyBsb2FkZWQ6IHRydWUgfSlcbiAgICAgIHNldEludmFsaWRWYXVsdCh0cnVlKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzZXRTdGF0ZXMoanNvbkRhdGEpXG4gICAgICAvLyAhc2xpZGVzaG93T25seT8gc2F2ZUNhY2hlKGpzb25EYXRhKSA6IG51bGxcbiAgICAgIHNldExvYWRpbmdBcGkoZmFsc2UpXG4gICAgICBzZXRJbnZhbGlkVmF1bHQoZmFsc2UpXG4gICAgfVxuICAgIHtcbiAgICAgICF2YXVsdFByaXZhY3kgJiYgIWxvYWRlZFZhbHVlcyA/ICAgIFxuICAgICAgZ2V0QWxsQmFsYW5jZXNMaXZlKFtdLCB0b2tlbklkLCAodik9PntcbiAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICBzZXRWYXVsdFZhbHVlcyh2KVxuICAgICAgICB9ICAgICAgICBcbiAgICAgIH0pIDogbnVsbFxuICAgIH1cbiAgICB7IGlmIChqc29uRGF0YS50YXJnZXRDb250cmFjdCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdDI/aWQ9JyArIGpzb25EYXRhLnRhcmdldENvbnRyYWN0LnRva2VuSWRcbiAgICAgIH0sIDUwMClcbiAgICB9fVxuICB9XG5cbiAgXG5cbiAgY29uc3QgZ2V0V2l0bmVzcyA9IGFzeW5jIChjYjogeyAod2l0bmVzczogYW55KTogdm9pZDsgKGFyZzA6IGJvb2xlYW4pOiBhbnkgfSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvd2l0bmVzcy8nICsgdG9rZW5JZCwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgY2M6ICd0JyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgIH0sXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIC8vIGNvbnNvbGUubG9nKCd2YXVsdCByZXNwb25zZSB3YXMgJywganNvbkRhdGEpXG4gICAgaWYgKGpzb25EYXRhLnNpZ25hdHVyZSkge1xuICAgICAgY29uc29sZS5sb2coJ3dpdG5lc3MnLCBqc29uRGF0YSlcbiAgICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNiKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldE1vdmVhYmxlQ29sbGVjdGlvbnM9IGFzeW5jICgpID0+IHtcbiAgICAvLyBhbGVydCgwKVxuICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cIiwgdmF1bHRWYWx1ZXMubGVuZ3RoLCBhdHRyaWJ1dGVzLmxlbmd0aClcbiAgICBpZih2YXVsdFZhbHVlcy5sZW5ndGggPT0gMSAmJiBhdHRyaWJ1dGVzLmxlbmd0aCA+IDApe1xuICAgICAgbGV0IHByb2plY3QgPSBhdHRyaWJ1dGVzLmZpbHRlcihpdGVtPT57cmV0dXJuIGl0ZW0udmFsdWUgPT0gdmF1bHRWYWx1ZXNbMF0ubmFtZX0pXG4gICAgICBpZiAocHJvamVjdC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2cocHJvamVjdFswXS50cmFpdF90eXBlKVxuICAgICAgICAgIGxldCBwcm9qZWN0TmFtZSA9IHByb2plY3RbMF0udHJhaXRfdHlwZVxuICAgICAgICAgIGxldCBfcXVhbGlmaWVkQ29sbGVjdGlvbiA9IGN1cmF0ZWRDb250cmFjdHMuZmlsdGVyKGl0ZW09PntyZXR1cm4gaXRlbS5uYW1lID09IHByb2plY3ROYW1lfSlcbiAgICAgICAgICBpZiAoX3F1YWxpZmllZENvbGxlY3Rpb24ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnLS0tLS0tLS0tIEBAQEBAQEBAQEBAIC0tLS0tLS0tLS0tLS0tIEBAQEBAcXVhbGlmaWVkJywgX3F1YWxpZmllZENvbGxlY3Rpb25bMF0pXG4gICAgICAgICAgICAgIHNldFF1YWxpZmllZENvbGxlY3Rpb24oX3F1YWxpZmllZENvbGxlY3Rpb25bMF0pXG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHNldFRpbWVvdXQoKCk9PntnZXRNb3ZlYWJsZUNvbGxlY3Rpb25zKCl9LCAxMDAwKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNldFN0YXRlcyA9IChqc29uRGF0YSkgPT4ge1xuICAgIGZyYW1lZCAmJiBqc29uRGF0YS5pbWFnZSAmJiAhanNvbkRhdGEuaW1hZ2UuaW5jbHVkZXMoJ2ZyYW1lZD0nKSAmJiAhanNvbkRhdGEuaW1hZ2UuaW5jbHVkZXMoJ2h0dHAnKSA/IGpzb25EYXRhLmltYWdlID0ganNvbkRhdGEuaW1hZ2UgKyBcIiZmcmFtZWQ9XCIrZnJhbWVkIDogbnVsbFxuICAgIGlmIChqc29uRGF0YS5jaXBoZXJ0ZXh0VjIpIHtcbiAgICAgIHNldFZhdWx0Q2lwaGVydGV4dFYyKGpzb25EYXRhLmNpcGhlcnRleHRWMilcbiAgICAgIGNvbnNvbGUubG9nKFwiY2lwaGVydGV4dFYyXCIsIGpzb25EYXRhLmNpcGhlcnRleHRWMilcbiAgICB9XG4gICAgc2V0VmF1bHROYW1lKGpzb25EYXRhLm5hbWUpXG4gICAgc2V0VmF1bHRJbWFnZShqc29uRGF0YS5pbWFnZSlcbiAgICBzZXRPd25lZEltYWdlKGpzb25EYXRhLm93bmVkSW1hZ2UgfHwgbnVsbClcbiAgICBzZXRWYXVsdERlc2MoanNvbkRhdGEuZGVzY3JpcHRpb24pXG4gICAgc2V0VmF1bHRUb3RhbFZhbHVlKGpzb25EYXRhLnRvdGFsVmFsdWUgfHwgMClcbiAgICBqc29uRGF0YS52YWx1ZXMgPyBzZXRWYXVsdFZhbHVlcyh2YXVsdFZhbHVlcy5jb25jYXQoanNvbkRhdGEudmFsdWVzKSk6IG51bGxcbiAgICBqc29uRGF0YS5hdHRyaWJ1dGVzID8gc2V0VmF1bHREYXRhVmFsdWVzKGpzb25EYXRhLmF0dHJpYnV0ZXMuZmlsdGVyKChpdGVtOiB7IHRyYWl0X3R5cGU6IHN0cmluZyB9KT0+e3JldHVybiBpdGVtLnRyYWl0X3R5cGUgPT09IFwia2V5XCJ9KSk6IG51bGxcbiAgICBqc29uRGF0YS5hdHRyaWJ1dGVzID8gc2V0QXR0cmlidXRlcyhqc29uRGF0YS5hdHRyaWJ1dGVzKTogbnVsbFxuICAgIHNldFZhdWx0QWRkcmVzc2VzKGpzb25EYXRhLmFkZHJlc3NlcylcbiAgICBzZXRWYXVsdElQRlMoanNvbkRhdGEuaXBmcyB8fCBudWxsKVxuICAgIHNldFZhdWx0SW1hZ2VJUEZTKGpzb25EYXRhLmltYWdlX2lwZnMgfHwgbnVsbClcbiAgICBqc29uRGF0YS50YXJnZXRBc3NldD8gc2V0VGFyZ2V0QXNzZXQoanNvbkRhdGEudGFyZ2V0QXNzZXQpIDogbnVsbFxuICAgIGpzb25EYXRhLnRhcmdldENvbnRyYWN0PyBzZXRUYXJnZXRDb250cmFjdChqc29uRGF0YS50YXJnZXRDb250cmFjdCkgOiBudWxsXG4gICAgaWYgKGpzb25EYXRhLnRhcmdldENvbnRyYWN0KXtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQyP2lkPScgKyBqc29uRGF0YS50YXJnZXRDb250cmFjdC50b2tlbklkXG4gICAgICB9LCA1MDApXG4gICAgfVxuICAgIGlmIChqc29uRGF0YS5saXZlID09IGZhbHNlKSB7XG4gICAgICBjaGVja0xpdmVsaW5lc3MoanNvbkRhdGEudG9rZW5JZCwgKCk9PntcblxuICAgICAgfSlcbiAgICB9XG4gICAgc2V0TGl2ZShqc29uRGF0YS5saXZlID09IGZhbHNlID8gZmFsc2UgOiB0cnVlKVxuICAgIHNldE5vbmNlKGpzb25EYXRhLm5vbmNlKVxuICAgIHNldE1pbnRTaWduYXR1cmUoanNvbkRhdGEuc2lnbmF0dXJlKVxuICAgIHNldFRvKGpzb25EYXRhLnRvKVxuICAgIHNldFZhdWx0Q2hhaW4oanNvbkRhdGEubmV0d29yaylcbiAgICBzZXRWYXVsdENoYWluSWQoXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09ICdtYWlubmV0JyA/IDEgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJyaW5rZWJ5XCIgPyA0IDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwibXVtYmFpXCIgPyA4MDAwMSA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcIm1hdGljXCIgPyAxMzcgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJ4ZGFpXCIgPyAxMDAgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJic2NcIiA/IDU2IDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwiZmFudG9tXCIgPyAyNTAgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJiaXRjb2luXCIgPyAwIDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwiYXVyb3JhXCIgPyAxMzEzMTYxNTU0IDogXG4gICAgICA5N1xuICAgIClcbiAgICBzZXRTdGF0dXMoanNvbkRhdGEuc3RhdHVzKVxuICAgIGlmIChzdGF0dXMgPT09ICdjbGFpbWVkJykge1xuICAgICAgc2V0Q2xhaW1lZEJ5KGpzb25EYXRhLmNsYWltZWRCeSlcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2luc2lkZSBnZXRzdGF0ZXMuIG1pbmUgaXMgJywgbWluZSlcbiAgICBzZXRTdGF0ZSh7IGxvYWRlZDogdHJ1ZSB9KVxuICAgIGxldCBpc1B2dCA9XG4gICAgICBqc29uRGF0YS5hZGRyZXNzZXMuZmlsdGVyKChpdGVtOiB7IGFkZHJlc3M6IHN0cmluZyB8IHN0cmluZ1tdIH0pID0+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uYWRkcmVzcy5pbmNsdWRlcygncHJpdmF0ZTonKVxuICAgICAgfSkubGVuZ3RoID4gMFxuICAgIHNldFZhdWx0UHJpdmFjeShpc1B2dCkgICAgXG4gICAgaWYgKGpzb25EYXRhLnNlYWxlZCkge1xuICAgICAgc2V0U2VhbGVkKHRydWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFNlYWxlZChmYWxzZSlcbiAgICB9XG4gICAgZ2V0TW92ZWFibGVDb2xsZWN0aW9ucygpXG4gIH1cblxuICAvLyBjb25zdCBnZXRFdGhCYWxhbmNlcyA9IGFzeW5jIChhZGRyZXNzLCBjYikgPT4ge1xuICAvLyAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvZXRoL2JhbGFuY2UvJyArIGFkZHJlc3MsIHtcbiAgLy8gICAgIG1ldGhvZDogJ0dFVCcsXG4gIC8vICAgICBoZWFkZXJzOiB7XG4gIC8vICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIC8vICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgLy8gICAgIH0sXG4gIC8vICAgfSlcbiAgLy8gICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAvLyAgIC8vIGNvbnNvbGUubG9nKE51bWJlcih2YXVsdFRvdGFsVmFsdWUpLCBOdW1iZXIoanNvbkRhdGEudG90YWxWYWx1ZSkpXG4gIC8vICAgc2V0VmF1bHRUb3RhbFZhbHVlKE51bWJlcih2YXVsdFRvdGFsVmFsdWUpICsgTnVtYmVyKGpzb25EYXRhLnRvdGFsVmFsdWUpKVxuICAvLyAgIC8vIGNvbnNvbGUubG9nKCdnZXQgZXRoIGJhbGFuY2VzJywganNvbkRhdGEudmFsdWVzKVxuICAvLyAgIHJldHVybiBjYihqc29uRGF0YS52YWx1ZXMpXG4gIC8vIH1cblxuICAvLyBjb25zdCBnZXRCdGNCYWxhbmNlID0gYXN5bmMgKHZhbHVlcywgYWRkcmVzcywgY2IpID0+IHtcbiAgLy8gICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL2J0Yy9iYWxhbmNlLycgKyBhZGRyZXNzLCB7XG4gIC8vICAgICBtZXRob2Q6ICdHRVQnLFxuICAvLyAgICAgaGVhZGVyczoge1xuICAvLyAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAvLyAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gIC8vICAgICB9LFxuICAvLyAgIH0pXG4gIC8vICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgLy8gICAvLyBzZXRWYXVsdFZhbHVlcyh2YWx1ZXMuY29uY2F0KGpzb25EYXRhLnZhbHVlcykpXG4gIC8vICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEudmFsdWVzKSlcbiAgLy8gfVxuXG4gIC8vIGNvbnN0IGdldE5mdEJhbGFuY2UgPSBhc3luYyAodmFsdWVzLCBhZGRyZXNzLCBjYikgPT4ge1xuICAvLyAgIC8vIGNvbnNvbGUubG9nKGFkZHJlc3MpXG4gIC8vICAgY29uc3QgcmVzcG9uY2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy9ldGgvbmZ0LycgKyBhZGRyZXNzLCB7XG4gIC8vICAgICBtZXRob2Q6ICdHRVQnLFxuICAvLyAgICAgaGVhZGVyczoge1xuICAvLyAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAvLyAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gIC8vICAgICB9LFxuICAvLyAgIH0pXG4gIC8vICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgLy8gICBpZiAoanNvbkRhdGEubGVuZ3RoID4gMCkge1xuICAvLyAgICAgLy8gY29uc29sZS5sb2coXCJGdWNrbGluZyBORlRcIiwganNvbkRhdGEsIHZhbHVlcy5jb25jYXQoanNvbkRhdGEpKVxuICAvLyAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEpKVxuICAvLyAgIH0gZWxzZSB7XG4gIC8vICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAvLyAgIH1cbiAgLy8gfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzID0gYXN5bmMgKHZhbHVlczogc3RyaW5nIHwgYW55W10sIHRva2VuSWQ6IHN0cmluZywgY2I6IHsgKHZhbHVlczogYW55KTogYW55OyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhhZGRyZXNzKVxuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvdmF1bHQvYmFsYW5jZS8nICsgdG9rZW5JZCAsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgIH0sXG4gICAgfSlcbiAgICBcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25jZScsIHJlc3BvbmNlLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuYmFsYW5jZXMubGVuZ3RoID4gMCkgeyAgICAgIFxuICAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEuYmFsYW5jZXMpKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzTGl2ZSA9IGFzeW5jICh2YWx1ZXM6IHN0cmluZyB8IGFueVtdLCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKHY6IGFueSk6IHZvaWQ7ICh2OiBhbnkpOiB2b2lkOyAoYXJnMDogYm9vbGVhbik6IGFueSB9KSA9PiB7XG4gICAgLy8gc2V0VmF1bHRWYWx1ZXMoW10pXG4gICAgLy8gY29uc29sZS5sb2coYWRkcmVzcylcbiAgICBpZiAobG9hZGVkVmFsdWVzKSB7XG4gICAgICByZXR1cm4gY2IoZmFsc2UpXG4gICAgfVxuICAgIHNldExvYWRlZFZhbHVlcyh0cnVlKVxuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvdmF1bHQvYmFsYW5jZS8nICsgdG9rZW5JZCArICc/bGl2ZT10cnVlJl92ZXJjZWxfbm9fY2FjaGU9MScgLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YSdcbiAgICAgIH0sXG4gICAgfSlcbiAgICBcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25jZScsIHJlc3BvbmNlLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuYmFsYW5jZXMubGVuZ3RoID4gMCkgeyAgICAgIFxuICAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEuYmFsYW5jZXMpKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzQnlBZGRyZXNzID0gYXN5bmMgKHZhbHVlczogc3RyaW5nIHwgYW55W10sIGV0aEFkZHJlc3M6IHN0cmluZywgYnRjQWRkcmVzczogc3RyaW5nLCBjYjogeyAodmFsdWVzOiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhhZGRyZXNzKVxuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvdmF1bHQvYmFsYW5jZS8nICsgZXRoQWRkcmVzcyArICcvJyArIGJ0Y0FkZHJlc3MsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgIH0sXG4gICAgfSlcbiAgICBcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKVxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25jZScsIHJlc3BvbmNlLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuYmFsYW5jZXMubGVuZ3RoID4gMCkgeyAgICAgIFxuICAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEuYmFsYW5jZXMpKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNhdmVDYWNoZSA9ICh2YXVsdDogYW55KSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ192YXVsdCcsIEpTT04uc3RyaW5naWZ5KHZhdWx0KSkgLy8gU2F2ZSBuZXcgc3RhdGUgZm9yIGxhdGVyXG4gIH1cblxuICBjb25zdCBsb2FkQ2FjaGUgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2NhY2hlJylcbiAgICBsZXQgdmF1bHQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGFjY291bnQgKyAnXycgKyBjaGFpbklkICsgJ18nICsgdG9rZW5JZCArICdfdmF1bHQnKSkgLy8gTG9hZCB2YXVsdHMgZnJvbSBzdG9yYWdlIGJlZm9yZSB1cGRhdGluZyBmcm9tIHNlcnZlciFcbiAgICBpZiAodmF1bHQpIHtcbiAgICAgIHNldFN0YXRlKHsgbG9hZGVkOiB0cnVlIH0pXG4gICAgICBzZXRTdGF0ZXModmF1bHQpXG4gICAgICBzZXRMb2FkaW5nQXBpKHRydWUpXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2F2ZVBhc3N3b3JkVG9Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ19taW50UGFzc3dvcmQnLCB0cmFuc2ZlclBhc3N3b3JkKSAvLyBTYXZlIG5ldyBzdGF0ZSBmb3IgbGF0ZXJcbiAgfVxuXG4gIGNvbnN0IGxvYWRQYXNzd29yZEZyb21Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgbGV0IHN0b3JlZFB3ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYWNjb3VudCArICdfJyArIGNoYWluSWQgKyAnXycgKyB0b2tlbklkICsgJ19taW50UGFzc3dvcmQnKVxuICAgIHN0b3JlZFB3ICYmIGFjY2VwdGFibGUgPyBzZXRNaW50UGFzc3dvcmQoc3RvcmVkUHcpIDogbnVsbCAvL3NldE1pbnRQYXNzd29yZChudWxsKVxuICB9XG5cbiAgLy8gY29uc3QgZ2V0S2V5cyA9IGFzeW5jIChzaWduYXR1cmUsIHRva2VuSWQsIGNiKSA9PiB7XG4gIC8vICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgLy8gICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbklkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAvLyAgIG15SGVhZGVycy5hcHBlbmQoJ3NlcnZpY2UnLCAnZXZtZXRhZGF0YScpXG4gIC8vICAgbXlIZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuXG4gIC8vICAgdmFyIHJhdyA9IEpTT04uc3RyaW5naWZ5KHsgc2lnbmF0dXJlOiBzaWduYXR1cmUgfSlcbiAgLy8gICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL2NsYWltLycgKyB0b2tlbklkLCB7XG4gIC8vICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgLy8gICAgIGhlYWRlcnM6IG15SGVhZGVycyxcbiAgLy8gICAgIGJvZHk6IHJhdyxcbiAgLy8gICAgIHJlZGlyZWN0OiAnZm9sbG93JyxcbiAgLy8gICB9KVxuICAvLyAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uY2UuanNvbigpXG4gIC8vICAgLy8gY29uc29sZS5sb2coJ2dldEtleXMgcmVzcG9uc2UgaXMgJywganNvbkRhdGEpXG4gIC8vICAgcmV0dXJuIGNiKGpzb25EYXRhKVxuICAvLyB9XG5cbiAgY29uc3QgZ2V0U2lnbmVkSldUID0gYXN5bmMgKHNpZ25hdHVyZTogYW55LCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKHRva2VuOiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pPT57XG4gICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbmlkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJylcblxuICAgIHZhciByYXcgPSBKU09OLnN0cmluZ2lmeSh7IHNpZ25hdHVyZTogc2lnbmF0dXJlLCB0b2tlbklkOiB0b2tlbklkIH0pXG4gICAgY29uc3QgcmVzcG9uY2UgPSBhd2FpdCBmZXRjaChTSUdfQVBJKycvc2lnbicsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogbXlIZWFkZXJzLFxuICAgICAgYm9keTogcmF3LFxuICAgICAgcmVkaXJlY3Q6ICdmb2xsb3cnLFxuICAgIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgICByZXR1cm4gY2IoanNvbkRhdGEpXG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiBnZXRUb3J1c0tleXMoIHZlcmlmaWVySWQsIGlkVG9rZW4sIGNiKSB7XG4gICAgLy8gY29uc3QgZmV0Y2hOb2RlRGV0YWlscyA9IG5ldyBGZXRjaE5vZGVEZXRhaWxzKHsgbmV0d29yazogXCJodHRwczovL3NvbGVtbi1yZXN0bGVzcy1kaWFncmFtLnJvcHN0ZW4uZGlzY292ZXIucXVpa25vZGUucHJvLzM3ZmNhOGYxNGQzYTQyZDllYzAwZjUwYTNmNmFkYzQwNGQ1ZTJhMDQvXCIsIHByb3h5QWRkcmVzczogXCIweDYyNThjOWQ2YzEyZWQzZWRkYTU5YTFhNjUyN2U0Njk1MTc3NDRhYTdcIiB9KTtcbiAgICAvLyBjb25zdCB0b3J1c1V0aWxzID0gbmV3IFRvcnVzVXRpbHMoeyBlbmFibGVPbmVLZXk6IHRydWUsIG5ldHdvcms6IFwidGVzdG5ldFwiIH0pO1xuICAgIGNvbnN0IGZldGNoTm9kZURldGFpbHMgPSBuZXcgRmV0Y2hOb2RlRGV0YWlscyh7IG5ldHdvcms6IFwibWFpbm5ldFwiIH0pO1xuICAgIGNvbnN0IHRvcnVzVXRpbHMgPSBuZXcgVG9ydXNVdGlscyh7IGVuYWJsZU9uZUtleTogdHJ1ZSwgbmV0d29yazogXCJtYWlubmV0XCIgfSk7XG5cbiAgICBjb25zdCB7IHRvcnVzTm9kZUVuZHBvaW50cywgdG9ydXNJbmRleGVzIH0gPSBhd2FpdCBmZXRjaE5vZGVEZXRhaWxzLmdldE5vZGVEZXRhaWxzKHsgdmVyaWZpZXI6ICd0b3ItdXMtc2lnbmVyLXZlcmNlbCcsIHZlcmlmaWVySWQgfSk7XG4gICAgY29uc3QgeyBwcml2S2V5IH0gPSBhd2FpdCB0b3J1c1V0aWxzLnJldHJpZXZlU2hhcmVzKHRvcnVzTm9kZUVuZHBvaW50cywgdG9ydXNJbmRleGVzLCAndG9yLXVzLXNpZ25lci12ZXJjZWwnLCB7IHZlcmlmaWVyX2lkOiB2ZXJpZmllcklkIH0sIGlkVG9rZW4pO1xuICAgIHJldHVybiBjYih7cHJpdmF0ZUtleTogcHJpdktleX0pO1xuICB9XG5cbiAgY29uc3QgYWRkQWRkcmVzcyA9IGFzeW5jIChzaWduYXR1cmU6IGFueSwgdG9rZW5JZDogc3RyaW5nIHwgc3RyaW5nW10sIGNvaW46IHN0cmluZywgY2I6IHsgKHJlc3VsdDogYW55KTogdm9pZDsgKGFyZzA6IGFueSk6IGFueSB9KSA9PiB7XG4gICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbklkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ3NlcnZpY2UnLCAnZXZtZXRhZGF0YScpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuXG4gICAgdmFyIHJhdyA9IEpTT04uc3RyaW5naWZ5KHsgc2lnbmF0dXJlOiBzaWduYXR1cmUsIGNvaW46IGNvaW4gfSlcbiAgICBjb25zdCByZXNwb25jZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL2FkZHJlc3MvJyArIHRva2VuSWQsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogbXlIZWFkZXJzLFxuICAgICAgYm9keTogcmF3LFxuICAgICAgcmVkaXJlY3Q6ICdmb2xsb3cnLFxuICAgIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgICByZXR1cm4gY2IoanNvbkRhdGEpXG4gIH1cblxuICBjb25zdCBkZWNyeXB0RW1iZWQgPSBhc3luYyAoc2lnbmF0dXJlOiBhbnksIHRva2VuSWQ6IHN0cmluZyB8IHN0cmluZ1tdLCBjYjogeyAocmVzdWx0OiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ2NoYWluSWQnLCBjaGFpbklkLnRvU3RyaW5nKCkpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnc2VydmljZScsICdldm1ldGFkYXRhJylcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpXG5cbiAgICB2YXIgcmF3ID0gSlNPTi5zdHJpbmdpZnkoeyBzaWduYXR1cmU6IHNpZ25hdHVyZSB9KVxuICAgIGNvbnN0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvZW1iZWQvJyArIHRva2VuSWQsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogbXlIZWFkZXJzLFxuICAgICAgYm9keTogcmF3LFxuICAgICAgcmVkaXJlY3Q6ICdmb2xsb3cnLFxuICAgIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25jZS5qc29uKClcbiAgICByZXR1cm4gY2IoanNvbkRhdGEpXG4gIH1cblxuICBjb25zdCBnZXRDb250cmFjdFN0YXRlcyA9IGFzeW5jICgpID0+IHtcbiAgICAvLyBhbGVydCgwKVxuICAgIGNvbnNvbGUubG9nKFwiQ29udHJhY3Qgc3RhdGVzXCIpXG4gICAgbGV0IG93bmVkID0gZmFsc2VcbiAgICBsZXQgX293bmVyOiBzdHJpbmdcbiAgICB0cnkge1xuICAgICAgaWYgKHRhcmdldENvbnRyYWN0W2NoYWluSWRdKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ2hlY2tpbmcgb3duZXIgd3RoIHRhcmdldENvbnRyYWN0XCIpXG4gICAgICAgIGVtYmxlbUNvbnRyYWN0ID0gZ2V0Q3VyYXRlZENvbnRyYWN0KHRhcmdldENvbnRyYWN0W2NoYWluSWRdKVxuICAgICAgICBfb3duZXIgPSBhd2FpdCBlbWJsZW1Db250cmFjdC5nZXRPd25lck9mU2VyaWFsKHRhcmdldENvbnRyYWN0LnNlcmlhbE51bWJlcilcbiAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gb3duZXJcIiwgX293bmVyLCBhcHByb3ZlZCwgYWNjb3VudCwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyVjhbY2hhaW5JZF0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfb3duZXIgID0gbGl2ZT8gYXdhaXQgZW1ibGVtQ29udHJhY3Qub3duZXJPZih0b2tlbklkKTogMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gICAgICB9XG4gICAgICBzZXREZWNpbWFscyhhd2FpdCBjb3ZhbENvbnRyYWN0LmRlY2ltYWxzKCkpXG4gICAgICBzZXRBbGxvd2FuY2UoXG4gICAgICAgIGF3YWl0IGNvdmFsQ29udHJhY3RcbiAgICAgICAgICAuYWxsb3dhbmNlKGFjY291bnQsIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSlcbiAgICAgICAgICAudGhlbigoYmFsYW5jZTogeyB0b1N0cmluZzogKCkgPT4gc3RyaW5nIH0pID0+IGJhbGFuY2UudG9TdHJpbmcoKSlcbiAgICAgIClcbiAgICAgIHNldEJhbGFuY2UoYXdhaXQgY292YWxDb250cmFjdC5iYWxhbmNlT2YoYWNjb3VudCkudGhlbigoYmFsYW5jZTogeyB0b1N0cmluZzogKCkgPT4gc3RyaW5nIH0pID0+IGJhbGFuY2UudG9TdHJpbmcoKSkpXG4gICAgICBzZXRQcmljZShhd2FpdCBoYW5kbGVyQ29udHJhY3QucHJpY2UoKS50aGVuKChiYWxhbmNlOiB7IHRvU3RyaW5nOiAoKSA9PiBzdHJpbmcgfSkgPT4gYmFsYW5jZS50b1N0cmluZygpKSlcbiAgICAgIC8vIGNvbnNvbGUubG9nKFxuICAgICAgLy8gICAnYmFsYW5jZScsXG4gICAgICAvLyAgIGJhbGFuY2UsXG4gICAgICAvLyAgICdhbGxvd2FuY2UnLFxuICAgICAgLy8gICBhbGxvd2FuY2UsXG4gICAgICAvLyAgICdwcmljZScsXG4gICAgICAvLyAgIHByaWNlLFxuICAgICAgLy8gICBOdW1iZXIoYWxsb3dhbmNlKSA+PSBOdW1iZXIocHJpY2UpLFxuICAgICAgLy8gICBOdW1iZXIoYmFsYW5jZSkgPiBOdW1iZXIocHJpY2UpXG4gICAgICAvLyApXG4gICAgICBpZiAoTnVtYmVyKGFsbG93YW5jZSkgPj0gTnVtYmVyKHByaWNlKSkge1xuICAgICAgICAvLyBhbGVydCh0cnVlKVxuICAgICAgICBzZXRJc0NvdmFsQXBwcm92ZWQodHJ1ZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGFsZXJ0KGZhbHNlKVxuICAgICAgICBzZXRJc0NvdmFsQXBwcm92ZWQoZmFsc2UpXG4gICAgICB9XG4gICAgICBmaW5pc2goKVxuICAgIH0gY2F0Y2goZXJyKXtcbiAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLVwiLCBlcnIpXG4gICAgICAvLyBhcHByb3ZlQ292YWxGbG93KClcbiAgICAgIF9vd25lciA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJcbiAgICAgIGZpbmlzaCgpXG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZmluaXNoKCl7XG4gICAgIFxuICAgICAgbGV0IGFjY2VwdGFibGUgPSBhd2FpdCBoYW5kbGVyQ29udHJhY3QuZ2V0UHJlVHJhbnNmZXIodG9rZW5JZClcbiAgICAgIGxldCBpc0FwcHJvdmVkOiBib29sZWFuIHwgKChwcmV2U3RhdGU6IGJvb2xlYW4pID0+IGJvb2xlYW4pXG4gICAgICBpZiAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pIHtcbiAgICAgICAgaXNBcHByb3ZlZCA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmlzQXBwcm92ZWRGb3JBbGwoYWNjb3VudCwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyVjhbY2hhaW5JZF0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpc0FwcHJvdmVkID0gYXdhaXQgZW1ibGVtQ29udHJhY3QuaXNBcHByb3ZlZEZvckFsbChhY2NvdW50LCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0pXG4gICAgICB9XG4gICAgICBzZXRBcHByb3ZlZChpc0FwcHJvdmVkKVxuICAgICAgc2V0QWNjZXB0YWJsZShhY2NlcHRhYmxlLl9mcm9tICE9PSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgc2V0T3duZXIoX293bmVyKVxuICAgICAgc2V0TWluZShfb3duZXIgPT09IGFjY291bnQgfHwgKHRvID09PSBhY2NvdW50ICYmIF9vd25lciA9PT0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIikpXG4gICAgICBzZXRNaW5lVW5NaW50ZWQodG8gPT09IGFjY291bnQgJiYgX293bmVyID09PSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgbG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSgpXG4gICAgICAvLyBhbGVydCh0byA9PSBhY2NvdW50KVxuICAgIH1cbiAgICBcbiAgfVxuXG4gIHVzZUVmZmVjdCgoKT0+e1xuICAgIGNvbnNvbGUubG9nKFwibWluZT9cIiwgbWluZSlcbiAgICBjb25zb2xlLmxvZyhcImNsYWltaW5nP1wiLCBjbGFpbWluZylcbiAgICBjb25zb2xlLmxvZyhcImFjY2VwdGluZz9cIiwgYWNjZXB0aW5nKVxuICAgIGNvbnNvbGUubG9nKFwiYWNjZXB0YWJsZVwiLCBhY2NlcHRhYmxlKVxuICAgIGNvbnNvbGUubG9nKFwicXVhbGlmaWVkXCIsIHF1YWxpZmllZENvbGxlY3Rpb24pXG4gIH0pXG5cbiAgY29uc3QgaGFzQWRkcmVzcyA9IChjb2luOiBzdHJpbmcpPT57XG4gICAgY29uc29sZS5sb2coY29pbiwgdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBjb2lufSkubGVuZ3RoID4gMClcbiAgICByZXR1cm4gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBjb2lufSkubGVuZ3RoID4gMFxuICB9XG5cbiAgY29uc3Qgb25SZW5ldyA9IGFzeW5jIChuYW1lOiBhbnkpID0+IHsgXG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdSZW5ldzogJyArIHRva2VuSWQpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgbGV0IGFkZHJlc3MgPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoYWRkcmVzcz0+eyByZXR1cm4gYWRkcmVzcy5jb2luID09ICdOTUMnfSlbMF0uYWRkcmVzc1xuICAgICAgICBjb25zb2xlLmxvZygnc2lnbmF0dXJlJywgc2lnbmF0dXJlLCBuYW1lKVxuICAgICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9ubWMvcmVuZXcvJyArIGFkZHJlc3MsIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICAgICAgY2hhaW5pZDogY2hhaW5JZC50b1N0cmluZygpXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgXCJ0b2tlbklkXCI6IHRva2VuSWQsXG4gICAgICAgICAgICAgICAgXCJzaWduYXR1cmVcIjogc2lnbmF0dXJlLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBuYW1lXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlcXVlc3RlZCBSZW5ld1wiLCBkYXRhKVxuICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuICBcbiAgY29uc3QgaGFuZGxlU2lnbiA9IGFzeW5jICgpID0+IHtcbiAgICBcbiAgICBsZXQgc2VyaWFsTnVtYmVyOiBhbnlcbiAgICBpZiAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pIHsgICAgICBcbiAgICAgIGVtYmxlbUNvbnRyYWN0ID0gZ2V0Q3VyYXRlZENvbnRyYWN0KHRhcmdldENvbnRyYWN0W2NoYWluSWRdKVxuICAgICAgc2VyaWFsTnVtYmVyID0gYXdhaXQgZW1ibGVtQ29udHJhY3QuZ2V0U2VyaWFsKHRhcmdldENvbnRyYWN0LnRva2VuSWQsIDApXG4gICAgfVxuXG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdDbGFpbTogJyArICh0YXJnZXRDb250cmFjdFtjaGFpbklkXT8gc2VyaWFsTnVtYmVyOiB0b2tlbklkKSlcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBnZXRTaWduZWRKV1Qoc2lnbmF0dXJlLCB0b2tlbklkLCAodG9rZW46IHsgdG9rZW46IGFueSB9KT0+e1xuICAgICAgICAgIGdldFRvcnVzS2V5cyh0b2tlbklkLCB0b2tlbi50b2tlbiwgYXN5bmMgKGtleXM6IHsgcHJpdmF0ZUtleTogYW55IH0pPT57XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICB2YXIgYnl0ZXMgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdCh2YXVsdENpcGhlcnRleHRWMiwga2V5cy5wcml2YXRlS2V5KVxuICAgICAgICAgICAgICBsZXQgcGF5bG9hZCA9IEpTT04ucGFyc2UoYnl0ZXMudG9TdHJpbmcoQ3J5cHRvSlMuZW5jLlV0ZjgpKSBcbiAgICAgICAgICAgICAgc2V0S2V5VmFsdWVzKHBheWxvYWQudmFsdWVzKVxuICAgICAgICAgICAgICBzZXRNbmVtb25pYyhwYXlsb2FkLnBocmFzZSlcbiAgICAgICAgICAgICAgdmF1bHRBZGRyZXNzZXMuZm9yRWFjaChhc3luYyBhZGRyZXNzPT57XG4gICAgICAgICAgICAgICAgaWYgKGFkZHJlc3MuY29pbiA9PSAnU1RYJykge1xuICAgICAgICAgICAgICAgICAgYWRkcmVzcy5rZXkgPSBhd2FpdCBnZXRTVFhLZXkoYWRkcmVzcywgcGF5bG9hZC5waHJhc2UpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGFkZHJlc3Mua2V5ID0gd2luZG93LnBocmFzZVBhdGhUb0tleShwYXlsb2FkLnBocmFzZSwgYWRkcmVzcy5wYXRoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYWRkcmVzcy5jb2luID09ICdCVEMnKSBzZXRQcml2S2V5QlRDKGFkZHJlc3Mua2V5KVxuICAgICAgICAgICAgICAgIGlmIChhZGRyZXNzLmNvaW4gPT0gJ0VUSCcpIHNldFByaXZLZXlFVEgoYWRkcmVzcy5rZXkpXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGNhdGNoKGVycil7XG4gICAgICAgICAgICAgIC8vIGFsZXJ0KCdvdXQgb2Ygc3luYycpXG4gICAgICAgICAgICAgIGF3YWl0IHN5bmNBY2NvdW50KClcbiAgICAgICAgICAgICAgc2V0VGltZW91dCgoKT0+e2xvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5ocmVmfSwgMjAwMClcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIHNldEtleVZhbHVlcyh2YXVsdEFkZHJlc3NlcylcbiAgICAgICAgICAgIG9uT3BlbktleXNNb2RhbCgpXG4gICAgICAgICAgfSkgICAgICAgICAgXG4gICAgICAgIH0pXG4gICAgICAvLyB9XG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGdldFNUWEtleSA9IGFzeW5jIChhZGRyZXNzOiBhbnksIHBocmFzZTogc3RyaW5nKT0+e1xuICAgIGNvbnN0IHdhbGxldDogYW55ID0gYXdhaXQgZ2VuZXJhdGVXYWxsZXQoe1xuICAgICAgc2VjcmV0S2V5OiBwaHJhc2UsXG4gICAgICBwYXNzd29yZDogJycsXG4gICAgfSlcbiAgICBjb25zb2xlLmxvZygnLS0tLS0tIHN0YWNrcyBhY2NvdW50IC0nLCB3YWxsZXQuYWNjb3VudHNbMF0pXG4gICAgY29uc3QgYWNjb3VudCA9IHdhbGxldC5hY2NvdW50c1swXTtcbiAgICBhZGRyZXNzLmtleSA9IGFjY291bnQuc3R4UHJpdmF0ZUtleVxuICAgIHJldHVybiBhZGRyZXNzLmtleVxuICB9XG5cbiAgY29uc3QgaGFuZGxlSGlkZUFzc2V0ID0gYXN5bmMgKGNvaW46IHsgbmFtZTogYW55OyBjb2luOiBhbnk7IGFkZHJlc3M6IGFueSB9KSA9PiB7XG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdIaWRlQXNzZXQ6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXCIsIHNpZ25hdHVyZSlcbiAgICAgICAgY29uc29sZS5sb2coY29pbi5uYW1lLCBjb2luLmNvaW4sIGNvaW4uYWRkcmVzcylcbiAgICAgICAgaGlkZUFzc2V0KHRva2VuSWQsIGNvaW4uY29pbiwgY29pbi5hZGRyZXNzLCBjb2luLm5hbWUsIHNpZ25hdHVyZSwgKCk9PntcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkRvbmUgaGlkaW5nIGNvaW4gYW5kIGdldHRpbmcgbmV3IGJhbGFuY2VzXCIpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICB9XG5cbiAgZnVuY3Rpb24gaGlkZUFzc2V0KHRva2VuSWQsIGNvaW46IGFueSwgYWRkcmVzczogYW55LCBuYW1lOiBhbnksIHNpZ25hdHVyZTogYW55LCBjYjogeyAoKTogdm9pZDsgKCk6IGFueSB9KSB7XG4gICAgZmV0Y2goRU1CTEVNX0FQSSArICcvaGlkZS8nK3Rva2VuSWQsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgXCJjb2luXCI6IGNvaW4/IGNvaW46IG51bGwsXG4gICAgICAgIFwiYWRkcmVzc1wiOiBhZGRyZXNzPyBhZGRyZXNzOiBudWxsLFxuICAgICAgICBcIm5hbWVcIjogbmFtZT8gbmFtZTogbnVsbCxcbiAgICAgICAgXCJzaWduYXR1cmVcIjogc2lnbmF0dXJlPyBzaWduYXR1cmU6IG51bGxcbiAgICAgIH0pXG4gICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS1cIiwgZGF0YSlcbiAgICAgIGdldEFsbEJhbGFuY2VzKFtdLCB0b2tlbklkLCAodmFsdWVzOiBTZXRTdGF0ZUFjdGlvbjxhbnlbXT4pPT57XG4gICAgICAgIHNldFZhdWx0VmFsdWVzKHZhbHVlcylcbiAgICAgICAgcmV0dXJuIGNiKClcbiAgICAgIH0pXG4gICAgfSkgXG4gIH1cblxuICBjb25zdCBoYW5kbGVBZGRyZXNzU2lnbiA9IGFzeW5jIChjb2luOiBzdHJpbmcpID0+IHtcbiAgICBsaWJyYXJ5XG4gICAgICAuZ2V0U2lnbmVyKGFjY291bnQpXG4gICAgICAuc2lnbk1lc3NhZ2UoJ0FkZHJlc3M6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICAgIGFkZEFkZHJlc3Moc2lnbmF0dXJlLCB0b2tlbklkLCBjb2luLCAocmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgICBnZXRWYXVsdCgpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICB9XG5cbiAgY29uc3QgaGFuZGxlT3duZWRFbWJlZCA9IGFzeW5jICgpID0+IHtcbiAgICBsaWJyYXJ5XG4gICAgICAuZ2V0U2lnbmVyKGFjY291bnQpXG4gICAgICAuc2lnbk1lc3NhZ2UoJ0VtYmVkOiAnICsgdG9rZW5JZClcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBkZWNyeXB0RW1iZWQoc2lnbmF0dXJlLCB0b2tlbklkLCAocmVzdWx0OiB7IG93bmVkSW1hZ2U6IFNldFN0YXRlQWN0aW9uPHN0cmluZz4gfSkgPT4ge1xuICAgICAgICAgIHNldFZhdWx0SW1hZ2UocmVzdWx0Lm93bmVkSW1hZ2UpXG4gICAgICAgIH0pICAgICAgICBcbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVNb3ZlID0gYXN5bmMgKCkgPT4ge1xuICAgIC8vIHNldE1vdmluZyh0cnVlKVxuICAgIGdldE1vdmVhYmxlQ29sbGVjdGlvbnMoKVxuICAgIGNvbnNvbGUubG9nKCctLS0tLS0tLS0tIHF1YWxpZmllZCBtb3ZlJywgcXVhbGlmaWVkQ29sbGVjdGlvbilcbiAgICBmZXRjaChFTUJMRU1fQVBJICsgJy92Mi9tb3ZlLXZhdWx0LycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgXCJjaGFpbklkXCI6IDEsXG4gICAgICAgIFwiZnJvbVwiOiBhY2NvdW50LFxuICAgICAgICBcInNvdXJjZUNvbnRyYWN0XCI6IHtcbiAgICAgICAgICAgIFwiMVwiOiBcIjB4ODJjN2E4ZjcwNzExMGY1ZmJiMTYxODRhNTkzM2U5Zjc4YTM0YzZhYlwiXG4gICAgICAgIH0sXG4gICAgICAgIFwidGFyZ2V0Q29udHJhY3RcIjoge1xuICAgICAgICAgICAgXCIxXCI6IHF1YWxpZmllZENvbGxlY3Rpb25bY2hhaW5JZF0sXG4gICAgICAgICAgICBcIm5hbWVcIjogcXVhbGlmaWVkQ29sbGVjdGlvbi5uYW1lLFxuICAgICAgICAgICAgXCJjaGFpblwiOiBxdWFsaWZpZWRDb2xsZWN0aW9uLmNoYWluXG4gICAgICAgIH0sXG4gICAgICAgIFwidGFyZ2V0QXNzZXRcIjoge1xuICAgICAgICAgICAgXCJuYW1lXCI6IHZhdWx0VmFsdWVzWzBdLm5hbWVcbiAgICAgICAgfSxcbiAgICAgICAgXCJhbW91bnRcIjogMSxcbiAgICAgICAgXCJ0b2tlbklkXCI6IHRva2VuSWRcbiAgICB9KVxuICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlOiBhbnkpIHtcbiAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLSBcIixcIjB4ODJjN2E4ZjcwNzExMGY1ZmJiMTYxODRhNTkzM2U5Zjc4YTM0YzZhYlwiLCBcIjB4RENBOTE0MDkwMThlYTgwQjcxZDIxRTgxOGYwMGU3NjA3Mjk2OTg2MVwiLCBcIjM1MjM0MDFcIixkYXRhLnRva2VuSWQsIGRhdGEubm9uY2UsIGRhdGEuc2lnLCBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgaWYgKGRhdGEuc2lnKSB7XG4gICAgICAgIHZhdWx0SGFuZGxlckNvbnRyYWN0Lm1vdmVWYXVsdChcIjB4ODJjN2E4ZjcwNzExMGY1ZmJiMTYxODRhNTkzM2U5Zjc4YTM0YzZhYlwiLCBxdWFsaWZpZWRDb2xsZWN0aW9uW2NoYWluSWRdLCB0b2tlbklkLCBkYXRhLnRva2VuSWQsIGRhdGEubm9uY2UsIGRhdGEuc2lnLCBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKS50aGVuKChoYXNoOiBhbnkpOiB2b2lkID0+e1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgICBzZXRNb3ZpbmcoZmFsc2UpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUNsYWltID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICh0YXJnZXRDb250cmFjdFtjaGFpbklkXSkge1xuICAgICAgLy8gZW1ibGVtQ29udHJhY3QgPSBnZXRDdXJhdGVkQ29udHJhY3QodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pXG4gICAgICAvLyBsZXQgdG9rZW5JZCA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmdldFRva2VuSWRGb3JTZXJpYWxOdW1iZXIodGFyZ2V0Q29udHJhY3Quc2VyaWFsTnVtYmVyKVxuICAgICAgdmF1bHRIYW5kbGVyQ29udHJhY3QuY2xhaW0odGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0sIHRhcmdldENvbnRyYWN0LnRva2VuSWQpLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldENsYWltaW5nKHRydWUpXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY2xhaW1pbmdcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbmRsZXJDb250cmFjdC5jbGFpbU9uQ2hhaW4odG9rZW5JZCkudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0Q2xhaW1pbmcodHJ1ZSlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjbGFpbWluZ1xuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBwaW5nQ2xhaW1Mb2dzID0gKGNiOiB7ICgpOiB2b2lkOyAoKTogYW55IH0pPT57XG4gICAgZmV0Y2goRU1CTEVNX0FQSSArICcvd2ViMy9zZWxmQ2xhaW1Mb2dzP2NoYWluSWQ9JytjaGFpbklkLnRvU3RyaW5nKCkrJ192ZXJjZWxfbm9fY2FjaGU9MScsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJyxcbiAgICAgICAgY2M6ICd0J1xuICAgICAgfVxuICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgY29uc29sZS5sb2coXCJMb2cgY2hlY2tcIiwgZGF0YSlcbiAgICAgIHJldHVybiBjYigpXG4gICAgfSkgICAgXG4gIH1cblxuICBjb25zdCBzdGFydERlY3J5cHRFZmZlY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKGRlY3J5cHRlZEVmZmVjdFJ1bm5pbmcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKHRydWUpXG4gICAgdmFyIHRoZUxldHRlcnMgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonIC8vWW91IGNhbiBjdXN0b21pemUgd2hhdCBsZXR0ZXJzIGl0IHdpbGwgY3ljbGUgdGhyb3VnaFxuICAgIHZhciBjdG50ID0gJ0RlY3J5cHRpbmcnIC8vIFlvdXIgdGV4dCBnb2VzIGhlcmVcbiAgICB2YXIgc3BlZWQgPSA1IC8vIG1zIHBlciBmcmFtZVxuICAgIHZhciBpbmNyZW1lbnQgPSA4IC8vIGZyYW1lcyBwZXIgc3RlcC4gTXVzdCBiZSA+MlxuXG4gICAgdmFyIGNsZW4gPSBjdG50Lmxlbmd0aFxuICAgIHZhciBzaSA9IDBcbiAgICB2YXIgc3RyaSA9IDBcbiAgICB2YXIgYmxvY2sgPSAnJ1xuICAgIHZhciBmaXhlZCA9ICcnXG4gICAgOyhmdW5jdGlvbiBydXN0bGUoaSkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgtLWkpIHtcbiAgICAgICAgICBydXN0bGUoaSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKGZhbHNlKVxuICAgICAgICB9XG4gICAgICAgIG5leHRGcmFtZShpKVxuICAgICAgICBzaSA9IHNpICsgMVxuICAgICAgfSwgc3BlZWQpXG4gICAgfSkoY2xlbiAqIGluY3JlbWVudCArIDEpXG4gICAgZnVuY3Rpb24gbmV4dEZyYW1lKHBvczogbnVtYmVyKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsZW4gLSBzdHJpOyBpKyspIHtcbiAgICAgICAgLy9SYW5kb20gbnVtYmVyXG4gICAgICAgIHZhciBudW0gPSBNYXRoLmZsb29yKHRoZUxldHRlcnMubGVuZ3RoICogTWF0aC5yYW5kb20oKSlcbiAgICAgICAgLy9HZXQgcmFuZG9tIGxldHRlclxuICAgICAgICB2YXIgbGV0dGVyID0gdGhlTGV0dGVycy5jaGFyQXQobnVtKVxuICAgICAgICBibG9jayA9IGJsb2NrICsgbGV0dGVyXG4gICAgICB9XG4gICAgICBpZiAoc2kgPT0gaW5jcmVtZW50IC0gMSkge1xuICAgICAgICBzdHJpKytcbiAgICAgIH1cbiAgICAgIGlmIChzaSA9PSBpbmNyZW1lbnQpIHtcbiAgICAgICAgLy8gQWRkIGEgbGV0dGVyO1xuICAgICAgICAvLyBldmVyeSBzcGVlZCoxMCBtc1xuICAgICAgICBmaXhlZCA9IGZpeGVkICsgY3RudC5jaGFyQXQoc3RyaSAtIDEpXG4gICAgICAgIHNpID0gMFxuICAgICAgfVxuICAgICAgLy8gJChcIiNvdXRwdXRcIikuaHRtbChmaXhlZCArIGJsb2NrKTtcbiAgICAgIHNldERlY3J5cHRlZEVmZmVjdChmaXhlZCArIGJsb2NrKVxuICAgICAgYmxvY2sgPSAnJ1xuICAgIH1cbiAgfVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJy0tLS0nKVxuICAgIGdldFZhdWx0KClcbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAoYWNjb3VudCAmJiBjaGFpbklkICYmIHZhdWx0Q2hhaW5JZCAmJiBjaGFpbklkID09IHZhdWx0Q2hhaW5JZCkgfHwgKChxdWVyeS5ub0xheW91dCAmJiBxdWVyeS5ub0xheW91dCA9PSAndHJ1ZScpIHx8IChxdWVyeS5zbGlkZXNob3dPbmx5ICYmIHF1ZXJ5LnNsaWRlc2hvd09ubHkgPT0gJ3RydWUnKSkgPyBnZXRDb250cmFjdFN0YXRlcygpIDogbnVsbFxuICB9KVxuXG4gIGZ1bmN0aW9uIHNwbGl0RGVzY3JpcHRpb24od29yZHM6IHN0cmluZykge1xuICAgIHZhciBkZXNjID0gd29yZHM/IHdvcmRzLnNwbGl0KCdcXG5cXG5cXG5cXG4nKTogW1wiIFwiXVxuICAgIHJldHVybiBkZXNjWzBdLnRyaW0oKVxuICB9XG5cbiAgZnVuY3Rpb24gdHJ5RGVjcnlwdChrZXk6IFNldFN0YXRlQWN0aW9uPHN0cmluZz4pIHtcbiAgICBpZiAoZGVjcnlwdFBhc3N3b3JkKSB7XG4gICAgICBrZXkgPSBkZWNyeXB0UGFzc3dvcmRcbiAgICB9XG4gICAgc3RhcnREZWNyeXB0RWZmZWN0KClcbiAgICBjb25zb2xlLmxvZyh2YXVsdEFkZHJlc3NlcylcbiAgICBsZXQgY2lwaGVydGV4dCA9IHZhdWx0QWRkcmVzc2VzWzBdLmFkZHJlc3MucmVwbGFjZSgncHJpdmF0ZTonLCAnJylcbiAgICB0cnkge1xuICAgICAgdmFyIGJ5dGVzID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoY2lwaGVydGV4dCwga2V5KVxuICAgICAgSlNPTi5wYXJzZShieXRlcy50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCkpXG4gICAgICBzZXRWYXVsdFByaXZhY3koZmFsc2UpXG4gICAgICBzZXREZWNyeXB0UGFzc3dvcmQoa2V5KVxuICAgICAgc2V0VmF1bHRBZGRyZXNzZXMoZGVjcnlwdEFkZHJlc3NlcyhrZXkpKVxuICAgICAgbGV0IGV0aEFkZHJlc3MgPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtyZXR1cm4gaXRlbS5jb2luID09PSAnRVRIJ30pWzBdLmFkZHJlc3NcbiAgICAgIGxldCBidGNBZGRyZXNzID0gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKChpdGVtKSA9PiB7cmV0dXJuIGl0ZW0uY29pbiA9PT0gJ0JUQyd9KVswXS5hZGRyZXNzXG4gICAgICBjb25zb2xlLmxvZyhcIlNVQ0NFU1NcIiwgdmF1bHRBZGRyZXNzZXMpXG4gICAgICBnZXRBbGxCYWxhbmNlc0J5QWRkcmVzcyhbXSwgZXRoQWRkcmVzcywgYnRjQWRkcmVzcywgKHZhbHVlczogU2V0U3RhdGVBY3Rpb248YW55W10+KT0+e1xuICAgICAgICBzZXRWYXVsdFZhbHVlcyh2YWx1ZXMpXG4gICAgICB9KVxuICAgICAgLy8gZ2V0RXRoQmFsYW5jZXMoXG4gICAgICAvLyAgIHZhdWx0QWRkcmVzc2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgLy8gICAgIHJldHVybiBpdGVtLmNvaW4gPT09ICdFVEgnXG4gICAgICAvLyAgIH0pWzBdLmFkZHJlc3MsXG4gICAgICAvLyAgICh2YWx1ZXMpID0+IHtcbiAgICAgIC8vICAgICBnZXRCdGNCYWxhbmNlKFxuICAgICAgLy8gICAgICAgdmFsdWVzLFxuICAgICAgLy8gICAgICAgdmF1bHRBZGRyZXNzZXMuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAvLyAgICAgICAgIHJldHVybiBpdGVtLmNvaW4gPT09ICdCVEMnXG4gICAgICAvLyAgICAgICB9KVswXS5hZGRyZXNzLFxuICAgICAgLy8gICAgICAgKF92YWx1ZXMpID0+IHtcbiAgICAgIC8vICAgICAgICAgLy8gY29uc29sZS5sb2coXCJIYXZlIGZ1Y2tpbmcgdmFsdWVzXCIsIHZhbHVlcylcbiAgICAgIC8vICAgICAgICAgZ2V0TmZ0QmFsYW5jZShcbiAgICAgIC8vICAgICAgICAgICBfdmFsdWVzLFxuICAgICAgLy8gICAgICAgICAgIHZhdWx0QWRkcmVzc2VzLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgLy8gICAgICAgICAgICAgcmV0dXJuIGl0ZW0uY29pbiA9PT0gJ0VUSCdcbiAgICAgIC8vICAgICAgICAgICB9KVswXS5hZGRyZXNzLFxuICAgICAgLy8gICAgICAgICAgIChfX3ZhbHVlcykgPT4ge1xuICAgICAgLy8gICAgICAgICAgICAgc2V0VmF1bHRWYWx1ZXMoX192YWx1ZXMuY29uY2F0KHZhdWx0VmFsdWVzKSlcbiAgICAgIC8vICAgICAgICAgICB9XG4gICAgICAvLyAgICAgICAgIClcbiAgICAgIC8vICAgICAgIH1cbiAgICAgIC8vICAgICApXG4gICAgICAvLyAgIH1cbiAgICAgIC8vIClcbiAgICB9IGNhdGNoIChlcnIpIHtjb25zb2xlLmxvZygnV1RGJywgZXJyKX1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEFkZHJlc3NlcygpIHtcbiAgICBjb25zb2xlLmxvZyhcIkdldHRpbmcgQWRkcmVzc2VzXCIpXG4gICAgcmV0dXJuIHZhdWx0QWRkcmVzc2VzXG4gIH1cblxuICBmdW5jdGlvbiBkZWNyeXB0QWRkcmVzc2VzKGtleTogYW55KSB7XG4gICAgdmF1bHRBZGRyZXNzZXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgaWYgKGl0ZW0uYWRkcmVzcy5pbmNsdWRlcygncHJpdmF0ZScpKSB7XG4gICAgICAgIGxldCBjaXBoZXJUZXh0ID0gaXRlbS5hZGRyZXNzLnJlcGxhY2UoJ3ByaXZhdGU6JywgJycpXG4gICAgICAgIGl0ZW0uYWRkcmVzcyA9IGRlY3J5cHQoY2lwaGVyVGV4dCwga2V5KVxuICAgICAgfSAgICAgIFxuICAgIH0pXG4gICAgcmV0dXJuIHZhdWx0QWRkcmVzc2VzXG4gIH1cblxuICBmdW5jdGlvbiBkZWNyeXB0KGNpcGhlclRleHQ6IGFueSwga2V5OiBhbnkpIHtcbiAgICB2YXIgYnl0ZXMgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdChjaXBoZXJUZXh0LCBrZXkpXG4gICAgdmFyIGRlY3J5cHRlZERhdGEgPSBKU09OLnBhcnNlKGJ5dGVzLnRvU3RyaW5nKENyeXB0b0pTLmVuYy5VdGY4KSlcbiAgICByZXR1cm4gZGVjcnlwdGVkRGF0YVxuICB9XG5cbiAgZnVuY3Rpb24gdmlzaXRPcGVuU2VhTGluaygpIHtcbiAgICB3aW5kb3cub3BlbihcbiAgICAgICdodHRwczovLycgK1xuICAgICAgKHZhdWx0Q2hhaW5JZCA9PSA0ID8gJ3JpbmtlYnkuJyA6ICcnKSArXG4gICAgICAnb3BlbnNlYS5pby9hc3NldHMvJyArIFxuICAgICAgKHZhdWx0Q2hhaW5JZCA9PSAxMzcgPyAnbWF0aWMvJyA6ICcnKSArXG4gICAgICAoYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzPyBhbHRlcm5hdGVDb250cmFjdEFkZHJlc3MgOiBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFt2YXVsdENoYWluSWRdKSArXG4gICAgICAnLycgK1xuICAgICAgdG9rZW5JZCBcbiAgICAsICdfYmxhbmsnKVxuICB9XG5cbiAgZnVuY3Rpb24gdmlzaXRMb29rc1JhcmVMaW5rKCkge1xuICAgIHdpbmRvdy5vcGVuKFxuICAgICAgJ2h0dHBzOi8vJyArXG4gICAgICAodmF1bHRDaGFpbklkID09IDQgPyAncmlua2VieS4nIDogJycpICtcbiAgICAgICdsb29rc3JhcmUub3JnL2NvbGxlY3Rpb25zLycgKyBcbiAgICAgICh2YXVsdENoYWluSWQgPT0gMTM3ID8gJ21hdGljLycgOiAnJykgK1xuICAgICAgKGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcz8gYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzIDogY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbdmF1bHRDaGFpbklkXSkgK1xuICAgICAgJy8nICtcbiAgICAgIHRva2VuSWQgXG4gICAgLCAnX2JsYW5rJylcbiAgfVxuXG4gIHsgYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzP1xuICAgIGVtYmxlbUNvbnRyYWN0ID0gZ2V0VmF1bHRDb250cmFjdChhbHRlcm5hdGVDb250cmFjdEFkZHJlc3M/IGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzczogbnVsbClcbiAgOiBudWxsfVxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICAgPEhlYWQ+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOmNhcmRcIiBjb250ZW50PVwic3VtbWFyeV9sYXJnZV9pbWFnZVwiIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOnNpdGVcIiBjb250ZW50PVwiRW1ibGVtLkZpbmFuY2VcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjp0aXRsZVwiIGNvbnRlbnQ9e3ZhdWx0TmFtZX0gLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6ZGVzY3JpcHRpb25cIiBjb250ZW50PXtzcGxpdERlc2NyaXB0aW9uKHZhdWx0RGVzYyl9IC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOmltYWdlXCIgY29udGVudD17dmF1bHRJbWFnZX0gLz5cbiAgICAgICAgPHNjcmlwdFxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgICAgICAgIC8vICQoXCIuTkZUXCIpLnRpbHQoeyAgICBcbiAgICAgICAgICAgICAgLy8gICAgIG1heFRpbHQ6IDNcbiAgICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgICAgICQoXCIuTkZUXCIpLnRyaWdnZXIoJ21vdXNlZW50ZXInKTtcbiAgICAgICAgICAgICAgJChcIi5ORlRcIikudHJpZ2dlcignbW91c2VjbGljaycpLCAnLk5GVCc7XG4gICAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRhcmtNb2RlXCIpID09ICdmYWxzZScpIHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImRhcmtNb2RlXCIsXCJ0cnVlXCIpOyBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24uaHJlZlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGAsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8QWRkck1vZGFsIGlzT3Blbj17aXNPcGVuQWRkck1vZGFsfSBvbkNsb3NlPXtvbkNsb3NlQWRkck1vZGFsfSBhZGRyQ29pbj17Y3VyckNvaW59IGFkZHJBZGRyPXtjdXJyQWRkcn0gLz5cblxuICAgICAgPEtleXNNb2RhbFxuICAgICAgICBpc09wZW49e2lzT3BlbktleXNNb2RhbH1cbiAgICAgICAgb25DbG9zZT17b25DbG9zZUtleXNNb2RhbH1cbiAgICAgICAgbW5lbW9uaWM9e21uZW1vbmljfVxuICAgICAgICBwcml2S2V5QlRDPXtwcml2S2V5QlRDfVxuICAgICAgICBwcml2S2V5RVRIPXtwcml2S2V5RVRIfVxuICAgICAgICBwcml2VmFsdWVzPXtwcml2VmFsdWVzfVxuICAgICAgICBhZGRyZXNzZXM9e3ZhdWx0QWRkcmVzc2VzfVxuICAgICAgLz5cbiAgICAgIHtzaG93T2ZmZXIgPyAoXG4gICAgICAgIDxPZmZlck1vZGFsXG4gICAgICAgICAgaXNPcGVuPXtpc09wZW5PZmZlck1vZGFsfVxuICAgICAgICAgIG9uQ2xvc2U9e29uQ2xvc2VPZmZlck1vZGFsfVxuICAgICAgICAgIHRva2VuSWQ9e3Rva2VuSWR9XG4gICAgICAgICAgbWluZT17bWluZX1cbiAgICAgICAgLz5cbiAgICAgICkgOiBudWxsfVxuICAgICAgXG5cbiAgICAgIDxMb2FkZXIgbG9hZGVkPXtzdGF0ZS5sb2FkZWR9PlxuICAgICAgICA8Qm94IGhlaWdodD1cIjQwcHhcIj48L0JveD5cbiAgICAgICAge2xvYWRpbmdBcGkgPyA8UmVmcmVzaGluZyAvPiA6ICcnfVxuICAgICAgICB7IWludmFsaWRWYXVsdCAmJiAhc2xpZGVzaG93T25seSA/IChcbiAgICAgICAgICAgIDxGbGV4IHdpZHRoPVwiZnVsbFwiIGFsaWduPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIk5GVFwiIFxuICAgICAgICAgICAgICAgIG1heFc9XCJzbVwiXG4gICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg9XCIxcHhcIlxuICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yPXt2YXVsdENoYWluSWQgIT0gY2hhaW5JZCA/ICdvcmFuZ2UuNTAwJyA6IHN0YXR1cyA9PSAnY2xhaW1lZCcgPyAnZ3JlZW4uNTAwJyA6IG51bGx9XG4gICAgICAgICAgICAgICAgcm91bmRlZD1cImxnXCJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdz1cImhpZGRlblwiXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgbWluVz17MzkwfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgbXQ9XCIxXCJcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiXG4gICAgICAgICAgICAgICAgICBhcz1cImgzXCJcbiAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ9XCJ0aWdodFwiXG4gICAgICAgICAgICAgICAgICBwPXsyfVxuICAgICAgICAgICAgICAgICAgdGV4dEFsaWduPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm09XCJ1cHBlcmNhc2VcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICBjb2xvcj1cImJsdWUuNTAwXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBWYXVsdCBOZXR3b3JrOiB7Q0hBSU5fSURfTkFNRVNbdmF1bHRDaGFpbklkXX1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICB7Lyoge2lzQ3Jvd2RTYWxlID8gKFxuICAgICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgbXQ9XCIxXCJcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiXG4gICAgICAgICAgICAgICAgICBhcz1cImgzXCJcbiAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ9XCJ0aWdodFwiXG4gICAgICAgICAgICAgICAgICBwPXsyfVxuICAgICAgICAgICAgICAgICAgdGV4dEFsaWduPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm09XCJ1cHBlcmNhc2VcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICBjb2xvcj1cInJlZC41MDBcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIFBhcnQgb2YgYSBjcm93ZHNhbGUsIHNlYWxlZCBmb3IgMSB3ZWVrLlxuICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICkgOiBudWxsfSAqL31cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICBtdD1cIjFcIlxuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodD1cInNlbWlib2xkXCJcbiAgICAgICAgICAgICAgICAgIGFzPVwiaDNcIlxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodD1cInRpZ2h0XCJcbiAgICAgICAgICAgICAgICAgIHA9ezJ9XG4gICAgICAgICAgICAgICAgICB0ZXh0QWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgLy8gdGV4dFRyYW5zZm9ybT1cInVwcGVyY2FzZVwiXG4gICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dmF1bHROYW1lfVxuICAgICAgICAgICAgICAgICAgeyF2YXVsdFByaXZhY3kgJiYgdmF1bHRUb3RhbFZhbHVlID4gMCA/ICc6IH4kJyArIHZhdWx0VG90YWxWYWx1ZS50b0xvY2FsZVN0cmluZygpIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICA8U3RhY2sgY2xhc3NOYW1lPVwiTkZULWNvbnRlbnRcIiBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgeyB2YXVsdFZhbHVlcy5sZW5ndGggJiYgdmF1bHRWYWx1ZXMuZmlsdGVyKGl0ZW09PiB7cmV0dXJuIGl0ZW0udHlwZSA9PSBcIm5mdFwifSkubGVuZ3RoID4gMCA/IChcbiAgICAgICAgICAgICAgICAgICAgICA8TkZUU2xpZGVzaG93IG5hbWU9e3ZhdWx0TmFtZX0gaW1hZ2U9e3ZhdWx0SW1hZ2V9IGl0ZW1zPXt2YXVsdFZhbHVlcy5tYXAodmFsdWU9PntyZXR1cm4ge2ltYWdlOiB2YWx1ZS5pbWFnZSwgZGVzY3JpcHRpb246IHZhbHVlLmRlc2NyaXB0aW9uLCBuYW1lOiB2YWx1ZS5uYW1lLCB0eXBlOiB2YWx1ZS50eXBlfX0pfSBwcm9wZXJ0aWVzID0ge3snZHVyYXRpb24nOiAzMDAwLCBjYW5Td2lwZTogZmFsc2V9fS8+XG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgPEVtYmVkIGNsYXNzTmFtZT1cImQtYmxvY2sgdy0xMDAgTkZULWltYWdlXCIgdXJsPXt2YXVsdEltYWdlfS8+XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHttaW5lICYmIG93bmVkSW1hZ2UgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4ge2hhbmRsZU93bmVkRW1iZWQoKX19PihPV05FRCkgU2hvdyBGdWxsIEVtYmVkPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICApOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgPFN0YWNrIGFsaWduPVwiY2VudGVyXCIgbWF4V2lkdGg9XCI0MDBweFwiPlxuICAgICAgICAgICAgICAgICAgPEJveCBtdD1cIjJcIiBtbD1cIjRcIiBsaW5lSGVpZ2h0PVwidGlnaHRcIiBtYXhXaWR0aD1cIjQwMHB4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxTdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBmb250U2l6ZT1cInhzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e1wiLi92YXVsdHM/YWRkcmVzcz1cIitvd25lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIE93bmVyOiB7b3duZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBvdmVyZmxvd1dyYXA9XCJhbnl3aGVyZVwiIG10PXsyfSBhcz1cImg0XCIgbWw9XCI0XCIgbXI9XCI0XCIgZm9udFNpemU9XCJ4c1wiIGZvbnRTdHlsZT1cIml0YWxpY1wiIGNsYXNzTmFtZT1cIm1kXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93biBwbHVnaW5zPXtbZ2ZtXX0gY2hpbGRyZW49e3NwbGl0RGVzY3JpcHRpb24odmF1bHREZXNjKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+ICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDwvQm94PiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgICAgICAgICA8Qm94IHA9XCI2XCI+XG4gICAgICAgICAgICAgICAgPFRhYnMgaXNGaXR0ZWQgdmFyaWFudD0nZW5jbG9zZWQnPlxuICAgICAgICAgICAgICAgICAgPFRhYkxpc3QgbWI9JzFlbSc+XG4gICAgICAgICAgICAgICAgICAgIDxUYWI+QmFsYW5jZXM8L1RhYj5cbiAgICAgICAgICAgICAgICAgICAgPFRhYj5BdHRyaWJ1dGVzPC9UYWI+XG4gICAgICAgICAgICAgICAgICA8L1RhYkxpc3Q+XG4gICAgICAgICAgICAgICAgICA8VGFiUGFuZWxzPlxuICAgICAgICAgICAgICAgICAgICA8VGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgICAge3ZhdWx0UHJpdmFjeSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggbWI9ezV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBwYj17Mn0gY29sb3I9e2RlY3J5cHRlZEVmZmVjdCA/ICdncmVlbi41MDAnIDogbnVsbH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2RlY3J5cHRlZEVmZmVjdCA/IGRlY3J5cHRlZEVmZmVjdCA6ICdDb250ZW50cyBoaWRkZW4uIEVudGVyIHBhc3N3b3JkIHRvIHVubG9jay4nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJ2YXVsdC1wYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB0cnlEZWNyeXB0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwicGFzc3dvcmQtaGVscGVyLXRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBiYWNrZ3JvdW5kQ29sb3I9e2NvbG9yTW9kZSA9PSBcImxpZ2h0XCI/IFwiZ3JheS4xMDBcIjogXCJncmF5LjcwMFwifSBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBjbGFzc05hbWU9XCJjb2luLWJhbGFuY2UtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Qm94IGNvbG9yPVwiZ3JheS41MDBcIiBsZXR0ZXJTcGFjaW5nPVwid2lkZVwiIGZvbnRTaXplPVwic21cIiBtbD1cIjJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz1cImg0XCIgbXQ9ezJ9IGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3VycmVudCBDb250ZW50czogIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRBbGxCYWxhbmNlc0xpdmUoW10sIHRva2VuSWQsICh2KT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldExvYWRlZFZhbHVlcyhmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRWYXVsdFZhbHVlcyh2KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+IFtSZWZyZXNoIEJhbGFuY2VzXTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz1cInBcIiBjb2xvcj17Y29sb3JNb2RlPT1cImRhcmtcIj8gXCJsaWdodGdyZWVuXCI6IFwiZm9yZXN0Z3JlZW5cIn0+JHtOdW1iZXIodmF1bHRUb3RhbFZhbHVlLnRvRml4ZWQoNCkpLnRvTG9jYWxlU3RyaW5nKCl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdmF1bHRWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRWYWx1ZXMubWFwKChjb2luKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3RhY2s+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvaW5CYWxhbmNlIGNvbG9yTW9kZT17Y29sb3JNb2RlfSBjb2luPXtjb2lufSBtaW5lPXsoc3RhdHVzID09PSAnY2xhaW1lZCcgJiYgY2xhaW1lZEJ5ID09PSBhY2NvdW50KSB8fCBtaW5lfSBvblJlbmV3PXtvblJlbmV3fSBoaWRlQXNzZXQ9e2hhbmRsZUhpZGVBc3NldH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6ICg8UmVmcmVzaGluZyAvPiApIH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdERhdGFWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHREYXRhVmFsdWVzLm1hcCgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkRhdGE6IHtkYXRhLmF0dHJpYnV0ZV9rZXl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAhdmF1bHREYXRhVmFsdWVzLmxlbmd0aCAmJiAhdmF1bHRWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+Tm90aGluZyBpbiBoZXJlISBGaWxsICdlciB1cCE8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lbD5cbiAgICAgICAgICAgICAgICAgICAgICA8QXR0cmlidXRlcyBjb2xvck1vZGU9e2NvbG9yTW9kZX0gYXR0cmlidXRlcz17YXR0cmlidXRlc30vPlxuICAgICAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWxzPlxuICAgICAgICAgICAgICAgICAgPC9UYWJzPlxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICB7IXZhdWx0UHJpdmFjeSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+RGVwb3NpdCBBZGRyZXNzZXM8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxGbGV4IHc9XCIzNDBweFwiIGp1c3RpZnk9XCJjZW50ZXJcIiBmbGV4V3JhcD1cIndyYXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dmF1bHRBZGRyZXNzZXMubWFwKChhZGRyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWRkcmVzc19uZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtbD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodD1cIjEwMCAhaW1wb3J0YW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2FkZHIuYWRkcmVzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyQ29pbihhZGRyLmNvaW4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyQWRkcihhZGRyLmFkZHJlc3MpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbk9wZW5BZGRyTW9kYWwoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YWRkci5jb2luID09ICdFVEgnID8gYWRkci5jb2luICsgJy9FVk0nIDogYWRkci5jb2luID09ICdCVEMnID8gYWRkci5jb2luICsgJy9YQ1AvT01OSScgOiBhZGRyLmNvaW4gPT0gJ0JDSCcgPyBhZGRyLmNvaW4gKyAnL1NMUCc6IGFkZHIuY29pbiA9PSAnVEFQJz8gJ1RBUFJPT1QnOiBhZGRyLmNvaW59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyhtaW5lIHx8IHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiB2YXVsdEFkZHJlc3Nlcy5sZW5ndGggPCAxMiA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25NYW5hZ2VBZGRyZXNzVG9nZ2xlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5NYW5hZ2UgQWRkcmVzc2VzPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZsZXggdz1cIjM0MHB4XCIganVzdGlmeT1cImNlbnRlclwiIGZsZXhXcmFwPVwid3JhcFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNlIGlzT3Blbj17aXNNYW5hZ2VBZGRyZXNzT3Blbn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ0RPR0UnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdET0dFJykgfX0+QWRkIERPR0U8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdER0InKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdER0InKSB9fT5BZGQgRGlnaWJ5dGU8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdOTUMnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdOTUMnKSB9fT5BZGQgTmFtZWNvaW48L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdMVEMnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdMVEMnKSB9fT5BZGQgTGl0ZWNvaW48L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdNT05BJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignTU9OQScpIH19PkFkZCBNb25hPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnVEVaT1MnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdURVpPUycpIH19PkFkZCBUZXpvczwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ1NPTEFOQScpID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG1yPXsyfSBtdD17Mn0gb25DbGljaz17KCk9PnsgaGFuZGxlQWRkcmVzc1NpZ24oJ1NPTEFOQScpIH19PkFkZCBTb2xhbmE8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdTVFgnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdTVFgnKSB9fT5BZGQgU3RhY2tzPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnVEFQJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignVEFQJykgfX0+QWRkIFRhcHJvb3Q8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db2xsYXBzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiBsaXZlICYmICh2YXVsdENoYWluSWQgPT09IDEgfHwgdmF1bHRDaGFpbklkID09PSA0IHx8IHZhdWx0Q2hhaW5JZCA9PT0gMTM3ICk/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8U3RhY2sgZD1cImZsZXhcIiB3aWR0aD1cIjEwMCVcIj4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjUwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG09ezV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt2aXNpdE9wZW5TZWFMaW5rKCl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBPcGVuc2VhXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiNTAlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbT17NX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge3Zpc2l0TG9va3NSYXJlTGluaygpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgTG9va3NSYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93T2ZmZXI/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJcIiBvbkNsaWNrPXsoKSA9PiB7IG9uT3Blbk9mZmVyTW9kYWwoKSB9fT57bWluZT8gKCdNeSBPZmZlcnMnKSA6ICgnTWFrZSBhbiBPZmZlcicpfSAoTkZUwrJORlQpPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8L1N0YWNrPiAqL31cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHtpc0NvdmFsQXBwcm92ZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxTdGFjayBkaXJlY3Rpb249XCJyb3dcIiBhbGlnbj1cImZsZXgtc3RhcnRcIiBzcGFjaW5nPVwiMHJlbVwiIGZsZXhXcmFwPVwid3JhcFwiIHNob3VsZFdyYXBDaGlsZHJlbj5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IG1heFc9XCJzbVwiIGJvcmRlcldpZHRoPVwiMXB4XCIgcD17MX0gcm91bmRlZD1cImxnXCIgb3ZlcmZsb3c9XCJoaWRkZW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkNyZWF0aW5nIGEgdmF1bHQgc3BlbmRzIHtwcmljZSAqIE1hdGgucG93KDEwLCAtZGVjaW1hbHMpfSBDb3ZhbCBmcm9tIHlvdXIgd2FsbGV0PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIDxUZXh0PjQ4IGhvdXIgRnJlZSBtaW50aW5nIC0gc3BvbnNvcmVkIGJ5IHRoZSB0ZWFtIGF0IE1lZ2FQdW5rcyA8TGluayBocmVmPVwiaHR0cHM6Ly9tZWdhcHVua3MuY29tXCI+aHR0cHM6Ly9tZWdhcHVua3MuY29tPC9MaW5rPjwvVGV4dD4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAge21pbmUgJiYgIWFwcHJvdmVkID8gKDw+XG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVBcHByb3ZlRm9yYWxsKCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0+IEFwcHJvdmUgTWludGluZzwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgIDwvPikgOiBudWxsIH1cblxuICAgICAgICAgICAgICAgICAgeyhzaG93VHJhbnNmZXJQYXNzd29yZCB8fCBtaW50UGFzc3dvcmQpICYmIGFjY2VwdGFibGUgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2xvY2F0aW9uLnByb3RvY29sICsnLy8nKyBsb2NhdGlvbi5ob3N0ICsgJy9uZnQ/aWQ9JyArIHRva2VuSWQgKyAnJmtleT0nICsgKHRyYW5zZmVyUGFzc3dvcmQgfHwgbWludFBhc3N3b3JkKX0+Q29weSBHaWZ0IExpbms8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD5QYXNzd29yZDogeyh0cmFuc2ZlclBhc3N3b3JkIHx8IG1pbnRQYXNzd29yZCl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAge2FjY2VwdGFibGUgJiYgY2xhaW1lZEJ5ICE9PSBhY2NvdW50ID8gKFxuICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIG10PXsyfSB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKT0+e2ZpcmVNZXRhTWFzaygpfX0+QWNjZXB0PC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICBtdD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBpZD1cIm1pbnRQYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5MZW5ndGg9ezN9XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezIwMH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXttaW50UGFzc3dvcmQgfHwgJyd9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2dycnInLCBlLnRhcmdldC52YWx1ZSwgbWludFBhc3N3b3JkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRNaW50UGFzc3dvcmQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0NvbXBsZXRlPVwib2ZmXCJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICB7bWluZSAmJiBzaG93TW92ZSAmJiBxdWFsaWZpZWRDb2xsZWN0aW9uPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1vdmUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRGlzYWJsZWQ9e21vdmluZ31cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bW92aW5nID8gJ01vdmluZyAuLi4nIDogJ01vdmUgVmF1bHQnfVxuICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiBhY2NvdW50ICYmIHZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiBtaW5lICYmICFzZWFsZWQgJiYgYXBwcm92ZWQgJiYgbGl2ZSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUNsYWltKClcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBpc0Rpc2FibGVkPXtjbGFpbWluZ31cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Y2xhaW1pbmcgPyAnQ2xhaW1pbmcgLi4uJyA6ICdVbmxvY2sgVmF1bHQgKEdldCBQcml2YXRlIEtleXMpJ31cbiAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogKHZhdWx0Q2hhaW5JZCA9PT0gY2hhaW5JZCAmJiAoc3RhdHVzID09ICdjbGFpbWVkJyAmJiBjbGFpbWVkQnkgPT09IGFjY291bnQpIHx8IG1pbmVVbk1pbnRlZCAmJiBzdGF0dXMgIT0gXCJjbGFpbWVkXCIpID8gKFxuICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXtoYW5kbGVTaWdufT5cbiAgICAgICAgICAgICAgICAgICAgICAgIEdldCBLZXlzXG4gICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshbGl2ZSAmJiBtaW5lICYmIHZhdWx0Q2hhaW5JZCA9PSBjaGFpbklkICYmIHN0YXR1cyAhPT0gJ2NsYWltZWQnICYmICFzaG93TWFraW5nVmF1bHRNc2cgJiYgYXBwcm92ZWQgJiYgaXNDb3ZhbEFwcHJvdmVkID8gKFxuICAgICAgICAgICAgICAgICAgICA8PiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gd2lkdGg9XCIxMDAlXCIgbXQ9ezV9IGlzRGlzYWJsZWQ9eyF2YXVsdFByaXZhY3kgJiYgdmF1bHRWYWx1ZXMubGVuZ3RoIDwgMX0gb25DbGljaz17bGF6eU1pbnR9PnshdmF1bHRQcml2YWN5ICYmIHZhdWx0VmFsdWVzLmxlbmd0aCA8IDE/ICdQbGVhc2UgbG9hZCB0aGUgdmF1bHQgdG8gbWludCc6ICdNaW50IFZhdWx0J308L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICB7IWxpdmUgJiYgbWluZSAmJiB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCAmJiBzdGF0dXMgIT09ICdjbGFpbWVkJyAmJiAhc2hvd01ha2luZ1ZhdWx0TXNnICYmIGFwcHJvdmVkICYmICFpc0NvdmFsQXBwcm92ZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+ICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBtdD17NX0gb25DbGljaz17YXBwcm92ZUNvdmFsRmxvd30+QXBwcm92ZSBTcGVuZGluZyBDb3ZhbDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgIHsoIWxpdmUgfHwgc3RhdHVzID09ICdjbGFpbWVkJykgJiYgdG8gPT0gYWNjb3VudCAmJiB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCAmJiAhc2hvd01ha2luZ1ZhdWx0TXNnICYmIHZhdWx0VmFsdWVzLmxlbmd0aCA8IDEgPyAoXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uIHdpZHRoPVwiMTAwJVwiIG10PXs1fSBvbkNsaWNrPXtkZWxldGVWYXVsdH0+RGVsZXRlIFZhdWx0IDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgIHtzaG93VmVyaWZ5aW5nU2lnbmF0dXJlID8gKFxuICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBpc0Rpc2FibGVkIHR5cGU9XCJzdWJtaXRcIj5cbiAgICAgICAgICAgICAgICAgICAgVmVyaWZ5aW5nIFNpZ25hdHVyZSAuLi5cbiAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgIHtzaG93TWFraW5nVmF1bHRNc2cgPyAoXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uIGlzRGlzYWJsZWQgdHlwZT1cInN1Ym1pdFwiPlxuICAgICAgICAgICAgICAgICAgICBNaW50aW5nIFZhdWx0IC4uLlxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAge3ZhdWx0SVBGUyA/IChcbiAgICAgICAgICAgICAgICAgIC8vIDxTdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgPEhTdGFjayBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIHRhcmdldD0nbmV3JyBtYj17Mn0gbWw9ezM1fSBocmVmPXsnaHR0cHM6Ly9nYXRld2F5LmlwZnMuaW8vaXBmcy8nK3ZhdWx0SVBGU30gaXNFeHRlcm5hbD5WaWV3IE1ldGFkYXRhIG9uIElQRlMgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgIHt2YXVsdEltYWdlSVBGUz8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgbWI9ezJ9IGhyZWY9eydodHRwczovL2dhdGV3YXkuaXBmcy5pby9pcGZzLycrdmF1bHRJbWFnZUlQRlN9IGlzRXh0ZXJuYWw+VmlldyBJbWFnZSBvbiBJUEZTIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH0gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvSFN0YWNrPiBcbiAgICAgICAgICAgICAgICAgIC8vIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgIHtzZWFsZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBtYj17Mn0gbWw9ezM1fSBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dD4qVGhpcyB2YXVsdCBpcyBzZWFsZWQgZm9yZXZlci48L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgPFN0YWNrIGRpcmVjdGlvbj1cImNvbHVtblwiIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICB7c3RhdHVzID09ICdjbGFpbWVkJyA/IDxUZXh0IGNvbG9yPVwiZ3JlZW4uNTAwXCI+Q0xBSU1FRDwvVGV4dD4gOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAge2hhc2ggPyAoXG4gICAgICAgICAgICAgICAgICA8QWxlcnQgc3RhdHVzPVwiaW5mb1wiPlxuICAgICAgICAgICAgICAgICAgICA8QWxlcnRJY29uIC8+XG4gICAgICAgICAgICAgICAgICAgIHsgYWNjZXB0aW5nID8gXCJBY2NlcHRpbmcgWW91ciBHaWZ0IFZhdWx0XCIgOiBjbGFpbWluZyA/IFwiQ2xhaW1pbmcgeW91ciBWYXVsdCAuLi5cIiA6IGFwcHJvdmluZz8gXCJIYW5kbGluZyBBcHByb3ZhbCBGbG93IC4uLlwiIDogdHJhbnNmZXJpbmc/IFwiVHJhbnNmZXJpbmcgVmF1bHQgLi4uXCI6ICBtaW50aW5nPyBcIk1pbnRpbmcgVmF1bHRcIiA6IFwiR2VuZXJhdGluZyBHaWZ0IExpbmsgLi4uXCJ9XG4gICAgICAgICAgICAgICAgICA8L0FsZXJ0PlxuICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgKSA6IHZhdWx0VmFsdWVzLmxlbmd0aCA+IDAgJiYgc2xpZGVzaG93T25seT8gKFxuICAgICAgICAgIDxTdGFjayBjbGFzc05hbWU9XCJORlQtY29udGVudFwiIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICB7IHZhdWx0VmFsdWVzLmxlbmd0aCAmJiB2YXVsdFZhbHVlcy5maWx0ZXIoaXRlbT0+IHtyZXR1cm4gaXRlbS50eXBlID09IFwibmZ0XCJ9KS5sZW5ndGggPiAwID8gKFxuICAgICAgICAgICAgICAgIDxORlRTbGlkZXNob3cgbmFtZT17dmF1bHROYW1lfSBpbWFnZT17dmF1bHRWYWx1ZXNbMF0uaW1hZ2V9IGl0ZW1zPXt2YXVsdFZhbHVlcy5maWx0ZXIodmFsdWU9PntyZXR1cm4gdmFsdWUuaW1hZ2UgIT09IHZhdWx0VmFsdWVzWzBdLmltYWdlfSkubWFwKHZhbHVlPT57cmV0dXJuIHtpbWFnZTogdmFsdWUuaW1hZ2UsIGRlc2NyaXB0aW9uOiB2YWx1ZS5kZXNjcmlwdGlvbiwgbmFtZTogdmFsdWUubmFtZSwgdHlwZTogdmFsdWUudHlwZX19KX0gcHJvcGVydGllcyA9IHt7J2R1cmF0aW9uJzogMzAwMCwgY2FuU3dpcGU6IGZhbHNlfX0vPlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxFbWJlZCBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwIE5GVC1pbWFnZVwiIHVybD17dmF1bHRJbWFnZX0vPlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgKSA6IGludmFsaWRWYXVsdCA/IChcbiAgICAgICAgICA8U3RhY2sgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgICB3aWR0aD1cIm1kXCJcbiAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9zdGFyd2Fyc2Jsb2cuc3RhcndhcnMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE3LzA2LzI1LXN0YXItd2Fycy1xdW90ZXMtb2JpLXdhbi1rZW5vYmktaWRlbnRpZmljYXRpb24tdGFsbC5qcGdcIlxuICAgICAgICAgICAgPjwvSW1hZ2U+XG4gICAgICAgICAgICA8VGV4dD5cbiAgICAgICAgICAgICAgVEhFU0UgQVJFIE5PVCBUSEUgVkFVTFRTIFlPVSBBUkUgTE9PS0lORyBGT1J7JyAnfVxuICAgICAgICAgICAgICA8TGluayBjb2xvcj1cIiM2MzhjZDhcIiBocmVmPVwiLi4vY3JlYXRlXCI+XG4gICAgICAgICAgICAgICAgQ1JFQVRFIE9ORSBIRVJFIVxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgKTogbnVsbH1cbiAgICAgICAge2hhc2ggPyAoXG4gICAgICAgICAgPFRyYW5zYWN0aW9uVG9hc3RcbiAgICAgICAgICAgIGhhc2g9e2hhc2h9XG4gICAgICAgICAgICBvbkNvbXBsZXRlPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChjbGFpbWluZyAmJiAhYWNjZXB0aW5nICYmICFwcmVUcmFuc2ZlcmluZykge1xuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgICBzZXRTdGF0dXMoJ2NsYWltZWQnKVxuICAgICAgICAgICAgICAgIHNldENsYWltaW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIHNldENsYWltZWRCeShhY2NvdW50KVxuICAgICAgICAgICAgICAgIC8vIHBpbmdDbGFpbUxvZ3MoKCk9PntcbiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZCArICcmY2M9dCc7XG4gICAgICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChwcmVUcmFuc2ZlcmluZykge1xuICAgICAgICAgICAgICAgIHNhdmVQYXNzd29yZFRvTG9jYWxTdG9yYWdlKClcbiAgICAgICAgICAgICAgICBzZXRTaG93VHJhbnNmZXJQYXNzd29yZCh0cnVlKVxuICAgICAgICAgICAgICAgIHNldFByZVRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbCkgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIH0gZWxzZSBpZihhY2NlcHRpbmcpIHtcbiAgICAgICAgICAgICAgICBzZXRBY2NlcHRpbmcoZmFsc2UpICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGdldFZhdWx0KClcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpXG4gICAgICAgICAgICAgIH0gZWxzZSBpZihhcHByb3ZpbmcpIHtcbiAgICAgICAgICAgICAgICBzZXRBcHByb3ZpbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgZ2V0VmF1bHQoKVxuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQ/aWQ9JyArIHRva2VuSWRcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKHRyYW5zZmVyaW5nKSB7XG4gICAgICAgICAgICAgICAgc2V0VHJhbnNmZXJpbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgZ2V0VmF1bHQoKVxuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKG1pbnRpbmcpIHtcbiAgICAgICAgICAgICAgICBjaGVja0xpdmVsaW5lc3ModG9rZW5JZCwgKCk9PntcbiAgICAgICAgICAgICAgICAgIHNldE1pbnRpbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgICBzZXRMaXZlKHRydWUpXG4gICAgICAgICAgICAgICAgICAvLyBzZXRTaG93TWFraW5nVmF1bHRNc2coZmFsc2UpXG4gICAgICAgICAgICAgICAgICAvLyBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQ/aWQ9JyArIHRva2VuSWRcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtaW50aW5nJywgbWludGluZykgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsYWltaW5nJywgY2xhaW1pbmcpIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhY2NlcHRpbmcnLCBhY2NlcHRpbmcpIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwcmVUcmFuc2ZlcmluZycsIHByZVRyYW5zZmVyaW5nKVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcHByb3ZpbmcnLCBhcHByb3ZpbmcpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVbmtub3duIHN0YXRlXCIpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDxCb3ggaGVpZ2h0PVwiNDBweFwiPjwvQm94PlxuICAgICAgPC9Mb2FkZXI+XG4gICAgPC8+XG4gIClcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})