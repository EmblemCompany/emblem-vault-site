webpackHotUpdate_N_E("pages/nft",{

/***/ "./components/Nft.tsx":
/*!****************************!*\
  !*** ./components/Nft.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/contracts */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n/* harmony import */ var _partials_Attributes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./partials/Attributes */ \"./components/partials/Attributes.tsx\");\n/* harmony import */ var _stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @stacks/wallet-sdk */ \"./node_modules/@stacks/wallet-sdk/dist/polyfill/index.js\");\n/* harmony import */ var _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @toruslabs/fetch-node-details */ \"./node_modules/@toruslabs/fetch-node-details/dist/fetchNodeDetails.esm.js\");\n/* harmony import */ var _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @toruslabs/torus.js */ \"./node_modules/@toruslabs/torus.js/dist/torusUtils.esm.js\");\n/* harmony import */ var _JsonDownloadLink__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./JsonDownloadLink */ \"./components/JsonDownloadLink.tsx\");\n/* harmony import */ var _partials_Approval__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./partials/Approval */ \"./components/partials/Approval.tsx\");\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nvar OfferModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c5 = function _c5() {\n  return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./OfferModal */ \"./components/OfferModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./OfferModal */ \"./components/OfferModal.tsx\")];\n    },\n    modules: ['./OfferModal']\n  }\n});\n_c6 = OfferModal;\nfunction Nft() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.cc == 't'),\n      clearCache = _useState[0],\n      setCache = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.curated == 't'),\n      showMove = _useState2[0],\n      setShowMove = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    1: '',\n    name: '',\n    chain: ''\n  }),\n      qualifiedCollection = _useState3[0],\n      setQualifiedCollection = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      moving = _useState4[0],\n      setMoving = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.key),\n      mintPassword = _useState5[0],\n      setMintPassword = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.offer || false),\n      showOffer = _useState6[0],\n      setShowOffer = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.framed || true),\n      framed = _useState7[0],\n      setFramed = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.id),\n      tokenId = _useState8[0],\n      setTokenId = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.slideshowOnly || false),\n      slideshowOnly = _useState9[0],\n      setSlideshowOnly = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultName = _useState10[0],\n      setVaultName = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultIPFS = _useState11[0],\n      setVaultIPFS = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImageIPFS = _useState12[0],\n      setVaultImageIPFS = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultCiphertextV2 = _useState13[0],\n      setVaultCiphertextV2 = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultDesc = _useState14[0],\n      setVaultDesc = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImage = _useState15[0],\n      setVaultImage = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      ownedImage = _useState16[0],\n      setOwnedImage = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultValues = _useState17[0],\n      setVaultValues = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadedValues = _useState18[0],\n      setLoadedValues = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultDataValues = _useState19[0],\n      setVaultDataValues = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      attributes = _useState20[0],\n      setAttributes = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultAddresses = _useState21[0],\n      setVaultAddresses = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      vaultPrivacy = _useState22[0],\n      setVaultPrivacy = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n      vaultTotalValue = _useState23[0],\n      setVaultTotalValue = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChainId = _useState24[0],\n      setVaultChainId = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChain = _useState25[0],\n      setVaultChain = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      hash = _useState26[0],\n      setHash = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currCoin = _useState27[0],\n      setCurrCoin = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currAddr = _useState28[0],\n      setCurrAddr = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState29[0],\n      setState = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mine = _useState30[0],\n      setMine = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      claiming = _useState31[0],\n      setClaiming = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('claimed'),\n      status = _useState32[0],\n      setStatus = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      sealed = _useState33[0],\n      setSealed = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      claimedBy = _useState34[0],\n      setClaimedBy = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      mnemonic = _useState35[0],\n      setMnemonic = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyBTC = _useState36[0],\n      setPrivKeyBTC = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyETH = _useState37[0],\n      setPrivKeyETH = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      privValues = _useState38[0],\n      setKeyValues = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadingApi = _useState39[0],\n      setLoadingApi = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptedEffect = _useState40[0],\n      setDecryptedEffect = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      decryptedEffectRunning = _useState41[0],\n      setDecryptedEffectRunning = _useState41[1];\n\n  var _useState42 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptPassword = _useState42[0],\n      setDecryptPassword = _useState42[1];\n\n  var _useState43 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      invalidVault = _useState43[0],\n      setInvalidVault = _useState43[1];\n\n  var _useState44 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      accepting = _useState44[0],\n      setAccepting = _useState44[1];\n\n  var _useState45 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approving = _useState45[0],\n      setApproving = _useState45[1];\n\n  var _useState46 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      acceptable = _useState46[0],\n      setAcceptable = _useState46[1];\n\n  var _useState47 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      transferPassword = _useState47[0],\n      setTransferPassword = _useState47[1];\n\n  var _useState48 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showTransferPassword = _useState48[0],\n      setShowTransferPassword = _useState48[1];\n\n  var _useState49 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      preTransfering = _useState49[0],\n      setPreTransfering = _useState49[1];\n\n  var _useState50 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      transfering = _useState50[0],\n      setTransfering = _useState50[1];\n\n  var _useState51 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      owner = _useState51[0],\n      setOwner = _useState51[1];\n\n  var _useState52 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      live = _useState52[0],\n      setLive = _useState52[1];\n\n  var _useState53 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      checkLive = _useState53[0],\n      setCheckLive = _useState53[1];\n\n  var _useState54 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      nonce = _useState54[0],\n      setNonce = _useState54[1];\n\n  var _useState55 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      block = _useState55[0],\n      setBlock = _useState55[1];\n\n  var _useState56 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      mintSignature = _useState56[0],\n      setMintSignature = _useState56[1];\n\n  var _useState57 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      to = _useState57[0],\n      setTo = _useState57[1];\n\n  var _useState58 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showVerifyingSignature = _useState58[0],\n      setShowVerifyingSignature = _useState58[1];\n\n  var _useState59 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showMakingVaultMsg = _useState59[0],\n      setShowMakingVaultMsg = _useState59[1];\n\n  var _useState60 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      minting = _useState60[0],\n      setMinting = _useState60[1];\n\n  var _useState61 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCrowdSale = _useState61[0],\n      setIsCrowdSale = _useState61[1];\n\n  var _useState62 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      alternateContractAddress = _useState62[0],\n      setAlternateContractAddress = _useState62[1];\n\n  var _useState63 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      targetAsset = _useState63[0],\n      setTargetAsset = _useState63[1];\n\n  var _useState64 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      targetContract = _useState64[0],\n      setTargetContract = _useState64[1];\n\n  var _useState65 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      move_targetAsset = _useState65[0],\n      setMoveTargetAsset = _useState65[1];\n\n  var _useState66 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      move_targetContract = _useState66[0],\n      setMoveTargetContract = _useState66[1];\n\n  var _useState67 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCovalApproved = _useState67[0],\n      setIsCovalApproved = _useState67[1];\n\n  var _useState68 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approved = _useState68[0],\n      setApproved = _useState68[1];\n\n  var _useState69 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      decimals = _useState69[0],\n      setDecimals = _useState69[1];\n\n  var _useState70 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      allowance = _useState70[0],\n      setAllowance = _useState70[1];\n\n  var _useState71 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      balance = _useState71[0],\n      setBalance = _useState71[1];\n\n  var _useState72 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      price = _useState72[0],\n      setPrice = _useState72[1];\n\n  var _useState73 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mineUnMinted = _useState73[0],\n      setMineUnMinted = _useState73[1];\n\n  var _useState74 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mintLockedForever = _useState74[0],\n      setMintLockedForever = _useState74[1];\n\n  var _useState75 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({}),\n      rawMetadata = _useState75[0],\n      setRawMetadata = _useState75[1];\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var vaultHandlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n  var covalContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].coval[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].covalAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenOfferModal = _useDisclosure3.isOpen,\n      onOpenOfferModal = _useDisclosure3.onOpen,\n      onCloseOfferModal = _useDisclosure3.onClose;\n\n  var _useDisclosure4 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure4.isOpen,\n      onToggle = _useDisclosure4.onToggle;\n\n  var _useDisclosure5 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isManageAddressOpen = _useDisclosure5.isOpen,\n      onManageAddressToggle = _useDisclosure5.onToggle;\n\n  var _useDisclosure6 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isAdvancedOpen = _useDisclosure6.isOpen,\n      onAdvancedToggle = _useDisclosure6.onToggle;\n\n  var _useColorMode = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"])(),\n      colorMode = _useColorMode.colorMode;\n\n  var transak;\n  var transferImage;\n\n  var getVaultContract = function getVaultContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address || _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, library.getSigner(account).connectUnchecked());\n  };\n\n  var getCuratedContract = function getCuratedContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].erc1155Abi, library.getSigner(account).connectUnchecked());\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, cb) {\n    // alert(`here ${owner}, ${move_targetAsset} ${move_targetContract}`)\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/liveliness', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context.sent;\n                setLive(data.live);\n                console.log(\"Liveliness check\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return cb();\n  };\n\n  var lazyMint = function lazyMint() {\n    library.getSigner(account).signMessage('Delayed Minting: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/lazyMint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata',\n          chainid: chainId.toString()\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context2.sent;\n\n                  if (!data.error && data.data) {\n                    setMintSignature(data.data.signature);\n                    setNonce(data.data.nonce);\n                    setBlock(data.data.block);\n                    setShowVerifyingSignature(true); // setCreating(true)\n\n                    setTimeout(function () {\n                      delayedMint(data.data.nonce, data.data.block, data.data.signature);\n                    }, 1500);\n                  } else {\n                    alert(data.error ? data.msg : 'unknown error');\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var delayedMint = function delayedMint(nonce, block, sig) {\n    // setCreating(true)\n    console.log(\"Delayed Minting\");\n    setShowVerifyingSignature(false);\n    setShowMakingVaultMsg(true);\n    setMinting(true);\n    var cipherTextHash = vaultAddresses.filter(function (address) {\n      return address.coin == \"ETH\";\n    })[0].address;\n    console.log(\"--------------------------------------------------------Delayed Minting\", account, tokenId, cipherTextHash, nonce, block, sig);\n    handlerContract.buyWithSignature2(account, tokenId, cipherTextHash, nonce, block, sig).then(function (_ref3) {\n      var hash = _ref3.hash;\n      setTimeout(function () {\n        setHash(hash);\n        setShowMakingVaultMsg(false);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      console.log(\"AAAAAHHHHHH\", error);\n      setShowMakingVaultMsg(false); // setMinting(false)\n    });\n  };\n\n  var fireMetaMask = function fireMetaMask() {\n    console.log(mintPassword);\n    setAccepting(true);\n    getWitness(function (witness) {\n      // console.log(tokenId, mintPassword, witness.nonce, witness.signature, account)\n      ;\n      handlerContract.transferWithCode(tokenId, mintPassword, account, witness.nonce, witness.signature).then(function (_ref4) {\n        var hash = _ref4.hash;\n        setTimeout(function () {\n          setHash(hash); // setShowMakingVaultMsg(true)\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        setAccepting(false);\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {// setAccepting(false)\n          // setShowPreVaultMsg(false)\n        }\n      });\n    });\n  };\n\n  var addPreTransfer = function addPreTransfer() {\n    console.log('transferImage', \"0x\" + transferImage);\n    setPreTransfering(true);\n    handlerContract.addPreTransfer(tokenId, \"0x\" + transferImage).then(function (_ref5) {\n      var hash = _ref5.hash;\n      // setTimeout(() => {\n      setHash(hash);\n      console.log(\"Set Pre Transfering True\", preTransfering); // setShowMakingVaultMsg(true)\n      // }, 100) // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if (error !== null && error !== void 0 && error.code) {\n        console.log(\"Error?\");\n        setPreTransfering(false);\n        setShowTransferPassword(false);\n        setTransferPassword('');\n      } else {// setShowTransferPassword(!showTransferPassword? true : false)\n        // setPreTransfering(false)\n        // setShowPreVaultMsg(false)\n      }\n    });\n  };\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n    emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref6) {\n      var hash = _ref6.hash;\n      setTimeout(function () {\n        setHash(hash);\n      }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.log(\"tx failed.\", error);\n      } else {\n        setApproving(false);\n      }\n    });\n  };\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    covalContract.approve(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], '100000000000000').then(function (_ref7) {\n      var hash = _ref7.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var deleteVault = function deleteVault() {\n    library.getSigner(account).signMessage('Delete: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/v2/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                location.href = location.href.split(\"/\")[0] + \"/vaults\";\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    });\n  };\n\n  var syncAccount = function syncAccount() {\n    var synched = localStorage.getItem(tokenId + '-v');\n\n    if (!synched) {\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/sync/' + tokenId, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        }\n      }).then( /*#__PURE__*/function () {\n        var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(response) {\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  localStorage.setItem(tokenId + '-v', '1');\n                  return _context4.abrupt(\"return\", true);\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x3) {\n          return _ref9.apply(this, arguments);\n        };\n      }())[\"catch\"](function () {\n        return false;\n      });\n    }\n  };\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/meta/' + tokenId + '?experimental=true' + (clearCache ? '&_vercel_no_cache=1' : ''), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata',\n                  cc: clearCache ? 't' : ''\n                }\n              });\n\n            case 2:\n              response = _context5.sent;\n              _context5.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context5.sent;\n              setRawMetadata(jsonData);\n              setStates(jsonData); // console.log('vault response was ', jsonData)\n\n              if (jsonData.image_ipfs) {// getIPFSImage(jsonData.image_ipfs)\n              }\n\n              if (jsonData.collectionAddress) {\n                setIsCrowdSale(true);\n                setAlternateContractAddress(jsonData.collectionAddress);\n              }\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                // setStates(jsonData)\n                // !slideshowOnly? saveCache(jsonData) : null\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n              !vaultPrivacy && !loadedValues ? getAllBalancesLive([], tokenId, function (v) {\n                if (v) {\n                  setVaultValues(v);\n                }\n              }) : null;\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getVault() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var getWitness = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/witness/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  cc: 't',\n                  service: 'evmetadata',\n                  chainid: chainId.toString()\n                }\n              });\n\n            case 2:\n              response = _context6.sent;\n              _context6.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context6.sent;\n\n              if (!jsonData.signature) {\n                _context6.next = 11;\n                break;\n              }\n\n              console.log('witness', jsonData);\n              return _context6.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n              return _context6.abrupt(\"return\", cb(false));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getWitness(_x4) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && jsonData.image && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n\n    if (jsonData.ciphertextV2) {\n      setVaultCiphertextV2(jsonData.ciphertextV2);\n    }\n\n    setMintLockedForever(jsonData.mintLocked && jsonData.mintLockBlock == 0);\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setOwnedImage(jsonData.ownedImage || null);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    jsonData.values ? setVaultValues(vaultValues.concat(jsonData.values)) : null;\n    jsonData.attributes ? setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    })) : null;\n    jsonData.attributes ? setAttributes(jsonData.attributes) : null;\n    setVaultAddresses(jsonData.addresses);\n    setVaultIPFS(jsonData.ipfs || null);\n    setVaultImageIPFS(jsonData.image_ipfs || null);\n    jsonData.targetAsset ? setTargetAsset(jsonData.targetAsset) : null;\n    jsonData.targetContract ? setTargetContract(jsonData.targetContract) : null;\n    jsonData.move_targetContract ? setMoveTargetContract(jsonData.move_targetContract) : null;\n    jsonData.move_targetAsset ? setMoveTargetAsset(jsonData.move_targetAsset) : null;\n\n    if (jsonData.targetContract && jsonData.targetContract[chainId]) {\n      setTimeout(function () {\n        location.href = location.origin + '/nft2?id=' + jsonData.targetContract.tokenId;\n      }, 500);\n    }\n\n    setLive(jsonData.live == false ? false : true);\n    setNonce(jsonData.nonce);\n    setMintSignature(jsonData.signature);\n    setTo(jsonData.to);\n    setVaultChain(jsonData.network);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : jsonData.network == \"bitcoin\" ? 0 : jsonData.network == \"aurora\" ? 1313161554 : 97);\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    }\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n\n    if (jsonData.sealed) {\n      setSealed(true);\n    } else {\n      setSealed(false);\n    }\n\n    if (jsonData.values.length == 1 && jsonData.attributes.length > 0) {\n      var project = jsonData.attributes.filter(function (item) {\n        return item.value == jsonData.values[0].name;\n      });\n\n      if (project.length > 0) {\n        var projectName = project[0].trait_type;\n\n        var _qualifiedCollection = _constants__WEBPACK_IMPORTED_MODULE_13__[\"curatedContracts\"].filter(function (item) {\n          return item.name == projectName;\n        });\n\n        if (_qualifiedCollection.length > 0) {\n          setQualifiedCollection(_qualifiedCollection[0]);\n        }\n      }\n    }\n  };\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(values, tokenId, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              response = _context7.sent;\n              _context7.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context7.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context7.next = 11;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context7.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getAllBalances(_x5, _x6, _x7) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesLive = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(values, tokenId, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!loadedValues) {\n                _context8.next = 2;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(false));\n\n            case 2:\n              setLoadedValues(true);\n              _context8.next = 5;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId + '?live=true&_vercel_no_cache=1', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              response = _context8.sent;\n              _context8.next = 8;\n              return response.json();\n\n            case 8:\n              jsonData = _context8.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context8.next = 14;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 14:\n              return _context8.abrupt(\"return\", cb(values));\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getAllBalancesLive(_x8, _x9, _x10) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesByAddress = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9(values, ethAddress, btcAddress, cb) {\n      var response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + ethAddress + '/' + btcAddress, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              response = _context9.sent;\n              _context9.next = 5;\n              return response.json();\n\n            case 5:\n              jsonData = _context9.sent;\n              console.log('response', response, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context9.next = 11;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context9.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getAllBalancesByAddress(_x11, _x12, _x13, _x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  };\n\n  var getSignedJWT = /*#__PURE__*/function () {\n    var _ref15 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10(signature, tokenId, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainid', chainId.toString());\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                tokenId: tokenId\n              });\n              _context10.next = 6;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"SIG_API\"] + '/sign', {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 6:\n              response = _context10.sent;\n              _context10.next = 9;\n              return response.json();\n\n            case 9:\n              jsonData = _context10.sent;\n              return _context10.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getSignedJWT(_x15, _x16, _x17) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  function getTorusKeys(_x18, _x19, _x20) {\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  function _getTorusKeys() {\n    _getTorusKeys = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee29(verifierId, idToken, cb) {\n      var fetchNodeDetails, torusUtils, _yield$fetchNodeDetai, torusNodeEndpoints, torusIndexes, _yield$torusUtils$ret, privKey;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee29$(_context29) {\n        while (1) {\n          switch (_context29.prev = _context29.next) {\n            case 0:\n              fetchNodeDetails = new _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__[\"default\"]({\n                network: \"mainnet\"\n              });\n              torusUtils = new _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]({\n                enableOneKey: true,\n                network: \"mainnet\"\n              });\n              _context29.next = 4;\n              return fetchNodeDetails.getNodeDetails({\n                verifier: 'tor-us-signer-vercel',\n                verifierId: verifierId\n              });\n\n            case 4:\n              _yield$fetchNodeDetai = _context29.sent;\n              torusNodeEndpoints = _yield$fetchNodeDetai.torusNodeEndpoints;\n              torusIndexes = _yield$fetchNodeDetai.torusIndexes;\n              _context29.next = 9;\n              return torusUtils.retrieveShares(torusNodeEndpoints, torusIndexes, 'tor-us-signer-vercel', {\n                verifier_id: verifierId\n              }, idToken);\n\n            case 9:\n              _yield$torusUtils$ret = _context29.sent;\n              privKey = _yield$torusUtils$ret.privKey;\n              return _context29.abrupt(\"return\", cb({\n                privateKey: privKey\n              }));\n\n            case 12:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n      }, _callee29);\n    }));\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11(signature, tokenId, coin, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                coin: coin\n              });\n              _context11.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/address/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              response = _context11.sent;\n              _context11.next = 10;\n              return response.json();\n\n            case 10:\n              jsonData = _context11.sent;\n              return _context11.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function addAddress(_x21, _x22, _x23, _x24) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var decryptEmbed = /*#__PURE__*/function () {\n    var _ref17 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12(signature, tokenId, cb) {\n      var myHeaders, raw, response, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context12.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/embed/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              response = _context12.sent;\n              _context12.next = 10;\n              return response.json();\n\n            case 10:\n              jsonData = _context12.sent;\n              return _context12.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function decryptEmbed(_x25, _x26, _x27) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref18 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14() {\n      var owned, _owner, finish, _finish;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _finish = function _finish3() {\n                _finish = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13() {\n                  var acceptable, isApproved;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context13) {\n                    while (1) {\n                      switch (_context13.prev = _context13.next) {\n                        case 0:\n                          _context13.next = 2;\n                          return handlerContract.getPreTransfer(tokenId);\n\n                        case 2:\n                          acceptable = _context13.sent;\n\n                          if (!targetContract[chainId]) {\n                            _context13.next = 9;\n                            break;\n                          }\n\n                          _context13.next = 6;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n\n                        case 6:\n                          isApproved = _context13.sent;\n                          _context13.next = 12;\n                          break;\n\n                        case 9:\n                          _context13.next = 11;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n                        case 11:\n                          isApproved = _context13.sent;\n\n                        case 12:\n                          setApproved(isApproved);\n                          setAcceptable(acceptable._from !== \"0x0000000000000000000000000000000000000000\");\n                          setOwner(_owner);\n                          setMine(_owner === account || to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          setMineUnMinted(to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          loadPasswordFromLocalStorage();\n\n                          if (owner && live == false && !checkLive) {\n                            setCheckLive(true);\n                            checkLiveliness(tokenId, function () {}); //   if (owner === ZERO_ADDRESS && move_targetContract && move_targetContract.serialNumber) {\n                            //     // is moving\n                            //     setTimeout(() => {\n                            //       location.href = location.origin + '/nft2?id=' + tokenId\n                            //     }, 500)\n                            //   } else {\n                            //     setCheckLive(true)\n                            //     checkLiveliness(tokenId, ()=>{\n                            //     })\n                            //   }\n                          }\n\n                        case 19:\n                        case \"end\":\n                          return _context13.stop();\n                      }\n                    }\n                  }, _callee13);\n                }));\n                return _finish.apply(this, arguments);\n              };\n\n              finish = function _finish2() {\n                return _finish.apply(this, arguments);\n              };\n\n              // alert(0)\n              console.log(\"Contract states\");\n              owned = false;\n              _context14.prev = 4;\n\n              if (!targetContract[chainId]) {\n                _context14.next = 14;\n                break;\n              }\n\n              console.log(\"Checking owner wth targetContract\");\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context14.next = 10;\n              return emblemContract.getOwnerOfSerial(targetContract.serialNumber);\n\n            case 10:\n              _owner = _context14.sent;\n              console.log(\"--------------------------- owner\", _owner, approved, account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n              _context14.next = 22;\n              break;\n\n            case 14:\n              if (!live) {\n                _context14.next = 20;\n                break;\n              }\n\n              _context14.next = 17;\n              return emblemContract.ownerOf(tokenId);\n\n            case 17:\n              _context14.t0 = _context14.sent;\n              _context14.next = 21;\n              break;\n\n            case 20:\n              _context14.t0 = \"0x0000000000000000000000000000000000000000\";\n\n            case 21:\n              _owner = _context14.t0;\n\n            case 22:\n              _context14.t1 = setDecimals;\n              _context14.next = 25;\n              return covalContract.decimals();\n\n            case 25:\n              _context14.t2 = _context14.sent;\n              (0, _context14.t1)(_context14.t2);\n              _context14.t3 = setAllowance;\n              _context14.next = 30;\n              return covalContract.allowance(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 30:\n              _context14.t4 = _context14.sent;\n              (0, _context14.t3)(_context14.t4);\n              _context14.t5 = setBalance;\n              _context14.next = 35;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 35:\n              _context14.t6 = _context14.sent;\n              (0, _context14.t5)(_context14.t6);\n              _context14.t7 = setPrice;\n              _context14.next = 40;\n              return handlerContract.price().then(function (balance) {\n                return balance.toString();\n              });\n\n            case 40:\n              _context14.t8 = _context14.sent;\n              (0, _context14.t7)(_context14.t8);\n\n              if (Number(allowance) >= Number(price)) {\n                setIsCovalApproved(true);\n              } else {\n                setIsCovalApproved(false);\n              }\n\n              finish();\n              _context14.next = 50;\n              break;\n\n            case 46:\n              _context14.prev = 46;\n              _context14.t9 = _context14[\"catch\"](4);\n              _owner = \"0x0000000000000000000000000000000000000000\";\n              finish();\n\n            case 50:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[4, 46]]);\n    }));\n\n    return function getContractStates() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log(\"mine?\", mine);\n    console.log(\"claiming?\", claiming);\n    console.log(\"accepting?\", accepting);\n    console.log(\"acceptable\", acceptable);\n    console.log(\"qualified\", qualifiedCollection);\n    console.log(\"owner\", owner);\n  });\n\n  var hasAddress = function hasAddress(coin) {\n    console.log(coin, vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0);\n    return vaultAddresses.filter(function (address) {\n      return address.coin == coin;\n    }).length > 0;\n  };\n\n  var onRenew = /*#__PURE__*/function () {\n    var _ref19 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee16(name) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              library.getSigner(account).signMessage('Renew: ' + tokenId).then(function (signature) {\n                var address = vaultAddresses.filter(function (address) {\n                  return address.coin == 'NMC';\n                })[0].address;\n                console.log('signature', signature, name);\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/nmc/renew/' + address, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"tokenId\": tokenId,\n                    \"signature\": signature,\n                    \"name\": name\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref20 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context15) {\n                      while (1) {\n                        switch (_context15.prev = _context15.next) {\n                          case 0:\n                            _context15.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context15.sent;\n                            console.log(\"Requested Renew\", data);\n\n                          case 4:\n                          case \"end\":\n                            return _context15.stop();\n                        }\n                      }\n                    }, _callee15);\n                  }));\n\n                  return function (_x29) {\n                    return _ref20.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function onRenew(_x28) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref21 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee19() {\n      var serialNumber;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              if (!targetContract[chainId]) {\n                _context19.next = 5;\n                break;\n              }\n\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context19.next = 4;\n              return emblemContract.getSerial(targetContract.tokenId, 0);\n\n            case 4:\n              serialNumber = _context19.sent;\n\n            case 5:\n              library.getSigner(account).signMessage('Claim: ' + (targetContract[chainId] ? serialNumber : tokenId)).then(function (signature) {\n                setState({\n                  loaded: false\n                });\n\n                if (mineUnMinted && status != \"claimed\" && !mintLockedForever) {\n                  setMintLockedForever(true);\n                }\n\n                getSignedJWT(signature, tokenId, function (token) {\n                  getTorusKeys(tokenId, token.token, /*#__PURE__*/function () {\n                    var _ref22 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee18(keys) {\n                      var bytes, payload;\n                      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee18$(_context18) {\n                        while (1) {\n                          switch (_context18.prev = _context18.next) {\n                            case 0:\n                              try {\n                                bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(vaultCiphertextV2, keys.privateKey);\n                                payload = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n                                setKeyValues(payload.values);\n                                setMnemonic(payload.phrase);\n                                vaultAddresses.forEach( /*#__PURE__*/function () {\n                                  var _ref23 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee17(address) {\n                                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee17$(_context17) {\n                                      while (1) {\n                                        switch (_context17.prev = _context17.next) {\n                                          case 0:\n                                            if (!(address.coin == 'STX')) {\n                                              _context17.next = 6;\n                                              break;\n                                            }\n\n                                            _context17.next = 3;\n                                            return getSTXKey(address, payload.phrase);\n\n                                          case 3:\n                                            address.key = _context17.sent;\n                                            _context17.next = 7;\n                                            break;\n\n                                          case 6:\n                                            address.key = window.phrasePathToKey(payload.phrase, address.path);\n\n                                          case 7:\n                                            if (address.coin == 'BTC') setPrivKeyBTC(address.key);\n                                            if (address.coin == 'ETH') setPrivKeyETH(address.key);\n\n                                          case 9:\n                                          case \"end\":\n                                            return _context17.stop();\n                                        }\n                                      }\n                                    }, _callee17);\n                                  }));\n\n                                  return function (_x31) {\n                                    return _ref23.apply(this, arguments);\n                                  };\n                                }());\n                              } catch (err) {\n                                alert(err);\n                                setTimeout(function () {\n                                  location.href = location.href;\n                                }, 2000);\n                              }\n\n                              setState({\n                                loaded: true\n                              });\n                              onOpenKeysModal();\n\n                            case 3:\n                            case \"end\":\n                              return _context18.stop();\n                          }\n                        }\n                      }, _callee18);\n                    }));\n\n                    return function (_x30) {\n                      return _ref22.apply(this, arguments);\n                    };\n                  }());\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    return function handleSign() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  var getSTXKey = /*#__PURE__*/function () {\n    var _ref24 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee20(address, phrase) {\n      var wallet, account;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return Object(_stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__[\"generateWallet\"])({\n                secretKey: phrase,\n                password: ''\n              });\n\n            case 2:\n              wallet = _context20.sent;\n              console.log('------ stacks account -', wallet.accounts[0]);\n              account = wallet.accounts[0];\n              address.key = account.stxPrivateKey;\n              return _context20.abrupt(\"return\", address.key);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function getSTXKey(_x32, _x33) {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n\n  var handleHideAsset = /*#__PURE__*/function () {\n    var _ref25 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee21(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              library.getSigner(account).signMessage('HideAsset: ' + tokenId).then(function (signature) {\n                hideAsset(tokenId, coin.coin, coin.address, coin.name, signature, function () {\n                  console.log(\"Done hiding coin and getting new balances\");\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function handleHideAsset(_x34) {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n\n  function hideAsset(tokenId, coin, address, name, signature, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/hide/' + tokenId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      body: JSON.stringify({\n        \"coin\": coin ? coin : null,\n        \"address\": address ? address : null,\n        \"name\": name ? name : null,\n        \"signature\": signature ? signature : null\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref26 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee22(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context22.sent;\n                console.log(\"-------\", data);\n                getAllBalances([], tokenId, function (values) {\n                  setVaultValues(values);\n                  return cb();\n                });\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      return function (_x35) {\n        return _ref26.apply(this, arguments);\n      };\n    }());\n  }\n\n  var handleAddressSign = /*#__PURE__*/function () {\n    var _ref27 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee23(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              library.getSigner(account).signMessage('Address: ' + tokenId).then(function (signature) {\n                addAddress(signature, tokenId, coin, function (result) {\n                  getVault();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }));\n\n    return function handleAddressSign(_x36) {\n      return _ref27.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnedEmbed = /*#__PURE__*/function () {\n    var _ref28 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee24() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              library.getSigner(account).signMessage('Embed: ' + tokenId).then(function (signature) {\n                decryptEmbed(signature, tokenId, function (result) {\n                  setVaultImage(result.ownedImage);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    return function handleOwnedEmbed() {\n      return _ref28.apply(this, arguments);\n    };\n  }();\n\n  var handleMove = /*#__PURE__*/function () {\n    var _ref29 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee26() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              console.log('---------- qualified move', qualifiedCollection);\n              library.getSigner(account).signMessage('Move Vault: ' + tokenId).then(function (signature) {\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_V2_API\"] + '/move-vault/', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"chainId\": 1,\n                    \"from\": account,\n                    \"sourceContract\": {\n                      \"1\": _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]\n                    },\n                    \"targetContract\": {\n                      \"1\": qualifiedCollection[chainId],\n                      \"name\": qualifiedCollection.name,\n                      \"chain\": qualifiedCollection.chain\n                    },\n                    \"targetAsset\": {\n                      \"name\": vaultValues[0].name\n                    },\n                    \"amount\": 1,\n                    \"tokenId\": tokenId,\n                    \"signature\": signature\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref30 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee25(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee25$(_context25) {\n                      while (1) {\n                        switch (_context25.prev = _context25.next) {\n                          case 0:\n                            _context25.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context25.sent;\n\n                            if (data.sig) {\n                              vaultHandlerContract.moveVault(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId], qualifiedCollection[chainId], tokenId, data.tokenId, data.nonce, data.sig, data.serial).then(function (hash) {\n                                setHash(hash.hash);\n                              });\n                            }\n\n                          case 4:\n                          case \"end\":\n                            return _context25.stop();\n                        }\n                      }\n                    }, _callee25);\n                  }));\n\n                  return function (_x37) {\n                    return _ref30.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 2:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26);\n    }));\n\n    return function handleMove() {\n      return _ref29.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref31 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee27() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                vaultHandlerContract.claim(targetContract[chainId], targetContract.tokenId).then(function (_ref32) {\n                  var hash = _ref32.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              } else {\n                handlerContract.claimOnChain(tokenId).then(function (_ref33) {\n                  var hash = _ref33.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27);\n    }));\n\n    return function handleClaim() {\n      return _ref31.apply(this, arguments);\n    };\n  }();\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref34 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee28() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee28$(_context28) {\n        while (1) {\n          switch (_context28.prev = _context28.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  var num = Math.floor(theLetters.length * Math.random());\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                }\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context28.next = 3;\n                break;\n              }\n\n              return _context28.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n      }, _callee28);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref34.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    account && chainId && vaultChainId && chainId == vaultChainId || query.noLayout && query.noLayout == 'true' || query.slideshowOnly && query.slideshowOnly == 'true' ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words ? words.split('\\n\\n\\n\\n') : [\" \"];\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    console.log(vaultAddresses);\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      var ethAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address;\n      var btcAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'BTC';\n      })[0].address;\n      console.log(\"SUCCESS\", vaultAddresses);\n      getAllBalancesByAddress([], ethAddress, btcAddress, function (values) {\n        setVaultValues(values);\n      });\n    } catch (err) {\n      console.log('WTF', err);\n    }\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      if (item.address.includes('private')) {\n        var cipherText = item.address.replace('private:', '');\n        item.address = decrypt(cipherText, key);\n      }\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  function visitOpenSeaLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'opensea.io/assets/' + (vaultChainId == 137 ? 'matic/' : 'ethereum/') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitLooksRareLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : '') + 'looksrare.org/collections/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + tokenId, '_blank');\n  }\n\n  function visitArcadeLink() {\n    window.open(\"https://app.arcade.xyz/terms/asset/\".concat(targetContract[vaultChainId] ? targetContract[vaultChainId] : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId], \"/\").concat(tokenId), '_blank');\n  }\n\n  {\n    alternateContractAddress ? emblemContract = getVaultContract(alternateContractAddress ? alternateContractAddress : null) : null;\n  }\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              if (localStorage.getItem(\\\"darkMode\\\") == 'false') {\\n                localStorage.setItem(\\\"darkMode\\\",\\\"true\\\"); location.href = location.href\\n              }\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    addresses: vaultAddresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }\n  }), showOffer ? __jsx(OfferModal, {\n    isOpen: isOpenOfferModal,\n    onClose: onCloseOfferModal,\n    tokenId: tokenId,\n    mine: mine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 9\n    }\n  }) : null, __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 7\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault && !slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 15\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 17\n    }\n  }, \"Vault Network: \", _utils__WEBPACK_IMPORTED_MODULE_15__[\"CHAIN_ID_NAMES\"][vaultChainId]), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\" // textTransform=\"uppercase\"\n    ,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy && vaultTotalValue > 0 ? ': ~$' + vaultTotalValue.toLocaleString() : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 17\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultImage,\n    items: vaultValues.map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 23\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 23\n    }\n  }), mine && ownedImage ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    onClick: function onClick() {\n      handleOwnedEmbed();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 21\n    }\n  }, \"(OWNED) Show Full Embed\") : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 23\n    }\n  }, vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: \"./vaults?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    overflowWrap: \"anywhere\",\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    className: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1154,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tabs\"], {\n    isFitted: true,\n    variant: \"enclosed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabList\"], {\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 21\n    }\n  }, \"Balances\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 21\n    }\n  }, \"Attributes\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanels\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 21\n    }\n  }, vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 27\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 27\n    }\n  })) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"h4\",\n    mt: 2,\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 29\n    }\n  }, \"Current Contents:  \", __jsx(\"button\", {\n    onClick: function onClick() {\n      getAllBalancesLive([], tokenId, function (v) {\n        setLoadedValues(false);\n        setVaultValues(v);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 50\n    }\n  }, \" [Refresh Balances]\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"p\",\n    color: colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 29\n    }\n  }, \"$\", Number(vaultTotalValue.toFixed(4)).toLocaleString()), vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 35\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      mine: status === 'claimed' && claimedBy === account || mine,\n      onRenew: onRenew,\n      hideAsset: handleHideAsset,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 34\n    }\n  }), vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 35\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 31\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 21\n    }\n  }, __jsx(_partials_Attributes__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n    colorMode: colorMode,\n    attributes: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 23\n    }\n  })))), !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 27\n    }\n  }, \"Deposit Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 27\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n      className: \"address_nft_button\",\n      ml: 2,\n      mt: 2,\n      \"font-weight\": \"100 !important\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 33\n      }\n    }, addr.coin == 'ETH' ? addr.coin + '/EVM' : addr.coin == 'BTC' ? addr.coin + '/XCP/OMNI' : addr.coin == 'BCH' ? addr.coin + '/SLP' : addr.coin == 'TAP' ? 'TAPROOT' : addr.coin);\n  })), (mine || status === 'claimed') && vaultAddresses.length < 12 ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onManageAddressToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 29\n    }\n  }, \"Manage Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    isOpen: isManageAddressOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 31\n    }\n  }, !hasAddress('DOGE') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DOGE');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 35\n    }\n  }, \"Add DOGE\") : null, !hasAddress('DGB') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('DGB');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 35\n    }\n  }, \"Add Digibyte\") : null, !hasAddress('NMC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('NMC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 35\n    }\n  }, \"Add Namecoin\") : null, !hasAddress('LTC') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('LTC');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 35\n    }\n  }, \"Add Litecoin\") : null, !hasAddress('MONA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('MONA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 35\n    }\n  }, \"Add Mona\") : null, !hasAddress('TEZOS') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TEZOS');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 35\n    }\n  }, \"Add Tezos\") : null, !hasAddress('SOLANA') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('SOLANA');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 35\n    }\n  }, \"Add Solana\") : null, !hasAddress('STX') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('STX');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 35\n    }\n  }, \"Add Stacks\") : null, !hasAddress('TAP') ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    mr: 2,\n    mt: 2,\n    onClick: function onClick() {\n      handleAddressSign('TAP');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 35\n    }\n  }, \"Add Taproot\") : null))) : null))) : null, !(status === 'claimed') && live && (vaultChainId === 1 || vaultChainId === 137) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: mine && vaultChainId == 1 ? \"33%\" : vaultChainId == 137 ? \"100%\" : \"50%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitOpenSeaLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 25\n    }\n  }, \"Opensea\"), vaultChainId == 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: mine ? \"33%\" : \"50%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitLooksRareLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 27\n    }\n  }, \"LooksRare\") : null, mine && vaultChainId == 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"33%\",\n    m: 2.5,\n    mb: 5,\n    onClick: function onClick() {\n      visitArcadeLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 28\n    }\n  }, \"Arcade\") : null, showOffer ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"\",\n    onClick: function onClick() {\n      onOpenOfferModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1320,\n      columnNumber: 27\n    }\n  }, mine ? 'My Offers' : 'Make an Offer', \" (NFT\\xB2NFT)\") : null) : null, isCovalApproved && !live ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"row\",\n    align: \"flex-start\",\n    spacing: \"0rem\",\n    flexWrap: \"wrap\",\n    shouldWrapChildren: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    p: 1,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1328,\n      columnNumber: 25\n    }\n  }, \"Creating a vault spends \", price * Math.pow(10, -decimals), \" Coval from your wallet\"))) : null, (showTransferPassword || mintPassword) && acceptable ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: location.protocol + '//' + location.host + '/nft?id=' + tokenId + '&key=' + (transferPassword || mintPassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 25\n    }\n  }, \"Copy Gift Link\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 25\n    }\n  }, \"Password: \", transferPassword || mintPassword)) : null, acceptable && claimedBy !== account ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    mt: 2,\n    width: \"100%\",\n    onClick: function onClick() {\n      fireMetaMask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1368,\n      columnNumber: 25\n    }\n  }, \"Accept\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    mt: 2,\n    type: \"password\",\n    id: \"mintPassword\",\n    minLength: 3,\n    maxLength: 200,\n    value: mintPassword || '',\n    onChange: function onChange(e) {\n      console.log('grrr', e.target.value, mintPassword);\n      setMintPassword(e.target.value);\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1369,\n      columnNumber: 25\n    }\n  })) : null, !live && mine && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg && approved && isCovalApproved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    isDisabled: !vaultPrivacy && vaultValues.length < 1 || mintLockedForever,\n    onClick: lazyMint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 25\n    }\n  }, mintLockedForever ? 'Mint Locked - keys accessed before mint' : !vaultPrivacy && vaultValues.length < 1 ? 'Please load the vault to mint' : 'Mint Vault')) : null, !(status === 'claimed') && account && vaultChainId === chainId && mine && !sealed && approved && live ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1392,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1393,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Unlock Vault (Get Private Keys)')) : vaultChainId === chainId && (status == 'claimed' || mintLockedForever) && (claimedBy === account || mine) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1405,\n      columnNumber: 23\n    }\n  }, \"Get Keys\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 17\n    }\n  }, __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, mine ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, !isCovalApproved ? __jsx(_partials_Approval__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n    handler: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi\n    },\n    spending: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].coval[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].covalAbi\n    },\n    amount: 1000,\n    label: \"Approve Spending Coval\",\n    watcher: setHash,\n    approvedHook: setIsCovalApproved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 21\n    }\n  }) : null, !approved ? __jsx(_partials_Approval__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n    handler: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi\n    },\n    spending: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi\n    },\n    amount: 0,\n    label: \"Approve Creating / Burning Vaults\",\n    watcher: setHash,\n    approvedHook: setApproved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1425,\n      columnNumber: 21\n    }\n  }) : null) : null, __jsx(\"button\", {\n    className: \"nft_button\",\n    onClick: function onClick() {\n      onAdvancedToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1437,\n      columnNumber: 21\n    }\n  }, \"Advanced Operations\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"100%\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Collapse\"], {\n    width: \"100%\",\n    isOpen: isAdvancedOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 23\n    }\n  }, vaultChainId === chainId && mineUnMinted && status != \"claimed\" && !mintLockedForever ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 27\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 29\n    }\n  }, \"Get Keys (Unlocking will prevent minting)\")) : null, mine && showMove && qualifiedCollection && qualifiedCollection[chainId] && qualifiedCollection.name && qualifiedCollection.chain ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_partials_Approval__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n    handler: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi\n    },\n    spending: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi\n    },\n    amount: 0,\n    label: \"Approve Moving (part 1)\",\n    watcher: setHash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 29\n    }\n  }), __jsx(_partials_Approval__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n    handler: {\n      address: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi\n    },\n    spending: {\n      address: qualifiedCollection[chainId],\n      abi: _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].erc1155Abi\n    },\n    amount: 0,\n    label: \"Approve Moving (part 2)\",\n    watcher: setHash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 29\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      setMoving(true);\n      handleMove();\n    },\n    isDisabled: moving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 31\n    }\n  }, moving ? 'Moving ...' : 'Move Vault'))) : null, mine || claimedBy == account ? __jsx(_JsonDownloadLink__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n    data: rawMetadata,\n    filename: \"EmblemVault-\".concat(tokenId, \".json\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 27\n    }\n  }) : null, (!live || status == 'claimed') && to == account && vaultChainId == chainId && !showMakingVaultMsg && vaultValues.length < 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: deleteVault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 27\n    }\n  }, \"Delete Vault \") : null))))), vaultIPFS ? __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__[\"HStack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    target: \"new\",\n    mb: 2,\n    ml: 35,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 23\n    }\n  }, \"View Metadata on IPFS \"), vaultImageIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    mb: 2,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultImageIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1498,\n      columnNumber: 25\n    }\n  }, \"View Image on IPFS \") : null) : null, sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    mb: 2,\n    ml: 35,\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1504,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 23\n    }\n  }, \"*This vault is sealed forever.\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1509,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1510,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1514,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1515,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : minting ? \"Minting Vault\" : \"Validating transaction\") : null)) : vaultValues.length > 0 && slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1523,\n      columnNumber: 11\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultValues[0].image,\n    items: vaultValues.filter(function (value) {\n      return value.image !== vaultValues[0].image;\n    }).map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 17\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1527,\n      columnNumber: 17\n    }\n  })) : invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1533,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1537,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1539,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))) : null, hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (moving) {\n        setMoving(false);\n        location.href = location.origin + '/nft2?id=' + tokenId + '&cc=t';\n      } else if (claiming && !accepting && !preTransfering) {\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        location.href = location.origin + '/nft?id=' + tokenId + '&cc=t';\n      } else if (preTransfering) {\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        setApproving(false);\n        getVault();\n        setHash(null);\n        location.href = location.origin + '/nft?id=' + tokenId;\n      } else if (transfering) {\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else if (minting) {\n        checkLiveliness(tokenId, function () {\n          setMinting(false);\n          setLive(true);\n          location.href = location.origin + '/nft?id=' + tokenId + '&cc=t';\n        });\n      } else {\n        location.href = location.origin + '/nft?id=' + tokenId;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1547,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1590,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Nft, \"Yx0YYP/KkHDNvCSgerIKwUJ1AMU=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"]];\n});\n\n_c7 = Nft;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"OfferModal$dynamic\");\n$RefreshReg$(_c6, \"OfferModal\");\n$RefreshReg$(_c7, \"Nft\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9OZnQudHN4Pzc4ZmIiXSwibmFtZXMiOlsiQWRkck1vZGFsIiwiZHluYW1pYyIsIktleXNNb2RhbCIsIk9mZmVyTW9kYWwiLCJOZnQiLCJ1c2VXZWIzUmVhY3QiLCJhY2NvdW50IiwiY2hhaW5JZCIsImxpYnJhcnkiLCJ1c2VSb3V0ZXIiLCJxdWVyeSIsInVzZVN0YXRlIiwiY2MiLCJjbGVhckNhY2hlIiwic2V0Q2FjaGUiLCJjdXJhdGVkIiwic2hvd01vdmUiLCJzZXRTaG93TW92ZSIsIm5hbWUiLCJjaGFpbiIsInF1YWxpZmllZENvbGxlY3Rpb24iLCJzZXRRdWFsaWZpZWRDb2xsZWN0aW9uIiwibW92aW5nIiwic2V0TW92aW5nIiwia2V5IiwibWludFBhc3N3b3JkIiwic2V0TWludFBhc3N3b3JkIiwib2ZmZXIiLCJzaG93T2ZmZXIiLCJzZXRTaG93T2ZmZXIiLCJmcmFtZWQiLCJzZXRGcmFtZWQiLCJpZCIsInRva2VuSWQiLCJzZXRUb2tlbklkIiwic2xpZGVzaG93T25seSIsInNldFNsaWRlc2hvd09ubHkiLCJ2YXVsdE5hbWUiLCJzZXRWYXVsdE5hbWUiLCJ2YXVsdElQRlMiLCJzZXRWYXVsdElQRlMiLCJ2YXVsdEltYWdlSVBGUyIsInNldFZhdWx0SW1hZ2VJUEZTIiwidmF1bHRDaXBoZXJ0ZXh0VjIiLCJzZXRWYXVsdENpcGhlcnRleHRWMiIsInZhdWx0RGVzYyIsInNldFZhdWx0RGVzYyIsInZhdWx0SW1hZ2UiLCJzZXRWYXVsdEltYWdlIiwib3duZWRJbWFnZSIsInNldE93bmVkSW1hZ2UiLCJ2YXVsdFZhbHVlcyIsInNldFZhdWx0VmFsdWVzIiwibG9hZGVkVmFsdWVzIiwic2V0TG9hZGVkVmFsdWVzIiwidmF1bHREYXRhVmFsdWVzIiwic2V0VmF1bHREYXRhVmFsdWVzIiwiYXR0cmlidXRlcyIsInNldEF0dHJpYnV0ZXMiLCJ2YXVsdEFkZHJlc3NlcyIsInNldFZhdWx0QWRkcmVzc2VzIiwidmF1bHRQcml2YWN5Iiwic2V0VmF1bHRQcml2YWN5IiwidmF1bHRUb3RhbFZhbHVlIiwic2V0VmF1bHRUb3RhbFZhbHVlIiwidmF1bHRDaGFpbklkIiwic2V0VmF1bHRDaGFpbklkIiwidmF1bHRDaGFpbiIsInNldFZhdWx0Q2hhaW4iLCJoYXNoIiwic2V0SGFzaCIsImN1cnJDb2luIiwic2V0Q3VyckNvaW4iLCJjdXJyQWRkciIsInNldEN1cnJBZGRyIiwibG9hZGVkIiwic3RhdGUiLCJzZXRTdGF0ZSIsIm1pbmUiLCJzZXRNaW5lIiwiY2xhaW1pbmciLCJzZXRDbGFpbWluZyIsInN0YXR1cyIsInNldFN0YXR1cyIsInNlYWxlZCIsInNldFNlYWxlZCIsImNsYWltZWRCeSIsInNldENsYWltZWRCeSIsIm1uZW1vbmljIiwic2V0TW5lbW9uaWMiLCJwcml2S2V5QlRDIiwic2V0UHJpdktleUJUQyIsInByaXZLZXlFVEgiLCJzZXRQcml2S2V5RVRIIiwicHJpdlZhbHVlcyIsInNldEtleVZhbHVlcyIsImxvYWRpbmdBcGkiLCJzZXRMb2FkaW5nQXBpIiwiZGVjcnlwdGVkRWZmZWN0Iiwic2V0RGVjcnlwdGVkRWZmZWN0IiwiZGVjcnlwdGVkRWZmZWN0UnVubmluZyIsInNldERlY3J5cHRlZEVmZmVjdFJ1bm5pbmciLCJkZWNyeXB0UGFzc3dvcmQiLCJzZXREZWNyeXB0UGFzc3dvcmQiLCJpbnZhbGlkVmF1bHQiLCJzZXRJbnZhbGlkVmF1bHQiLCJhY2NlcHRpbmciLCJzZXRBY2NlcHRpbmciLCJhcHByb3ZpbmciLCJzZXRBcHByb3ZpbmciLCJhY2NlcHRhYmxlIiwic2V0QWNjZXB0YWJsZSIsInRyYW5zZmVyUGFzc3dvcmQiLCJzZXRUcmFuc2ZlclBhc3N3b3JkIiwic2hvd1RyYW5zZmVyUGFzc3dvcmQiLCJzZXRTaG93VHJhbnNmZXJQYXNzd29yZCIsInByZVRyYW5zZmVyaW5nIiwic2V0UHJlVHJhbnNmZXJpbmciLCJ0cmFuc2ZlcmluZyIsInNldFRyYW5zZmVyaW5nIiwib3duZXIiLCJzZXRPd25lciIsImxpdmUiLCJzZXRMaXZlIiwiY2hlY2tMaXZlIiwic2V0Q2hlY2tMaXZlIiwibm9uY2UiLCJzZXROb25jZSIsImJsb2NrIiwic2V0QmxvY2siLCJtaW50U2lnbmF0dXJlIiwic2V0TWludFNpZ25hdHVyZSIsInRvIiwic2V0VG8iLCJzaG93VmVyaWZ5aW5nU2lnbmF0dXJlIiwic2V0U2hvd1ZlcmlmeWluZ1NpZ25hdHVyZSIsInNob3dNYWtpbmdWYXVsdE1zZyIsInNldFNob3dNYWtpbmdWYXVsdE1zZyIsIm1pbnRpbmciLCJzZXRNaW50aW5nIiwiaXNDcm93ZFNhbGUiLCJzZXRJc0Nyb3dkU2FsZSIsImFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcyIsInNldEFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcyIsImltYWdlIiwibWV0YWRhdGEiLCJ0YXJnZXRBc3NldCIsInNldFRhcmdldEFzc2V0Iiwic2VyaWFsTnVtYmVyIiwidGFyZ2V0Q29udHJhY3QiLCJzZXRUYXJnZXRDb250cmFjdCIsIm1vdmVfdGFyZ2V0QXNzZXQiLCJzZXRNb3ZlVGFyZ2V0QXNzZXQiLCJtb3ZlX3RhcmdldENvbnRyYWN0Iiwic2V0TW92ZVRhcmdldENvbnRyYWN0IiwiaXNDb3ZhbEFwcHJvdmVkIiwic2V0SXNDb3ZhbEFwcHJvdmVkIiwiYXBwcm92ZWQiLCJzZXRBcHByb3ZlZCIsImRlY2ltYWxzIiwic2V0RGVjaW1hbHMiLCJhbGxvd2FuY2UiLCJzZXRBbGxvd2FuY2UiLCJiYWxhbmNlIiwic2V0QmFsYW5jZSIsInByaWNlIiwic2V0UHJpY2UiLCJtaW5lVW5NaW50ZWQiLCJzZXRNaW5lVW5NaW50ZWQiLCJtaW50TG9ja2VkRm9yZXZlciIsInNldE1pbnRMb2NrZWRGb3JldmVyIiwicmF3TWV0YWRhdGEiLCJzZXRSYXdNZXRhZGF0YSIsImhhbmRsZXJDb250cmFjdCIsInVzZUNvbnRyYWN0IiwiY29udHJhY3RBZGRyZXNzZXMiLCJ2YXVsdEhhbmRsZXIiLCJ2YXVsdEhhbmRsZXJBYmkiLCJ2YXVsdEhhbmRsZXJDb250cmFjdCIsInZhdWx0SGFuZGxlclY4IiwidmF1bHRIYW5kbGVyVjhBYmkiLCJlbWJsZW1Db250cmFjdCIsImVtYmxlbVZhdWx0IiwiZW1ibGVtQWJpIiwiY292YWxDb250cmFjdCIsImNvdmFsIiwiY292YWxBYmkiLCJ1c2VEaXNjbG9zdXJlIiwiaXNPcGVuQWRkck1vZGFsIiwiaXNPcGVuIiwib25PcGVuQWRkck1vZGFsIiwib25PcGVuIiwib25DbG9zZUFkZHJNb2RhbCIsIm9uQ2xvc2UiLCJpc09wZW5LZXlzTW9kYWwiLCJvbk9wZW5LZXlzTW9kYWwiLCJvbkNsb3NlS2V5c01vZGFsIiwiaXNPcGVuT2ZmZXJNb2RhbCIsIm9uT3Blbk9mZmVyTW9kYWwiLCJvbkNsb3NlT2ZmZXJNb2RhbCIsIm9uVG9nZ2xlIiwiaXNNYW5hZ2VBZGRyZXNzT3BlbiIsIm9uTWFuYWdlQWRkcmVzc1RvZ2dsZSIsImlzQWR2YW5jZWRPcGVuIiwib25BZHZhbmNlZFRvZ2dsZSIsInVzZUNvbG9yTW9kZSIsImNvbG9yTW9kZSIsInRyYW5zYWsiLCJ0cmFuc2ZlckltYWdlIiwiZ2V0VmF1bHRDb250cmFjdCIsImFkZHJlc3MiLCJDb250cmFjdCIsImdldFNpZ25lciIsImNvbm5lY3RVbmNoZWNrZWQiLCJnZXRDdXJhdGVkQ29udHJhY3QiLCJlcmMxMTU1QWJpIiwiY2hlY2tMaXZlbGluZXNzIiwiY2IiLCJmZXRjaCIsIkVNQkxFTV9BUEkiLCJtZXRob2QiLCJoZWFkZXJzIiwic2VydmljZSIsImNoYWluaWQiLCJ0b1N0cmluZyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwibGF6eU1pbnQiLCJzaWduTWVzc2FnZSIsInNpZ25hdHVyZSIsImVycm9yIiwic2V0VGltZW91dCIsImRlbGF5ZWRNaW50IiwiYWxlcnQiLCJtc2ciLCJzaWciLCJjaXBoZXJUZXh0SGFzaCIsImZpbHRlciIsImNvaW4iLCJidXlXaXRoU2lnbmF0dXJlMiIsImZpcmVNZXRhTWFzayIsImdldFdpdG5lc3MiLCJ3aXRuZXNzIiwidHJhbnNmZXJXaXRoQ29kZSIsImNvZGUiLCJhZGRQcmVUcmFuc2ZlciIsImhhbmRsZUFwcHJvdmVGb3JhbGwiLCJzZXRBcHByb3ZhbEZvckFsbCIsImFwcHJvdmVDb3ZhbEZsb3ciLCJhcHByb3ZlIiwiZGVsZXRlVmF1bHQiLCJsb2NhdGlvbiIsImhyZWYiLCJzcGxpdCIsInN5bmNBY2NvdW50Iiwic3luY2hlZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwiZ2V0VmF1bHQiLCJqc29uRGF0YSIsInNldFN0YXRlcyIsImltYWdlX2lwZnMiLCJjb2xsZWN0aW9uQWRkcmVzcyIsImdldEFsbEJhbGFuY2VzTGl2ZSIsInYiLCJpbmNsdWRlcyIsImNpcGhlcnRleHRWMiIsIm1pbnRMb2NrZWQiLCJtaW50TG9ja0Jsb2NrIiwiZGVzY3JpcHRpb24iLCJ0b3RhbFZhbHVlIiwidmFsdWVzIiwiY29uY2F0IiwiaXRlbSIsInRyYWl0X3R5cGUiLCJhZGRyZXNzZXMiLCJpcGZzIiwib3JpZ2luIiwibmV0d29yayIsImlzUHZ0IiwibGVuZ3RoIiwicHJvamVjdCIsInZhbHVlIiwicHJvamVjdE5hbWUiLCJfcXVhbGlmaWVkQ29sbGVjdGlvbiIsImN1cmF0ZWRDb250cmFjdHMiLCJnZXRBbGxCYWxhbmNlcyIsImJhbGFuY2VzIiwiZ2V0QWxsQmFsYW5jZXNCeUFkZHJlc3MiLCJldGhBZGRyZXNzIiwiYnRjQWRkcmVzcyIsInNhdmVQYXNzd29yZFRvTG9jYWxTdG9yYWdlIiwibG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSIsInN0b3JlZFB3IiwiZ2V0U2lnbmVkSldUIiwibXlIZWFkZXJzIiwiSGVhZGVycyIsImFwcGVuZCIsInJhdyIsIlNJR19BUEkiLCJyZWRpcmVjdCIsImdldFRvcnVzS2V5cyIsInZlcmlmaWVySWQiLCJpZFRva2VuIiwiZmV0Y2hOb2RlRGV0YWlscyIsIkZldGNoTm9kZURldGFpbHMiLCJ0b3J1c1V0aWxzIiwiVG9ydXNVdGlscyIsImVuYWJsZU9uZUtleSIsImdldE5vZGVEZXRhaWxzIiwidmVyaWZpZXIiLCJ0b3J1c05vZGVFbmRwb2ludHMiLCJ0b3J1c0luZGV4ZXMiLCJyZXRyaWV2ZVNoYXJlcyIsInZlcmlmaWVyX2lkIiwicHJpdktleSIsInByaXZhdGVLZXkiLCJhZGRBZGRyZXNzIiwiZGVjcnlwdEVtYmVkIiwiZ2V0Q29udHJhY3RTdGF0ZXMiLCJmaW5pc2giLCJnZXRQcmVUcmFuc2ZlciIsImlzQXBwcm92ZWRGb3JBbGwiLCJpc0FwcHJvdmVkIiwiX2Zyb20iLCJfb3duZXIiLCJvd25lZCIsImdldE93bmVyT2ZTZXJpYWwiLCJvd25lck9mIiwiYmFsYW5jZU9mIiwiTnVtYmVyIiwidXNlRWZmZWN0IiwiaGFzQWRkcmVzcyIsIm9uUmVuZXciLCJoYW5kbGVTaWduIiwiZ2V0U2VyaWFsIiwidG9rZW4iLCJrZXlzIiwiYnl0ZXMiLCJDcnlwdG9KUyIsIkFFUyIsImRlY3J5cHQiLCJwYXlsb2FkIiwicGFyc2UiLCJlbmMiLCJVdGY4IiwicGhyYXNlIiwiZm9yRWFjaCIsImdldFNUWEtleSIsIndpbmRvdyIsInBocmFzZVBhdGhUb0tleSIsInBhdGgiLCJlcnIiLCJnZW5lcmF0ZVdhbGxldCIsInNlY3JldEtleSIsInBhc3N3b3JkIiwid2FsbGV0IiwiYWNjb3VudHMiLCJzdHhQcml2YXRlS2V5IiwiaGFuZGxlSGlkZUFzc2V0IiwiaGlkZUFzc2V0IiwiaGFuZGxlQWRkcmVzc1NpZ24iLCJyZXN1bHQiLCJoYW5kbGVPd25lZEVtYmVkIiwiaGFuZGxlTW92ZSIsIkVNQkxFTV9WMl9BUEkiLCJtb3ZlVmF1bHQiLCJzZXJpYWwiLCJoYW5kbGVDbGFpbSIsImNsYWltIiwiY2xhaW1PbkNoYWluIiwic3RhcnREZWNyeXB0RWZmZWN0IiwibmV4dEZyYW1lIiwicG9zIiwiaSIsImNsZW4iLCJzdHJpIiwibnVtIiwiTWF0aCIsImZsb29yIiwidGhlTGV0dGVycyIsInJhbmRvbSIsImxldHRlciIsImNoYXJBdCIsInNpIiwiaW5jcmVtZW50IiwiZml4ZWQiLCJjdG50Iiwic3BlZWQiLCJydXN0bGUiLCJub0xheW91dCIsInNwbGl0RGVzY3JpcHRpb24iLCJ3b3JkcyIsImRlc2MiLCJ0cmltIiwidHJ5RGVjcnlwdCIsImNpcGhlcnRleHQiLCJyZXBsYWNlIiwiZGVjcnlwdEFkZHJlc3NlcyIsImNpcGhlclRleHQiLCJkZWNyeXB0ZWREYXRhIiwidmlzaXRPcGVuU2VhTGluayIsIm9wZW4iLCJ2aXNpdExvb2tzUmFyZUxpbmsiLCJ2aXNpdEFyY2FkZUxpbmsiLCJfX2h0bWwiLCJDSEFJTl9JRF9OQU1FUyIsInRvTG9jYWxlU3RyaW5nIiwidHlwZSIsIm1hcCIsImNhblN3aXBlIiwiZ2ZtIiwiZSIsInRhcmdldCIsInRvRml4ZWQiLCJhdHRyaWJ1dGVfa2V5IiwiYWRkciIsInBvdyIsInByb3RvY29sIiwiaG9zdCIsImFiaSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQXNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BLElBQU1BLFNBQVMsR0FBR0Msb0RBQU8sTUFBQztBQUFBLFNBQU0sOEhBQU47QUFBQSxDQUFEO0FBQUE7QUFBQTtBQUFBLGtDQUFjLCtDQUFkO0FBQUE7QUFBQSxjQUFjLGFBQWQ7QUFBQTtBQUFBLEVBQXpCO01BQU1ELFM7QUFDTixJQUFNRSxTQUFTLEdBQUdELG9EQUFPLE9BQUM7QUFBQSxTQUFNLDhIQUFOO0FBQUEsQ0FBRDtBQUFBO0FBQUE7QUFBQSxrQ0FBYywrQ0FBZDtBQUFBO0FBQUEsY0FBYyxhQUFkO0FBQUE7QUFBQSxFQUF6QjtNQUFNQyxTO0FBQ04sSUFBTUMsVUFBVSxHQUFHRixvREFBTyxPQUFDO0FBQUEsU0FBTSxnSUFBTjtBQUFB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ICBGbGV4LFxuICBJbWFnZSxcbiAgVGV4dCxcbiAgU3RhY2ssXG4gIEJ1dHRvbixcbiAgQnV0dG9uR3JvdXAsXG4gIElucHV0LFxuICBMaW5rLFxuICBBbGVydCxcbiAgQWxlcnRJY29uLFxuICB1c2VEaXNjbG9zdXJlLFxuICBDb2xsYXBzZSxcbiAgdXNlQ29sb3JNb2RlLFxuICBUYWJzLFxuICBUYWJMaXN0LFxuICBUYWIsXG4gIFRhYlBhbmVsLFxuICBUYWJQYW5lbHNcbn0gZnJvbSAnQGNoYWtyYS11aS9jb3JlJ1xuXG5pbXBvcnQge0hTdGFja30gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCdcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIlxuaW1wb3J0IHsgdXNlV2ViM1JlYWN0IH0gZnJvbSAnQHdlYjMtcmVhY3QvY29yZSdcbmltcG9ydCB7IFNldFN0YXRlQWN0aW9uLCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcbmltcG9ydCBSZWZyZXNoaW5nIGZyb20gJy4vUmVmcmVzaGluZydcbmltcG9ydCBMb2FkZXIgZnJvbSAncmVhY3QtbG9hZGVyJ1xuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJ1xuaW1wb3J0IHsgQ29udHJhY3QgfSBmcm9tICdAZXRoZXJzcHJvamVjdC9jb250cmFjdHMnXG5pbXBvcnQgeyBUcmFuc2FjdGlvblRvYXN0IH0gZnJvbSAnLi9UcmFuc2FjdGlvblRvYXN0J1xuaW1wb3J0IHsgRU1CTEVNX0FQSSwgY29udHJhY3RBZGRyZXNzZXMsIGN1cmF0ZWRDb250cmFjdHMsIFNJR19BUEksIEVNQkxFTV9WMl9BUEksIFpFUk9fQUREUkVTUyB9IGZyb20gJy4uL2NvbnN0YW50cydcbmltcG9ydCB7IHVzZUNvbnRyYWN0IH0gZnJvbSAnLi4vaG9va3MnXG5pbXBvcnQgeyBDSEFJTl9JRF9OQU1FUyB9IGZyb20gJy4uL3V0aWxzJ1xuaW1wb3J0IENyeXB0b0pTIGZyb20gJ2NyeXB0by1qcydcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJ1xuaW1wb3J0IGdmbSBmcm9tICdyZW1hcmstZ2ZtJ1xuaW1wb3J0IEVtYmVkIGZyb20gJy4vRW1iZWQnXG5pbXBvcnQgTkZUU2xpZGVzaG93IGZyb20gJy4vZW1iZWQvTkZUU2xpZGVzaG93J1xuaW1wb3J0IENvaW5CYWxhbmNlIGZyb20gJy4vcGFydGlhbHMvQ29pbkJhbGFuY2UnXG5pbXBvcnQgQXR0cmlidXRlcyBmcm9tICcuL3BhcnRpYWxzL0F0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVXYWxsZXQgfSBmcm9tICdAc3RhY2tzL3dhbGxldC1zZGsnO1xuaW1wb3J0IEZldGNoTm9kZURldGFpbHMgZnJvbSBcIkB0b3J1c2xhYnMvZmV0Y2gtbm9kZS1kZXRhaWxzXCJcbmltcG9ydCBUb3J1c1V0aWxzIGZyb20gXCJAdG9ydXNsYWJzL3RvcnVzLmpzXCJcbmltcG9ydCBKc29uRG93bmxvYWRMaW5rIGZyb20gJy4vSnNvbkRvd25sb2FkTGluaydcbmltcG9ydCBBcHByb3ZhbCBmcm9tICcuL3BhcnRpYWxzL0FwcHJvdmFsJ1xuXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7IHBocmFzZVRvS2V5OiBhbnksIHBocmFzZVBhdGhUb0tleTogYW55fVxufVxuXG5jb25zdCBBZGRyTW9kYWwgPSBkeW5hbWljKCgpID0+IGltcG9ydCgnLi9BZGRyTW9kYWwnKSlcbmNvbnN0IEtleXNNb2RhbCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL0tleXNNb2RhbCcpKVxuY29uc3QgT2ZmZXJNb2RhbCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL09mZmVyTW9kYWwnKSlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmZ0KCkge1xuICBcbiBcbiAgY29uc3QgeyBhY2NvdW50LCBjaGFpbklkLCBsaWJyYXJ5IH0gPSB1c2VXZWIzUmVhY3QoKVxuICBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKVxuICBjb25zdCBbY2xlYXJDYWNoZSwgc2V0Q2FjaGVdID0gdXNlU3RhdGUocXVlcnkuY2MgPT0gJ3QnKVxuICBjb25zdCBbc2hvd01vdmUsIHNldFNob3dNb3ZlXSA9IHVzZVN0YXRlKHF1ZXJ5LmN1cmF0ZWQgPT0gJ3QnKVxuICBjb25zdCBbcXVhbGlmaWVkQ29sbGVjdGlvbiwgc2V0UXVhbGlmaWVkQ29sbGVjdGlvbl0gPSB1c2VTdGF0ZSh7MTogJycsIG5hbWU6ICcnLCBjaGFpbjogJyd9KVxuICBjb25zdCBbbW92aW5nLCBzZXRNb3ZpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIFxuICBjb25zdCBbbWludFBhc3N3b3JkLCBzZXRNaW50UGFzc3dvcmRdID0gdXNlU3RhdGUocXVlcnkua2V5KVxuICBjb25zdCBbc2hvd09mZmVyLCBzZXRTaG93T2ZmZXJdID0gdXNlU3RhdGUocXVlcnkub2ZmZXIgfHwgZmFsc2UpXG4gIGNvbnN0IFtmcmFtZWQsIHNldEZyYW1lZF0gPSB1c2VTdGF0ZShxdWVyeS5mcmFtZWQgfHwgdHJ1ZSlcbiAgY29uc3QgW3Rva2VuSWQsIHNldFRva2VuSWRdID0gdXNlU3RhdGUocXVlcnkuaWQpXG4gIGNvbnN0IFtzbGlkZXNob3dPbmx5LCBzZXRTbGlkZXNob3dPbmx5XSA9IHVzZVN0YXRlKHF1ZXJ5LnNsaWRlc2hvd09ubHkgfHwgZmFsc2UpXG4gIGNvbnN0IFt2YXVsdE5hbWUsIHNldFZhdWx0TmFtZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0SVBGUywgc2V0VmF1bHRJUEZTXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRJbWFnZUlQRlMsIHNldFZhdWx0SW1hZ2VJUEZTXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHRDaXBoZXJ0ZXh0VjIsIHNldFZhdWx0Q2lwaGVydGV4dFYyXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbdmF1bHREZXNjLCBzZXRWYXVsdERlc2NdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFt2YXVsdEltYWdlLCBzZXRWYXVsdEltYWdlXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbb3duZWRJbWFnZSwgc2V0T3duZWRJbWFnZV0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ZhdWx0VmFsdWVzLCBzZXRWYXVsdFZhbHVlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW2xvYWRlZFZhbHVlcywgc2V0TG9hZGVkVmFsdWVzXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdmF1bHREYXRhVmFsdWVzLCBzZXRWYXVsdERhdGFWYWx1ZXNdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFthdHRyaWJ1dGVzLCBzZXRBdHRyaWJ1dGVzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbdmF1bHRBZGRyZXNzZXMsIHNldFZhdWx0QWRkcmVzc2VzXSA9IHVzZVN0YXRlKFtdKVxuICBjb25zdCBbdmF1bHRQcml2YWN5LCBzZXRWYXVsdFByaXZhY3ldID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt2YXVsdFRvdGFsVmFsdWUsIHNldFZhdWx0VG90YWxWYWx1ZV0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbdmF1bHRDaGFpbklkLCBzZXRWYXVsdENoYWluSWRdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW3ZhdWx0Q2hhaW4sIHNldFZhdWx0Q2hhaW5dID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2hhc2gsIHNldEhhc2hdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2N1cnJDb2luLCBzZXRDdXJyQ29pbl0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2N1cnJBZGRyLCBzZXRDdXJyQWRkcl0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7IGxvYWRlZDogZmFsc2UgfSlcbiAgY29uc3QgW21pbmUsIHNldE1pbmVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtjbGFpbWluZywgc2V0Q2xhaW1pbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZSgnY2xhaW1lZCcpXG4gIGNvbnN0IFtzZWFsZWQsIHNldFNlYWxlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2NsYWltZWRCeSwgc2V0Q2xhaW1lZEJ5XSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFttbmVtb25pYywgc2V0TW5lbW9uaWNdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtwcml2S2V5QlRDLCBzZXRQcml2S2V5QlRDXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbcHJpdktleUVUSCwgc2V0UHJpdktleUVUSF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW3ByaXZWYWx1ZXMsIHNldEtleVZhbHVlc10gPSB1c2VTdGF0ZShbXSlcbiAgY29uc3QgW2xvYWRpbmdBcGksIHNldExvYWRpbmdBcGldID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0ZWRFZmZlY3QsIHNldERlY3J5cHRlZEVmZmVjdF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2RlY3J5cHRlZEVmZmVjdFJ1bm5pbmcsIHNldERlY3J5cHRlZEVmZmVjdFJ1bm5pbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNyeXB0UGFzc3dvcmQsIHNldERlY3J5cHRQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJylcbiAgY29uc3QgW2ludmFsaWRWYXVsdCwgc2V0SW52YWxpZFZhdWx0XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYWNjZXB0aW5nLCBzZXRBY2NlcHRpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthcHByb3ZpbmcsIHNldEFwcHJvdmluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2FjY2VwdGFibGUsIHNldEFjY2VwdGFibGVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt0cmFuc2ZlclBhc3N3b3JkLCBzZXRUcmFuc2ZlclBhc3N3b3JkXSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbc2hvd1RyYW5zZmVyUGFzc3dvcmQsIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbcHJlVHJhbnNmZXJpbmcsIHNldFByZVRyYW5zZmVyaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdHJhbnNmZXJpbmcsIHNldFRyYW5zZmVyaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbb3duZXIsIHNldE93bmVyXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtsaXZlLCBzZXRMaXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbY2hlY2tMaXZlLCBzZXRDaGVja0xpdmVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtub25jZSwgc2V0Tm9uY2VdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2Jsb2NrLCBzZXRCbG9ja10gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbbWludFNpZ25hdHVyZSwgc2V0TWludFNpZ25hdHVyZV0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbdG8sIHNldFRvXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtzaG93VmVyaWZ5aW5nU2lnbmF0dXJlLCBzZXRTaG93VmVyaWZ5aW5nU2lnbmF0dXJlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbc2hvd01ha2luZ1ZhdWx0TXNnLCBzZXRTaG93TWFraW5nVmF1bHRNc2ddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFttaW50aW5nLCBzZXRNaW50aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbaXNDcm93ZFNhbGUsIHNldElzQ3Jvd2RTYWxlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzLCBzZXRBbHRlcm5hdGVDb250cmFjdEFkZHJlc3NdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW3RhcmdldEFzc2V0LCBzZXRUYXJnZXRBc3NldF0gPSB1c2VTdGF0ZSh7bmFtZTogJycsIGltYWdlOiAnJywgbWV0YWRhdGE6ICcnfSlcbiAgY29uc3QgW3RhcmdldENvbnRyYWN0LCBzZXRUYXJnZXRDb250cmFjdF0gPSB1c2VTdGF0ZSh7bmFtZTogJycsIGNoYWluOiAnJywgNDogJycsIDE6ICcnLCB0b2tlbklkOiB7fSwgc2VyaWFsTnVtYmVyOiB7J2hleCc6Jyd9IH0pXG4gIGNvbnN0IFttb3ZlX3RhcmdldEFzc2V0LCBzZXRNb3ZlVGFyZ2V0QXNzZXRdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBpbWFnZTogJycsIG1ldGFkYXRhOiAnJ30pXG4gIGNvbnN0IFttb3ZlX3RhcmdldENvbnRyYWN0LCBzZXRNb3ZlVGFyZ2V0Q29udHJhY3RdID0gdXNlU3RhdGUoe25hbWU6ICcnLCBjaGFpbjogJycsIDQ6ICcnLCAxOiAnJywgdG9rZW5JZDoge30sIHNlcmlhbE51bWJlcjogeydoZXgnOicnfSB9KVxuICBjb25zdCBbaXNDb3ZhbEFwcHJvdmVkLCBzZXRJc0NvdmFsQXBwcm92ZWRdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthcHByb3ZlZCwgc2V0QXBwcm92ZWRdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtkZWNpbWFscywgc2V0RGVjaW1hbHNdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2FsbG93YW5jZSwgc2V0QWxsb3dhbmNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtiYWxhbmNlLCBzZXRCYWxhbmNlXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFtwcmljZSwgc2V0UHJpY2VdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgW21pbmVVbk1pbnRlZCwgc2V0TWluZVVuTWludGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbbWludExvY2tlZEZvcmV2ZXIsIHNldE1pbnRMb2NrZWRGb3JldmVyXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbcmF3TWV0YWRhdGEsIHNldFJhd01ldGFkYXRhXSA9IHVzZVN0YXRlKHt9KVxuICBcbiAgY29uc3QgaGFuZGxlckNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJBYmksIHRydWUpXG4gIGNvbnN0IHZhdWx0SGFuZGxlckNvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyVjhbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4QWJpLCB0cnVlKVxuICBsZXQgZW1ibGVtQ29udHJhY3QgPSB1c2VDb250cmFjdChjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFtjaGFpbklkXSwgY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtQWJpLCB0cnVlKVxuICBjb25zdCBjb3ZhbENvbnRyYWN0ID0gdXNlQ29udHJhY3QoY29udHJhY3RBZGRyZXNzZXMuY292YWxbY2hhaW5JZF0sIGNvbnRyYWN0QWRkcmVzc2VzLmNvdmFsQWJpLCB0cnVlKVxuXG4gIGNvbnN0IHsgaXNPcGVuOiBpc09wZW5BZGRyTW9kYWwsIG9uT3Blbjogb25PcGVuQWRkck1vZGFsLCBvbkNsb3NlOiBvbkNsb3NlQWRkck1vZGFsIH0gPSB1c2VEaXNjbG9zdXJlKClcbiAgY29uc3QgeyBpc09wZW46IGlzT3BlbktleXNNb2RhbCwgb25PcGVuOiBvbk9wZW5LZXlzTW9kYWwsIG9uQ2xvc2U6IG9uQ2xvc2VLZXlzTW9kYWwgfSA9IHVzZURpc2Nsb3N1cmUoKVxuICBjb25zdCB7IGlzT3BlbjogaXNPcGVuT2ZmZXJNb2RhbCwgb25PcGVuOiBvbk9wZW5PZmZlck1vZGFsLCBvbkNsb3NlOiBvbkNsb3NlT2ZmZXJNb2RhbCB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuLCBvblRvZ2dsZSB9ID0gdXNlRGlzY2xvc3VyZSgpXG4gIGNvbnN0IHsgaXNPcGVuOiBpc01hbmFnZUFkZHJlc3NPcGVuLCBvblRvZ2dsZTogb25NYW5hZ2VBZGRyZXNzVG9nZ2xlIH0gPSB1c2VEaXNjbG9zdXJlKClcbiAgY29uc3QgeyBpc09wZW46IGlzQWR2YW5jZWRPcGVuLCBvblRvZ2dsZTogb25BZHZhbmNlZFRvZ2dsZSB9ID0gdXNlRGlzY2xvc3VyZSgpXG5cbiAgY29uc3QgeyBjb2xvck1vZGUgfSA9IHVzZUNvbG9yTW9kZSgpXG5cbiAgbGV0IHRyYW5zYWs6IHsgb246IChhcmcwOiBhbnksIGFyZzE6IHsgKGRhdGE6IGFueSk6IHZvaWQ7IChvcmRlckRhdGE6IGFueSk6IHZvaWQgfSkgPT4gdm9pZDsgQUxMX0VWRU5UUzogYW55OyBFVkVOVFM6IHsgVFJBTlNBS19PUkRFUl9TVUNDRVNTRlVMOiBhbnkgfTsgY2xvc2U6ICgpID0+IHZvaWQ7IGluaXQ6ICgpID0+IHZvaWQgfVxuXG4gIGludGVyZmFjZSBFcnJvcldpdGhDb2RlIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvZGU/OiBudW1iZXJcbiAgfVxuXG4gIGxldCB0cmFuc2ZlckltYWdlOiBzdHJpbmc7XG5cbiAgY29uc3QgZ2V0VmF1bHRDb250cmFjdCA9IChhZGRyZXNzID0gbnVsbCkgPT57XG4gICAgcmV0dXJuIG5ldyBDb250cmFjdChhZGRyZXNzIHx8IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W2NoYWluSWRdLCBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1BYmksIGxpYnJhcnkuZ2V0U2lnbmVyKGFjY291bnQpLmNvbm5lY3RVbmNoZWNrZWQoKSlcbiAgfVxuXG4gIGNvbnN0IGdldEN1cmF0ZWRDb250cmFjdCA9IChhZGRyZXNzID0gbnVsbCkgPT57XG4gICAgcmV0dXJuIG5ldyBDb250cmFjdChhZGRyZXNzLCBjb250cmFjdEFkZHJlc3Nlcy5lcmMxMTU1QWJpLCBsaWJyYXJ5LmdldFNpZ25lcihhY2NvdW50KS5jb25uZWN0VW5jaGVja2VkKCkpXG4gIH0gIFxuXG4gIGNvbnN0IGNoZWNrTGl2ZWxpbmVzcyA9ICh0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKCk6IHZvaWQ7ICgpOiB2b2lkOyAoKTogYW55IH0pPT57XG4gICAgLy8gYWxlcnQoYGhlcmUgJHtvd25lcn0sICR7bW92ZV90YXJnZXRBc3NldH0gJHttb3ZlX3RhcmdldENvbnRyYWN0fWApXG4gICAgZmV0Y2goRU1CTEVNX0FQSSArICcvbGl2ZWxpbmVzcycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgfSxcbiAgICAgIC8vIFdlIGNvbnZlcnQgdGhlIFJlYWN0IHN0YXRlIHRvIEpTT04gYW5kIHNlbmQgaXQgYXMgdGhlIFBPU1QgYm9keVxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3Rva2VuSWQ6IHRva2VuSWR9KSxcbiAgICB9KS50aGVuKGFzeW5jIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgIHNldExpdmUoZGF0YS5saXZlKVxuICAgICAgY29uc29sZS5sb2coXCJMaXZlbGluZXNzIGNoZWNrXCIsIGRhdGEpXG4gICAgfSlcbiAgICByZXR1cm4gY2IoKVxuICB9XG5cbiAgY29uc3QgbGF6eU1pbnQgPSAoKSA9PntcbiAgICBsaWJyYXJ5LmdldFNpZ25lcihhY2NvdW50KVxuICAgIC5zaWduTWVzc2FnZSgnRGVsYXllZCBNaW50aW5nOiAnICsgdG9rZW5JZClcbiAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwic2lnXCIsIHNpZ25hdHVyZSlcbiAgICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL2xhenlNaW50Jywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7dG9rZW5JZDogdG9rZW5JZCwgc2lnbmF0dXJlOiBzaWduYXR1cmV9KSxcbiAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICBpZiAoIWRhdGEuZXJyb3IgJiYgZGF0YS5kYXRhKSB7XG4gICAgICAgICAgICBzZXRNaW50U2lnbmF0dXJlKGRhdGEuZGF0YS5zaWduYXR1cmUpXG4gICAgICAgICAgICBzZXROb25jZShkYXRhLmRhdGEubm9uY2UpXG4gICAgICAgICAgICBzZXRCbG9jayhkYXRhLmRhdGEuYmxvY2spXG4gICAgICAgICAgICBzZXRTaG93VmVyaWZ5aW5nU2lnbmF0dXJlKHRydWUpXG4gICAgICAgICAgICAvLyBzZXRDcmVhdGluZyh0cnVlKVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKT0+e1xuICAgICAgICAgICAgICBkZWxheWVkTWludChkYXRhLmRhdGEubm9uY2UsIGRhdGEuZGF0YS5ibG9jaywgZGF0YS5kYXRhLnNpZ25hdHVyZSlcbiAgICAgICAgICAgIH0sIDE1MDApXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFsZXJ0KGRhdGEuZXJyb3I/IGRhdGEubXNnOiAndW5rbm93biBlcnJvcicgKVxuICAgICAgICAgIH0gICAgICAgICAgICBcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGRlbGF5ZWRNaW50ID0gKG5vbmNlLCBibG9jaywgc2lnKSA9PiB7XG4gICAgLy8gc2V0Q3JlYXRpbmcodHJ1ZSlcbiAgICAgIGNvbnNvbGUubG9nKFwiRGVsYXllZCBNaW50aW5nXCIpXG4gICAgICBzZXRTaG93VmVyaWZ5aW5nU2lnbmF0dXJlKGZhbHNlKVxuICAgICAgc2V0U2hvd01ha2luZ1ZhdWx0TXNnKHRydWUpXG4gICAgICBzZXRNaW50aW5nKHRydWUpXG4gICAgICBsZXQgY2lwaGVyVGV4dEhhc2ggPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoYWRkcmVzcz0+eyByZXR1cm4gYWRkcmVzcy5jb2luID09IFwiRVRIXCJ9KVswXS5hZGRyZXNzXG4gICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tRGVsYXllZCBNaW50aW5nXCIsIGFjY291bnQsIHRva2VuSWQsIGNpcGhlclRleHRIYXNoLCBub25jZSwgYmxvY2ssIHNpZylcbiAgICAgIDsoaGFuZGxlckNvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLmJ1eVdpdGhTaWduYXR1cmUyKGFjY291bnQsIHRva2VuSWQsIGNpcGhlclRleHRIYXNoLCBub25jZSwgYmxvY2ssIHNpZylcbiAgICAgIC50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICAgICAgc2V0U2hvd01ha2luZ1ZhdWx0TXNnKGZhbHNlKVxuICAgICAgICAgIFxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjcmVhdGluZ1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkFBQUFBSEhISEhIXCIsIGVycm9yKVxuICAgICAgICAgIHNldFNob3dNYWtpbmdWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgICAvLyBzZXRNaW50aW5nKGZhbHNlKVxuICAgICAgfSkgICAgXG4gIH1cblxuICBjb25zdCBmaXJlTWV0YU1hc2sgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2cobWludFBhc3N3b3JkKVxuICAgIHNldEFjY2VwdGluZyh0cnVlKVxuICAgIGdldFdpdG5lc3MoKHdpdG5lc3MpPT57XG4gICAgICAvLyBjb25zb2xlLmxvZyh0b2tlbklkLCBtaW50UGFzc3dvcmQsIHdpdG5lc3Mubm9uY2UsIHdpdG5lc3Muc2lnbmF0dXJlLCBhY2NvdW50KVxuICAgICAgOyhoYW5kbGVyQ29udHJhY3QgYXMgQ29udHJhY3QpXG4gICAgICAudHJhbnNmZXJXaXRoQ29kZSh0b2tlbklkLCBtaW50UGFzc3dvcmQsIGFjY291bnQsIHdpdG5lc3Mubm9uY2UsIHdpdG5lc3Muc2lnbmF0dXJlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaCkgICAgICAgICAgXG4gICAgICAgICAgLy8gc2V0U2hvd01ha2luZ1ZhdWx0TXNnKHRydWUpXG4gICAgICAgIH0sIDEwMCkgLy8gU29sdmluZyBTdGF0ZSByYWNlIGNvbmRpdGlvbiB3aGVyZSB0cmFuc2FjdGlvbiB3YXRjaGVyIHdvdWxkbid0IG5vdGljZSB3ZSB3ZXJlIGNyZWF0aW5nXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcjogRXJyb3JXaXRoQ29kZSkgPT4ge1xuICAgICAgICBzZXRBY2NlcHRpbmcoZmFsc2UpXG4gICAgICAgIGlmIChlcnJvcj8uY29kZSAhPT0gNDAwMSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGB0eCBmYWlsZWQuYCwgZXJyb3IpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gc2V0QWNjZXB0aW5nKGZhbHNlKVxuICAgICAgICAgIC8vIHNldFNob3dQcmVWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICAgIFxuICB9XG5cbiAgY29uc3QgYWRkUHJlVHJhbnNmZXIgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3RyYW5zZmVySW1hZ2UnLCBcIjB4XCIrdHJhbnNmZXJJbWFnZSlcbiAgICBzZXRQcmVUcmFuc2ZlcmluZyh0cnVlKVxuICAgIDsoaGFuZGxlckNvbnRyYWN0IGFzIENvbnRyYWN0KVxuICAgICAgLmFkZFByZVRyYW5zZmVyKHRva2VuSWQsIFwiMHhcIit0cmFuc2ZlckltYWdlKVxuICAgICAgLnRoZW4oKHsgaGFzaCB9OiB7IGhhc2g6IHN0cmluZyB9KSA9PiB7XG4gICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldEhhc2goaGFzaClcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlNldCBQcmUgVHJhbnNmZXJpbmcgVHJ1ZVwiLCBwcmVUcmFuc2ZlcmluZylcbiAgICAgICAgICAvLyBzZXRTaG93TWFraW5nVmF1bHRNc2codHJ1ZSlcbiAgICAgICAgLy8gfSwgMTAwKSAvLyBTb2x2aW5nIFN0YXRlIHJhY2UgY29uZGl0aW9uIHdoZXJlIHRyYW5zYWN0aW9uIHdhdGNoZXIgd291bGRuJ3Qgbm90aWNlIHdlIHdlcmUgY3JlYXRpbmdcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcldpdGhDb2RlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcj8uY29kZSl7ICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yP1wiKSAgICAgICBcbiAgICAgICAgICAgIHNldFByZVRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgICAgc2V0U2hvd1RyYW5zZmVyUGFzc3dvcmQoZmFsc2UpXG4gICAgICAgICAgICBzZXRUcmFuc2ZlclBhc3N3b3JkKCcnKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkKCFzaG93VHJhbnNmZXJQYXNzd29yZD8gdHJ1ZSA6IGZhbHNlKVxuICAgICAgICAgIC8vIHNldFByZVRyYW5zZmVyaW5nKGZhbHNlKVxuICAgICAgICAgIC8vIHNldFNob3dQcmVWYXVsdE1zZyhmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUFwcHJvdmVGb3JhbGwgPSAoKSA9PiB7XG4gICAgc2V0QXBwcm92aW5nKHRydWUpXG4gICAgOyhlbWJsZW1Db250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5zZXRBcHByb3ZhbEZvckFsbChjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0sIHRydWUpXG4gICAgICAudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjcmVhdGluZ1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgaWYgKGVycm9yPy5jb2RlICE9PSA0MDAxKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYHR4IGZhaWxlZC5gLCBlcnJvcilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRBcHByb3ZpbmcoZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBhcHByb3ZlQ292YWxGbG93ID0gKCkgPT4ge1xuICAgIHNldEFwcHJvdmluZyh0cnVlKVxuICAgIDsoY292YWxDb250cmFjdCBhcyBDb250cmFjdClcbiAgICAgIC5hcHByb3ZlKGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSwgJzEwMDAwMDAwMDAwMDAwMCcpXG4gICAgICAudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yV2l0aENvZGUpID0+IHtcbiAgICAgICAgaWYgKGVycm9yPy5jb2RlID09IDQwMDEpIHtcbiAgICAgICAgICBzZXRBcHByb3ZpbmcoZmFsc2UpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBkZWxldGVWYXVsdCA9ICgpID0+e1xuICAgIGxpYnJhcnkuZ2V0U2lnbmVyKGFjY291bnQpXG4gICAgICAuc2lnbk1lc3NhZ2UoJ0RlbGV0ZTogJyArIHRva2VuSWQpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJzaWdcIiwgc2lnbmF0dXJlKVxuICAgICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy92Mi9kZWxldGUnLCB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgIHNlcnZpY2U6ICdldm1ldGFkYXRhJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3Rva2VuSWQ6IHRva2VuSWQsIHNpZ25hdHVyZTogc2lnbmF0dXJlLCBjaGFpbklkOiBjaGFpbklkLnRvU3RyaW5nKCl9KSxcbiAgICAgICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLmhyZWYuc3BsaXQoXCIvXCIpWzBdICsgXCIvdmF1bHRzXCJcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cblxuICBjb25zdCBzeW5jQWNjb3VudCA9ICgpID0+e1xuICAgIFxuICAgICAgICBsZXQgc3luY2hlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRva2VuSWQrJy12JylcbiAgICAgICAgaWYgKCFzeW5jaGVkKSB7XG4gICAgICAgICAgZmV0Y2goRU1CTEVNX0FQSSArICcvc3luYy8nK3Rva2VuSWQsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YSdcbiAgICAgICAgICAgIH0gICAgICAgICAgXG4gICAgICAgICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAocmVzcG9uc2Upe1xuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0b2tlbklkKyctdicsICcxJylcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICB9KS5jYXRjaCgoKT0+e1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgfSlcbiAgICAgIH1cbiAgfVxuXG4gIFxuXG4gIGNvbnN0IGdldFZhdWx0ID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvbWV0YS8nICsgdG9rZW5JZCArICc/ZXhwZXJpbWVudGFsPXRydWUnKyhjbGVhckNhY2hlID8gJyZfdmVyY2VsX25vX2NhY2hlPTEnIDogJycpLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNjOiAoY2xlYXJDYWNoZSA/ICd0JyA6ICcnKVxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgc2V0UmF3TWV0YWRhdGEoanNvbkRhdGEpXG4gICAgc2V0U3RhdGVzKGpzb25EYXRhKVxuICAgIC8vIGNvbnNvbGUubG9nKCd2YXVsdCByZXNwb25zZSB3YXMgJywganNvbkRhdGEpXG4gICAgaWYgKGpzb25EYXRhLmltYWdlX2lwZnMpIHtcbiAgICAgIC8vIGdldElQRlNJbWFnZShqc29uRGF0YS5pbWFnZV9pcGZzKVxuICAgIH1cbiAgICBpZiAoanNvbkRhdGEuY29sbGVjdGlvbkFkZHJlc3Mpe1xuICAgICAgc2V0SXNDcm93ZFNhbGUodHJ1ZSlcbiAgICAgIHNldEFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcyhqc29uRGF0YS5jb2xsZWN0aW9uQWRkcmVzcylcbiAgICB9XG4gICAgaWYgKCFqc29uRGF0YS5uYW1lKSB7XG4gICAgICBzZXRTdGF0ZSh7IGxvYWRlZDogdHJ1ZSB9KVxuICAgICAgc2V0SW52YWxpZFZhdWx0KHRydWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHNldFN0YXRlcyhqc29uRGF0YSlcbiAgICAgIC8vICFzbGlkZXNob3dPbmx5PyBzYXZlQ2FjaGUoanNvbkRhdGEpIDogbnVsbFxuICAgICAgc2V0TG9hZGluZ0FwaShmYWxzZSlcbiAgICAgIHNldEludmFsaWRWYXVsdChmYWxzZSlcbiAgICB9XG4gICAge1xuICAgICAgIXZhdWx0UHJpdmFjeSAmJiAhbG9hZGVkVmFsdWVzID8gICAgXG4gICAgICBnZXRBbGxCYWxhbmNlc0xpdmUoW10sIHRva2VuSWQsICh2KT0+e1xuICAgICAgICBpZiAodikge1xuICAgICAgICAgIHNldFZhdWx0VmFsdWVzKHYpXG4gICAgICAgIH0gICAgICAgIFxuICAgICAgfSkgOiBudWxsXG4gICAgfVxuICAgIC8vIHsgaWYgKGpzb25EYXRhLnRhcmdldENvbnRyYWN0KSB7XG4gICAgLy8gICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAvLyAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLm9yaWdpbiArICcvbmZ0Mj9pZD0nICsganNvbkRhdGEudG9rZW5JZFxuICAgIC8vICAgfSwgNTAwKVxuICAgIC8vIH19XG4gIH1cblxuICBcblxuICBjb25zdCBnZXRXaXRuZXNzID0gYXN5bmMgKGNiOiB7ICh3aXRuZXNzOiBhbnkpOiB2b2lkOyAoYXJnMDogYm9vbGVhbik6IGFueSB9KSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy93aXRuZXNzLycgKyB0b2tlbklkLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBjYzogJ3QnLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgIGNoYWluaWQ6IGNoYWluSWQudG9TdHJpbmcoKVxuICAgICAgfSxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgaWYgKGpzb25EYXRhLnNpZ25hdHVyZSkge1xuICAgICAgY29uc29sZS5sb2coJ3dpdG5lc3MnLCBqc29uRGF0YSlcbiAgICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNiKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNldFN0YXRlcyA9IChqc29uRGF0YSkgPT4ge1xuICAgIGZyYW1lZCAmJiBqc29uRGF0YS5pbWFnZSAmJiAhanNvbkRhdGEuaW1hZ2UuaW5jbHVkZXMoJ2ZyYW1lZD0nKSAmJiAhanNvbkRhdGEuaW1hZ2UuaW5jbHVkZXMoJ2h0dHAnKSA/IGpzb25EYXRhLmltYWdlID0ganNvbkRhdGEuaW1hZ2UgKyBcIiZmcmFtZWQ9XCIrZnJhbWVkIDogbnVsbFxuICAgIGlmIChqc29uRGF0YS5jaXBoZXJ0ZXh0VjIpIHtcbiAgICAgIHNldFZhdWx0Q2lwaGVydGV4dFYyKGpzb25EYXRhLmNpcGhlcnRleHRWMilcbiAgICB9XG4gICAgc2V0TWludExvY2tlZEZvcmV2ZXIoanNvbkRhdGEubWludExvY2tlZCAmJiBqc29uRGF0YS5taW50TG9ja0Jsb2NrID09IDApXG4gICAgc2V0VmF1bHROYW1lKGpzb25EYXRhLm5hbWUpXG4gICAgc2V0VmF1bHRJbWFnZShqc29uRGF0YS5pbWFnZSlcbiAgICBzZXRPd25lZEltYWdlKGpzb25EYXRhLm93bmVkSW1hZ2UgfHwgbnVsbClcbiAgICBzZXRWYXVsdERlc2MoanNvbkRhdGEuZGVzY3JpcHRpb24pXG4gICAgc2V0VmF1bHRUb3RhbFZhbHVlKGpzb25EYXRhLnRvdGFsVmFsdWUgfHwgMClcbiAgICBqc29uRGF0YS52YWx1ZXMgPyBzZXRWYXVsdFZhbHVlcyh2YXVsdFZhbHVlcy5jb25jYXQoanNvbkRhdGEudmFsdWVzKSk6IG51bGxcbiAgICBqc29uRGF0YS5hdHRyaWJ1dGVzID8gc2V0VmF1bHREYXRhVmFsdWVzKGpzb25EYXRhLmF0dHJpYnV0ZXMuZmlsdGVyKChpdGVtOiB7IHRyYWl0X3R5cGU6IHN0cmluZyB9KT0+e3JldHVybiBpdGVtLnRyYWl0X3R5cGUgPT09IFwia2V5XCJ9KSk6IG51bGxcbiAgICBqc29uRGF0YS5hdHRyaWJ1dGVzID8gc2V0QXR0cmlidXRlcyhqc29uRGF0YS5hdHRyaWJ1dGVzKTogbnVsbFxuICAgIHNldFZhdWx0QWRkcmVzc2VzKGpzb25EYXRhLmFkZHJlc3NlcylcbiAgICBzZXRWYXVsdElQRlMoanNvbkRhdGEuaXBmcyB8fCBudWxsKVxuICAgIHNldFZhdWx0SW1hZ2VJUEZTKGpzb25EYXRhLmltYWdlX2lwZnMgfHwgbnVsbClcbiAgICBqc29uRGF0YS50YXJnZXRBc3NldD8gc2V0VGFyZ2V0QXNzZXQoanNvbkRhdGEudGFyZ2V0QXNzZXQpIDogbnVsbFxuICAgIGpzb25EYXRhLnRhcmdldENvbnRyYWN0PyBzZXRUYXJnZXRDb250cmFjdChqc29uRGF0YS50YXJnZXRDb250cmFjdCkgOiBudWxsXG4gICAganNvbkRhdGEubW92ZV90YXJnZXRDb250cmFjdD8gc2V0TW92ZVRhcmdldENvbnRyYWN0KGpzb25EYXRhLm1vdmVfdGFyZ2V0Q29udHJhY3QpIDogbnVsbFxuICAgIGpzb25EYXRhLm1vdmVfdGFyZ2V0QXNzZXQ/IHNldE1vdmVUYXJnZXRBc3NldChqc29uRGF0YS5tb3ZlX3RhcmdldEFzc2V0KSA6IG51bGxcbiAgICBcbiAgICBpZiAoanNvbkRhdGEudGFyZ2V0Q29udHJhY3QgJiYganNvbkRhdGEudGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pe1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdDI/aWQ9JyArIGpzb25EYXRhLnRhcmdldENvbnRyYWN0LnRva2VuSWRcbiAgICAgIH0sIDUwMClcbiAgICB9ICAgIFxuICAgIHNldExpdmUoanNvbkRhdGEubGl2ZSA9PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZSlcbiAgICBzZXROb25jZShqc29uRGF0YS5ub25jZSlcbiAgICBzZXRNaW50U2lnbmF0dXJlKGpzb25EYXRhLnNpZ25hdHVyZSlcbiAgICBzZXRUbyhqc29uRGF0YS50bylcbiAgICBzZXRWYXVsdENoYWluKGpzb25EYXRhLm5ldHdvcmspXG4gICAgc2V0VmF1bHRDaGFpbklkKFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSAnbWFpbm5ldCcgPyAxIDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwicmlua2VieVwiID8gNCA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcIm11bWJhaVwiID8gODAwMDEgOiBcbiAgICAgIGpzb25EYXRhLm5ldHdvcmsgPT0gXCJtYXRpY1wiID8gMTM3IDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwieGRhaVwiID8gMTAwIDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwiYnNjXCIgPyA1NiA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcImZhbnRvbVwiID8gMjUwIDogXG4gICAgICBqc29uRGF0YS5uZXR3b3JrID09IFwiYml0Y29pblwiID8gMCA6IFxuICAgICAganNvbkRhdGEubmV0d29yayA9PSBcImF1cm9yYVwiID8gMTMxMzE2MTU1NCA6IFxuICAgICAgOTdcbiAgICApXG4gICAgc2V0U3RhdHVzKGpzb25EYXRhLnN0YXR1cylcbiAgICBpZiAoc3RhdHVzID09PSAnY2xhaW1lZCcpIHtcbiAgICAgIHNldENsYWltZWRCeShqc29uRGF0YS5jbGFpbWVkQnkpXG4gICAgfVxuXG4gICAgc2V0U3RhdGUoeyBsb2FkZWQ6IHRydWUgfSlcbiAgICBsZXQgaXNQdnQgPVxuICAgICAganNvbkRhdGEuYWRkcmVzc2VzLmZpbHRlcigoaXRlbTogeyBhZGRyZXNzOiBzdHJpbmcgfCBzdHJpbmdbXSB9KSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtLmFkZHJlc3MuaW5jbHVkZXMoJ3ByaXZhdGU6JylcbiAgICAgIH0pLmxlbmd0aCA+IDBcbiAgICBzZXRWYXVsdFByaXZhY3koaXNQdnQpICAgIFxuICAgIGlmIChqc29uRGF0YS5zZWFsZWQpIHtcbiAgICAgIHNldFNlYWxlZCh0cnVlKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTZWFsZWQoZmFsc2UpXG4gICAgfVxuICAgIGlmKGpzb25EYXRhLnZhbHVlcy5sZW5ndGggPT0gMSAmJiBqc29uRGF0YS5hdHRyaWJ1dGVzLmxlbmd0aCA+IDApe1xuICAgICAgbGV0IHByb2plY3QgPSBqc29uRGF0YS5hdHRyaWJ1dGVzLmZpbHRlcihpdGVtPT57cmV0dXJuIGl0ZW0udmFsdWUgPT0ganNvbkRhdGEudmFsdWVzWzBdLm5hbWV9KVxuICAgICAgaWYgKHByb2plY3QubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGxldCBwcm9qZWN0TmFtZSA9IHByb2plY3RbMF0udHJhaXRfdHlwZVxuICAgICAgICAgIGxldCBfcXVhbGlmaWVkQ29sbGVjdGlvbiA9IGN1cmF0ZWRDb250cmFjdHMuZmlsdGVyKGl0ZW09PntyZXR1cm4gaXRlbS5uYW1lID09IHByb2plY3ROYW1lfSlcbiAgICAgICAgICBpZiAoX3F1YWxpZmllZENvbGxlY3Rpb24ubGVuZ3RoID4gMCkgeyAgICAgICAgICAgIFxuICAgICAgICAgICAgICBzZXRRdWFsaWZpZWRDb2xsZWN0aW9uKF9xdWFsaWZpZWRDb2xsZWN0aW9uWzBdKVxuICAgICAgICAgIH1cbiAgICAgIH0gICAgICBcbiAgICB9ICAgIFxuICB9XG5cbiAgY29uc3QgZ2V0QWxsQmFsYW5jZXMgPSBhc3luYyAodmFsdWVzOiBzdHJpbmcgfCBhbnlbXSwgdG9rZW5JZDogc3RyaW5nLCBjYjogeyAodmFsdWVzOiBhbnkpOiBhbnk7IChhcmcwOiBhbnkpOiBhbnkgfSkgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKGFkZHJlc3MpXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy92YXVsdC9iYWxhbmNlLycgKyB0b2tlbklkICwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgfSxcbiAgICB9KVxuICAgIFxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlJywgcmVzcG9uc2UsIGpzb25EYXRhKVxuICAgIGlmIChqc29uRGF0YS5iYWxhbmNlcy5sZW5ndGggPiAwKSB7ICAgICAgXG4gICAgICByZXR1cm4gY2IodmFsdWVzLmNvbmNhdChqc29uRGF0YS5iYWxhbmNlcykpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjYih2YWx1ZXMpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgZ2V0QWxsQmFsYW5jZXNMaXZlID0gYXN5bmMgKHZhbHVlczogc3RyaW5nIHwgYW55W10sIHRva2VuSWQ6IHN0cmluZyB8IHN0cmluZ1tdLCBjYjogeyAodjogYW55KTogdm9pZDsgKHY6IGFueSk6IHZvaWQ7IChhcmcwOiBib29sZWFuKTogYW55IH0pID0+IHtcbiAgICBpZiAobG9hZGVkVmFsdWVzKSB7XG4gICAgICByZXR1cm4gY2IoZmFsc2UpXG4gICAgfVxuICAgIHNldExvYWRlZFZhbHVlcyh0cnVlKVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goRU1CTEVNX0FQSSArICcvdmF1bHQvYmFsYW5jZS8nICsgdG9rZW5JZCArICc/bGl2ZT10cnVlJl92ZXJjZWxfbm9fY2FjaGU9MScgLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YSdcbiAgICAgIH0sXG4gICAgfSlcbiAgICBcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZScsIHJlc3BvbnNlLCBqc29uRGF0YSlcbiAgICBpZiAoanNvbkRhdGEuYmFsYW5jZXMubGVuZ3RoID4gMCkgeyAgICAgIFxuICAgICAgcmV0dXJuIGNiKHZhbHVlcy5jb25jYXQoanNvbkRhdGEuYmFsYW5jZXMpKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2IodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEFsbEJhbGFuY2VzQnlBZGRyZXNzID0gYXN5bmMgKHZhbHVlczogc3RyaW5nIHwgYW55W10sIGV0aEFkZHJlc3M6IHN0cmluZywgYnRjQWRkcmVzczogc3RyaW5nLCBjYjogeyAodmFsdWVzOiBhbnkpOiB2b2lkOyAoYXJnMDogYW55KTogYW55IH0pID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL3ZhdWx0L2JhbGFuY2UvJyArIGV0aEFkZHJlc3MgKyAnLycgKyBidGNBZGRyZXNzLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICB9LFxuICAgIH0pXG4gICAgXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICBjb25zb2xlLmxvZygncmVzcG9uc2UnLCByZXNwb25zZSwganNvbkRhdGEpXG4gICAgaWYgKGpzb25EYXRhLmJhbGFuY2VzLmxlbmd0aCA+IDApIHsgICAgICBcbiAgICAgIHJldHVybiBjYih2YWx1ZXMuY29uY2F0KGpzb25EYXRhLmJhbGFuY2VzKSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNiKHZhbHVlcylcbiAgICB9XG4gIH1cblxuICBjb25zdCBzYXZlUGFzc3dvcmRUb0xvY2FsU3RvcmFnZSA9ICgpID0+IHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShhY2NvdW50ICsgJ18nICsgY2hhaW5JZCArICdfJyArIHRva2VuSWQgKyAnX21pbnRQYXNzd29yZCcsIHRyYW5zZmVyUGFzc3dvcmQpIC8vIFNhdmUgbmV3IHN0YXRlIGZvciBsYXRlclxuICB9XG5cbiAgY29uc3QgbG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSA9ICgpID0+IHtcbiAgICBsZXQgc3RvcmVkUHcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShhY2NvdW50ICsgJ18nICsgY2hhaW5JZCArICdfJyArIHRva2VuSWQgKyAnX21pbnRQYXNzd29yZCcpXG4gICAgc3RvcmVkUHcgJiYgYWNjZXB0YWJsZSA/IHNldE1pbnRQYXNzd29yZChzdG9yZWRQdykgOiBudWxsIC8vc2V0TWludFBhc3N3b3JkKG51bGwpXG4gIH1cblxuICBjb25zdCBnZXRTaWduZWRKV1QgPSBhc3luYyAoc2lnbmF0dXJlOiBhbnksIHRva2VuSWQ6IHN0cmluZyB8IHN0cmluZ1tdLCBjYjogeyAodG9rZW46IGFueSk6IHZvaWQ7IChhcmcwOiBhbnkpOiBhbnkgfSk9PntcbiAgICB2YXIgbXlIZWFkZXJzID0gbmV3IEhlYWRlcnMoKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ2NoYWluaWQnLCBjaGFpbklkLnRvU3RyaW5nKCkpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuXG4gICAgdmFyIHJhdyA9IEpTT04uc3RyaW5naWZ5KHsgc2lnbmF0dXJlOiBzaWduYXR1cmUsIHRva2VuSWQ6IHRva2VuSWQgfSlcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFNJR19BUEkrJy9zaWduJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiBteUhlYWRlcnMsXG4gICAgICBib2R5OiByYXcsXG4gICAgICByZWRpcmVjdDogJ2ZvbGxvdycsXG4gICAgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIHJldHVybiBjYihqc29uRGF0YSlcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIGdldFRvcnVzS2V5cyggdmVyaWZpZXJJZCwgaWRUb2tlbiwgY2IpIHtcbiAgICBjb25zdCBmZXRjaE5vZGVEZXRhaWxzID0gbmV3IEZldGNoTm9kZURldGFpbHMoeyBuZXR3b3JrOiBcIm1haW5uZXRcIiB9KTtcbiAgICBjb25zdCB0b3J1c1V0aWxzID0gbmV3IFRvcnVzVXRpbHMoeyBlbmFibGVPbmVLZXk6IHRydWUsIG5ldHdvcms6IFwibWFpbm5ldFwiIH0pO1xuXG4gICAgY29uc3QgeyB0b3J1c05vZGVFbmRwb2ludHMsIHRvcnVzSW5kZXhlcyB9ID0gYXdhaXQgZmV0Y2hOb2RlRGV0YWlscy5nZXROb2RlRGV0YWlscyh7IHZlcmlmaWVyOiAndG9yLXVzLXNpZ25lci12ZXJjZWwnLCB2ZXJpZmllcklkIH0pO1xuICAgIGNvbnN0IHsgcHJpdktleSB9ID0gYXdhaXQgdG9ydXNVdGlscy5yZXRyaWV2ZVNoYXJlcyh0b3J1c05vZGVFbmRwb2ludHMsIHRvcnVzSW5kZXhlcywgJ3Rvci11cy1zaWduZXItdmVyY2VsJywgeyB2ZXJpZmllcl9pZDogdmVyaWZpZXJJZCB9LCBpZFRva2VuKTtcbiAgICByZXR1cm4gY2Ioe3ByaXZhdGVLZXk6IHByaXZLZXl9KTtcbiAgfVxuXG4gIGNvbnN0IGFkZEFkZHJlc3MgPSBhc3luYyAoc2lnbmF0dXJlOiBhbnksIHRva2VuSWQ6IHN0cmluZyB8IHN0cmluZ1tdLCBjb2luOiBzdHJpbmcsIGNiOiB7IChyZXN1bHQ6IGFueSk6IHZvaWQ7IChhcmcwOiBhbnkpOiBhbnkgfSkgPT4ge1xuICAgIHZhciBteUhlYWRlcnMgPSBuZXcgSGVhZGVycygpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnY2hhaW5JZCcsIGNoYWluSWQudG9TdHJpbmcoKSlcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdzZXJ2aWNlJywgJ2V2bWV0YWRhdGEnKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJylcblxuICAgIHZhciByYXcgPSBKU09OLnN0cmluZ2lmeSh7IHNpZ25hdHVyZTogc2lnbmF0dXJlLCBjb2luOiBjb2luIH0pXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChFTUJMRU1fQVBJICsgJy9hZGRyZXNzLycgKyB0b2tlbklkLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IG15SGVhZGVycyxcbiAgICAgIGJvZHk6IHJhdyxcbiAgICAgIHJlZGlyZWN0OiAnZm9sbG93JyxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgcmV0dXJuIGNiKGpzb25EYXRhKVxuICB9XG5cbiAgY29uc3QgZGVjcnlwdEVtYmVkID0gYXN5bmMgKHNpZ25hdHVyZTogYW55LCB0b2tlbklkOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2I6IHsgKHJlc3VsdDogYW55KTogdm9pZDsgKGFyZzA6IGFueSk6IGFueSB9KSA9PiB7XG4gICAgdmFyIG15SGVhZGVycyA9IG5ldyBIZWFkZXJzKClcbiAgICBteUhlYWRlcnMuYXBwZW5kKCdjaGFpbklkJywgY2hhaW5JZC50b1N0cmluZygpKVxuICAgIG15SGVhZGVycy5hcHBlbmQoJ3NlcnZpY2UnLCAnZXZtZXRhZGF0YScpXG4gICAgbXlIZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuXG4gICAgdmFyIHJhdyA9IEpTT04uc3RyaW5naWZ5KHsgc2lnbmF0dXJlOiBzaWduYXR1cmUgfSlcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEVNQkxFTV9BUEkgKyAnL2VtYmVkLycgKyB0b2tlbklkLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IG15SGVhZGVycyxcbiAgICAgIGJvZHk6IHJhdyxcbiAgICAgIHJlZGlyZWN0OiAnZm9sbG93JyxcbiAgICB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgcmV0dXJuIGNiKGpzb25EYXRhKVxuICB9XG5cbiAgY29uc3QgZ2V0Q29udHJhY3RTdGF0ZXMgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gYWxlcnQoMClcbiAgICBjb25zb2xlLmxvZyhcIkNvbnRyYWN0IHN0YXRlc1wiKVxuICAgIGxldCBvd25lZCA9IGZhbHNlXG4gICAgbGV0IF9vd25lcjogc3RyaW5nXG4gICAgdHJ5IHtcbiAgICAgIGlmICh0YXJnZXRDb250cmFjdFtjaGFpbklkXSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkNoZWNraW5nIG93bmVyIHd0aCB0YXJnZXRDb250cmFjdFwiKVxuICAgICAgICBlbWJsZW1Db250cmFjdCA9IGdldEN1cmF0ZWRDb250cmFjdCh0YXJnZXRDb250cmFjdFtjaGFpbklkXSlcbiAgICAgICAgX293bmVyID0gYXdhaXQgZW1ibGVtQ29udHJhY3QuZ2V0T3duZXJPZlNlcmlhbCh0YXJnZXRDb250cmFjdC5zZXJpYWxOdW1iZXIpXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG93bmVyXCIsIF9vd25lciwgYXBwcm92ZWQsIGFjY291bnQsIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4W2NoYWluSWRdKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX293bmVyICA9IGxpdmU/IGF3YWl0IGVtYmxlbUNvbnRyYWN0Lm93bmVyT2YodG9rZW5JZCk6IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJcbiAgICAgIH1cbiAgICAgIHNldERlY2ltYWxzKGF3YWl0IGNvdmFsQ29udHJhY3QuZGVjaW1hbHMoKSlcbiAgICAgIHNldEFsbG93YW5jZShcbiAgICAgICAgYXdhaXQgY292YWxDb250cmFjdFxuICAgICAgICAgIC5hbGxvd2FuY2UoYWNjb3VudCwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyW2NoYWluSWRdKVxuICAgICAgICAgIC50aGVuKChiYWxhbmNlOiB7IHRvU3RyaW5nOiAoKSA9PiBzdHJpbmcgfSkgPT4gYmFsYW5jZS50b1N0cmluZygpKVxuICAgICAgKVxuICAgICAgc2V0QmFsYW5jZShhd2FpdCBjb3ZhbENvbnRyYWN0LmJhbGFuY2VPZihhY2NvdW50KS50aGVuKChiYWxhbmNlOiB7IHRvU3RyaW5nOiAoKSA9PiBzdHJpbmcgfSkgPT4gYmFsYW5jZS50b1N0cmluZygpKSlcbiAgICAgIHNldFByaWNlKGF3YWl0IGhhbmRsZXJDb250cmFjdC5wcmljZSgpLnRoZW4oKGJhbGFuY2U6IHsgdG9TdHJpbmc6ICgpID0+IHN0cmluZyB9KSA9PiBiYWxhbmNlLnRvU3RyaW5nKCkpKVxuICAgICAgaWYgKE51bWJlcihhbGxvd2FuY2UpID49IE51bWJlcihwcmljZSkpIHtcbiAgICAgICAgc2V0SXNDb3ZhbEFwcHJvdmVkKHRydWUpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRJc0NvdmFsQXBwcm92ZWQoZmFsc2UpXG4gICAgICB9XG4gICAgICBmaW5pc2goKVxuICAgIH0gY2F0Y2goZXJyKXsgICAgICBcbiAgICAgIF9vd25lciA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJcbiAgICAgIGZpbmlzaCgpXG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZmluaXNoKCl7XG4gICAgIFxuICAgICAgbGV0IGFjY2VwdGFibGUgPSBhd2FpdCBoYW5kbGVyQ29udHJhY3QuZ2V0UHJlVHJhbnNmZXIodG9rZW5JZClcbiAgICAgIGxldCBpc0FwcHJvdmVkOiBib29sZWFuIHwgKChwcmV2U3RhdGU6IGJvb2xlYW4pID0+IGJvb2xlYW4pXG4gICAgICBpZiAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pIHtcbiAgICAgICAgaXNBcHByb3ZlZCA9IGF3YWl0IGVtYmxlbUNvbnRyYWN0LmlzQXBwcm92ZWRGb3JBbGwoYWNjb3VudCwgY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyVjhbY2hhaW5JZF0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpc0FwcHJvdmVkID0gYXdhaXQgZW1ibGVtQ29udHJhY3QuaXNBcHByb3ZlZEZvckFsbChhY2NvdW50LCBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0pXG4gICAgICB9XG4gICAgICBzZXRBcHByb3ZlZChpc0FwcHJvdmVkKVxuICAgICAgc2V0QWNjZXB0YWJsZShhY2NlcHRhYmxlLl9mcm9tICE9PSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgc2V0T3duZXIoX293bmVyKVxuICAgICAgc2V0TWluZShfb3duZXIgPT09IGFjY291bnQgfHwgKHRvID09PSBhY2NvdW50ICYmIF9vd25lciA9PT0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIikpXG4gICAgICBzZXRNaW5lVW5NaW50ZWQodG8gPT09IGFjY291bnQgJiYgX293bmVyID09PSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgbG9hZFBhc3N3b3JkRnJvbUxvY2FsU3RvcmFnZSgpXG4gICAgICBpZiAob3duZXIgJiYgbGl2ZSA9PSBmYWxzZSAmJiAhY2hlY2tMaXZlKSB7XG4gICAgICAgIHNldENoZWNrTGl2ZSh0cnVlKVxuICAgICAgICBjaGVja0xpdmVsaW5lc3ModG9rZW5JZCwgKCk9PntcbiAgICBcbiAgICAgICAgfSlcbiAgICAgIC8vICAgaWYgKG93bmVyID09PSBaRVJPX0FERFJFU1MgJiYgbW92ZV90YXJnZXRDb250cmFjdCAmJiBtb3ZlX3RhcmdldENvbnRyYWN0LnNlcmlhbE51bWJlcikge1xuICAgICAgLy8gICAgIC8vIGlzIG1vdmluZ1xuICAgICAgLy8gICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgLy8gICAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLm9yaWdpbiArICcvbmZ0Mj9pZD0nICsgdG9rZW5JZFxuICAgICAgLy8gICAgIH0sIDUwMClcbiAgICAgIC8vICAgfSBlbHNlIHtcbiAgICAgIC8vICAgICBzZXRDaGVja0xpdmUodHJ1ZSlcbiAgICAgIC8vICAgICBjaGVja0xpdmVsaW5lc3ModG9rZW5JZCwgKCk9PntcbiAgICBcbiAgICAgIC8vICAgICB9KVxuICAgICAgLy8gICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICB9XG5cbiAgdXNlRWZmZWN0KCgpPT57XG4gICAgY29uc29sZS5sb2coXCJtaW5lP1wiLCBtaW5lKVxuICAgIGNvbnNvbGUubG9nKFwiY2xhaW1pbmc/XCIsIGNsYWltaW5nKVxuICAgIGNvbnNvbGUubG9nKFwiYWNjZXB0aW5nP1wiLCBhY2NlcHRpbmcpXG4gICAgY29uc29sZS5sb2coXCJhY2NlcHRhYmxlXCIsIGFjY2VwdGFibGUpXG4gICAgY29uc29sZS5sb2coXCJxdWFsaWZpZWRcIiwgcXVhbGlmaWVkQ29sbGVjdGlvbilcbiAgICBjb25zb2xlLmxvZyhcIm93bmVyXCIsb3duZXIpXG4gIH0pXG5cbiAgY29uc3QgaGFzQWRkcmVzcyA9IChjb2luOiBzdHJpbmcpPT57XG4gICAgY29uc29sZS5sb2coY29pbiwgdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBjb2lufSkubGVuZ3RoID4gMClcbiAgICByZXR1cm4gdmF1bHRBZGRyZXNzZXMuZmlsdGVyKGFkZHJlc3M9PnsgcmV0dXJuIGFkZHJlc3MuY29pbiA9PSBjb2lufSkubGVuZ3RoID4gMFxuICB9XG5cbiAgY29uc3Qgb25SZW5ldyA9IGFzeW5jIChuYW1lOiBhbnkpID0+IHsgXG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdSZW5ldzogJyArIHRva2VuSWQpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgbGV0IGFkZHJlc3MgPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoYWRkcmVzcz0+eyByZXR1cm4gYWRkcmVzcy5jb2luID09ICdOTUMnfSlbMF0uYWRkcmVzc1xuICAgICAgICBjb25zb2xlLmxvZygnc2lnbmF0dXJlJywgc2lnbmF0dXJlLCBuYW1lKVxuICAgICAgICBmZXRjaChFTUJMRU1fQVBJICsgJy9ubWMvcmVuZXcvJyArIGFkZHJlc3MsIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICAgICAgY2hhaW5pZDogY2hhaW5JZC50b1N0cmluZygpXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgXCJ0b2tlbklkXCI6IHRva2VuSWQsXG4gICAgICAgICAgICAgICAgXCJzaWduYXR1cmVcIjogc2lnbmF0dXJlLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBuYW1lXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlcXVlc3RlZCBSZW5ld1wiLCBkYXRhKVxuICAgICAgICAgIFxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuICBcbiAgY29uc3QgaGFuZGxlU2lnbiA9IGFzeW5jICgpID0+IHtcbiAgICBcbiAgICBsZXQgc2VyaWFsTnVtYmVyOiBhbnlcbiAgICBpZiAodGFyZ2V0Q29udHJhY3RbY2hhaW5JZF0pIHsgICAgICBcbiAgICAgIGVtYmxlbUNvbnRyYWN0ID0gZ2V0Q3VyYXRlZENvbnRyYWN0KHRhcmdldENvbnRyYWN0W2NoYWluSWRdKVxuICAgICAgc2VyaWFsTnVtYmVyID0gYXdhaXQgZW1ibGVtQ29udHJhY3QuZ2V0U2VyaWFsKHRhcmdldENvbnRyYWN0LnRva2VuSWQsIDApXG4gICAgfVxuXG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdDbGFpbTogJyArICh0YXJnZXRDb250cmFjdFtjaGFpbklkXT8gc2VyaWFsTnVtYmVyOiB0b2tlbklkKSlcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBzZXRTdGF0ZSh7bG9hZGVkOiBmYWxzZX0pXG4gICAgICAgIGlmIChtaW5lVW5NaW50ZWQgJiYgc3RhdHVzICE9IFwiY2xhaW1lZFwiICYmICFtaW50TG9ja2VkRm9yZXZlcikge1xuICAgICAgICAgIHNldE1pbnRMb2NrZWRGb3JldmVyKHRydWUpXG4gICAgICAgIH1cbiAgICAgICAgZ2V0U2lnbmVkSldUKHNpZ25hdHVyZSwgdG9rZW5JZCwgKHRva2VuOiB7IHRva2VuOiBhbnkgfSk9PntcbiAgICAgICAgICBnZXRUb3J1c0tleXModG9rZW5JZCwgdG9rZW4udG9rZW4sIGFzeW5jIChrZXlzOiB7IHByaXZhdGVLZXk6IGFueSB9KT0+e1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgdmFyIGJ5dGVzID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQodmF1bHRDaXBoZXJ0ZXh0VjIsIGtleXMucHJpdmF0ZUtleSlcbiAgICAgICAgICAgICAgbGV0IHBheWxvYWQgPSBKU09OLnBhcnNlKGJ5dGVzLnRvU3RyaW5nKENyeXB0b0pTLmVuYy5VdGY4KSkgXG4gICAgICAgICAgICAgIHNldEtleVZhbHVlcyhwYXlsb2FkLnZhbHVlcylcbiAgICAgICAgICAgICAgc2V0TW5lbW9uaWMocGF5bG9hZC5waHJhc2UpXG4gICAgICAgICAgICAgIHZhdWx0QWRkcmVzc2VzLmZvckVhY2goYXN5bmMgYWRkcmVzcz0+e1xuICAgICAgICAgICAgICAgIGlmIChhZGRyZXNzLmNvaW4gPT0gJ1NUWCcpIHtcbiAgICAgICAgICAgICAgICAgIGFkZHJlc3Mua2V5ID0gYXdhaXQgZ2V0U1RYS2V5KGFkZHJlc3MsIHBheWxvYWQucGhyYXNlKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBhZGRyZXNzLmtleSA9IHdpbmRvdy5waHJhc2VQYXRoVG9LZXkocGF5bG9hZC5waHJhc2UsIGFkZHJlc3MucGF0aClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFkZHJlc3MuY29pbiA9PSAnQlRDJykgc2V0UHJpdktleUJUQyhhZGRyZXNzLmtleSlcbiAgICAgICAgICAgICAgICBpZiAoYWRkcmVzcy5jb2luID09ICdFVEgnKSBzZXRQcml2S2V5RVRIKGFkZHJlc3Mua2V5KVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBjYXRjaChlcnIpe1xuICAgICAgICAgICAgICBhbGVydChlcnIpXG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9Pntsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24uaHJlZn0sIDIwMDApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRTdGF0ZSh7bG9hZGVkOiB0cnVlfSlcbiAgICAgICAgICAgIG9uT3BlbktleXNNb2RhbCgpXG4gICAgICAgICAgfSkgICAgICAgICAgXG4gICAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGdldFNUWEtleSA9IGFzeW5jIChhZGRyZXNzOiBhbnksIHBocmFzZTogc3RyaW5nKT0+e1xuICAgIGNvbnN0IHdhbGxldDogYW55ID0gYXdhaXQgZ2VuZXJhdGVXYWxsZXQoe1xuICAgICAgc2VjcmV0S2V5OiBwaHJhc2UsXG4gICAgICBwYXNzd29yZDogJycsXG4gICAgfSlcbiAgICBjb25zb2xlLmxvZygnLS0tLS0tIHN0YWNrcyBhY2NvdW50IC0nLCB3YWxsZXQuYWNjb3VudHNbMF0pXG4gICAgY29uc3QgYWNjb3VudCA9IHdhbGxldC5hY2NvdW50c1swXTtcbiAgICBhZGRyZXNzLmtleSA9IGFjY291bnQuc3R4UHJpdmF0ZUtleVxuICAgIHJldHVybiBhZGRyZXNzLmtleVxuICB9XG5cbiAgY29uc3QgaGFuZGxlSGlkZUFzc2V0ID0gYXN5bmMgKGNvaW46IHsgbmFtZTogYW55OyBjb2luOiBhbnk7IGFkZHJlc3M6IGFueSB9KSA9PiB7XG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdIaWRlQXNzZXQ6ICcgKyB0b2tlbklkKVxuICAgICAgLnRoZW4oKHNpZ25hdHVyZTogYW55KSA9PiB7XG4gICAgICAgIGhpZGVBc3NldCh0b2tlbklkLCBjb2luLmNvaW4sIGNvaW4uYWRkcmVzcywgY29pbi5uYW1lLCBzaWduYXR1cmUsICgpPT57XG4gICAgICAgICAgY29uc29sZS5sb2coXCJEb25lIGhpZGluZyBjb2luIGFuZCBnZXR0aW5nIG5ldyBiYWxhbmNlc1wiKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGhpZGVBc3NldCh0b2tlbklkLCBjb2luOiBhbnksIGFkZHJlc3M6IGFueSwgbmFtZTogYW55LCBzaWduYXR1cmU6IGFueSwgY2I6IHsgKCk6IHZvaWQ7ICgpOiBhbnkgfSkge1xuICAgIGZldGNoKEVNQkxFTV9BUEkgKyAnL2hpZGUvJyt0b2tlbklkLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgc2VydmljZTogJ2V2bWV0YWRhdGEnLFxuICAgICAgICBjaGFpbmlkOiBjaGFpbklkLnRvU3RyaW5nKClcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIFwiY29pblwiOiBjb2luPyBjb2luOiBudWxsLFxuICAgICAgICBcImFkZHJlc3NcIjogYWRkcmVzcz8gYWRkcmVzczogbnVsbCxcbiAgICAgICAgXCJuYW1lXCI6IG5hbWU/IG5hbWU6IG51bGwsXG4gICAgICAgIFwic2lnbmF0dXJlXCI6IHNpZ25hdHVyZT8gc2lnbmF0dXJlOiBudWxsXG4gICAgICB9KVxuICAgIH0pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tXCIsIGRhdGEpXG4gICAgICBnZXRBbGxCYWxhbmNlcyhbXSwgdG9rZW5JZCwgKHZhbHVlczogU2V0U3RhdGVBY3Rpb248YW55W10+KT0+e1xuICAgICAgICBzZXRWYXVsdFZhbHVlcyh2YWx1ZXMpXG4gICAgICAgIHJldHVybiBjYigpXG4gICAgICB9KVxuICAgIH0pIFxuICB9XG5cbiAgY29uc3QgaGFuZGxlQWRkcmVzc1NpZ24gPSBhc3luYyAoY29pbjogc3RyaW5nKSA9PiB7XG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdBZGRyZXNzOiAnICsgdG9rZW5JZClcbiAgICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgICBhZGRBZGRyZXNzKHNpZ25hdHVyZSwgdG9rZW5JZCwgY29pbiwgKHJlc3VsdDogYW55KSA9PiB7XG4gICAgICAgICAgZ2V0VmF1bHQoKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZU93bmVkRW1iZWQgPSBhc3luYyAoKSA9PiB7XG4gICAgbGlicmFyeVxuICAgICAgLmdldFNpZ25lcihhY2NvdW50KVxuICAgICAgLnNpZ25NZXNzYWdlKCdFbWJlZDogJyArIHRva2VuSWQpXG4gICAgICAudGhlbigoc2lnbmF0dXJlOiBhbnkpID0+IHtcbiAgICAgICAgZGVjcnlwdEVtYmVkKHNpZ25hdHVyZSwgdG9rZW5JZCwgKHJlc3VsdDogeyBvd25lZEltYWdlOiBTZXRTdGF0ZUFjdGlvbjxzdHJpbmc+IH0pID0+IHtcbiAgICAgICAgICBzZXRWYXVsdEltYWdlKHJlc3VsdC5vd25lZEltYWdlKVxuICAgICAgICB9KSAgICAgICAgXG4gICAgICB9KVxuICB9XG5cbiAgY29uc3QgaGFuZGxlTW92ZSA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnLS0tLS0tLS0tLSBxdWFsaWZpZWQgbW92ZScsIHF1YWxpZmllZENvbGxlY3Rpb24pXG4gICAgbGlicmFyeS5nZXRTaWduZXIoYWNjb3VudClcbiAgICAuc2lnbk1lc3NhZ2UoJ01vdmUgVmF1bHQ6ICcgKyB0b2tlbklkKVxuICAgIC50aGVuKChzaWduYXR1cmU6IGFueSkgPT4ge1xuICAgICAgZmV0Y2goRU1CTEVNX1YyX0FQSSArICcvbW92ZS12YXVsdC8nLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICBzZXJ2aWNlOiAnZXZtZXRhZGF0YScsXG4gICAgICAgICAgY2hhaW5pZDogY2hhaW5JZC50b1N0cmluZygpXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBcImNoYWluSWRcIjogMSxcbiAgICAgICAgICBcImZyb21cIjogYWNjb3VudCxcbiAgICAgICAgICBcInNvdXJjZUNvbnRyYWN0XCI6IHtcbiAgICAgICAgICAgICAgXCIxXCI6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W3ZhdWx0Q2hhaW5JZF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwidGFyZ2V0Q29udHJhY3RcIjoge1xuICAgICAgICAgICAgICBcIjFcIjogcXVhbGlmaWVkQ29sbGVjdGlvbltjaGFpbklkXSxcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IHF1YWxpZmllZENvbGxlY3Rpb24ubmFtZSxcbiAgICAgICAgICAgICAgXCJjaGFpblwiOiBxdWFsaWZpZWRDb2xsZWN0aW9uLmNoYWluXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInRhcmdldEFzc2V0XCI6IHtcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IHZhdWx0VmFsdWVzWzBdLm5hbWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiYW1vdW50XCI6IDEsXG4gICAgICAgICAgXCJ0b2tlbklkXCI6IHRva2VuSWQsXG4gICAgICAgICAgXCJzaWduYXR1cmVcIjogc2lnbmF0dXJlXG4gICAgICB9KVxuICAgICAgfSkudGhlbihhc3luYyBmdW5jdGlvbiAocmVzcG9uc2U6IGFueSkge1xuICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgICBcbiAgICAgICAgaWYgKGRhdGEuc2lnKSB7XG4gICAgICAgICAgdmF1bHRIYW5kbGVyQ29udHJhY3QubW92ZVZhdWx0KGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W3ZhdWx0Q2hhaW5JZF0sIHF1YWxpZmllZENvbGxlY3Rpb25bY2hhaW5JZF0sIHRva2VuSWQsIGRhdGEudG9rZW5JZCwgZGF0YS5ub25jZSwgZGF0YS5zaWcsIGRhdGEuc2VyaWFsKS50aGVuKChoYXNoOiBhbnkpOiB2b2lkID0+e1xuICAgICAgICAgICAgc2V0SGFzaChoYXNoLmhhc2gpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgY29uc3QgaGFuZGxlQ2xhaW0gPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKHRhcmdldENvbnRyYWN0W2NoYWluSWRdKSB7XG4gICAgICB2YXVsdEhhbmRsZXJDb250cmFjdC5jbGFpbSh0YXJnZXRDb250cmFjdFtjaGFpbklkXSwgdGFyZ2V0Q29udHJhY3QudG9rZW5JZCkudGhlbigoeyBoYXNoIH06IHsgaGFzaDogc3RyaW5nIH0pID0+IHtcbiAgICAgICAgc2V0Q2xhaW1pbmcodHJ1ZSlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0SGFzaChoYXNoKVxuICAgICAgICB9LCAxMDApIC8vIFNvbHZpbmcgU3RhdGUgcmFjZSBjb25kaXRpb24gd2hlcmUgdHJhbnNhY3Rpb24gd2F0Y2hlciB3b3VsZG4ndCBub3RpY2Ugd2Ugd2VyZSBjbGFpbWluZ1xuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgaGFuZGxlckNvbnRyYWN0LmNsYWltT25DaGFpbih0b2tlbklkKS50aGVuKCh7IGhhc2ggfTogeyBoYXNoOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgICBzZXRDbGFpbWluZyh0cnVlKVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRIYXNoKGhhc2gpXG4gICAgICAgIH0sIDEwMCkgLy8gU29sdmluZyBTdGF0ZSByYWNlIGNvbmRpdGlvbiB3aGVyZSB0cmFuc2FjdGlvbiB3YXRjaGVyIHdvdWxkbid0IG5vdGljZSB3ZSB3ZXJlIGNsYWltaW5nXG4gICAgICB9KVxuICAgIH1cbiAgfSBcblxuICBjb25zdCBzdGFydERlY3J5cHRFZmZlY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKGRlY3J5cHRlZEVmZmVjdFJ1bm5pbmcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKHRydWUpXG4gICAgdmFyIHRoZUxldHRlcnMgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonIC8vWW91IGNhbiBjdXN0b21pemUgd2hhdCBsZXR0ZXJzIGl0IHdpbGwgY3ljbGUgdGhyb3VnaFxuICAgIHZhciBjdG50ID0gJ0RlY3J5cHRpbmcnIC8vIFlvdXIgdGV4dCBnb2VzIGhlcmVcbiAgICB2YXIgc3BlZWQgPSA1IC8vIG1zIHBlciBmcmFtZVxuICAgIHZhciBpbmNyZW1lbnQgPSA4IC8vIGZyYW1lcyBwZXIgc3RlcC4gTXVzdCBiZSA+MlxuXG4gICAgdmFyIGNsZW4gPSBjdG50Lmxlbmd0aFxuICAgIHZhciBzaSA9IDBcbiAgICB2YXIgc3RyaSA9IDBcbiAgICB2YXIgYmxvY2sgPSAnJ1xuICAgIHZhciBmaXhlZCA9ICcnXG4gICAgOyhmdW5jdGlvbiBydXN0bGUoaSkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgtLWkpIHtcbiAgICAgICAgICBydXN0bGUoaSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXREZWNyeXB0ZWRFZmZlY3RSdW5uaW5nKGZhbHNlKVxuICAgICAgICB9XG4gICAgICAgIG5leHRGcmFtZShpKVxuICAgICAgICBzaSA9IHNpICsgMVxuICAgICAgfSwgc3BlZWQpXG4gICAgfSkoY2xlbiAqIGluY3JlbWVudCArIDEpXG4gICAgZnVuY3Rpb24gbmV4dEZyYW1lKHBvczogbnVtYmVyKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsZW4gLSBzdHJpOyBpKyspIHtcbiAgICAgICAgdmFyIG51bSA9IE1hdGguZmxvb3IodGhlTGV0dGVycy5sZW5ndGggKiBNYXRoLnJhbmRvbSgpKVxuICAgICAgICB2YXIgbGV0dGVyID0gdGhlTGV0dGVycy5jaGFyQXQobnVtKVxuICAgICAgICBibG9jayA9IGJsb2NrICsgbGV0dGVyXG4gICAgICB9XG4gICAgICBpZiAoc2kgPT0gaW5jcmVtZW50IC0gMSkge1xuICAgICAgICBzdHJpKytcbiAgICAgIH1cbiAgICAgIGlmIChzaSA9PSBpbmNyZW1lbnQpIHtcbiAgICAgICAgZml4ZWQgPSBmaXhlZCArIGN0bnQuY2hhckF0KHN0cmkgLSAxKVxuICAgICAgICBzaSA9IDBcbiAgICAgIH1cbiAgICAgIHNldERlY3J5cHRlZEVmZmVjdChmaXhlZCArIGJsb2NrKVxuICAgICAgYmxvY2sgPSAnJ1xuICAgIH1cbiAgfVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZ2V0VmF1bHQoKVxuICB9LCBbXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIChhY2NvdW50ICYmIGNoYWluSWQgJiYgdmF1bHRDaGFpbklkICYmIGNoYWluSWQgPT0gdmF1bHRDaGFpbklkKSB8fCAoKHF1ZXJ5Lm5vTGF5b3V0ICYmIHF1ZXJ5Lm5vTGF5b3V0ID09ICd0cnVlJykgfHwgKHF1ZXJ5LnNsaWRlc2hvd09ubHkgJiYgcXVlcnkuc2xpZGVzaG93T25seSA9PSAndHJ1ZScpKSA/IGdldENvbnRyYWN0U3RhdGVzKCkgOiBudWxsXG4gIH0pXG5cbiAgZnVuY3Rpb24gc3BsaXREZXNjcmlwdGlvbih3b3Jkczogc3RyaW5nKSB7XG4gICAgdmFyIGRlc2MgPSB3b3Jkcz8gd29yZHMuc3BsaXQoJ1xcblxcblxcblxcbicpOiBbXCIgXCJdXG4gICAgcmV0dXJuIGRlc2NbMF0udHJpbSgpXG4gIH1cblxuICBmdW5jdGlvbiB0cnlEZWNyeXB0KGtleTogU2V0U3RhdGVBY3Rpb248c3RyaW5nPikge1xuICAgIGlmIChkZWNyeXB0UGFzc3dvcmQpIHtcbiAgICAgIGtleSA9IGRlY3J5cHRQYXNzd29yZFxuICAgIH1cbiAgICBzdGFydERlY3J5cHRFZmZlY3QoKVxuICAgIGNvbnNvbGUubG9nKHZhdWx0QWRkcmVzc2VzKVxuICAgIGxldCBjaXBoZXJ0ZXh0ID0gdmF1bHRBZGRyZXNzZXNbMF0uYWRkcmVzcy5yZXBsYWNlKCdwcml2YXRlOicsICcnKVxuICAgIHRyeSB7XG4gICAgICB2YXIgYnl0ZXMgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXkpXG4gICAgICBKU09OLnBhcnNlKGJ5dGVzLnRvU3RyaW5nKENyeXB0b0pTLmVuYy5VdGY4KSlcbiAgICAgIHNldFZhdWx0UHJpdmFjeShmYWxzZSlcbiAgICAgIHNldERlY3J5cHRQYXNzd29yZChrZXkpXG4gICAgICBzZXRWYXVsdEFkZHJlc3NlcyhkZWNyeXB0QWRkcmVzc2VzKGtleSkpXG4gICAgICBsZXQgZXRoQWRkcmVzcyA9IHZhdWx0QWRkcmVzc2VzLmZpbHRlcigoaXRlbSkgPT4ge3JldHVybiBpdGVtLmNvaW4gPT09ICdFVEgnfSlbMF0uYWRkcmVzc1xuICAgICAgbGV0IGJ0Y0FkZHJlc3MgPSB2YXVsdEFkZHJlc3Nlcy5maWx0ZXIoKGl0ZW0pID0+IHtyZXR1cm4gaXRlbS5jb2luID09PSAnQlRDJ30pWzBdLmFkZHJlc3NcbiAgICAgIGNvbnNvbGUubG9nKFwiU1VDQ0VTU1wiLCB2YXVsdEFkZHJlc3NlcylcbiAgICAgIGdldEFsbEJhbGFuY2VzQnlBZGRyZXNzKFtdLCBldGhBZGRyZXNzLCBidGNBZGRyZXNzLCAodmFsdWVzOiBTZXRTdGF0ZUFjdGlvbjxhbnlbXT4pPT57XG4gICAgICAgIHNldFZhdWx0VmFsdWVzKHZhbHVlcylcbiAgICAgIH0pXG4gICAgfSBjYXRjaCAoZXJyKSB7Y29uc29sZS5sb2coJ1dURicsIGVycil9XG4gIH1cblxuICBmdW5jdGlvbiBkZWNyeXB0QWRkcmVzc2VzKGtleTogYW55KSB7XG4gICAgdmF1bHRBZGRyZXNzZXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgaWYgKGl0ZW0uYWRkcmVzcy5pbmNsdWRlcygncHJpdmF0ZScpKSB7XG4gICAgICAgIGxldCBjaXBoZXJUZXh0ID0gaXRlbS5hZGRyZXNzLnJlcGxhY2UoJ3ByaXZhdGU6JywgJycpXG4gICAgICAgIGl0ZW0uYWRkcmVzcyA9IGRlY3J5cHQoY2lwaGVyVGV4dCwga2V5KVxuICAgICAgfSAgICAgIFxuICAgIH0pXG4gICAgcmV0dXJuIHZhdWx0QWRkcmVzc2VzXG4gIH1cblxuICBmdW5jdGlvbiBkZWNyeXB0KGNpcGhlclRleHQ6IGFueSwga2V5OiBhbnkpIHtcbiAgICB2YXIgYnl0ZXMgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdChjaXBoZXJUZXh0LCBrZXkpXG4gICAgdmFyIGRlY3J5cHRlZERhdGEgPSBKU09OLnBhcnNlKGJ5dGVzLnRvU3RyaW5nKENyeXB0b0pTLmVuYy5VdGY4KSlcbiAgICByZXR1cm4gZGVjcnlwdGVkRGF0YVxuICB9XG5cbiAgZnVuY3Rpb24gdmlzaXRPcGVuU2VhTGluaygpIHtcbiAgICB3aW5kb3cub3BlbihcbiAgICAgICdodHRwczovLycgK1xuICAgICAgKHZhdWx0Q2hhaW5JZCA9PSA0ID8gJ3JpbmtlYnkuJyA6ICcnKSArXG4gICAgICAnb3BlbnNlYS5pby9hc3NldHMvJyArIFxuICAgICAgKHZhdWx0Q2hhaW5JZCA9PSAxMzcgPyAnbWF0aWMvJyA6ICdldGhlcmV1bS8nKSArXG4gICAgICAoYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzPyBhbHRlcm5hdGVDb250cmFjdEFkZHJlc3MgOiBjb250cmFjdEFkZHJlc3Nlcy5lbWJsZW1WYXVsdFt2YXVsdENoYWluSWRdKSArXG4gICAgICAnLycgK1xuICAgICAgdG9rZW5JZCBcbiAgICAsICdfYmxhbmsnKVxuICB9XG5cbiAgZnVuY3Rpb24gdmlzaXRMb29rc1JhcmVMaW5rKCkge1xuICAgIHdpbmRvdy5vcGVuKFxuICAgICAgJ2h0dHBzOi8vJyArXG4gICAgICAodmF1bHRDaGFpbklkID09IDQgPyAncmlua2VieS4nIDogJycpICtcbiAgICAgICdsb29rc3JhcmUub3JnL2NvbGxlY3Rpb25zLycgKyBcbiAgICAgICh2YXVsdENoYWluSWQgPT0gMTM3ID8gJ21hdGljLycgOiAnJykgK1xuICAgICAgKGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzcz8gYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzIDogY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbdmF1bHRDaGFpbklkXSkgK1xuICAgICAgJy8nICtcbiAgICAgIHRva2VuSWQgXG4gICAgLCAnX2JsYW5rJylcbiAgfVxuXG4gIGZ1bmN0aW9uIHZpc2l0QXJjYWRlTGluaygpIHtcbiAgICB3aW5kb3cub3BlbihcbiAgICAgIGBodHRwczovL2FwcC5hcmNhZGUueHl6L3Rlcm1zL2Fzc2V0LyR7dGFyZ2V0Q29udHJhY3RbdmF1bHRDaGFpbklkXT8gdGFyZ2V0Q29udHJhY3RbdmF1bHRDaGFpbklkXTogY29udHJhY3RBZGRyZXNzZXMuZW1ibGVtVmF1bHRbdmF1bHRDaGFpbklkXX0vJHt0b2tlbklkfWAgLCAnX2JsYW5rJylcbiAgfVxuXG4gIHsgYWx0ZXJuYXRlQ29udHJhY3RBZGRyZXNzP1xuICAgIGVtYmxlbUNvbnRyYWN0ID0gZ2V0VmF1bHRDb250cmFjdChhbHRlcm5hdGVDb250cmFjdEFkZHJlc3M/IGFsdGVybmF0ZUNvbnRyYWN0QWRkcmVzczogbnVsbClcbiAgOiBudWxsfVxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICAgPEhlYWQ+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOmNhcmRcIiBjb250ZW50PVwic3VtbWFyeV9sYXJnZV9pbWFnZVwiIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOnNpdGVcIiBjb250ZW50PVwiRW1ibGVtLkZpbmFuY2VcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjp0aXRsZVwiIGNvbnRlbnQ9e3ZhdWx0TmFtZX0gLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6ZGVzY3JpcHRpb25cIiBjb250ZW50PXtzcGxpdERlc2NyaXB0aW9uKHZhdWx0RGVzYyl9IC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOmltYWdlXCIgY29udGVudD17dmF1bHRJbWFnZX0gLz5cbiAgICAgICAgPHNjcmlwdFxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgICAgICAgIC8vICQoXCIuTkZUXCIpLnRpbHQoeyAgICBcbiAgICAgICAgICAgICAgLy8gICAgIG1heFRpbHQ6IDNcbiAgICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgICAgICQoXCIuTkZUXCIpLnRyaWdnZXIoJ21vdXNlZW50ZXInKTtcbiAgICAgICAgICAgICAgJChcIi5ORlRcIikudHJpZ2dlcignbW91c2VjbGljaycpLCAnLk5GVCc7XG4gICAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRhcmtNb2RlXCIpID09ICdmYWxzZScpIHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImRhcmtNb2RlXCIsXCJ0cnVlXCIpOyBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24uaHJlZlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGAsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8QWRkck1vZGFsIGlzT3Blbj17aXNPcGVuQWRkck1vZGFsfSBvbkNsb3NlPXtvbkNsb3NlQWRkck1vZGFsfSBhZGRyQ29pbj17Y3VyckNvaW59IGFkZHJBZGRyPXtjdXJyQWRkcn0gLz5cblxuICAgICAgPEtleXNNb2RhbFxuICAgICAgICBpc09wZW49e2lzT3BlbktleXNNb2RhbH1cbiAgICAgICAgb25DbG9zZT17b25DbG9zZUtleXNNb2RhbH1cbiAgICAgICAgbW5lbW9uaWM9e21uZW1vbmljfVxuICAgICAgICBwcml2S2V5QlRDPXtwcml2S2V5QlRDfVxuICAgICAgICBwcml2S2V5RVRIPXtwcml2S2V5RVRIfVxuICAgICAgICBwcml2VmFsdWVzPXtwcml2VmFsdWVzfVxuICAgICAgICBhZGRyZXNzZXM9e3ZhdWx0QWRkcmVzc2VzfVxuICAgICAgLz5cbiAgICAgIHtzaG93T2ZmZXIgPyAoXG4gICAgICAgIDxPZmZlck1vZGFsXG4gICAgICAgICAgaXNPcGVuPXtpc09wZW5PZmZlck1vZGFsfVxuICAgICAgICAgIG9uQ2xvc2U9e29uQ2xvc2VPZmZlck1vZGFsfVxuICAgICAgICAgIHRva2VuSWQ9e3Rva2VuSWR9XG4gICAgICAgICAgbWluZT17bWluZX1cbiAgICAgICAgLz5cbiAgICAgICkgOiBudWxsfVxuICAgICAgXG5cbiAgICAgIDxMb2FkZXIgbG9hZGVkPXtzdGF0ZS5sb2FkZWR9PlxuICAgICAgICA8Qm94IGhlaWdodD1cIjQwcHhcIj48L0JveD5cbiAgICAgICAge2xvYWRpbmdBcGkgPyA8UmVmcmVzaGluZyAvPiA6ICcnfVxuICAgICAgICB7IWludmFsaWRWYXVsdCAmJiAhc2xpZGVzaG93T25seSA/IChcbiAgICAgICAgICAgIDxGbGV4IHdpZHRoPVwiZnVsbFwiIGFsaWduPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIk5GVFwiIFxuICAgICAgICAgICAgICAgIG1heFc9XCJzbVwiXG4gICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg9XCIxcHhcIlxuICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yPXt2YXVsdENoYWluSWQgIT0gY2hhaW5JZCA/ICdvcmFuZ2UuNTAwJyA6IHN0YXR1cyA9PSAnY2xhaW1lZCcgPyAnZ3JlZW4uNTAwJyA6IG51bGx9XG4gICAgICAgICAgICAgICAgcm91bmRlZD1cImxnXCJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdz1cImhpZGRlblwiXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgbWluVz17MzkwfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgbXQ9XCIxXCJcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiXG4gICAgICAgICAgICAgICAgICBhcz1cImgzXCJcbiAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ9XCJ0aWdodFwiXG4gICAgICAgICAgICAgICAgICBwPXsyfVxuICAgICAgICAgICAgICAgICAgdGV4dEFsaWduPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm09XCJ1cHBlcmNhc2VcIlxuICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICBjb2xvcj1cImJsdWUuNTAwXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBWYXVsdCBOZXR3b3JrOiB7Q0hBSU5fSURfTkFNRVNbdmF1bHRDaGFpbklkXX1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgICBtdD1cIjFcIlxuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodD1cInNlbWlib2xkXCJcbiAgICAgICAgICAgICAgICAgIGFzPVwiaDNcIlxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodD1cInRpZ2h0XCJcbiAgICAgICAgICAgICAgICAgIHA9ezJ9XG4gICAgICAgICAgICAgICAgICB0ZXh0QWxpZ249XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgLy8gdGV4dFRyYW5zZm9ybT1cInVwcGVyY2FzZVwiXG4gICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dmF1bHROYW1lfVxuICAgICAgICAgICAgICAgICAgeyF2YXVsdFByaXZhY3kgJiYgdmF1bHRUb3RhbFZhbHVlID4gMCA/ICc6IH4kJyArIHZhdWx0VG90YWxWYWx1ZS50b0xvY2FsZVN0cmluZygpIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICA8U3RhY2sgY2xhc3NOYW1lPVwiTkZULWNvbnRlbnRcIiBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgeyB2YXVsdFZhbHVlcy5sZW5ndGggJiYgdmF1bHRWYWx1ZXMuZmlsdGVyKGl0ZW09PiB7cmV0dXJuIGl0ZW0udHlwZSA9PSBcIm5mdFwifSkubGVuZ3RoID4gMCA/IChcbiAgICAgICAgICAgICAgICAgICAgICA8TkZUU2xpZGVzaG93IG5hbWU9e3ZhdWx0TmFtZX0gaW1hZ2U9e3ZhdWx0SW1hZ2V9IGl0ZW1zPXt2YXVsdFZhbHVlcy5tYXAodmFsdWU9PntyZXR1cm4ge2ltYWdlOiB2YWx1ZS5pbWFnZSwgZGVzY3JpcHRpb246IHZhbHVlLmRlc2NyaXB0aW9uLCBuYW1lOiB2YWx1ZS5uYW1lLCB0eXBlOiB2YWx1ZS50eXBlfX0pfSBwcm9wZXJ0aWVzID0ge3snZHVyYXRpb24nOiAzMDAwLCBjYW5Td2lwZTogZmFsc2V9fS8+XG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgPEVtYmVkIGNsYXNzTmFtZT1cImQtYmxvY2sgdy0xMDAgTkZULWltYWdlXCIgdXJsPXt2YXVsdEltYWdlfS8+XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHttaW5lICYmIG93bmVkSW1hZ2UgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4ge2hhbmRsZU93bmVkRW1iZWQoKX19PihPV05FRCkgU2hvdyBGdWxsIEVtYmVkPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICApOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgPFN0YWNrIGFsaWduPVwiY2VudGVyXCIgbWF4V2lkdGg9XCI0MDBweFwiPlxuICAgICAgICAgICAgICAgICAgPEJveCBtdD1cIjJcIiBtbD1cIjRcIiBsaW5lSGVpZ2h0PVwidGlnaHRcIiBtYXhXaWR0aD1cIjQwMHB4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxTdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBmb250U2l6ZT1cInhzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e1wiLi92YXVsdHM/YWRkcmVzcz1cIitvd25lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIE93bmVyOiB7b3duZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBvdmVyZmxvd1dyYXA9XCJhbnl3aGVyZVwiIG10PXsyfSBhcz1cImg0XCIgbWw9XCI0XCIgbXI9XCI0XCIgZm9udFNpemU9XCJ4c1wiIGZvbnRTdHlsZT1cIml0YWxpY1wiIGNsYXNzTmFtZT1cIm1kXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93biBwbHVnaW5zPXtbZ2ZtXX0gY2hpbGRyZW49e3NwbGl0RGVzY3JpcHRpb24odmF1bHREZXNjKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+ICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDwvQm94PiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgICAgICAgICA8Qm94IHA9XCI2XCI+XG4gICAgICAgICAgICAgICAgPFRhYnMgaXNGaXR0ZWQgdmFyaWFudD0nZW5jbG9zZWQnPlxuICAgICAgICAgICAgICAgICAgPFRhYkxpc3QgbWI9JzFlbSc+XG4gICAgICAgICAgICAgICAgICAgIDxUYWI+QmFsYW5jZXM8L1RhYj5cbiAgICAgICAgICAgICAgICAgICAgPFRhYj5BdHRyaWJ1dGVzPC9UYWI+XG4gICAgICAgICAgICAgICAgICA8L1RhYkxpc3Q+XG4gICAgICAgICAgICAgICAgICA8VGFiUGFuZWxzPlxuICAgICAgICAgICAgICAgICAgICA8VGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgICAge3ZhdWx0UHJpdmFjeSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggbWI9ezV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBwYj17Mn0gY29sb3I9e2RlY3J5cHRlZEVmZmVjdCA/ICdncmVlbi41MDAnIDogbnVsbH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2RlY3J5cHRlZEVmZmVjdCA/IGRlY3J5cHRlZEVmZmVjdCA6ICdDb250ZW50cyBoaWRkZW4uIEVudGVyIHBhc3N3b3JkIHRvIHVubG9jay4nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJ2YXVsdC1wYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB0cnlEZWNyeXB0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwicGFzc3dvcmQtaGVscGVyLXRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBiYWNrZ3JvdW5kQ29sb3I9e2NvbG9yTW9kZSA9PSBcImxpZ2h0XCI/IFwiZ3JheS4xMDBcIjogXCJncmF5LjcwMFwifSBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBjbGFzc05hbWU9XCJjb2luLWJhbGFuY2UtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Qm94IGNvbG9yPVwiZ3JheS41MDBcIiBsZXR0ZXJTcGFjaW5nPVwid2lkZVwiIGZvbnRTaXplPVwic21cIiBtbD1cIjJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz1cImg0XCIgbXQ9ezJ9IGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3VycmVudCBDb250ZW50czogIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRBbGxCYWxhbmNlc0xpdmUoW10sIHRva2VuSWQsICh2KT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldExvYWRlZFZhbHVlcyhmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRWYXVsdFZhbHVlcyh2KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+IFtSZWZyZXNoIEJhbGFuY2VzXTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz1cInBcIiBjb2xvcj17Y29sb3JNb2RlPT1cImRhcmtcIj8gXCJsaWdodGdyZWVuXCI6IFwiZm9yZXN0Z3JlZW5cIn0+JHtOdW1iZXIodmF1bHRUb3RhbFZhbHVlLnRvRml4ZWQoNCkpLnRvTG9jYWxlU3RyaW5nKCl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdmF1bHRWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRWYWx1ZXMubWFwKChjb2luKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3RhY2s+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvaW5CYWxhbmNlIGNvbG9yTW9kZT17Y29sb3JNb2RlfSBjb2luPXtjb2lufSBtaW5lPXsoc3RhdHVzID09PSAnY2xhaW1lZCcgJiYgY2xhaW1lZEJ5ID09PSBhY2NvdW50KSB8fCBtaW5lfSBvblJlbmV3PXtvblJlbmV3fSBoaWRlQXNzZXQ9e2hhbmRsZUhpZGVBc3NldH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6ICg8UmVmcmVzaGluZyAvPiApIH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdERhdGFWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHREYXRhVmFsdWVzLm1hcCgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkRhdGE6IHtkYXRhLmF0dHJpYnV0ZV9rZXl9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAhdmF1bHREYXRhVmFsdWVzLmxlbmd0aCAmJiAhdmF1bHRWYWx1ZXMubGVuZ3RoID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+Tm90aGluZyBpbiBoZXJlISBGaWxsICdlciB1cCE8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lbD5cbiAgICAgICAgICAgICAgICAgICAgICA8QXR0cmlidXRlcyBjb2xvck1vZGU9e2NvbG9yTW9kZX0gYXR0cmlidXRlcz17YXR0cmlidXRlc30vPlxuICAgICAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvVGFiUGFuZWxzPlxuICAgICAgICAgICAgICAgICAgPC9UYWJzPlxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICB7IXZhdWx0UHJpdmFjeSA/IChcbiAgICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cCBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTdGFjaz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+RGVwb3NpdCBBZGRyZXNzZXM8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxGbGV4IHc9XCIzNDBweFwiIGp1c3RpZnk9XCJjZW50ZXJcIiBmbGV4V3JhcD1cIndyYXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dmF1bHRBZGRyZXNzZXMubWFwKChhZGRyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWRkcmVzc19uZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtbD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdD17Mn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodD1cIjEwMCAhaW1wb3J0YW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2FkZHIuYWRkcmVzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyQ29pbihhZGRyLmNvaW4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyQWRkcihhZGRyLmFkZHJlc3MpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbk9wZW5BZGRyTW9kYWwoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YWRkci5jb2luID09ICdFVEgnID8gYWRkci5jb2luICsgJy9FVk0nIDogYWRkci5jb2luID09ICdCVEMnID8gYWRkci5jb2luICsgJy9YQ1AvT01OSScgOiBhZGRyLmNvaW4gPT0gJ0JDSCcgPyBhZGRyLmNvaW4gKyAnL1NMUCc6IGFkZHIuY29pbiA9PSAnVEFQJz8gJ1RBUFJPT1QnOiBhZGRyLmNvaW59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgICAgICAgICB7KG1pbmUgfHwgc3RhdHVzID09PSAnY2xhaW1lZCcpICYmIHZhdWx0QWRkcmVzc2VzLmxlbmd0aCA8IDEyID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG9uQ2xpY2s9eygpPT57b25NYW5hZ2VBZGRyZXNzVG9nZ2xlKCl9fT5NYW5hZ2UgQWRkcmVzc2VzPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZsZXggdz1cIjM0MHB4XCIganVzdGlmeT1cImNlbnRlclwiIGZsZXhXcmFwPVwid3JhcFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNlIGlzT3Blbj17aXNNYW5hZ2VBZGRyZXNzT3Blbn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ0RPR0UnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdET0dFJykgfX0+QWRkIERPR0U8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdER0InKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdER0InKSB9fT5BZGQgRGlnaWJ5dGU8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdOTUMnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdOTUMnKSB9fT5BZGQgTmFtZWNvaW48L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdMVEMnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdMVEMnKSB9fT5BZGQgTGl0ZWNvaW48L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdNT05BJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignTU9OQScpIH19PkFkZCBNb25hPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnVEVaT1MnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdURVpPUycpIH19PkFkZCBUZXpvczwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgIWhhc0FkZHJlc3MoJ1NPTEFOQScpID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG1yPXsyfSBtdD17Mn0gb25DbGljaz17KCk9PnsgaGFuZGxlQWRkcmVzc1NpZ24oJ1NPTEFOQScpIH19PkFkZCBTb2xhbmE8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFoYXNBZGRyZXNzKCdTVFgnKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIiBtcj17Mn0gbXQ9ezJ9IG9uQ2xpY2s9eygpPT57IGhhbmRsZUFkZHJlc3NTaWduKCdTVFgnKSB9fT5BZGQgU3RhY2tzPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhaGFzQWRkcmVzcygnVEFQJykgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCIgbXI9ezJ9IG10PXsyfSBvbkNsaWNrPXsoKT0+eyBoYW5kbGVBZGRyZXNzU2lnbignVEFQJykgfX0+QWRkIFRhcHJvb3Q8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db2xsYXBzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshKHN0YXR1cyA9PT0gJ2NsYWltZWQnKSAmJiBsaXZlICYmICh2YXVsdENoYWluSWQgPT09IDEgfHwgdmF1bHRDaGFpbklkID09PSAxMzcgKT8gKFxuICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgey8qIDxTdGFjayBkPVwiZmxleFwiIHdpZHRoPVwiMTAwJVwiPiAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXttaW5lICYmIHZhdWx0Q2hhaW5JZCA9PSAxPyBcIjMzJVwiIDogdmF1bHRDaGFpbklkID09IDEzNz8gXCIxMDAlXCI6IFwiNTAlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG09ezIuNX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWI9ezV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt2aXNpdE9wZW5TZWFMaW5rKCl9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcGVuc2VhXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyB2YXVsdENoYWluSWQgPT0gMSA/KFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5mdF9idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD17bWluZT8gXCIzMyVcIiA6IFwiNTAlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG09ezIuNX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWI9ezV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt2aXNpdExvb2tzUmFyZUxpbmsoKX19XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIExvb2tzUmFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBtaW5lICYmIHZhdWx0Q2hhaW5JZCA9PSAxPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMzMlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG09ezIuNX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG1iPXs1fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge3Zpc2l0QXJjYWRlTGluaygpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBBcmNhZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICk6IG51bGx9ICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93T2ZmZXI/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJcIiBvbkNsaWNrPXsoKSA9PiB7IG9uT3Blbk9mZmVyTW9kYWwoKSB9fT57bWluZT8gKCdNeSBPZmZlcnMnKSA6ICgnTWFrZSBhbiBPZmZlcicpfSAoTkZUwrJORlQpPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH0gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAge2lzQ292YWxBcHByb3ZlZCAmJiAhbGl2ZSA/IChcbiAgICAgICAgICAgICAgICAgICAgPFN0YWNrIGRpcmVjdGlvbj1cInJvd1wiIGFsaWduPVwiZmxleC1zdGFydFwiIHNwYWNpbmc9XCIwcmVtXCIgZmxleFdyYXA9XCJ3cmFwXCIgc2hvdWxkV3JhcENoaWxkcmVuPlxuICAgICAgICAgICAgICAgICAgICAgIDxCb3ggbWF4Vz1cInNtXCIgYm9yZGVyV2lkdGg9XCIxcHhcIiBwPXsxfSByb3VuZGVkPVwibGdcIiBvdmVyZmxvdz1cImhpZGRlblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+Q3JlYXRpbmcgYSB2YXVsdCBzcGVuZHMge3ByaWNlICogTWF0aC5wb3coMTAsIC1kZWNpbWFscyl9IENvdmFsIGZyb20geW91ciB3YWxsZXQ8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICB7LyogPFRleHQ+NDggaG91ciBGcmVlIG1pbnRpbmcgLSBzcG9uc29yZWQgYnkgdGhlIHRlYW0gYXQgTWVnYVB1bmtzIDxMaW5rIGhyZWY9XCJodHRwczovL21lZ2FwdW5rcy5jb21cIj5odHRwczovL21lZ2FwdW5rcy5jb208L0xpbms+PC9UZXh0PiAqL31cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuXG4gICAgICAgICAgICAgICAgey8qIHttaW5lICYmICFhcHByb3ZlZCA/ICg8PlxuICAgICAgICAgICAgICAgICAgPEJveCBkPVwiZmxleFwiIGFsaWduSXRlbXM9XCJiYXNlbGluZVwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIG10PVwiNFwiPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yPXtcIiMwMmI0MDJcIn1cbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj17XCJibGFjayAhaW1wb3J0YW50XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodD17XCJib2xkICFpbXBvcnRhbnRcIn1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZnRfYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlQXBwcm92ZUZvcmFsbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0+IEFwcHJvdmUgTWludGluZzwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgPC8+KSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICB7IWxpdmUgJiYgbWluZSAmJiB2YXVsdENoYWluSWQgPT0gY2hhaW5JZCAmJiBzdGF0dXMgIT09ICdjbGFpbWVkJyAmJiAhc2hvd01ha2luZ1ZhdWx0TXNnICYmIGFwcHJvdmVkICYmICFpc0NvdmFsQXBwcm92ZWQgPyAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGJhY2tncm91bmRDb2xvcj17XCIjMDJiNDAyXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I9e1wiYmxhY2sgIWltcG9ydGFudFwifVxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ9e1wiYm9sZCAhaW1wb3J0YW50XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCIgbXQ9ezV9IG9uQ2xpY2s9e2FwcHJvdmVDb3ZhbEZsb3d9PlxuICAgICAgICAgICAgICAgICAgICAgIEFwcHJvdmUgU3BlbmRpbmcgQ292YWxcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApIDogbnVsbH0gKi99XG5cbiAgICAgICAgICAgICAgICAgIHsoc2hvd1RyYW5zZmVyUGFzc3dvcmQgfHwgbWludFBhc3N3b3JkKSAmJiBhY2NlcHRhYmxlID8gKFxuICAgICAgICAgICAgICAgICAgICAgIDxCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtsb2NhdGlvbi5wcm90b2NvbCArJy8vJysgbG9jYXRpb24uaG9zdCArICcvbmZ0P2lkPScgKyB0b2tlbklkICsgJyZrZXk9JyArICh0cmFuc2ZlclBhc3N3b3JkIHx8IG1pbnRQYXNzd29yZCl9PkNvcHkgR2lmdCBMaW5rPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQ+UGFzc3dvcmQ6IHsodHJhbnNmZXJQYXNzd29yZCB8fCBtaW50UGFzc3dvcmQpfTwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICB7YWNjZXB0YWJsZSAmJiBjbGFpbWVkQnkgIT09IGFjY291bnQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIG10PXsyfSB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXsoKT0+e2ZpcmVNZXRhTWFzaygpfX0+QWNjZXB0PC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbXQ9ezJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwibWludFBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWluTGVuZ3RoPXszfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezIwMH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e21pbnRQYXNzd29yZCB8fCAnJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2dycnInLCBlLnRhcmdldC52YWx1ZSwgbWludFBhc3N3b3JkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldE1pbnRQYXNzd29yZChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0NvbXBsZXRlPVwib2ZmXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgIHshbGl2ZSAmJiBtaW5lICYmIHZhdWx0Q2hhaW5JZCA9PSBjaGFpbklkICYmIHN0YXR1cyAhPT0gJ2NsYWltZWQnICYmICFzaG93TWFraW5nVmF1bHRNc2cgJiYgYXBwcm92ZWQgJiYgaXNDb3ZhbEFwcHJvdmVkID8gKFxuICAgICAgICAgICAgICAgICAgICAgIDw+ICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBtdD17NX0gaXNEaXNhYmxlZD17KCF2YXVsdFByaXZhY3kgJiYgdmF1bHRWYWx1ZXMubGVuZ3RoIDwgMSl8fCBtaW50TG9ja2VkRm9yZXZlcn0gb25DbGljaz17bGF6eU1pbnR9PnttaW50TG9ja2VkRm9yZXZlcj8gJ01pbnQgTG9ja2VkIC0ga2V5cyBhY2Nlc3NlZCBiZWZvcmUgbWludCcgOiAhdmF1bHRQcml2YWN5ICYmIHZhdWx0VmFsdWVzLmxlbmd0aCA8IDE/ICdQbGVhc2UgbG9hZCB0aGUgdmF1bHQgdG8gbWludCc6ICdNaW50IFZhdWx0J308L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuXG4gICAgICAgICAgICAgICAgICB7IShzdGF0dXMgPT09ICdjbGFpbWVkJykgJiYgYWNjb3VudCAmJiB2YXVsdENoYWluSWQgPT09IGNoYWluSWQgJiYgbWluZSAmJiAhc2VhbGVkICYmIGFwcHJvdmVkICYmIGxpdmUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVDbGFpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgaXNEaXNhYmxlZD17Y2xhaW1pbmd9XG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2NsYWltaW5nID8gJ0NsYWltaW5nIC4uLicgOiAnVW5sb2NrIFZhdWx0IChHZXQgUHJpdmF0ZSBLZXlzKSd9XG4gICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6ICh2YXVsdENoYWluSWQgPT09IGNoYWluSWQgJiYgKChzdGF0dXMgPT0gJ2NsYWltZWQnIHx8IG1pbnRMb2NrZWRGb3JldmVyKSAmJiAoY2xhaW1lZEJ5ID09PSBhY2NvdW50IHx8IG1pbmUpKSkgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHdpZHRoPVwiMTAwJVwiIG9uQ2xpY2s9e2hhbmRsZVNpZ259PlxuICAgICAgICAgICAgICAgICAgICAgIEdldCBLZXlzXG4gICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICA8U3RhY2sgbXQ9ezV9PlxuICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgIHttaW5lPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgIHshaXNDb3ZhbEFwcHJvdmVkID8oXG4gICAgICAgICAgICAgICAgICAgIDxBcHByb3ZhbFxuICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZXI9e3thZGRyZXNzOiBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJbY2hhaW5JZF0sIGFiaTogY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyQWJpfX0gXG4gICAgICAgICAgICAgICAgICAgICAgc3BlbmRpbmc9e3thZGRyZXNzOiBjb250cmFjdEFkZHJlc3Nlcy5jb3ZhbFtjaGFpbklkXSwgYWJpOiBjb250cmFjdEFkZHJlc3Nlcy5jb3ZhbEFiaX19IFxuICAgICAgICAgICAgICAgICAgICAgIGFtb3VudD17MTAwMH0gXG4gICAgICAgICAgICAgICAgICAgICAgbGFiZWwgPSBcIkFwcHJvdmUgU3BlbmRpbmcgQ292YWxcIlxuICAgICAgICAgICAgICAgICAgICAgIHdhdGNoZXI9e3NldEhhc2h9XG4gICAgICAgICAgICAgICAgICAgICAgYXBwcm92ZWRIb29rPXtzZXRJc0NvdmFsQXBwcm92ZWR9XG4gICAgICAgICAgICAgICAgICAgIC8+KTogbnVsbH1cbiAgICAgICAgICAgICAgICAgICAgeyFhcHByb3ZlZCA/KFxuICAgICAgICAgICAgICAgICAgICA8QXBwcm92YWxcbiAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyPXt7YWRkcmVzczogIGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlcltjaGFpbklkXSwgYWJpOiBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJBYml9fSBcbiAgICAgICAgICAgICAgICAgICAgICBzcGVuZGluZz17e2FkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W2NoYWluSWRdLCBhYmk6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaX19XG4gICAgICAgICAgICAgICAgICAgICAgYW1vdW50PXswfVxuICAgICAgICAgICAgICAgICAgICAgIGxhYmVsID0gXCJBcHByb3ZlIENyZWF0aW5nIC8gQnVybmluZyBWYXVsdHNcIlxuICAgICAgICAgICAgICAgICAgICAgIHdhdGNoZXI9e3NldEhhc2h9XG4gICAgICAgICAgICAgICAgICAgICAgYXBwcm92ZWRIb29rPXtzZXRBcHByb3ZlZH1cbiAgICAgICAgICAgICAgICAgICAgLz4pOiBudWxsfVxuICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibmZ0X2J1dHRvblwiIG9uQ2xpY2s9eygpID0+IHsgb25BZHZhbmNlZFRvZ2dsZSgpIH19PkFkdmFuY2VkIE9wZXJhdGlvbnM8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPEZsZXggdz1cIjEwMCVcIiBqdXN0aWZ5PVwiY2VudGVyXCIgZmxleFdyYXA9XCJ3cmFwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNlIHdpZHRoPXtcIjEwMCVcIn0gaXNPcGVuPXtpc0FkdmFuY2VkT3Blbn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dmF1bHRDaGFpbklkID09PSBjaGFpbklkICYmIG1pbmVVbk1pbnRlZCAmJiBzdGF0dXMgIT0gXCJjbGFpbWVkXCIgJiYgIW1pbnRMb2NrZWRGb3JldmVyID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBvbkNsaWNrPXtoYW5kbGVTaWdufT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdldCBLZXlzIChVbmxvY2tpbmcgd2lsbCBwcmV2ZW50IG1pbnRpbmcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHttaW5lICYmIHNob3dNb3ZlICYmIHF1YWxpZmllZENvbGxlY3Rpb24gJiYgcXVhbGlmaWVkQ29sbGVjdGlvbltjaGFpbklkXSAmJiBxdWFsaWZpZWRDb2xsZWN0aW9uLm5hbWUgJiYgcXVhbGlmaWVkQ29sbGVjdGlvbi5jaGFpbiA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QXBwcm92YWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZXI9e3thZGRyZXNzOiBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJWOFtjaGFpbklkXSAsIGFiaTogY29udHJhY3RBZGRyZXNzZXMudmF1bHRIYW5kbGVyVjhBYmkgfX0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGVuZGluZz17e2FkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbVZhdWx0W2NoYWluSWRdLCBhYmk6IGNvbnRyYWN0QWRkcmVzc2VzLmVtYmxlbUFiaX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbW91bnQ9ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbCA9IFwiQXBwcm92ZSBNb3ZpbmcgKHBhcnQgMSlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2F0Y2hlcj17c2V0SGFzaH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBcHByb3ZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcj17e2FkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc2VzLnZhdWx0SGFuZGxlclY4W2NoYWluSWRdICwgYWJpOiBjb250cmFjdEFkZHJlc3Nlcy52YXVsdEhhbmRsZXJWOEFiaSB9fSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwZW5kaW5nPXt7YWRkcmVzczogcXVhbGlmaWVkQ29sbGVjdGlvbltjaGFpbklkXSwgYWJpOiBjb250cmFjdEFkZHJlc3Nlcy5lcmMxMTU1QWJpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFtb3VudD17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsID0gXCJBcHByb3ZlIE1vdmluZyAocGFydCAyKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXRjaGVyPXtzZXRIYXNofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Qm94IGQ9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCIgbXQ9XCI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldE1vdmluZyh0cnVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1vdmUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0Rpc2FibGVkPXttb3Zpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttb3ZpbmcgPyAnTW92aW5nIC4uLicgOiAnTW92ZSBWYXVsdCd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgICAgICAge21pbmUgfHwgY2xhaW1lZEJ5ID09IGFjY291bnQgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxKc29uRG93bmxvYWRMaW5rIGRhdGE9e3Jhd01ldGFkYXRhfSBmaWxlbmFtZT17YEVtYmxlbVZhdWx0LSR7dG9rZW5JZH0uanNvbmB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogbnVsbH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyghbGl2ZSB8fCBzdGF0dXMgPT0gJ2NsYWltZWQnKSAmJiB0byA9PSBhY2NvdW50ICYmIHZhdWx0Q2hhaW5JZCA9PSBjaGFpbklkICYmICFzaG93TWFraW5nVmF1bHRNc2cgJiYgdmF1bHRWYWx1ZXMubGVuZ3RoIDwgMSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB3aWR0aD1cIjEwMCVcIiBtdD17NX0gb25DbGljaz17ZGVsZXRlVmF1bHR9PkRlbGV0ZSBWYXVsdCA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2U+XG4gICAgICAgICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgIDwvU3RhY2s+XG5cbiAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICB7dmF1bHRJUEZTID8gKFxuICAgICAgICAgICAgICAgICAgICA8SFN0YWNrIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgdGFyZ2V0PSduZXcnIG1iPXsyfSBtbD17MzV9IGhyZWY9eydodHRwczovL2dhdGV3YXkuaXBmcy5pby9pcGZzLycrdmF1bHRJUEZTfSBpc0V4dGVybmFsPlZpZXcgTWV0YWRhdGEgb24gSVBGUyA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAge3ZhdWx0SW1hZ2VJUEZTPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBtYj17Mn0gaHJlZj17J2h0dHBzOi8vZ2F0ZXdheS5pcGZzLmlvL2lwZnMvJyt2YXVsdEltYWdlSVBGU30gaXNFeHRlcm5hbD5WaWV3IEltYWdlIG9uIElQRlMgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICkgOiBudWxsfSAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9IU3RhY2s+IFxuICAgICAgICAgICAgICAgICkgOiBudWxsIH1cblxuICAgICAgICAgICAgICAgIHtzZWFsZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxCb3ggZD1cImZsZXhcIiBtYj17Mn0gbWw9ezM1fSBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtdD1cIjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dD4qVGhpcyB2YXVsdCBpcyBzZWFsZWQgZm9yZXZlci48L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgICA8U3RhY2sgZGlyZWN0aW9uPVwiY29sdW1uXCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIHtzdGF0dXMgPT0gJ2NsYWltZWQnID8gPFRleHQgY29sb3I9XCJncmVlbi41MDBcIj5DTEFJTUVEPC9UZXh0PiA6IG51bGx9XG4gICAgICAgICAgICAgICAgPC9TdGFjaz5cblxuICAgICAgICAgICAgICAgIHtoYXNoID8gKFxuICAgICAgICAgICAgICAgICAgPEFsZXJ0IHN0YXR1cz1cImluZm9cIj5cbiAgICAgICAgICAgICAgICAgICAgPEFsZXJ0SWNvbiAvPlxuICAgICAgICAgICAgICAgICAgICB7IGFjY2VwdGluZyA/IFwiQWNjZXB0aW5nIFlvdXIgR2lmdCBWYXVsdFwiIDogY2xhaW1pbmcgPyBcIkNsYWltaW5nIHlvdXIgVmF1bHQgLi4uXCIgOiBhcHByb3Zpbmc/IFwiSGFuZGxpbmcgQXBwcm92YWwgRmxvdyAuLi5cIiA6IHRyYW5zZmVyaW5nPyBcIlRyYW5zZmVyaW5nIFZhdWx0IC4uLlwiOiAgbWludGluZz8gXCJNaW50aW5nIFZhdWx0XCIgOiBcIlZhbGlkYXRpbmcgdHJhbnNhY3Rpb25cIn1cbiAgICAgICAgICAgICAgICAgIDwvQWxlcnQ+XG4gICAgICAgICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICkgOiB2YXVsdFZhbHVlcy5sZW5ndGggPiAwICYmIHNsaWRlc2hvd09ubHk/IChcbiAgICAgICAgICA8U3RhY2sgY2xhc3NOYW1lPVwiTkZULWNvbnRlbnRcIiBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgeyB2YXVsdFZhbHVlcy5sZW5ndGggJiYgdmF1bHRWYWx1ZXMuZmlsdGVyKGl0ZW09PiB7cmV0dXJuIGl0ZW0udHlwZSA9PSBcIm5mdFwifSkubGVuZ3RoID4gMCA/IChcbiAgICAgICAgICAgICAgICA8TkZUU2xpZGVzaG93IG5hbWU9e3ZhdWx0TmFtZX0gaW1hZ2U9e3ZhdWx0VmFsdWVzWzBdLmltYWdlfSBpdGVtcz17dmF1bHRWYWx1ZXMuZmlsdGVyKHZhbHVlPT57cmV0dXJuIHZhbHVlLmltYWdlICE9PSB2YXVsdFZhbHVlc1swXS5pbWFnZX0pLm1hcCh2YWx1ZT0+e3JldHVybiB7aW1hZ2U6IHZhbHVlLmltYWdlLCBkZXNjcmlwdGlvbjogdmFsdWUuZGVzY3JpcHRpb24sIG5hbWU6IHZhbHVlLm5hbWUsIHR5cGU6IHZhbHVlLnR5cGV9fSl9IHByb3BlcnRpZXMgPSB7eydkdXJhdGlvbic6IDMwMDAsIGNhblN3aXBlOiBmYWxzZX19Lz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8RW1iZWQgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMCBORlQtaW1hZ2VcIiB1cmw9e3ZhdWx0SW1hZ2V9Lz5cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICkgOiBpbnZhbGlkVmF1bHQgPyAoXG4gICAgICAgICAgPFN0YWNrIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8SW1hZ2VcbiAgICAgICAgICAgICAgd2lkdGg9XCJtZFwiXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vc3RhcndhcnNibG9nLnN0YXJ3YXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNy8wNi8yNS1zdGFyLXdhcnMtcXVvdGVzLW9iaS13YW4ta2Vub2JpLWlkZW50aWZpY2F0aW9uLXRhbGwuanBnXCJcbiAgICAgICAgICAgID48L0ltYWdlPlxuICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgIFRIRVNFIEFSRSBOT1QgVEhFIFZBVUxUUyBZT1UgQVJFIExPT0tJTkcgRk9SeycgJ31cbiAgICAgICAgICAgICAgPExpbmsgY29sb3I9XCIjNjM4Y2Q4XCIgaHJlZj1cIi4uL2NyZWF0ZVwiPlxuICAgICAgICAgICAgICAgIENSRUFURSBPTkUgSEVSRSFcbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICk6IG51bGx9XG5cbiAgICAgICAge2hhc2ggPyAoXG4gICAgICAgICAgPFRyYW5zYWN0aW9uVG9hc3RcbiAgICAgICAgICAgIGhhc2g9e2hhc2h9XG4gICAgICAgICAgICBvbkNvbXBsZXRlPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGlmKG1vdmluZykge1xuICAgICAgICAgICAgICAgIHNldE1vdmluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQyP2lkPScgKyB0b2tlbklkICsgJyZjYz10JztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhaW1pbmcgJiYgIWFjY2VwdGluZyAmJiAhcHJlVHJhbnNmZXJpbmcpIHtcbiAgICAgICAgICAgICAgICBzZXRIYXNoKG51bGwpXG4gICAgICAgICAgICAgICAgc2V0U3RhdHVzKCdjbGFpbWVkJylcbiAgICAgICAgICAgICAgICBzZXRDbGFpbWluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBzZXRDbGFpbWVkQnkoYWNjb3VudClcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gbG9jYXRpb24ub3JpZ2luICsgJy9uZnQ/aWQ9JyArIHRva2VuSWQgKyAnJmNjPXQnO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHByZVRyYW5zZmVyaW5nKSB7XG4gICAgICAgICAgICAgICAgc2F2ZVBhc3N3b3JkVG9Mb2NhbFN0b3JhZ2UoKVxuICAgICAgICAgICAgICAgIHNldFNob3dUcmFuc2ZlclBhc3N3b3JkKHRydWUpXG4gICAgICAgICAgICAgICAgc2V0UHJlVHJhbnNmZXJpbmcoZmFsc2UpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKSAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKGFjY2VwdGluZykge1xuICAgICAgICAgICAgICAgIHNldEFjY2VwdGluZyhmYWxzZSkgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZ2V0VmF1bHQoKVxuICAgICAgICAgICAgICAgIHNldEhhc2gobnVsbClcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKGFwcHJvdmluZykge1xuICAgICAgICAgICAgICAgIHNldEFwcHJvdmluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBnZXRWYXVsdCgpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKVxuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZFxuICAgICAgICAgICAgICB9IGVsc2UgaWYodHJhbnNmZXJpbmcpIHtcbiAgICAgICAgICAgICAgICBzZXRUcmFuc2ZlcmluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICBnZXRWYXVsdCgpXG4gICAgICAgICAgICAgICAgc2V0SGFzaChudWxsKVxuICAgICAgICAgICAgICB9IGVsc2UgaWYobWludGluZykge1xuICAgICAgICAgICAgICAgIGNoZWNrTGl2ZWxpbmVzcyh0b2tlbklkLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgc2V0TWludGluZyhmYWxzZSlcbiAgICAgICAgICAgICAgICAgIHNldExpdmUodHJ1ZSlcbiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBsb2NhdGlvbi5vcmlnaW4gKyAnL25mdD9pZD0nICsgdG9rZW5JZCArICcmY2M9dCc7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLm9yaWdpbiArICcvbmZ0P2lkPScgKyB0b2tlbklkXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDxCb3ggaGVpZ2h0PVwiNDBweFwiPjwvQm94PlxuICAgICAgPC9Mb2FkZXI+XG4gICAgPC8+XG4gIClcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Nft.tsx\n");

/***/ })

})