webpackHotUpdate_N_E("pages/nft2",{

/***/ "./components/Nft2.tsx":
/*!*****************************!*\
  !*** ./components/Nft2.tsx ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Nft2; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _Refreshing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Refreshing */ \"./components/Refreshing.tsx\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-loader */ \"./node_modules/react-loader/lib/react-loader.js\");\n/* harmony import */ var react_loader__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_loader__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/contracts */ \"./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _TransactionToast__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TransactionToast */ \"./components/TransactionToast.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../constants */ \"./constants.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils */ \"./utils.ts\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! crypto-js */ \"./node_modules/crypto-js/index.js\");\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_markdown__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-gfm */ \"./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(remark_gfm__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _Embed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Embed */ \"./components/Embed.tsx\");\n/* harmony import */ var _embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./embed/NFTSlideshow */ \"./components/embed/NFTSlideshow.tsx\");\n/* harmony import */ var _partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partials/CoinBalance */ \"./components/partials/CoinBalance.tsx\");\n/* harmony import */ var _partials_Attributes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./partials/Attributes */ \"./components/partials/Attributes.tsx\");\n/* harmony import */ var _stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @stacks/wallet-sdk */ \"./node_modules/@stacks/wallet-sdk/dist/polyfill/index.js\");\n/* harmony import */ var _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @toruslabs/fetch-node-details */ \"./node_modules/@toruslabs/fetch-node-details/dist/fetchNodeDetails.esm.js\");\n/* harmony import */ var _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @toruslabs/torus.js */ \"./node_modules/@toruslabs/torus.js/dist/torusUtils.esm.js\");\n\n\n\nvar _jsxFileName = \"/Users/shannoncode/repo/Emblem.Currentwork/emblem-vault-site/components/Nft2.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n // import TorusSdk from \"@toruslabs/torus-direct-web-sdk\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar API_VERSION = '/v2';\nvar AddrModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 5).then(__webpack_require__.bind(null, /*! ./AddrModal */ \"./components/AddrModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./AddrModal */ \"./components/AddrModal.tsx\")];\n    },\n    modules: ['./AddrModal']\n  }\n});\n_c2 = AddrModal;\nvar KeysModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c3 = function _c3() {\n  return __webpack_require__.e(/*! import() */ 6).then(__webpack_require__.bind(null, /*! ./KeysModal */ \"./components/KeysModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./KeysModal */ \"./components/KeysModal.tsx\")];\n    },\n    modules: ['./KeysModal']\n  }\n});\n_c4 = KeysModal;\nvar OfferModal = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(_c5 = function _c5() {\n  return __webpack_require__.e(/*! import() */ 7).then(__webpack_require__.bind(null, /*! ./OfferModal */ \"./components/OfferModal.tsx\"));\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ./OfferModal */ \"./components/OfferModal.tsx\")];\n    },\n    modules: ['./OfferModal']\n  }\n});\n_c6 = OfferModal;\nfunction Nft2() {\n  _s();\n\n  var _this = this;\n\n  var _useWeb3React = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"])(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"])(),\n      query = _useRouter.query;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCuratedMaster = _useState[0],\n      setIsCuratedMaster = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      decimals = _useState2[0],\n      setDecimals = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      allowance = _useState3[0],\n      setAllowance = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      balance = _useState4[0],\n      setBalance = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      price = _useState5[0],\n      setPrice = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCovalApproved = _useState6[0],\n      setIsCovalApproved = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approved = _useState7[0],\n      setApproved = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.useOldMint),\n      useOldMint = _useState8[0],\n      setUseOldMint = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.key),\n      mintPassword = _useState9[0],\n      setMintPassword = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.offer || false),\n      showOffer = _useState10[0],\n      setShowOffer = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.framed || true),\n      framed = _useState11[0],\n      setFramed = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.id),\n      tokenId = _useState12[0],\n      setTokenId = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.experimental),\n      experimental = _useState13[0],\n      setExperimental = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.noLayout),\n      noLayout = _useState14[0],\n      setNoLayout = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(query.slideshowOnly || false),\n      slideshowOnly = _useState15[0],\n      setSlideshowOnly = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultName = _useState16[0],\n      setVaultName = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultIPFS = _useState17[0],\n      setVaultIPFS = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImageIPFS = _useState18[0],\n      setVaultImageIPFS = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultCiphertextV2 = _useState19[0],\n      setVaultCiphertextV2 = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultDesc = _useState20[0],\n      setVaultDesc = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      vaultImage = _useState21[0],\n      setVaultImage = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      ownedImage = _useState22[0],\n      setOwnedImage = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultValues = _useState23[0],\n      setVaultValues = _useState23[1];\n\n  var _useState24 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadedValues = _useState24[0],\n      setLoadedValues = _useState24[1];\n\n  var _useState25 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultDataValues = _useState25[0],\n      setVaultDataValues = _useState25[1];\n\n  var _useState26 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      attributes = _useState26[0],\n      setAttributes = _useState26[1];\n\n  var _useState27 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      vaultAddresses = _useState27[0],\n      setVaultAddresses = _useState27[1];\n\n  var _useState28 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      vaultPrivacy = _useState28[0],\n      setVaultPrivacy = _useState28[1];\n\n  var _useState29 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(0),\n      vaultTotalValue = _useState29[0],\n      setVaultTotalValue = _useState29[1];\n\n  var _useState30 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChainId = _useState30[0],\n      setVaultChainId = _useState30[1];\n\n  var _useState31 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      vaultChain = _useState31[0],\n      setVaultChain = _useState31[1];\n\n  var _useState32 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      hash = _useState32[0],\n      setHash = _useState32[1];\n\n  var _useState33 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currCoin = _useState33[0],\n      setCurrCoin = _useState33[1];\n\n  var _useState34 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      currAddr = _useState34[0],\n      setCurrAddr = _useState34[1];\n\n  var _useState35 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    loaded: false\n  }),\n      state = _useState35[0],\n      setState = _useState35[1];\n\n  var _useState36 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mine = _useState36[0],\n      setMine = _useState36[1];\n\n  var _useState37 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mineUnMinted = _useState37[0],\n      setMineUnMinted = _useState37[1];\n\n  var _useState38 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      claiming = _useState38[0],\n      setClaiming = _useState38[1];\n\n  var _useState39 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])('claimed'),\n      status = _useState39[0],\n      setStatus = _useState39[1];\n\n  var _useState40 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      sealed = _useState40[0],\n      setSealed = _useState40[1];\n\n  var _useState41 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      claimedBy = _useState41[0],\n      setClaimedBy = _useState41[1];\n\n  var _useState42 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      mnemonic = _useState42[0],\n      setMnemonic = _useState42[1];\n\n  var _useState43 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyBTC = _useState43[0],\n      setPrivKeyBTC = _useState43[1];\n\n  var _useState44 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      privKeyETH = _useState44[0],\n      setPrivKeyETH = _useState44[1];\n\n  var _useState45 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])([]),\n      privValues = _useState45[0],\n      setKeyValues = _useState45[1];\n\n  var _useState46 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      loadingApi = _useState46[0],\n      setLoadingApi = _useState46[1];\n\n  var _useState47 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptedEffect = _useState47[0],\n      setDecryptedEffect = _useState47[1];\n\n  var _useState48 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      decryptedEffectRunning = _useState48[0],\n      setDecryptedEffectRunning = _useState48[1];\n\n  var _useState49 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      decryptPassword = _useState49[0],\n      setDecryptPassword = _useState49[1];\n\n  var _useState50 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      invalidVault = _useState50[0],\n      setInvalidVault = _useState50[1];\n\n  var _useState51 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      hasCheckedNft = _useState51[0],\n      setHasCheckedNft = _useState51[1];\n\n  var _useState52 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      accepting = _useState52[0],\n      setAccepting = _useState52[1];\n\n  var _useState53 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      approving = _useState53[0],\n      setApproving = _useState53[1];\n\n  var _useState54 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      acceptable = _useState54[0],\n      setAcceptable = _useState54[1];\n\n  var _useState55 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(''),\n      transferPassword = _useState55[0],\n      setTransferPassword = _useState55[1];\n\n  var _useState56 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showTransferPassword = _useState56[0],\n      setShowTransferPassword = _useState56[1];\n\n  var _useState57 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      preTransfering = _useState57[0],\n      setPreTransfering = _useState57[1];\n\n  var _useState58 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      transferToAddress = _useState58[0],\n      setTransferToAddress = _useState58[1];\n\n  var _useState59 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      transfering = _useState59[0],\n      setTransfering = _useState59[1];\n\n  var _useState60 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      owner = _useState60[0],\n      setOwner = _useState60[1]; // const [torus, setTorus] = useState(initTorus())\n\n\n  var _useState61 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      live = _useState61[0],\n      setLive = _useState61[1];\n\n  var _useState62 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      nonce = _useState62[0],\n      setNonce = _useState62[1];\n\n  var _useState63 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      mintSignature = _useState63[0],\n      setMintSignature = _useState63[1];\n\n  var _useState64 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      to = _useState64[0],\n      setTo = _useState64[1];\n\n  var _useState65 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showVerifyingSignature = _useState65[0],\n      setShowVerifyingSignature = _useState65[1];\n\n  var _useState66 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      showMakingVaultMsg = _useState66[0],\n      setShowMakingVaultMsg = _useState66[1];\n\n  var _useState67 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      minting = _useState67[0],\n      setMinting = _useState67[1];\n\n  var _useState68 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      isCrowdSale = _useState68[0],\n      setIsCrowdSale = _useState68[1];\n\n  var _useState69 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(null),\n      alternateContractAddress = _useState69[0],\n      setAlternateContractAddress = _useState69[1];\n\n  var _useState70 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    image: '',\n    metadata: ''\n  }),\n      targetAsset = _useState70[0],\n      setTargetAsset = _useState70[1];\n\n  var _useState71 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({\n    name: '',\n    chain: '',\n    4: '',\n    1: '',\n    tokenId: {},\n    serialNumber: {\n      'hex': ''\n    }\n  }),\n      targetContract = _useState71[0],\n      setTargetContract = _useState71[1];\n\n  var _useState72 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      canCuratedMint = _useState72[0],\n      setCanCuratedMint = _useState72[1];\n\n  var _useState73 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      mintLockedForever = _useState73[0],\n      setMintLockedForever = _useState73[1];\n\n  var _useState74 = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])({}),\n      curatedMintingParameters = _useState74[0],\n      setCuratedMintingParameters = _useState74[1];\n\n  var handlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerAbi, true);\n  var vaultHandlerContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8Abi, true);\n  var emblemContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, true);\n  var covalContract = Object(_hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"])(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].coval[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].covalAbi, true);\n\n  var _useDisclosure = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenAddrModal = _useDisclosure.isOpen,\n      onOpenAddrModal = _useDisclosure.onOpen,\n      onCloseAddrModal = _useDisclosure.onClose;\n\n  var _useDisclosure2 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenKeysModal = _useDisclosure2.isOpen,\n      onOpenKeysModal = _useDisclosure2.onOpen,\n      onCloseKeysModal = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpenOfferModal = _useDisclosure3.isOpen,\n      onOpenOfferModal = _useDisclosure3.onOpen,\n      onCloseOfferModal = _useDisclosure3.onClose;\n\n  var _useDisclosure4 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isOpen = _useDisclosure4.isOpen,\n      onToggle = _useDisclosure4.onToggle;\n\n  var _useDisclosure5 = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"])(),\n      isManageAddressOpen = _useDisclosure5.isOpen,\n      onManageAddressToggle = _useDisclosure5.onToggle;\n\n  var _useColorMode = Object(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"])(),\n      colorMode = _useColorMode.colorMode;\n\n  var getVaultContract = function getVaultContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address || _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[chainId], _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemAbi, library.getSigner(account).connectUnchecked());\n  };\n\n  var getCuratedContract = function getCuratedContract() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_11__[\"Contract\"](address, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].erc1155Abi, library.getSigner(account).connectUnchecked());\n  };\n\n  var checkLiveliness = function checkLiveliness(tokenId, targetContract, cb) {\n    console.log(\"check liveliness next\", targetContract);\n    var endpoint = targetContract.name ? _constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + API_VERSION + '/liveliness-curated' : _constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/liveliness';\n    fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        tokenId: tokenId\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context.sent;\n                setLive(data.live);\n                console.log(\"Liveliness check\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return cb(false);\n  };\n\n  var deleteVault = function deleteVault() {\n    library.getSigner(account).signMessage('Delete: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + API_VERSION + '/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context2.sent;\n                  location.href = location.href.split(\"/\")[0] + \"/vaults\";\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var lazyMintCurated = function lazyMintCurated() {\n    library.getSigner(account).signMessage('Curated Minting: ' + tokenId).then(function (signature) {\n      console.log(\"sig\", signature);\n      fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + API_VERSION + '/mint-curated', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          service: 'evmetadata'\n        },\n        body: JSON.stringify({\n          tokenId: tokenId,\n          signature: signature,\n          chainId: chainId.toString()\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref3 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(response) {\n          var data;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return response.json();\n\n                case 2:\n                  data = _context3.sent;\n                  console.log(\"WTFFFFF\");\n                  console.log(data._nftAddress, data._payment, data._price, data._to, data._tokenId, data._nonce, data._signature, data.serialNumber, 1);\n                  setCuratedMintingParameters(data);\n                  vaultHandlerContract.buyWithSignedPrice(data._nftAddress, data._payment, data._price, data._to, data._tokenId, data._nonce, data._signature, data.serialNumber, 1).then(function (_ref4) {\n                    var hash = _ref4.hash;\n                    setTimeout(function () {\n                      setHash(hash);\n                      setShowMakingVaultMsg(true);\n                      setMinting(true);\n                    }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n                  })[\"catch\"](function (error) {\n                    console.log('ERROR', error);\n                    setShowMakingVaultMsg(false);\n                    setMinting(false);\n                  });\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    });\n  };\n\n  var getAllBalances = /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context4.sent;\n              _context4.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context4.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context4.next = 11;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", cb(jsonData.balances));\n\n            case 11:\n              return _context4.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getAllBalances(_x4, _x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleApproveForall = function handleApproveForall() {\n    setApproving(true);\n\n    if (targetContract.name) {\n      emblemContract = getCuratedContract(targetContract[chainId]);\n      emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId], true).then(function (_ref6) {\n        var hash = _ref6.hash;\n        setTimeout(function () {\n          setHash(hash);\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {\n          setApproving(false);\n        }\n      });\n    } else {\n      emblemContract.setApprovalForAll(_constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId], true).then(function (_ref7) {\n        var hash = _ref7.hash;\n        setTimeout(function () {\n          setHash(hash);\n        }, 100); // Solving State race condition where transaction watcher wouldn't notice we were creating\n      })[\"catch\"](function (error) {\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.log(\"tx failed.\", error);\n        } else {\n          setApproving(false);\n        }\n      });\n    }\n  };\n\n  var getVault = /*#__PURE__*/function () {\n    var _ref8 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log('getvault');\n              _context5.next = 3;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + API_VERSION + '/meta/' + tokenId + '?experimental=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 3:\n              responce = _context5.sent;\n              _context5.next = 6;\n              return responce.json();\n\n            case 6:\n              jsonData = _context5.sent;\n\n              if (jsonData.collectionAddress) {\n                setIsCrowdSale(true);\n                setAlternateContractAddress(jsonData.collectionAddress);\n              }\n\n              if (!jsonData.name) {\n                setState({\n                  loaded: true\n                });\n                setInvalidVault(true);\n              } else {\n                console.log(\"--------------- states -\", jsonData);\n                setStates(jsonData);\n                setLoadingApi(false);\n                setInvalidVault(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getVault() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var setStates = function setStates(jsonData) {\n    framed && jsonData.image && !jsonData.image.includes('framed=') && !jsonData.image.includes('http') ? jsonData.image = jsonData.image + \"&framed=\" + framed : null;\n\n    if (jsonData.ciphertextV2) {\n      setVaultCiphertextV2(jsonData.ciphertextV2);\n      console.log(\"ciphertextV2\", jsonData.ciphertextV2);\n    }\n\n    setMintLockedForever(jsonData.mintLocked && jsonData.mintLockBlock == 0);\n    setVaultName(jsonData.name);\n    setVaultImage(jsonData.image);\n    setOwnedImage(jsonData.ownedImage || null);\n    setVaultDesc(jsonData.description);\n    setVaultTotalValue(jsonData.totalValue || 0);\n    jsonData.values ? setVaultValues(vaultValues.concat(jsonData.values)) : null;\n    jsonData.attributes ? setVaultDataValues(jsonData.attributes.filter(function (item) {\n      return item.trait_type === \"key\";\n    })) : null;\n    jsonData.attributes ? setAttributes(jsonData.attributes) : null;\n    setVaultAddresses(jsonData.addresses);\n    setVaultIPFS(jsonData.ipfs || null);\n    setVaultImageIPFS(jsonData.image_ipfs || null);\n    jsonData.targetContract && jsonData.targetContract.tokenId == tokenId ? setIsCuratedMaster(true) : null;\n    jsonData.targetAsset ? setTargetAsset(jsonData.targetAsset) : null;\n    jsonData.targetContract ? setTargetContract(jsonData.targetContract) : null;\n    jsonData.values && jsonData.targetAsset && jsonData.values.filter(function (item) {\n      return item.coin.toLowerCase() == jsonData.targetContract.chain && item.name == jsonData.targetAsset.name && item.project == jsonData.targetContract.name;\n    }).length > 0 ? setCanCuratedMint(true) : null;\n    setLive(jsonData.live == false ? false : true);\n    setNonce(jsonData.nonce);\n    setMintSignature(jsonData.signature);\n    setTo(jsonData.to);\n    setVaultChain(jsonData.network);\n    setVaultChainId(jsonData.network == 'mainnet' ? 1 : jsonData.network == \"rinkeby\" ? 4 : jsonData.network == \"goerli\" ? 5 : jsonData.network == \"mumbai\" ? 80001 : jsonData.network == \"matic\" ? 137 : jsonData.network == \"xdai\" ? 100 : jsonData.network == \"bsc\" ? 56 : jsonData.network == \"fantom\" ? 250 : jsonData.network == \"bitcoin\" ? 0 : jsonData.network == \"aurora\" ? 1313161554 : 97);\n\n    if (!jsonData.live) {\n      console.log(\"check liveliness start\");\n      checkLiveliness(tokenId, jsonData.targetContract, function (isLive) {\n        setLive(isLive);\n      });\n    }\n\n    setStatus(jsonData.status);\n\n    if (status === 'claimed') {\n      setClaimedBy(jsonData.claimedBy);\n    }\n\n    setState({\n      loaded: true\n    });\n    var isPvt = jsonData.addresses.filter(function (item) {\n      return item.address.includes('private:');\n    }).length > 0;\n    setVaultPrivacy(isPvt);\n\n    if (jsonData.sealed) {\n      setSealed(true);\n    } else {\n      setSealed(false);\n    }\n  };\n\n  var getAllBalancesLive = /*#__PURE__*/function () {\n    var _ref9 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(values, tokenId, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!loadedValues) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", cb(false));\n\n            case 2:\n              setLoadedValues(true);\n              _context6.next = 5;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + tokenId + '?live=true', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 5:\n              responce = _context6.sent;\n              _context6.next = 8;\n              return responce.json();\n\n            case 8:\n              jsonData = _context6.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context6.next = 14;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 14:\n              return _context6.abrupt(\"return\", cb(values));\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getAllBalancesLive(_x7, _x8, _x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var getAllBalancesByAddress = /*#__PURE__*/function () {\n    var _ref10 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(values, ethAddress, btcAddress, cb) {\n      var responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/vault/balance/' + ethAddress + '/' + btcAddress, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  service: 'evmetadata'\n                }\n              });\n\n            case 2:\n              responce = _context7.sent;\n              _context7.next = 5;\n              return responce.json();\n\n            case 5:\n              jsonData = _context7.sent;\n              console.log('responce', responce, jsonData);\n\n              if (!(jsonData.balances.length > 0)) {\n                _context7.next = 11;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", cb(values.concat(jsonData.balances)));\n\n            case 11:\n              return _context7.abrupt(\"return\", cb(values));\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getAllBalancesByAddress(_x10, _x11, _x12, _x13) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var savePasswordToLocalStorage = function savePasswordToLocalStorage() {\n    localStorage.setItem(account + '_' + chainId + '_' + tokenId + '_mintPassword', transferPassword); // Save new state for later\n  };\n\n  var loadPasswordFromLocalStorage = function loadPasswordFromLocalStorage() {\n    var storedPw = localStorage.getItem(account + '_' + chainId + '_' + tokenId + '_mintPassword');\n    storedPw && acceptable ? setMintPassword(storedPw) : null; //setMintPassword(null)\n  };\n\n  var getSignedJWT = /*#__PURE__*/function () {\n    var _ref11 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainid', chainId.toString());\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                tokenId: tokenId\n              });\n              _context8.next = 6;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"SIG_API\"] + '/sign', {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 6:\n              responce = _context8.sent;\n              _context8.next = 9;\n              return responce.json();\n\n            case 9:\n              jsonData = _context8.sent;\n              return _context8.abrupt(\"return\", cb(jsonData));\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function getSignedJWT(_x14, _x15, _x16) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  function getTorusKeys(_x17, _x18, _x19) {\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  function _getTorusKeys() {\n    _getTorusKeys = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee25(verifierId, idToken, cb) {\n      var fetchNodeDetails, torusUtils, _yield$fetchNodeDetai, torusNodeEndpoints, torusIndexes, _yield$torusUtils$ret, privKey;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              fetchNodeDetails = new _toruslabs_fetch_node_details__WEBPACK_IMPORTED_MODULE_24__[\"default\"]({\n                network: \"mainnet\"\n              });\n              torusUtils = new _toruslabs_torus_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]({\n                enableOneKey: true,\n                network: \"mainnet\"\n              });\n              _context25.next = 4;\n              return fetchNodeDetails.getNodeDetails({\n                verifier: 'tor-us-signer-vercel',\n                verifierId: verifierId\n              });\n\n            case 4:\n              _yield$fetchNodeDetai = _context25.sent;\n              torusNodeEndpoints = _yield$fetchNodeDetai.torusNodeEndpoints;\n              torusIndexes = _yield$fetchNodeDetai.torusIndexes;\n              _context25.next = 9;\n              return torusUtils.retrieveShares(torusNodeEndpoints, torusIndexes, 'tor-us-signer-vercel', {\n                verifier_id: verifierId\n              }, idToken);\n\n            case 9:\n              _yield$torusUtils$ret = _context25.sent;\n              privKey = _yield$torusUtils$ret.privKey;\n              return _context25.abrupt(\"return\", cb({\n                privateKey: privKey\n              }));\n\n            case 12:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25);\n    }));\n    return _getTorusKeys.apply(this, arguments);\n  }\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref12 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9(signature, tokenId, coin, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature,\n                coin: coin\n              });\n              _context9.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/address/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context9.sent;\n              _context9.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context9.sent;\n              return _context9.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function addAddress(_x20, _x21, _x22, _x23) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var decryptEmbed = /*#__PURE__*/function () {\n    var _ref13 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10(signature, tokenId, cb) {\n      var myHeaders, raw, responce, jsonData;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              myHeaders = new Headers();\n              myHeaders.append('chainId', chainId.toString());\n              myHeaders.append('service', 'evmetadata');\n              myHeaders.append('Content-Type', 'application/json');\n              raw = JSON.stringify({\n                signature: signature\n              });\n              _context10.next = 7;\n              return fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/embed/' + tokenId, {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n              });\n\n            case 7:\n              responce = _context10.sent;\n              _context10.next = 10;\n              return responce.json();\n\n            case 10:\n              jsonData = _context10.sent;\n              return _context10.abrupt(\"return\", cb(jsonData));\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function decryptEmbed(_x24, _x25, _x26) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var getContractStates = /*#__PURE__*/function () {\n    var _ref14 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12() {\n      var _owner, finish, _finish;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _finish = function _finish3() {\n                _finish = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11() {\n                  var isApproved;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context11) {\n                    while (1) {\n                      switch (_context11.prev = _context11.next) {\n                        case 0:\n                          if (!targetContract[chainId]) {\n                            _context11.next = 7;\n                            break;\n                          }\n\n                          _context11.next = 3;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]);\n\n                        case 3:\n                          isApproved = _context11.sent;\n                          setApproved(isApproved); // console.log(\"@@@@@@@@@@@@@------- checking approved end\", \"approved\", isApproved, \"acceptable\", acceptable, \"mine\", mine)\n                          // console.log(\"price\", price, \"decimals\", decimals, \"allowance\", allowance, \"balance\", balance, \"isCovalApproved\", isCovalApproved)\n\n                          _context11.next = 11;\n                          break;\n\n                        case 7:\n                          _context11.next = 9;\n                          return emblemContract.isApprovedForAll(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId]);\n\n                        case 9:\n                          isApproved = _context11.sent;\n                          setApproved(isApproved);\n\n                        case 11:\n                          setOwner(_owner);\n                          setMine(_owner === account || to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          setMineUnMinted(to === account && _owner === \"0x0000000000000000000000000000000000000000\");\n                          loadPasswordFromLocalStorage();\n\n                        case 15:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                  }, _callee11);\n                }));\n                return _finish.apply(this, arguments);\n              };\n\n              finish = function _finish2() {\n                return _finish.apply(this, arguments);\n              };\n\n              _context12.prev = 2;\n\n              if (!targetContract[chainId]) {\n                _context12.next = 27;\n                break;\n              }\n\n              emblemContract = getCuratedContract(targetContract[chainId]);\n              _context12.t0 = setDecimals;\n              _context12.next = 8;\n              return covalContract.decimals();\n\n            case 8:\n              _context12.t1 = _context12.sent;\n              (0, _context12.t0)(_context12.t1);\n              setPrice(250 * Math.pow(10, decimals));\n              _context12.t2 = setAllowance;\n              _context12.next = 14;\n              return covalContract.allowance(account, _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId]).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 14:\n              _context12.t3 = _context12.sent;\n              (0, _context12.t2)(_context12.t3);\n              _context12.t4 = setBalance;\n              _context12.next = 19;\n              return covalContract.balanceOf(account).then(function (balance) {\n                return balance.toString();\n              });\n\n            case 19:\n              _context12.t5 = _context12.sent;\n              (0, _context12.t4)(_context12.t5);\n\n              if (Number(allowance) >= Number(price)) {\n                setIsCovalApproved(true);\n              } else {\n                setIsCovalApproved(false);\n              }\n\n              _context12.next = 24;\n              return emblemContract.getOwnerOfSerial(targetContract.serialNumber);\n\n            case 24:\n              _owner = _context12.sent;\n              _context12.next = 30;\n              break;\n\n            case 27:\n              _context12.next = 29;\n              return emblemContract.ownerOf(tokenId);\n\n            case 29:\n              _owner = _context12.sent;\n\n            case 30:\n              finish();\n              _context12.next = 37;\n              break;\n\n            case 33:\n              _context12.prev = 33;\n              _context12.t6 = _context12[\"catch\"](2);\n              _owner = \"0x0000000000000000000000000000000000000000\";\n              finish();\n\n            case 37:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 33]]);\n    }));\n\n    return function getContractStates() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var onRenew = /*#__PURE__*/function () {\n    var _ref15 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14(name) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              library.getSigner(account).signMessage('Renew: ' + tokenId).then(function (signature) {\n                var address = vaultAddresses.filter(function (address) {\n                  return address.coin == 'NMC';\n                })[0].address;\n                console.log('signature', signature, name);\n                fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/nmc/renew/' + address, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    service: 'evmetadata',\n                    chainid: chainId.toString()\n                  },\n                  body: JSON.stringify({\n                    \"tokenId\": tokenId,\n                    \"signature\": signature,\n                    \"name\": name\n                  })\n                }).then( /*#__PURE__*/function () {\n                  var _ref16 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13(response) {\n                    var data;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            _context13.next = 2;\n                            return response.json();\n\n                          case 2:\n                            data = _context13.sent;\n                            console.log(\"Requested Renew\", data);\n\n                          case 4:\n                          case \"end\":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee13);\n                  }));\n\n                  return function (_x28) {\n                    return _ref16.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function onRenew(_x27) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var approveCovalFlow = function approveCovalFlow() {\n    setApproving(true);\n    var handlerToApprove = targetContract.name ? _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandlerV8[chainId] : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].vaultHandler[chainId];\n    covalContract.approve(handlerToApprove, '100000000000000').then(function (_ref17) {\n      var hash = _ref17.hash;\n      setHash(hash);\n    })[\"catch\"](function (error) {\n      if ((error === null || error === void 0 ? void 0 : error.code) == 4001) {\n        setApproving(false);\n      }\n    });\n  };\n\n  var handleSign = /*#__PURE__*/function () {\n    var _ref18 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee16() {\n      var serialNumber;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                emblemContract = getCuratedContract(targetContract[chainId]);\n                serialNumber = targetContract.serialNumber;\n              }\n\n              library.getSigner(account).signMessage('Claim: ' + (targetContract[chainId] ? serialNumber : tokenId)).then(function (signature) {\n                setState({\n                  loaded: false\n                });\n\n                if (mineUnMinted && status != \"claimed\" && !mintLockedForever) {\n                  setMintLockedForever(true);\n                }\n\n                getSignedJWT(signature, tokenId, function (token) {\n                  getTorusKeys(tokenId, token.token, function (keys) {\n                    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(vaultCiphertextV2, keys.privateKey);\n                    var payload = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n                    setKeyValues(payload.values);\n                    setMnemonic(payload.phrase);\n                    vaultAddresses.forEach( /*#__PURE__*/function () {\n                      var _ref19 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15(address) {\n                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context15) {\n                          while (1) {\n                            switch (_context15.prev = _context15.next) {\n                              case 0:\n                                if (!(address.coin == 'STX')) {\n                                  _context15.next = 6;\n                                  break;\n                                }\n\n                                _context15.next = 3;\n                                return getSTXKey(address, payload.phrase);\n\n                              case 3:\n                                address.key = _context15.sent;\n                                _context15.next = 7;\n                                break;\n\n                              case 6:\n                                address.key = window.phrasePathToKey(payload.phrase, address.path);\n\n                              case 7:\n                                if (address.coin == 'BTC') setPrivKeyBTC(address.key);\n                                if (address.coin == 'ETH') setPrivKeyETH(address.key);\n\n                              case 9:\n                              case \"end\":\n                                return _context15.stop();\n                            }\n                          }\n                        }, _callee15);\n                      }));\n\n                      return function (_x29) {\n                        return _ref19.apply(this, arguments);\n                      };\n                    }());\n                    setState({\n                      loaded: true\n                    });\n                    onOpenKeysModal();\n                  });\n                }); // }\n              });\n\n            case 2:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function handleSign() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  var getSTXKey = /*#__PURE__*/function () {\n    var _ref20 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee17(address, phrase) {\n      var wallet, account;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return Object(_stacks_wallet_sdk__WEBPACK_IMPORTED_MODULE_23__[\"generateWallet\"])({\n                secretKey: phrase,\n                password: ''\n              });\n\n            case 2:\n              wallet = _context17.sent;\n              console.log('------ stacks account -', wallet.accounts[0]);\n              account = wallet.accounts[0];\n              address.key = account.stxPrivateKey;\n              return _context17.abrupt(\"return\", address.key);\n\n            case 7:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function getSTXKey(_x30, _x31) {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n\n  var handleHideAsset = /*#__PURE__*/function () {\n    var _ref21 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee18(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              library.getSigner(account).signMessage('HideAsset: ' + tokenId).then(function (signature) {\n                console.log(\"----------------------------------------------------------------\", signature);\n                console.log(coin.name, coin.coin, coin.address);\n                hideAsset(tokenId, coin.coin, coin.address, coin.name, signature, function () {\n                  console.log(\"Done hiding coin and getting new balances\");\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function handleHideAsset(_x32) {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  function hideAsset(tokenId, coin, address, name, signature, cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/hide/' + tokenId, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata',\n        chainid: chainId.toString()\n      },\n      body: JSON.stringify({\n        \"coin\": coin ? coin : null,\n        \"address\": address ? address : null,\n        \"name\": name ? name : null,\n        \"signature\": signature ? signature : null\n      })\n    }).then( /*#__PURE__*/function () {\n      var _ref22 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee19(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context19.sent;\n                console.log(\"-------\", data);\n                getAllBalances([], tokenId, function (values) {\n                  setVaultValues(values);\n                  return cb();\n                });\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      return function (_x33) {\n        return _ref22.apply(this, arguments);\n      };\n    }());\n  }\n\n  var handleAddressSign = /*#__PURE__*/function () {\n    var _ref23 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee20(coin) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              library.getSigner(account).signMessage('Address: ' + tokenId).then(function (signature) {\n                addAddress(signature, tokenId, coin, function (result) {\n                  getVault();\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function handleAddressSign(_x34) {\n      return _ref23.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnedEmbed = /*#__PURE__*/function () {\n    var _ref24 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee21() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              library.getSigner(account).signMessage('Embed: ' + tokenId).then(function (signature) {\n                decryptEmbed(signature, tokenId, function (result) {\n                  setVaultImage(result.ownedImage);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function handleOwnedEmbed() {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref25 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee22() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              if (targetContract[chainId]) {\n                // emblemContract = getCuratedContract(targetContract[chainId])\n                // let tokenId = await emblemContract.getTokenIdForSerialNumber(targetContract.serialNumber)\n                vaultHandlerContract.claim(targetContract[chainId], targetContract.tokenId).then(function (_ref26) {\n                  var hash = _ref26.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              } else {\n                emblemContract.burn(tokenId).then(function (_ref27) {\n                  var hash = _ref27.hash;\n                  setClaiming(true);\n                  setTimeout(function () {\n                    setHash(hash);\n                  }, 100); // Solving State race condition where transaction watcher wouldn't notice we were claiming\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    return function handleClaim() {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n\n  var pingClaimLogs = function pingClaimLogs(cb) {\n    fetch(_constants__WEBPACK_IMPORTED_MODULE_13__[\"EMBLEM_API\"] + '/web3/selfClaimLogs?chainId=' + chainId.toString() + '_vercel_no_cache=1', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        service: 'evmetadata'\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref28 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee23(response) {\n        var data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context23.sent;\n                console.log(\"Log check\", data);\n                return _context23.abrupt(\"return\", cb());\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x35) {\n        return _ref28.apply(this, arguments);\n      };\n    }());\n  };\n\n  var startDecryptEffect = /*#__PURE__*/function () {\n    var _ref29 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee24() {\n      var theLetters, ctnt, speed, increment, clen, si, stri, block, fixed, nextFrame;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              nextFrame = function _nextFrame(pos) {\n                for (var i = 0; i < clen - stri; i++) {\n                  //Random number\n                  var num = Math.floor(theLetters.length * Math.random()); //Get random letter\n\n                  var letter = theLetters.charAt(num);\n                  block = block + letter;\n                }\n\n                if (si == increment - 1) {\n                  stri++;\n                }\n\n                if (si == increment) {\n                  // Add a letter;\n                  // every speed*10 ms\n                  fixed = fixed + ctnt.charAt(stri - 1);\n                  si = 0;\n                } // $(\"#output\").html(fixed + block);\n\n\n                setDecryptedEffect(fixed + block);\n                block = '';\n              };\n\n              if (!decryptedEffectRunning) {\n                _context24.next = 3;\n                break;\n              }\n\n              return _context24.abrupt(\"return\");\n\n            case 3:\n              setDecryptedEffectRunning(true);\n              theLetters = 'abcdefghijklmnopqrstuvwxyz'; //You can customize what letters it will cycle through\n\n              ctnt = 'Decrypting'; // Your text goes here\n\n              speed = 5; // ms per frame\n\n              increment = 8; // frames per step. Must be >2\n\n              clen = ctnt.length;\n              si = 0;\n              stri = 0;\n              block = '';\n              fixed = '';\n\n              (function rustle(i) {\n                setTimeout(function () {\n                  if (--i) {\n                    rustle(i);\n                  } else {\n                    setDecryptedEffectRunning(false);\n                  }\n\n                  nextFrame(i);\n                  si = si + 1;\n                }, speed);\n              })(clen * increment + 1);\n\n            case 14:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    return function startDecryptEffect() {\n      return _ref29.apply(this, arguments);\n    };\n  }();\n\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    console.log('----');\n    getVault();\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(function () {\n    account && chainId && vaultChainId && chainId == vaultChainId || query.noLayout && query.noLayout == 'true' || query.slideshowOnly && query.slideshowOnly == 'true' ? getContractStates() : null;\n  });\n\n  function splitDescription(words) {\n    var desc = words ? words.split('\\n\\n\\n\\n') : [\" \"];\n    return desc[0].trim();\n  }\n\n  function tryDecrypt(key) {\n    if (decryptPassword) {\n      key = decryptPassword;\n    }\n\n    startDecryptEffect();\n    console.log(vaultAddresses);\n    var ciphertext = vaultAddresses[0].address.replace('private:', '');\n\n    try {\n      var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(ciphertext, key);\n      JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n      setVaultPrivacy(false);\n      setDecryptPassword(key);\n      setVaultAddresses(decryptAddresses(key));\n      var ethAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'ETH';\n      })[0].address;\n      var btcAddress = vaultAddresses.filter(function (item) {\n        return item.coin === 'BTC';\n      })[0].address;\n      console.log(\"SUCCESS\", vaultAddresses);\n      getAllBalancesByAddress([], ethAddress, btcAddress, function (values) {\n        setVaultValues(values);\n      }); // getEthBalances(\n      //   vaultAddresses.filter((item) => {\n      //     return item.coin === 'ETH'\n      //   })[0].address,\n      //   (values) => {\n      //     getBtcBalance(\n      //       values,\n      //       vaultAddresses.filter((item) => {\n      //         return item.coin === 'BTC'\n      //       })[0].address,\n      //       (_values) => {\n      //         // console.log(\"Have fucking values\", values)\n      //         getNftBalance(\n      //           _values,\n      //           vaultAddresses.filter((item) => {\n      //             return item.coin === 'ETH'\n      //           })[0].address,\n      //           (__values) => {\n      //             setVaultValues(__values.concat(vaultValues))\n      //           }\n      //         )\n      //       }\n      //     )\n      //   }\n      // )\n    } catch (err) {\n      console.log('WTF', err);\n    }\n  }\n\n  function getAddresses() {\n    console.log(\"Getting Addresses\");\n    return vaultAddresses;\n  }\n\n  function decryptAddresses(key) {\n    vaultAddresses.forEach(function (item) {\n      if (item.address.includes('private')) {\n        var cipherText = item.address.replace('private:', '');\n        item.address = decrypt(cipherText, key);\n      }\n    });\n    return vaultAddresses;\n  }\n\n  function decrypt(cipherText, key) {\n    var bytes = crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.AES.decrypt(cipherText, key);\n    var decryptedData = JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_16___default.a.enc.Utf8));\n    return decryptedData;\n  }\n\n  function visitOpenSeaLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : vaultChainId == 5 ? 'testnets.' : '') + 'opensea.io/assets/' + (vaultChainId == 137 ? 'matic/' : vaultChainId == 5 ? 'goerli/' : '') + (alternateContractAddress ? alternateContractAddress : targetContract[chainId] ? targetContract[chainId] : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + (targetContract ? targetContract.tokenId : tokenId), '_blank');\n  }\n\n  function visitLooksRareLink() {\n    window.open('https://' + (vaultChainId == 4 ? 'rinkeby.' : vaultChainId == 5 ? 'goerli.' : '') + 'looksrare.org/collections/' + (vaultChainId == 137 ? 'matic/' : '') + (alternateContractAddress ? alternateContractAddress : targetContract ? targetContract[chainId] : _constants__WEBPACK_IMPORTED_MODULE_13__[\"contractAddresses\"].emblemVault[vaultChainId]) + '/' + (targetContract ? targetContract.tokenId : tokenId), '_blank');\n  }\n\n  {\n    alternateContractAddress ? emblemContract = getVaultContract(alternateContractAddress ? alternateContractAddress : null) : null;\n  }\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 8\n    }\n  }, __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"Emblem.Finance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: vaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 9\n    }\n  }), __jsx(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"\\n              // $(\\\".NFT\\\").tilt({    \\n              //     maxTilt: 3\\n              // });\\n              $(\\\".NFT\\\").trigger('mouseenter');\\n              $(\\\".NFT\\\").trigger('mouseclick'), '.NFT';\\n              if (localStorage.getItem(\\\"darkMode\\\") == 'false') {\\n                localStorage.setItem(\\\"darkMode\\\",\\\"true\\\"); location.href = location.href\\n              }\\n              \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 9\n    }\n  })), __jsx(AddrModal, {\n    isOpen: isOpenAddrModal,\n    onClose: onCloseAddrModal,\n    addrCoin: currCoin,\n    addrAddr: currAddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 7\n    }\n  }), __jsx(KeysModal, {\n    isOpen: isOpenKeysModal,\n    onClose: onCloseKeysModal,\n    mnemonic: mnemonic,\n    privKeyBTC: privKeyBTC,\n    privKeyETH: privKeyETH,\n    privValues: privValues,\n    addresses: vaultAddresses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 7\n    }\n  }), showOffer ? __jsx(OfferModal, {\n    isOpen: isOpenOfferModal,\n    onClose: onCloseOfferModal,\n    tokenId: tokenId,\n    mine: mine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 9\n    }\n  }) : null, __jsx(react_loader__WEBPACK_IMPORTED_MODULE_9___default.a, {\n    loaded: state.loaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 7\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 9\n    }\n  }), loadingApi ? __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 23\n    }\n  }) : '', !invalidVault && !slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 13\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    className: \"NFT\",\n    maxW: \"sm\",\n    borderWidth: \"1px\",\n    borderColor: vaultChainId != chainId ? 'orange.500' : status == 'claimed' ? 'green.500' : null,\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    minW: 390,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 15\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    alignItems: \"center\",\n    color: \"blue.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 17\n    }\n  }, \"Vault Network: \", _utils__WEBPACK_IMPORTED_MODULE_15__[\"CHAIN_ID_NAMES\"][vaultChainId]), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"1\",\n    fontWeight: \"semibold\",\n    as: \"h3\",\n    lineHeight: \"tight\",\n    p: 2,\n    textAlign: \"center\" // textTransform=\"uppercase\"\n    ,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 17\n    }\n  }, vaultName, !vaultPrivacy && vaultTotalValue > 0 ? ': ~$' + vaultTotalValue.toLocaleString() : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 17\n    }\n  }, __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 19\n    }\n  }), mine && ownedImage ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    onClick: function onClick() {\n      handleOwnedEmbed();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 21\n    }\n  }, \"(OWNED) Show Full Embed\") : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 17\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mt: \"2\",\n    ml: \"4\",\n    lineHeight: \"tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    fontSize: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 23\n    }\n  }, !isCuratedMaster && vaultChainId == chainId ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    href: \"./vaults?address=\" + owner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 25\n    }\n  }, \"Owner: \", owner) : null), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    mt: 2,\n    as: \"h4\",\n    ml: \"4\",\n    mr: \"4\",\n    fontSize: \"xs\",\n    fontStyle: \"italic\",\n    className: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 23\n    }\n  }, __jsx(react_markdown__WEBPACK_IMPORTED_MODULE_17___default.a, {\n    plugins: [remark_gfm__WEBPACK_IMPORTED_MODULE_18___default.a],\n    children: splitDescription(vaultDesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 25\n    }\n  }))))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    p: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 17\n    }\n  }, !isCuratedMaster ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tabs\"], {\n    isFitted: true,\n    variant: \"enclosed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabList\"], {\n    mb: \"1em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 25\n    }\n  }, \"Balances\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Tab\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 25\n    }\n  }, \"Attributes\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanels\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 25\n    }\n  }, vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    pb: 2,\n    color: decryptedEffect ? 'green.500' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 31\n    }\n  }, decryptedEffect ? decryptedEffect : 'Contents hidden. Enter password to unlock.'), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Input\"], {\n    type: \"password\",\n    id: \"vault-password\",\n    onChange: function onChange(e) {\n      return tryDecrypt(e.target.value);\n    },\n    \"aria-describedby\": \"password-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 31\n    }\n  })) : __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    backgroundColor: colorMode == \"light\" ? \"gray.100\" : \"gray.700\",\n    alignItems: \"baseline\",\n    className: \"coin-balance-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 29\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    color: \"gray.500\",\n    letterSpacing: \"wide\",\n    fontSize: \"sm\",\n    ml: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 31\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"h4\",\n    mt: 2,\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 33\n    }\n  }, \"Current Contents:  \", __jsx(\"button\", {\n    onClick: function onClick() {\n      getAllBalancesLive([], tokenId, function (v) {\n        setLoadedValues(false);\n        setVaultValues(v);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 54\n    }\n  }, \" [Refresh Balances]\")), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    as: \"p\",\n    color: colorMode == \"dark\" ? \"lightgreen\" : \"forestgreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 33\n    }\n  }, \"$\", Number(vaultTotalValue.toFixed(4)).toLocaleString()), vaultValues.length ? vaultValues.map(function (coin) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 39\n      }\n    }, __jsx(_partials_CoinBalance__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n      colorMode: colorMode,\n      coin: coin,\n      mine: status === 'claimed' && claimedBy === account || mine,\n      onRenew: onRenew,\n      hideAsset: targetAsset.name ? false : handleHideAsset,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 41\n      }\n    }));\n  }) : __jsx(_Refreshing__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 38\n    }\n  }), vaultDataValues.length ? vaultDataValues.map(function (data) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 39\n      }\n    }, \"Data: \", data.attribute_key);\n  }) : !vaultDataValues.length && !vaultValues.length ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 35\n    }\n  }, \"Nothing in here! Fill 'er up!\") : null))), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"TabPanel\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 25\n    }\n  }, __jsx(_partials_Attributes__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n    colorMode: colorMode,\n    attributes: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 27\n    }\n  })))) : null, !isCuratedMaster && !vaultPrivacy ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"ButtonGroup\"], {\n    justifyContent: \"space-between\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 23\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 25\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 27\n    }\n  }, \"Deposit Addresses\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Flex\"], {\n    w: \"340px\",\n    justify: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 27\n    }\n  }, vaultAddresses.map(function (addr) {\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n      className: \"address_nft_button\",\n      ml: 2,\n      mt: 2,\n      \"font-weight\": \"100 !important\",\n      key: addr.address,\n      onClick: function onClick() {\n        setCurrCoin(addr.coin);\n        setCurrAddr(addr.address);\n        onOpenAddrModal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 33\n      }\n    }, addr.coin == 'ETH' ? addr.coin + '' : addr.coin == 'BTC' ? addr.coin + '/XCP/OMNI' : addr.coin == 'BCH' ? addr.coin + '/SLP' : addr.coin);\n  }))))) : null, isCuratedMaster || !(status === 'claimed') && live && (vaultChainId === 1 || vaultChainId === 4 || vaultChainId === 5 || vaultChainId === 137) ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitOpenSeaLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 25\n    }\n  }, \"Opensea\"), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"50%\",\n    m: 5,\n    onClick: function onClick() {\n      visitLooksRareLink();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 25\n    }\n  }, \"LooksRare\"), showOffer ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"\",\n    onClick: function onClick() {\n      onOpenOfferModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 27\n    }\n  }, mine ? 'My Offers' : 'Make an Offer', \" (NFT\\xB2NFT)\") : null) : null, !isCuratedMaster && mine && !acceptable && !approved ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    className: \"nft_button\",\n    width: \"100%\",\n    onClick: function onClick() {\n      if (!approved) {\n        return handleApproveForall();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 23\n    }\n  }, \"Approve Claiming\"))) : null, !isCuratedMaster && live && !(status === 'claimed') && account && vaultChainId === chainId && mine && !sealed && approved ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: function onClick() {\n      handleClaim();\n    },\n    isDisabled: claiming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 23\n    }\n  }, claiming ? 'Claiming ...' : 'Claim (Crack Open Vault)')) : null, !isCovalApproved && !approving && to == account ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: approveCovalFlow,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 21\n    }\n  }, \"Approve Coval\") : null, !isCuratedMaster && !live && !approving && isCovalApproved && to == account && vaultChainId == chainId && status !== 'claimed' && !showMakingVaultMsg ? __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, targetContract.name ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: lazyMintCurated,\n    isDisabled: !canCuratedMint || mintLockedForever,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 25\n    }\n  }, mintLockedForever ? 'Mint Locked - keys accessed before mint' : !canCuratedMint ? 'Please load vault to mint' : ' Mint Vault', \" \") : null) : null, (!live || status == 'claimed') && to == account && vaultChainId == chainId && !showMakingVaultMsg && vaultValues.length < 1 ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    mt: 5,\n    onClick: deleteVault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 19\n    }\n  }, \"Delete Vault \") : null, !isCuratedMaster && vaultChainId === chainId && status == 'claimed' && claimedBy === account || mineUnMinted && status != \"claimed\" ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    width: \"100%\",\n    onClick: handleSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 23\n    }\n  }, mineUnMinted && status != \"claimed\" && !mintLockedForever ? 'Get Keys (Unlocking will prevent minting)' : 'Get Keys')) : null, showVerifyingSignature ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 19\n    }\n  }, \"Verifying Signature ...\") : null, showMakingVaultMsg ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Button\"], {\n    isDisabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 19\n    }\n  }, \"Minting Vault ...\") : null), !isCuratedMaster && vaultIPFS ? // <Stack>\n  __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__[\"HStack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    target: \"new\",\n    mb: 2,\n    ml: 35,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 23\n    }\n  }, \"View Metadata on IPFS \"), vaultImageIPFS ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    mb: 2,\n    href: 'https://gateway.ipfs.io/ipfs/' + vaultImageIPFS,\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 25\n    }\n  }, \"View Image on IPFS \") : null) // </Stack>\n  : null, sealed ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    d: \"flex\",\n    mb: 2,\n    ml: 35,\n    alignItems: \"baseline\",\n    justifyContent: \"space-between\",\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 21\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 23\n    }\n  }, \"*This vault is sealed forever.\")) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    direction: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 17\n    }\n  }, status == 'claimed' ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    color: \"green.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1231,\n      columnNumber: 42\n    }\n  }, \"CLAIMED\") : null), hash ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Alert\"], {\n    status: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 19\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"AlertIcon\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 21\n    }\n  }), accepting ? \"Accepting Your Gift Vault\" : claiming ? \"Claiming your Vault ...\" : approving ? \"Handling Approval Flow ...\" : transfering ? \"Transfering Vault ...\" : minting ? \"Minting Vault\" : \"Generating Gift Link ...\") : null)) : vaultValues.length > 0 && slideshowOnly ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    className: \"NFT-content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 11\n    }\n  }, vaultValues.length && vaultValues.filter(function (item) {\n    return item.type == \"nft\";\n  }).length > 0 ? __jsx(_embed_NFTSlideshow__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    name: vaultName,\n    image: vaultValues[0].image,\n    items: vaultValues.filter(function (value) {\n      return value.image !== vaultValues[0].image;\n    }).map(function (value) {\n      return {\n        image: value.image,\n        description: value.description,\n        name: value.name,\n        type: value.type\n      };\n    }),\n    properties: {\n      'duration': 3000,\n      canSwipe: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 17\n    }\n  }) : __jsx(_Embed__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    className: \"d-block w-100 NFT-image\",\n    url: vaultImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 17\n    }\n  })) : invalidVault ? __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Stack\"], {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 11\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Image\"], {\n    width: \"md\",\n    src: \"https://starwarsblog.starwars.com/wp-content/uploads/2017/06/25-star-wars-quotes-obi-wan-kenobi-identification-tall.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 13\n    }\n  }), __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Text\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 13\n    }\n  }, \"THESE ARE NOT THE VAULTS YOU ARE LOOKING FOR\", ' ', __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\n    color: \"#638cd8\",\n    href: \"../create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 15\n    }\n  }, \"CREATE ONE HERE!\"))) : null, hash ? __jsx(_TransactionToast__WEBPACK_IMPORTED_MODULE_12__[\"TransactionToast\"], {\n    hash: hash,\n    onComplete: function onComplete() {\n      if (claiming && !accepting && !preTransfering) {\n        // alert(1)\n        setHash(null);\n        setStatus('claimed');\n        setClaiming(false);\n        setClaimedBy(account);\n        pingClaimLogs(function () {\n          location.href = location.origin + '/nft?id=' + tokenId;\n        });\n      } else if (preTransfering) {\n        // alert(2)\n        savePasswordToLocalStorage();\n        setShowTransferPassword(true);\n        setPreTransfering(false);\n        setHash(null);\n      } else if (accepting) {\n        // alert(3)\n        setAccepting(false);\n        getVault();\n        setHash(null);\n      } else if (approving) {\n        // alert(4)\n        setApproving(false);\n        getVault();\n        setHash(null);\n      } else if (transfering) {\n        // alert(5)\n        setTransfering(false);\n        getVault();\n        setHash(null);\n      } else if (minting || showMakingVaultMsg) {\n        // alert(5)\n        //checkLiveliness(tokenId, targetContract, (isLive)=>{\n        console.log('GOD SAKES REDIRECT');\n        setMinting(false);\n        setHash(null); // setLive(isLive)\n\n        setShowMakingVaultMsg(false);\n        location.href = location.origin + '/nft2?id=' + tokenId; //})\n      } else {\n        // alert(6)          \n        location.href = location.origin + '/nft2?id=' + tokenId;\n        console.log('--- minting', minting);\n        console.log('--- claiming', claiming);\n        console.log('--- accepting', accepting);\n        console.log('--- preTransfering', preTransfering);\n        console.log('--- approving', approving);\n        console.log(\"Unknown state\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 11\n    }\n  }) : null, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"Box\"], {\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Nft2, \"m+kcEugoeEeYdVDtFnhKiQysG14=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_6__[\"useWeb3React\"], next_router__WEBPACK_IMPORTED_MODULE_7__[\"useRouter\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _hooks__WEBPACK_IMPORTED_MODULE_14__[\"useContract\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useDisclosure\"], _chakra_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"useColorMode\"]];\n});\n\n_c7 = Nft2;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AddrModal$dynamic\");\n$RefreshReg$(_c2, \"AddrModal\");\n$RefreshReg$(_c3, \"KeysModal$dynamic\");\n$RefreshReg$(_c4, \"KeysModal\");\n$RefreshReg$(_c5, \"OfferModal$dynamic\");\n$RefreshReg$(_c6, \"OfferModal\");\n$RefreshReg$(_c7, \"Nft2\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Nft2.tsx\n");

/***/ })

})